{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "03c92f41-19f9-459d-afa9-152f78aaacbf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e4a8ec43-7cef-48c3-a748-506f5c98ba00",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf558c48-2bc3-4ca2-9784-f67c3006b394",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed4110fb-8e8a-4849-9230-15ee97f31923"
                }
              }
            ]
          },
          {
            "id": "fa3aa34b-6bc6-46a6-b78f-0e48aa64194e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f028322-19ca-4f05-ae24-059b9e0a1adc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d0a9e895-d7ff-49ce-bbfa-28dc3d3e9826"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1d1fbe6e-b905-4dbc-ab55-b1b56ac8cd86",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "df2ba4e1-0bdb-4a21-9e6c-d42219c0f1d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59059895-53a8-43e5-8940-f593b0d86a22",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2766488-46f1-45e3-8acf-133d8629718c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaa102c5-6199-42a4-90cc-63ac5dc81724"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76af3b4d-713d-416d-8a24-2e58fef4564a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aa83bc3-d10d-42e0-b91f-8d43d0e52f13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddb877cb-1161-48a5-b36b-2e8371a5c2bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bae407ea-5f3b-46c5-a0ab-33dbf0ab3bd5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "058b88ab-38ca-4eec-83a5-44a3fd16e109",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5df1417e-5506-4177-8c07-16304491ba1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78a0aa9e-8119-4395-989a-2339bcee6e34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b0fc214-8724-4376-ae1c-30f6ec21e35b"
            }
          }
        ]
      },
      {
        "id": "211afd77-97da-48d3-9346-bf3fea4222d6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "049fa733-92fa-4f19-a4d8-d17a863d6f85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88162a9a-4a13-45fd-9ba2-84bf902acca4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3aa8a00b-7c8f-4c25-a73f-8986c1ed94e8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46af2ed8-c370-4c14-b8e4-a7e419155305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6da3434e-f3c5-4231-8be5-2c7542176cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d84d414-a94a-4141-b794-10137396bfe9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6223f93d-b85f-4b82-8a54-cc10a0902c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4666cea-d956-4bc8-8f39-dc8da191b1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6433ea81-c533-43b4-a190-72f21f0bc95f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7822b464-e53c-4e8b-af77-065f8420500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a290f667-1720-45b3-b137-0b11ee1df69c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1061543b-5092-469a-aecc-c06afee4782c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e0207c3-d43a-4b4d-a43a-f44272911914",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b99bdc-676b-4c3c-b175-368b397381b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2bd768c-1263-4dae-abb4-1ec9de63860c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8e8d85-b566-40b9-8629-e3b30be9a423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d79d6e-9bc9-48da-8636-d1c9a5843254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f0e59c-af25-4d19-8b05-e522ed96131d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae4ea3-28fa-408f-922e-186ebcd4568c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f06b55d0-8832-413f-99b8-1a10c5acb6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb264f3c-1661-4149-af16-d0e430fc68fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b6a9f398-ccb2-4880-a869-d3546529b0de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "50462700-578f-49c5-a129-edce84b2b651",
            "name": "Positive Testing",
            "item": [
              {
                "id": "698809f6-c934-43ab-87c2-9fa0ffb679b5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be826e1f-6a5c-4ef0-abd3-f528c42a9c79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "20623121-b8b1-47b6-bafa-329ec4517ed2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56f31901-c67c-4eee-a88c-35419b0d909f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9ccb2732-d004-4a1f-845c-f17a2baa7832"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d1620a9-0b0d-4074-9bab-962932e535df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23a77162-5dc0-4c3a-b33d-a3f6ca46b73e"
            }
          }
        ]
      },
      {
        "id": "53aae5a9-83c4-4e50-82c0-182e6bacbd0a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97a9eb4d-1864-44ef-94e0-979da3edb596",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16c20f67-d121-4670-94f8-8b640fe2d62e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8ec6d3a4-35ac-4acd-a5b1-7b7530104321",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09fd86d-b78d-4e60-9ac9-9b077765e69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0353845c-d259-49e1-ae45-d46495554ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f369d59c-9e05-4260-80c7-0103740e70a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9d1b5c1-a5e7-4e39-9f80-8960c355497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a51c59-2885-4d86-aaff-a15d309de4ab",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed17349-3dcd-4fe8-9080-0537b61684e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76413a3c-19ff-44bf-b912-d08edcce2451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d243f2-41f9-485e-a808-56384c903781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4057a117-56ad-4e62-ab43-89ed92e187dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82e026c-2619-47c5-af1d-22cd235b4c58",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3839e75b-79c6-49e4-95d5-8da8a05d3c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0e0016-8729-4b90-9640-0458446d5e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe716ad-5485-4936-aa37-f1bd37193bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb802efb-2ff4-44ef-9a6a-9e3a58126a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45afd20d-46ef-4b10-9dd3-d81f5f0ddfca",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d019293-e08c-4d24-835b-5c14ae135751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6852ee-f215-4a5f-b237-6216ffd41a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d81800-7982-4167-8428-cd402ba702f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe499ac9-9c6a-4e9a-bb8e-6ea0597d9b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4525c48b-26ae-4219-8de9-c478c95e1475",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03b1a2e-53aa-4c63-b9d2-d1237db5e3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a78f66-6191-4183-995c-e597aa3dabb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d8354-fb16-4208-b51e-822022ef9e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4de5f7f7-fbc1-4811-ab96-d334489acad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f1d295-aa50-42c6-a03f-c4e44f230bb2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fab4f1-b5ec-4700-a4fd-be7aac974444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1acf496-6f79-489f-8e22-2bfa6079a77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aaf5d3-c188-4d21-b406-536c64d74307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "101e5eae-911c-4139-aa7f-ae784e933b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67479c75-b0a8-4971-8168-2314553a24ba",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d289690-3e59-4177-ba51-74ed5b5a7ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546580a3-ad40-404a-9ea8-9d3136d93bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c11e120-e98e-4577-a444-3582e566bc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33f7a8d8-f961-4fe4-9fcf-32ba56287dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d895d8-c3d8-42bd-87d4-2d3c8679f476",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fcb795-f2e2-47fc-9bad-72a08e07c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844c67ad-2ceb-4f94-90a2-214d4b68d4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56b5131-c604-4ce5-8c25-724b3c3490f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b7af930-70b5-4978-b0e2-097a1c65c8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd76da7-b4d0-4320-b163-ae2ca21c3198",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d02e15b-dac8-410a-88c3-35ca91c69f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88605bed-f45a-4b33-8617-11307f84e116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0d5d1a-3dc3-4f18-8156-d4447b0d800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "924d4362-5355-41f4-bff8-5d43b1dc8067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd31c8d-a030-442b-adee-24b65db521ec",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdd0406-6e17-4afe-8749-f1451d44535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847cfd02-a648-4f1a-a5fd-34e377c3875a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d84ec24-027b-4df7-82d0-3794265f69fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af5a50aa-d27d-440d-af9c-1252081da196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab253c0c-9b17-41d4-b647-cd644cc8aaaf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed08d0f2-2dfe-469d-92c0-0606c7915295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8529fb35-0f4a-4180-a8d4-3eb3aa141d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef2b778-4f6c-426f-86ed-5f3c4c873a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fba609ee-1cbe-443b-b4e2-5684e4eea199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82101f8-5d44-4f04-8be9-c9211ea417f8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d88f6b6-ee39-4666-abd2-5063d926ee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c114111-93f3-4288-b460-2fd7cbd20ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195289e6-5042-40de-812d-5d3f3eac499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "218defe3-7505-44d9-9e58-adebf76bf178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99515ed-46e7-41dc-accf-14e2ed641d0a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2017d029-521e-4caf-a9be-9d6108eb9eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb36a49f-bd8e-4351-8778-ea49bb3bddbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fc40ed-5b11-43ee-b986-efe7aba8ed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ede774be-fa19-4ae5-a15e-4a353a455e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d0502-89b6-4b9e-8015-4487fbac927a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5523a10-4dd7-41df-98d9-f52617763916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af61aab1-17f5-48e2-aa3a-c4219a5d08fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1118b19b-182d-4d50-9361-643db3e07289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24848ef0-fdbe-4509-9cc2-891d1992fade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd8decc-f712-4873-92c0-25fd42caafcb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4d0205-65bd-49fd-884e-15aff93d79c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6157683f-7911-4d7e-89aa-3abb1d94aa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc166ffe-c378-452a-a993-4662e22bab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407aecaa-061e-47c5-b0fe-a6888b76ca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab65e3e-ddf4-4878-beae-795c1bb35681",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75c9bc7-7f3e-4dd5-acf8-271cf78a239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8197c75-a7f8-4cca-81d3-136bdac38d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b42a17-2a69-4c67-b5ec-04db0365ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73a8204a-b218-46c0-9238-22b487f276f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9d1249-d0c8-4064-95b1-5933625d797e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c20eb5-58ff-4da3-b396-288058bfbae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c4f049-d96c-4913-9569-586b942210df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feca6355-b556-4a70-9bd0-cb65273e270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9211190c-733e-4b00-8baf-b7464d90dafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69af2087-b402-44e9-8453-6af5d6b4aefb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fafaae-0ab7-49e3-8e57-bcc80a6c4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dc6e4a-2155-4d20-8cdd-80a7a555ae10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0062fd66-9850-46d8-acdb-67fe68e8ff7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "182e720c-b5d3-42b0-ac9f-0906e0635554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9692d-792e-4891-ba6c-80fc889890d4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc7480f-8cb7-4d51-8e92-1eaf650740a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cb5481-6831-479d-ab67-52fdd3c37c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e865988a-4db8-4733-a27c-c3095d0cccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c257bee-38bf-4a31-a957-fb6e88f957fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907caabc-2626-4722-96e4-69dac64e0ee2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf3feb8-b8f8-44c6-8d85-5684b4bf27b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41c0074-72f0-4311-9e0c-6876e10eb20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af7643-691e-4fdf-86af-b40c8a1b9216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f640e86-b33c-4cd1-a4a9-9f49690e985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a777aa1-36cf-4079-b0dc-d20185a38718",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200ee2b0-d357-4a38-a87d-59a656ed88b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e0fe20-33db-4bac-b412-8153f6f54edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c2e791-9f26-42be-bcd7-b35e670fe941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "487c9505-420e-4100-aefe-c5645232f930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4a81a-6e53-4d50-bf9d-c99fe583d500",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8ea455-548d-46d6-bc2a-77379e9c03e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e26678b-be2f-40f1-89d8-05ff74b7c9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904ac46-5fac-4751-a33b-0845d4711995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bae948-e08e-4a64-8338-c47644d57be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3880f235-8704-4224-a66e-302c957b9922",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa57364a-f3ba-4dcf-a50c-7fe720b7c067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394af4ef-88ed-4104-b2df-f7ce0ac7a626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0598dc55-5e6e-4bfb-a48a-74f4d6d5d883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2179ad-5a93-4cbf-afe5-e5b270c1c60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d195d16-c08a-4a8e-8dbe-5511143a242c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac392931-a312-4a3f-ab21-fb0fb50fcd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c16ff3-5688-418e-a6aa-de95323db59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c97fbb-5b83-47e1-b6e4-00a82364af52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ccacc7-3066-495a-8e07-9411ab4d8a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8419138d-ad5d-4d56-86ef-e8ca2baaff9c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4376e9-543f-4174-b6bd-14ceae84e946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dd742a-f26c-44e3-a374-a23f1182a608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fd2fb9-4621-400a-b0a8-6c8f6998a8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f916fdc9-d7a9-42af-9a37-9a05acd6210d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc9c35c-b23c-4518-9d38-5cc5d7ef8d55",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02538871-c778-46dc-a9ab-b4cbb815ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c560239-27a5-4322-be76-19cc7e944837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06c8071-86fb-44e2-a36f-ef7ba2cfaf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3a583b-8587-462c-bec0-57b856972335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be02e99-6800-408a-a9d2-3d9c487782b1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb47902-a292-42a7-a973-6dd90bc05cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815e2be4-6211-497a-85fd-6b26a8340c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d403d270-82fb-4d70-b080-567e4b7b4a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "281ba62c-c744-4ad0-8bb1-0d78d5455fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4da5b2-10d0-47c6-8917-3da82ebfe48c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4729234b-fbd1-4c68-a708-44491ab9f8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a317d42f-2765-4b4e-b568-05f1304fb6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65372d09-63b6-499e-a881-62ebc1bb4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9917726-c4a9-4970-b40f-b0667ed4b0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a5efa-8a32-48e8-8a6c-ea063cf9bae8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0c5d64-8ef0-4bb6-b3c7-bb871eb48204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d70d8b5-5c63-48ff-889e-7b20dcb9e7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5ac160-2a4d-4ff1-8cd9-17a5cb99d899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fe9976-9e97-41ea-98fd-47f2d4fc3e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cf8fa1-243c-47f6-b540-c147a0d39113",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ddd06a-2725-448b-8b4d-f2b4c84f83ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defcf537-d5e9-487e-9d99-82c5a0dad48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78679f7-07f7-47a5-aa4a-58b24cf9b31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc8b8f5-3040-4316-8add-571de61e1f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34da87d6-811f-405a-bf53-d44d741b8544",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59320c94-c671-4533-bc16-debb40112a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae4e8ac-9e37-406e-996c-f5498fc78a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bbe85f-7d8d-4296-be83-363557659b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a54a0f0-ced2-443a-8fa2-68fc163af156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a63566-35f6-4ac3-8f5a-0f3e2fb86ed3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0213a135-3999-43c1-b173-0dce7de6e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760284c3-4fa4-41de-bcd4-96f61f6aec6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a596a8c2-7919-4c7f-afb4-ce768c13936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39bf7d3-940f-4933-a6e4-a6b0d47eebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426b4d97-091e-46cd-a612-634e460cec17",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918cac13-d014-440a-a5cb-50d0a15f0708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3380e490-ec02-4f53-9493-01a610ec78e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18833334-8f88-4589-91a3-3345a37219b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a290c798-0bf3-4433-b3d8-2029f9a14ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a192ad67-946e-4988-8327-ba92cc22aa67",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ce2183-2422-42a1-9f83-f9ee6749646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff63c596-a156-420f-8e5e-9a55eb6bbce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be2127b-3d00-4be4-a2ff-b64c01fd412f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0aeedf-ded1-45c4-80c1-aed30c89abd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083a6962-00da-4996-89e2-9a19fe5a4e95",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8222dec1-4dfc-439e-bb60-c424fec23fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c04a8f-7fde-4efa-b03c-2c56fe1669b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44420db-7d21-4d78-a62f-960bb51939f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d099ce-6752-45b7-ab1b-b1b6ab4e5e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f9a23d-af63-4b15-aaf8-815ecbb70548",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4839db-cdd3-45c5-b934-1b868edd443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b13e7a28-0624-442d-a081-b58214acc61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa52319-e692-40fa-9e79-eddb515ca378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e8e293-e840-43ee-b93f-c3834ae7851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810f04e0-0db9-4c00-8d40-a14a096b76ca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf9f062-6dce-49f2-b385-c4caded8bf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7008f4-d7eb-411e-a81e-af94b7787c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad8fcf8-d3e1-4ef5-ab6f-d9e8435a3e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57356ccb-a520-46b6-8e84-ad20436ce593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575f9a78-76f4-472d-b7a4-1679094af625",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d579237-66f8-4a59-9735-bcddf46b27f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9891a5c-3f3b-4a41-91a9-610a8ad409b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259075e4-bbd3-4fda-9fab-6653940adde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb2c12b-30cb-4b39-b8fb-1d1004f7ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcc6f86-0fa3-4d56-966b-65b3f16e4d94",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69c8000-ce0b-4c7e-988b-e25b7a28a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26598d5-e767-4945-9f10-8bd43cc3e694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae84255-fbdf-47cd-9a5d-8092345e5aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d579b7ce-7adf-4cd9-943d-04b7126daa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9b9078-e268-43ea-aefc-d549943ad4cd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab6d3f4-e4a8-4e6a-9fa7-d00c9cc251e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01f77f8-dba2-445d-b1d0-c0ffde70a12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93243f1e-b587-4217-a6a2-49e1e01b4a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29ccf709-e0a7-40f2-9ffc-0ff88710eb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33766944-10dc-4058-8de3-d91f31eccb34",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1747ddd1-474a-4ef3-ac7c-bba5c7fba8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ada81b6-45db-4d90-a7f6-e9b74a493c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1930fb-2ebd-40bf-b2b5-b0646832fe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10673a75-8c29-41de-aa07-9ff276cdee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdbd75f-6a53-4a85-8871-d2f701b32a84",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac708349-70de-430d-928c-5e027fa071c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b107f808-ca48-42db-b977-3f4ff0e7e90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c700ff-0f67-44a8-8f9b-645cb67a88b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27832c1d-53f5-4655-befa-c4129f99a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da156b55-69f2-47c9-9c21-b380157a7a24",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec7eea9-bd3e-4ab1-bb32-495c5d4db067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eb351f-d099-4bfd-a7ab-a021e295f3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe9597c-c9cc-483b-868d-1e0334518a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "053fa3d9-cfc2-4ef8-b774-51fa33572cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ba19e-a5cc-45c6-a14d-00542c22aaf4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587f57d3-ed3a-406e-a26a-8484107d55ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ca5db2-03ed-4364-9164-3570f4a0de9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5af335-f5e2-4c05-ae24-83ab0fce5b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67bc735c-459a-4256-9efb-02f83ae10546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96feedf2-3019-4b5c-9ba9-85cef55d62e1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf1f16a-e594-462f-b753-8fff179bf337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2233b2c0-c8f2-43b6-ad34-e1d8ffd2fe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e87bf-45dc-4eda-9553-f877c7fb126d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bf7af2-6d1c-4b86-903e-6b61ad3ecf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc504e2a-6687-4b91-8e86-807c311fdd72",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5235368c-e227-4b42-a91e-e53950c08812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736c6cba-118d-4362-ae0c-da8cca66b944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7d7efa-12e3-4761-9921-6c322707506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b174155c-8991-4da7-89c1-316e76a7b06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d982f1fb-c247-4932-9397-28d97d8f3eb1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca91616-4b6d-47b0-8433-0efe21d9f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a546fb-c669-4d6a-b1c7-81e71b42e756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af7630-f160-4ee3-890c-f908b08639fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c529ac-d7cf-44f0-a7b7-19786f684815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74632d85-530b-4e29-85ae-f9aaf8ea117e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb776a86-adf2-437e-84fb-094838adc2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d162c14-ced8-46c3-ad86-6fece156e11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae79ca7-fcb4-4017-9c32-fe66eb378622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d6989e-1b65-4613-969f-463dafd7cde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eb6451-5b8d-4495-99a1-150812b6fcff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf54477c-dfef-4987-9544-4d74db28b4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5356fbd1-9921-4b33-8804-2d8f90f5d901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e9e3d0-8f30-41a2-9a84-77ae4335cee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "343528ce-8093-4098-abae-ad68e4e09fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd54b77-5329-4e45-acf8-a7d0c2476d86",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c40efa0-c9f4-47a1-9b69-fa2ff8e6b038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0cdb8b-acde-4d32-8127-c9855f154b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301eb3a2-0c4b-4342-8b75-6d87b453897a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d02a946-e5a9-4b4b-b34f-ebf95ac32b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d0358e-2292-44da-98fd-8d49d51071e4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40080afd-5084-4ce2-a397-ed1214d00ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd67ff56-a8ad-4ef3-a747-9b1e36a45993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f3ba37-b447-4c16-8537-1a536fa26643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "36392cc3-305f-4f49-bee9-72f20e02f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc8305f-4ed3-46b4-b6b6-3696f75e750b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778330f1-95a8-44b1-8011-4adc4d2ff40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f20b99a-cc8d-4d68-a182-10ed4bd3804c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6389c70b-06a1-479f-a332-c55454c138de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d93f722-d4c7-441a-9271-ab36409614eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a268bf-58cc-48ea-8068-5149b4f0f818",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa760a2-56e2-4b7a-b156-4f9768ffa132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9bfccf-5d41-4f4a-adc3-76cef21b83ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8156a553-4735-40b8-9bda-0f11229dcb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6c1287-2df1-460d-81f7-83877890c73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9492e4-3bfc-4788-aac5-c0a16eab1665",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f72ee3-1c2f-495f-b1db-28a669f5958c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449cdf7a-70a1-4508-9190-471e5f626353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200ed16b-82b5-4958-a67c-63d2c2123dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1783a771-1e82-46bc-926f-8c6897b78381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca50f1e-a641-471b-b0c8-aa38da6ad4ca",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a40fe6-016c-4ed0-8bc2-1408f2cadaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaa3825-ae66-4a1a-bdf8-b5d942dfdea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb85dba3-fbb4-4888-b8d5-518e4b8aa86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d681c983-25fd-4742-8754-a0fc9fee94fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7846e4fe-f05f-4a4e-bee7-022a03b2382f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abbb9e6-a69e-4884-a65b-05ce0eceedef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd16bda-4499-4d7c-8ec0-50ecc370eac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce3c6ca-ac1e-4972-b7f1-9700cac482a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b209a4-ea5f-4f21-8971-09b503a4b065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60952945-d725-4380-8f96-955d8200ffa7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c5a55-b634-4e29-8962-76cb7b31b1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b43d6fd-cc49-49f9-bcd5-f7dafc4e98b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2207b2af-2c38-47e5-8842-6441f5113a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2abaf7-a39a-4470-9b80-77fedca5915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f532b97c-26e8-4110-aa16-49c515376b23",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3df950-8cbc-490f-af9c-cf2b5a13c541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c427fc30-423b-46de-a4ab-32891ee64cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bf48e5-b2f6-4179-8fe4-d308bd4f54d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48fa5f0f-cf30-4d4a-8f60-a8dc9916ce94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f6b7d8-feb5-4454-8647-a5061658c673",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98437f23-a2e9-4d02-b771-c5b8204e253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b1f71e-adc8-4e06-bb0d-5b6bcb983153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bfc7e2-3fdf-493e-afd2-1bf14a09a4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20283979-79e7-4f41-b005-b3476edb3dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a151013b-8d5d-4063-9315-502d4606e290",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b4ca74-0d88-4b60-9213-f0f8e31abca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a189412-6fc2-420a-98c3-afb94a291075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fdf8bd-c5b0-4916-a399-0163a753e3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bb8e96-d137-4473-b5a9-5d6a81269965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f390fc2d-8a36-4c30-8223-fb3ed11bc357",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1288a4d-d5bb-4227-9310-e6ce99a59abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee02ce8a-99ae-42e0-9f77-47efc9536323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2289a0b8-bdf6-4f61-89cf-966b6547944b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "369e7146-b332-4223-b52e-5ff71e838c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cbf818-226d-4ba7-8eb6-61dbba28056c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38262aa-114c-4999-a47b-8cfa72fa1c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946d6277-1c25-4e18-ad8b-0f9dd8986bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d8ef7-92c0-4cc5-9dfd-41f8a3effb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8673824e-fa69-4c83-8ca9-f2da1e34f59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5a97e5-4480-455b-aacb-eb00fd26c5d0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4768ab-9e03-4e33-a168-01004534493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff84045-e62f-4494-8b99-3f07199ce826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34548e27-a05d-4be9-a5a6-598d6cd16413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "751b3a8f-742e-46b4-b4f4-e8f8e9c3436b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d22567-eeec-4bdb-a10e-cd404cfd34e3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49bf249-9ca5-4cd0-b1ba-e7c82d2aecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf14aff-6784-43bb-964a-77e4211ebc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7e640e-eaed-464e-9023-df2f01daa5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "986cd269-89a7-4707-b78d-10f92f613737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb24f10-6f75-4136-beab-2afc160bd773",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198ee14a-b761-4809-880b-f3cac5e37a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda171a1-94ae-4e67-8b42-9554c540cf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1950fe-04cc-433f-a4c0-6b058b701de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf161041-905a-46e1-a2de-fd9508ffd141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88206fe8-c113-48f4-b2cd-f3c6178c51bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932efa9e-4e67-4721-8047-9755e99a97b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883f8c48-20a3-45d2-87ba-c4dae1e5e0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eea4cb7-e696-49e0-829e-abc088a97745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e66ad723-13f4-4856-ab32-c4507c7f0904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f40361-b987-45c6-96cd-3bf466bba698",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649c1eff-56b1-47f1-b2d8-b2574516e525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2acc07-9ca7-4349-9c0b-217153531211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2784caf-0cbf-46db-8601-88c0a8159260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23ff4dc0-a000-4d00-a86a-6500bd69a345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcd3a4c-5f37-4914-a1ac-c837b6c638cf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ebb6e6-1efb-4dd6-860c-a6a788ace6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274c9d12-203f-4cb4-b983-b78814a59b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5931344-a06d-418e-8608-d2dc4e8bed7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dab9ffa-57c5-4af3-aec2-95dd069c7aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bd3d44-d055-4cb9-bc56-4cffdaa85da0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755d269f-0808-442b-befa-71139e17a0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06d4b24-b5df-429a-8d17-0d26f706f51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b9dd88-b5a3-45a2-9a56-73553988245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde694a0-7bd5-4ef7-b07a-3729bb1896dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed90f7e1-4dce-4a8e-ba8b-8157b04e4497",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361661ca-f60b-449f-931e-eb381aa8c423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54441a6a-9d95-4394-b1e9-b74ded469a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd8e94b-c49c-4d11-9215-83fabf94bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a717ff1a-6e21-4f8c-ab08-ea8deff235b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1d5b8b-87df-4a40-bb27-5b7ed60b64fd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0f6415-67fe-4f24-9834-7d6880aa9422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f897a7b6-fe0e-470a-abff-e8d210276a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2130d2e8-3ce5-4ebb-a3d1-49fd396f6cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad68c406-676f-4573-9c9c-b547c4696ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7762f9a-5885-4d49-b313-9ca10686e792",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b278daa-9b82-4487-aa78-1fe50fc08792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0e82e5-ef38-49e7-9cc2-616b1a4f1bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fab7be8-7341-42d6-a82c-2aeef6b3cecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ad4092-7c17-42e7-8a56-bc0a68b7df56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8e8f55-9bcf-42da-b6fe-1693aef3b656",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bc6a07-6fb0-47e1-a5cb-21f5b0f3d688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a77b653-02a0-4d37-a412-1ca817a541dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab3747b-1217-4e21-8835-3bd8f0847659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2888ac-55bd-41cf-a0fb-a812ccd08d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92f01fe-59ff-4c86-9904-344f3ccfece1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e33b0f-c1d8-4c1e-93fe-4afe954e10dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa41ce95-42bd-493c-adb0-6006f41220ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f22df3-ef20-4648-b6e2-0243d02f2907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e04078e8-2afb-4899-84a4-10546d2701d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ee60d-5ec5-41ff-aac3-fefcfa3b0e6f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5eb8a81-a5b4-4ff2-a983-059885369409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d9db18-4008-42e0-9bd8-061f6c086269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e265c5fe-e8ec-4da1-9968-4455987d3e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1dcbd5-5d83-4862-aebd-78c630987e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4dfaf0-6630-42eb-9047-9a24fe4724d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3e4e6d-4e85-4158-828b-dd09a64a8937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfc5506-5bd1-47b6-a686-ab2da8d1220e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b7a1cb-a113-44f7-9134-0bec635cb0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf607c1e-df10-4bdc-a2c1-ddee04b889e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8890c48-e766-4763-8393-a3ffd594b5df",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc957019-4913-401c-85cb-839f3aa81202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3400119-463a-402d-8523-1f55413a22a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdaddaa-820a-4b5b-86fa-8888c6f17822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedf1dc4-cbd5-4788-bc5c-e833f0553238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b255b0-b2e0-4f77-9d09-c43501084e80",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52876e2b-fe1a-4cd4-a6b1-bb8865aaf000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a2ab97-1cb0-4033-bdaa-7fc663d9f3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe24844c-6042-487e-894a-d4de65981f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c156b8df-7359-4898-ac62-4f9a4ce9b2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35751dc-09ba-42cc-8f7b-757d2e436b35",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845d543-f74f-4115-bc05-8ddb0e637d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4ffa1e-a00f-4076-8e1c-30a5266b120c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17860401-d0e1-443e-ace4-63cde1ea9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4db0060-2910-4a28-b520-650136c07b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026c7383-fc0b-466b-a926-1972bf405953",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40e2f75-a1cc-42a5-b357-99161740c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210a2d28-f87d-465f-9259-68243ec6ae16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e117f51-b467-4be4-9ec6-a81eedd19858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0ece48-a490-48a5-8899-0e775afc570a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b8afb-97d8-4015-b4a9-5c5f772cc500",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f22077-5d7a-4883-ab2b-3ad2af5cd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291b0232-aad9-4219-9648-387e6e782fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda095d-48cd-4174-857a-32747db8f7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "601e124f-7494-40d2-a232-eb887f5bccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9beec3b-06e1-413f-9a3f-130bfff1117a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3842d95d-093e-4680-a473-4813ad39489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8439b253-4204-48c7-bbca-928502dd816e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1243135b-66b8-4235-9f4b-df38893c8d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c765df71-db54-4285-b856-da9a1fd46812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db777d1-bfca-4b64-8d84-3bd7cdf8cd5d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68183ec8-7ea6-4220-a49a-52e6f8ae08fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9137601c-25a1-40c5-9a40-fcb9d30309e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baf9b61-2a3e-406d-bcfc-374cf79c5452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f64eb0-0460-4394-8050-6ef990a89838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42d6e83-335c-4887-9388-c88596b07efe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c225d26-92c7-4f29-9006-6505eb343735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ffdf3c-5789-4b29-85b2-6b8637d5afa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2d19ca-f1b0-484a-81c0-d319b7ef1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ccb62d-f65b-4ae2-b80d-d5af3ebd72cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73ad370-a408-4e06-990e-3ea457468888",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492b6168-ed32-44d2-b18c-ea12326d1519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc49554e-3c44-46bd-87c5-d8f1e3de0a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd8647d-236f-4fbc-bb2a-5af70db1d58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5c4c17-9a36-406a-a7c0-de2e6db3df60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362a6393-d007-48bb-aabc-3eaf62e7f776",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcc5a0b-c720-49c8-8cf8-109ece7eebb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e7868d-d1fc-4be2-a0bd-d68f6b9b4254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c51225-2f8d-4fee-8497-2c223fa23c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85de326c-e7fb-4ebb-9fcd-74b7afd1e234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff17668d-6126-47d4-a536-974c3496bcdf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a8455c-9327-4dbc-ad82-82469b15279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec28c346-b338-4ef3-8439-ba790b80ed09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c5e885-dc0a-4a31-b3cc-659febf92135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de29483-b492-4fb8-ae6a-e82e1ca3e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd35df7-49b3-4868-acaf-618cd916ab39",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b78c0a-fa44-4c1e-92d4-9f87a22dee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c608860d-ba2c-4245-9aa3-ebc9baa80dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b2002c-41aa-4e6a-bc9a-54fdf0a36d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ced25d2-7adc-4187-9808-133ed7aaeb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d124f890-9688-443a-a296-9ad9d4a71183",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9db30f0-2f0b-49f0-8045-a14c474922a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0dfe2a-26b1-4989-90bd-09184d919388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ec1bbd-d9c6-4684-87e0-456614543833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "def46e8b-79be-4423-9f53-b79eef61b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4219ebce-a6fa-4738-ab07-e261cca0af02",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dee560b-46c8-4ea6-95b9-6d541a30859a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255f5db1-fadb-4065-900d-3537462d7561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f430a854-9a73-41d8-b04d-a3c288855218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9fdbd6-d290-49a7-930b-df1a60fee403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac35047-6980-44f9-8c56-78b1727cd498",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c070d6a-3470-4085-af57-c8553d1af500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de82ff3-8619-47be-b48a-7b47160b6de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2288b-0492-4bf7-a97a-d5849550e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "11078d8f-2126-46d1-a3fb-391d4cc74004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8c17fd-a990-40d0-9922-b192e277265f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eb6786-3d24-45f3-93cc-3e692255921e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5f9f46f7-a439-4f4f-a476-210f4dd52151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befa28b5-e71e-42ba-9937-d48544bb250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7470a9dc-b8ca-4524-90fd-743e22235328"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd270007-74c4-4aee-9168-3cfb331ec06a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa24733a-0037-4831-bcaf-15dae65789f6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d3d47a-80c0-435b-9d2c-ffcf3858b7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1be8d0aa-ea15-4585-a49b-5f0a78f9f283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59e9ebc-d2d2-4cca-842a-a5691339b372",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae5973ba-ec09-46cb-b5f4-c15720cc9861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12147a6-3060-4386-b71c-c4a0a619f454",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfd2c3a-c258-459c-a975-c2e9ebabefde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2340661a-fa79-4463-ab30-c21946131b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db34521-063f-43ac-bdbe-63093a38a12a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ccce3cb-c0a5-431d-908b-745b8e80fc03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dca33441-c1b7-4dc3-a847-1d293722de14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bf5689e-623e-4991-aa8c-143926cb5ef3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20be7ae0-04bd-4ba2-abdc-db7940409dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7512915b-6a33-4dd4-9f04-60d69cd6534e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17cec293-e52e-41af-ade2-5de5a69a4c77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dd0357a-5a99-4044-8a58-c902452d9347"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8106c90f-b123-434a-a720-cea99daa3c68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edc72b13-e923-4d90-83c3-02b602e2543e"
                }
              }
            ]
          },
          {
            "id": "045c548c-98db-4950-914a-8be7722d3c1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2da9a80-67b2-44ca-81c1-10800b6b157a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a52dae25-e7f1-4989-ab0b-fbfe06f49342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5694229b-1906-4021-8660-19fcb20c8bdc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4883dfaa-8bef-4c61-a3f8-0f7a87e200b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d0f6289-edea-496c-95a8-ebf610fc3ab5"
                    }
                  }
                ]
              },
              {
                "id": "4f3b5940-f381-4a91-a483-671f707b1b69",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bdd27e2-8840-43d8-b7db-fadc96c68eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d43a037c-b7d6-46b0-927a-d45ec48f2181"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "192a169a-777e-4497-a2da-33947da6c286",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca140b36-d617-4656-ab9b-288c6b5817fc"
                    }
                  }
                ]
              },
              {
                "id": "cbb6c6c6-b1a5-4d6c-ae95-018793a67472",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60d633f-1a63-4e41-954e-b1f1063d4f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e600ec1d-34f7-43a9-9c19-d8909ec32585"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e89c43c1-b590-4a9d-b4f8-bad84856130f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cbc0d16f-fee4-4ae4-96e7-bd25f1c6fdfb"
                    }
                  }
                ]
              },
              {
                "id": "5b65791d-f378-4832-b903-b47ffbaab57c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76309d7f-5b45-4fb0-82fa-018e0290c40c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b51463da-a8bc-4640-9db3-bbbda585c4c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "787ba154-9c30-427c-b313-10a2e02cec2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8fefd11f-fbd3-4fab-b6be-42e3bae95cf5"
                    }
                  }
                ]
              },
              {
                "id": "c56e0af6-6a65-4f19-94f4-11d148ce967b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "167a09ec-e934-4d0e-98ee-e5499d0ee6ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e58acec-2cb2-425b-b542-35e7c8d8f7f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa5976c5-1c6f-4bb6-9d5a-98ae5bf7b85e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fd21ca79-925d-42b6-8b39-f1364264c99f"
                    }
                  }
                ]
              },
              {
                "id": "c8ce1ccb-aac0-4c6e-8655-a17ab1e90192",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea9331e1-7bd2-4727-a608-4a07ed426826",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "693cec25-d96f-44e0-b72d-edb4f89f8669"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d42368-1168-49cd-a703-c17fc40a149c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a892eaef-4b66-4ba3-9654-1b6a3d709102"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0f7522b-37e6-4d5a-98ce-ac0b31c602c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95552c7e-1034-4bd8-9895-8ba3cea06441"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63f68f73-0ad9-4014-81ce-4a0bad549a85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "abb5a904-7a8e-424a-ac42-59ee07b54c48"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22234d2a-f15b-4207-b12f-c4e198255d1f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ad15e056-9bc0-46bb-8af2-64e73a73726d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77f3dbd4-3d4f-455c-bf88-a9d07dd3659b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53b3c3e4-3af5-4794-b2f0-a7a43525f935"
            }
          }
        ]
      },
      {
        "id": "1a965920-4752-4362-a513-be2fa112aab1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ae4dfa02-bec4-40f2-9900-17f6ba18126c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f31373a-5103-42a1-ac79-80c097cca1ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23ca76c7-ac4c-4a21-b753-168fcc61c36d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78509e36-a073-4f98-90b8-8e08fbc62fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5242a3-cfbd-4e1e-a406-278b352526c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0520aae2-b0bb-4ea0-b0bd-4868dba2c68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1439903a-0e75-4c26-b757-10353c040338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90de3338-6dbf-4c12-9e94-f9280c452f5d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbdf1ae-1738-4f8c-9dae-6a5774d75906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1cf4e6-eea1-4830-8522-128a3cc9a75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d8acf7-745a-4478-be68-ec34345b8ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58eac381-fc67-46d7-ac47-13daa7276874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec18906-d836-453f-a923-3537eb0b6293",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c354a86b-c46e-4ce3-927e-884fa9cba9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dc151e-b9ea-44a5-836b-787c86324da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac85ad48-cca0-4ed0-aaf3-578637e10b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc954eca-aa23-4074-b762-0d6d53055219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c479e8-8466-4759-b222-05003aa47575",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621639d9-c7ee-40d8-ac06-685f484749d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f6f549-345b-4860-b01d-587e0caba6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f16afdc-8fad-4031-bd78-4277f48aedab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69249b3b-98f5-46f5-a90c-d992f6939cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d066ed-466f-4339-88a1-3d04c5408dba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16111ba-d6da-4093-b7af-61e99a3287bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1d58f9-2694-43fd-8e16-c10b3db117fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85766b1b-f271-49e6-81fc-c2087881a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1295bc4-f400-4376-900f-678ecc74b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15305702-498f-44a2-a230-1affb364ecc6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370e653a-0dea-448c-ac97-38314d6dc0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbbe83e-9d4e-43c3-8820-c358412f2f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c9bf91-63c6-4486-8524-5062de5ad24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dff5c0-7ec0-412d-b43c-cd5e12112205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1af6d3-41c2-4f41-ac79-55c3df17c618",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c437ca-734f-4063-ba00-86bd531a67e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79098a33-296a-413c-9672-3fa7d1a6eb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5456adb7-8dcb-4ba3-863d-e53443a398b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d0e97e-cd11-4f01-a81d-2e0a5dd37bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07fb41-3337-4af6-83d9-670c22b45fe9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd94294d-74f7-4352-bf82-f9964f0c0267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e399c69f-38c0-4081-8782-0dd5b7959bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e62be-f7af-418a-84d2-95c047efa85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8b1fe3-b955-408f-85ce-afd3f3dcd528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad88a75b-2f40-4c70-9bbf-dc6d67dbfdf5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a0c0e0-50cb-4e8d-afd1-da8bed0fa8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1430d72-06ff-4046-b8b6-713361ecfe26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d12b1a-e860-4981-96a3-dc17a8f9d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81aebf15-895b-4d74-94dc-d283baf9847a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934d4e66-da3b-4c27-ba1a-c2c160c4a5a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869f908-12ca-413d-836f-25728ad70226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90da0708-f132-4b50-94fe-15b646f6ca3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83504ce3-bb0f-46f5-a30b-1ed26f7e487e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c271ed-e92e-4d6b-a821-63bd1fb3ff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c4fb8-a5ed-4f97-b50b-37eb006c5845",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22b7590-b2ee-48c4-bcc4-0d21d982f095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2dde31-2ad7-4ca8-b2f7-f033d20c1aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222a5fc3-05fd-4dde-bd92-975b164071d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dff6ddb1-c0a5-490f-bdac-a82e880bfea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44013570-b8fb-4c22-9b51-3d83b1c13dd0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c786ec6-5c25-4e1f-8ba3-576010ab0fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03f20b5-d3cf-43cf-be16-1433b26a100d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49332f28-44fb-48c9-a7cf-9d4d7fe20f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c49d747-0817-4505-91f1-7498b7692004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fc8b65-c470-4b78-b89a-88e606adcf1e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30456876-5807-4fb8-adb4-04fa3816328d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8844bd19-15ae-4e1a-a919-57e8d58bbca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f7c52-fabe-486e-9b0d-2e8753457ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58782c49-bebf-4d51-873d-098b10348069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb4fc7d-622d-495b-bd94-34d752d6f74d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3310528-091d-4b5c-bdc8-662228fbd5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0627c81d-2aa3-4de3-8012-c2e4a9bef0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c52b3e-2132-48e4-a82f-220385373ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fa7754-6117-44be-96d3-5ab293226d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9871ac6f-8e94-4b09-87dc-9c7c2fa74566",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f7de09-13fa-4dc4-a4da-9bcb71e30591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36793a0-2070-4d74-b76a-39fff245a1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e771c53-c5f1-433e-ba60-7a583bffa66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c69ae27-bb2c-4e1b-bde9-68c792a18b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c783681-2cdb-4ea8-a867-b4ec74f3b0a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0e376f-e1ef-438e-af94-9c5a72b0f1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcafc16-fcf0-47a6-8043-dcc30db06069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dd1bb2-28b2-48e5-8628-862641da6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1dc4fc-9d65-4733-9908-7e5b41c0f4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816dfb3c-e1ea-4485-bfc0-b1c1945008d4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7cae6a-9341-4aa6-8b39-4c583c919549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6923c596-3680-43d1-965a-2545225d4f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cd3336-3ce6-4ad9-accd-01fd24b72c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2ed9f2-e6d2-46b2-a928-07219f6a20d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105e1f54-4aa7-4554-9584-858c96d653e8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff8607e-b7bf-45f6-b9cc-1411afa4f12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3323fb8c-0ecc-4712-8439-49a2bb8ff76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f34479-e1ab-47d6-a459-5aac1360a8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f052aa3-024f-4129-922d-33f6a5c41284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bfbdd5-b43d-4517-942c-5fcbc82064eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ba901a-e95f-425b-87a8-4569080b0c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759ec449-71f3-4596-975c-b7efd03897ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a5ac25-9ec1-41a3-a6db-13758867fc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c220f1b0-c928-4efb-9ada-a128650d45e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f1f34b-77e1-4270-9601-abd670a5e79c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75d721c-7a25-4bd7-9b55-0eb07cd62f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c9fda5-4e10-48f3-9cb2-91b7a9c41fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2eacf0-b352-4e68-8247-d36e3522c2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0bf80b-d4ba-4b56-a5bc-cdb7b3df01b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7b0706-1791-4a1f-8eb9-5add6c572672",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aa05ab-cdb9-4af6-8b0e-3e44a03c74d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa4cd7e-24f6-4256-a5a4-c114d5bf4996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efb4761-e65f-47ba-b382-7af09f0f9457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4428038-81a7-4a1f-8d22-b86cdf8e458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae3208a-deec-4df9-8eec-f2295991b43a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6937977c-2b54-4652-af36-c6b4ad552246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd0a1c4-dc7e-4d00-b768-e75a75df830a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6bd809-0421-42ca-b586-a3502ce16d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e515db24-1638-4ee2-a49a-8729eb1950d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe31526-e9e7-4cdf-af46-8d92ed647140",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b60586-6973-4778-b120-7a3151bacdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3620ce79-c1d0-4957-bb6a-0927c7bbcfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33227e1-6dec-4421-9754-fe2991143917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae5754c-1069-4c85-855a-4c399f28d5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bb219a-c287-4e0d-95e8-fd176ceb0e7e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f8d577-90a3-48a9-9195-a1ad7b6f30f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c47f2aa-5bf5-4567-a996-1ffcb8fca41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d04eaea-cce9-4d3e-b076-503143415ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa3566f-7beb-4329-b73c-10f5235c1803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8037023-e154-461d-9b47-04c8d5487759",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d73a89-a4be-41ea-b290-c0d8e5b87524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb66a0ea-a7a1-4482-b80f-a1571d36b795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cf04eb-4146-44e7-9457-68ca6c3062df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f318d790-90ec-47e9-83c0-83bb335da691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98908ba-2818-45af-b254-59d895fa25df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365648db-6487-4336-a807-3e33215aca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9fa2cc-d28c-4857-bfca-54167c4faf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e21c06-05c9-4176-84ab-9a38656680ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc86881-e162-4dcc-a629-5c000f469978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8c8fe2-7a24-4648-92a3-ac8f2a0c1b26",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971c7cf3-2f9f-4360-9198-a102a17530ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe804982-8df3-431d-9176-f2820853a4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36efad9c-7482-4802-98a3-581b1fc4fa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7f406c-27da-45d6-acd7-4769f4c4de2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa94f11-c16f-431c-bf5d-e1a27a0b89d4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda1bbbe-013f-442f-b2ae-45d081abf044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec271f9-cefe-4cd5-ba31-390b469e1301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd4c42d-6aeb-4edf-bcf3-f08ee99f68f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf87bf95-b777-412a-a25e-f8c6a2536cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cae0a8-bfbd-4db7-9883-7b0e2c3b8129",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda906fc-ca00-4a73-a3bb-db6709adec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580aa3c2-7209-47c4-9e38-0af22f81b60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97597412-0efb-4391-a710-df61aeb77aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a72b44a-dc2c-4d4a-be9f-7e4201a485f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d30ee2-c124-4030-8038-9ff13cf93fec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19ae7bf-c56e-4565-a2b7-4d4f9f22c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52219d9-ac9d-49f4-9ff1-2a9187c774b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a86a81-be01-4314-ab58-9be6f482cf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d30cb43-16fb-4b08-aca8-545c1f87b7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e75fb3-e12b-4077-814a-391c7e7dbe59",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da25f942-a1ab-4b3a-bf6f-36631eeeb31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61cb4e7-9eb5-4611-ab51-37f2a95659d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a20ae1a-e8cf-40ff-9b0f-90caf1e5402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53aec94d-fcaa-4eb8-a3aa-0dbb1f3d0386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d34881-218a-49d8-9c7c-dce63c0c4d4e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff48b418-e6bb-42d3-8866-36647fd73f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5e348d-a342-4afc-ba6a-0f5cc7fd931c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4cd360-955a-47d9-91cc-c9235e23bb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "013d15a8-9613-4658-8bd1-1ebf86d8a0de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd4cc876-653d-44e6-a6a0-41acd657b9d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df35779c-a98a-4e1b-b49e-3c93f6eb9b69",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a906c4-f35d-496f-8d29-5d5c7a0fa6c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fef03b00-952c-47af-a358-b3ad17d39001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc8f4b2-0c22-4f44-8bff-3ee211c01751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b31dfa95-52e2-4249-a46b-e58cf06953ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1658bef5-7bf0-4b10-aa22-2e206692c329",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a6a7cc-1871-4db9-b3df-06f4c411100a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef368ce-b2c5-47b9-affd-44f9c9343a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3fbf20-d1d3-4dd7-aa30-4e78e2cc19f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6b7d4c9-47c4-4932-b65e-cea460ae33ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "883e1a29-aa17-49ea-992a-68b253f0169d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f406bc7-94aa-4d7c-ab25-7993ba1bf085"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f37301b-ada3-4de5-9eff-431233a4de7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97249c0e-f529-4682-81c2-2375de6fef78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ef0c1d5-06ee-49a3-b6ac-381721d030e1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7def75d-e88c-44a9-ac15-7e2605861778"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5a24faf-1ef4-4426-9d0c-968393c95b95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8f4a529-25f0-452a-8399-a2fd21f2e774"
            }
          }
        ]
      },
      {
        "id": "ceb823b9-ad55-493f-8775-430be3a9113c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "485d6c44-e627-4a2b-9c33-cafa17b9b133",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf3a7517-ac00-4cdf-acc8-83e1b60f4781",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8253aa60-44a4-4224-86b3-36cfa9a1fb7a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b8cc4c-482d-457b-bbf2-931a4e7a07cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fed943-e01a-4157-9ec8-8f6f1c371d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e6b75-5913-4c73-830e-1a02a3b3b85e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0757bd-afba-4c1f-a59a-24f7dbe2e4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf668a42-ff63-4717-9d94-92384678af67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e31e1e-f93c-4b4e-ba34-65b2afa8eec1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c24867f-b7d1-4643-9650-d14d2d4da55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8d2a62-2881-46a5-9d5c-f90484d70c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a0c842-5822-43e5-8e62-39297a531ddc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda67725-494d-4f39-8f30-7208e2eb560e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe9308d-6491-4cff-bad2-2ada8ef0b8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06398acb-d407-44d6-9a8c-6b5e5fd295fa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818b7576-32d1-49eb-873c-1841e9869ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f89d93-eba0-4801-af1f-09e7344638ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5ae00-4609-4f10-9dcb-e191d23287ea",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef8bf00-7bf0-4d6e-87f8-322fc15ae580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c0dff7-d3bf-45a3-9085-ff544cbad162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f77d26-a020-42aa-9c63-f6c6c3055f8e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c564433-96bd-4240-bbd8-21c1cdb14041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fa8005-58cd-4c52-ac74-7806a8275f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa9bb42-db7f-41c2-9890-44dfdc0569ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2337d7c-6cfd-4712-b511-594eafdcc299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911a7773-b976-4bce-b8d1-0bb1b452fc5d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280a02c7-9b97-4fd2-84ac-39e197ad4771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cc1026-ab18-4acd-a51b-9f21e15f9328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bf1fcf-49c1-46da-b5ff-b095eb4690b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad48431-7af0-44a5-b37d-08d14de4784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88808e71-8491-414a-99e0-0fc0c7bee49d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d127b8-d9a4-47b3-9019-e69954217664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea846f3-0f5d-41bf-b03a-49f21732cf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec0544f-5062-4110-a719-ffcbe451e393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7ae246-4575-4a30-b927-f7e6ce796ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9e14c-3461-4431-83d6-8c5e8269c0cc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dfa310-a3fa-4ea1-a73b-880231e6ba4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1925f8-42cc-4c22-a655-be5194fc16c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d474331c-3ccc-4ac9-a45d-33cc16458a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389745dc-5fc8-491c-864c-4a9a8fd53999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd506914-c7a0-41b0-9bc8-adfeff1a2e37",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aabb9d-e216-469d-8f76-89e99e7c104d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64281f89-5791-44ac-804c-05ceae4315c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94947ee6-6d70-40c1-ae14-a38263bdd368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c17591-ca23-442f-8190-00bcda0ba7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2d9b17-435b-4a43-9a4a-10a8d5499c5a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766f5ae4-1f4b-49d8-a3fc-40a45c0b83d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c87d990-5eec-4869-9085-f5bae3747289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1baf04-425e-4afa-91ce-ea800b5b967e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1134d76-49e9-4360-9aea-42df8de79545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fbd209-58e4-471d-8aa3-c14a3691e46f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb75a3-4acd-4d81-afa3-a61930acddfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33da048-0423-43df-af21-9b372a1c2674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5615893e-0651-4157-96b2-59414f2cbbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598158af-7a19-4dde-b384-bdd2e2d555ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e416260-b657-4402-aa3c-8f7a17518395",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84753a5-528d-4aa3-940e-27e347316140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430d525f-cace-45dc-b1bc-103dc8338cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0a96b-d484-48f6-ae3a-95e54a7cbc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722d845b-af8b-4055-aa70-90e89a2b39a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67039a61-3c5b-4bcb-a607-8108e7c275a8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0698baeb-8bd4-4577-aa1f-1a02fa990aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d4a5d8-16ff-44b8-b63b-5b608c4a3790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b7c5e0-f759-4b92-8cc1-5bd3367ef27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3855882a-eab7-4dae-b648-af374908e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e522ef-ac28-451e-8cb5-1ca31982274d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d900b1ce-2e25-43b9-b0aa-d244a2a94d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bdc653-6409-4334-8343-48f5f1554a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891d54e1-6d28-4dca-8005-a0017a0abfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc4f0f7-58f2-4cc6-897e-1e027749f630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5267a067-1b80-4922-b8ed-43acfaee564a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cf1dfc-7399-4bed-938e-c53dc539b43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d193d2c4-4aed-4af7-9b3e-36a0382a4ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d107de0-12e7-4b46-9e35-c38ba6818adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6584ca24-ba7b-4a04-8d1c-f6bb7e8b9bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d62316-fdda-47f1-9b54-b3359f4b0d44",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46c4edf-f2ff-400e-8d7f-8a1f30d9a362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662d69a1-0e6a-4569-b1c6-2475611f7cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819b8732-a79c-4b2a-8a01-c3caf831d553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e708ad-595b-45c1-9588-e6609b0db405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced93a76-77f3-4f92-b4d1-83a92377a5f3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2bbd73-bdd5-4952-a059-e4652013d652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46774be0-e059-436c-b4d0-618e2019287b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5b39a5-41d2-410d-971a-dfb92eb530b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bd96dd-06bc-4658-bb42-832fea10bb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828b4618-6253-4de7-b334-308dcf00de77",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990155eb-4a5d-4bdc-b7d2-457094027d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6255ddb3-1266-40d4-b35f-67f05033738e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e87b65a-1eab-4f4b-a71f-5d0bae2f7e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a96173-ac2a-4002-bcc8-82afce825f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dae984-5192-463d-9ca2-907c5acc2102",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ea0cba-e2d0-4c98-bb73-d1237bf7f5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc471ef-50b5-4f3c-b8ca-9067e95a34b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aac950-402e-4fe1-b87f-d9c571d52804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce455a1c-9490-4717-bf39-6bc300b4f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a216d07-5c3d-4324-b546-59541a608f89",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647d4378-71d5-45a2-a663-383e479a6169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd3a406-c12a-44f0-aeb2-5abe81b89513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c31c941-317a-4ea8-a2b8-b3419c222d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dba0a0d-523c-408b-9d87-90a05685428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab6c746-5c45-4e15-821f-143017d23202",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48061a8c-ce99-4462-a035-5dba6ba598da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9571fc40-aae3-41a4-b8e4-6a2309e09d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27de81a-bf9f-4b90-a282-d389e1fa13ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70831b48-0e48-4d68-a14c-a53d4dc8b6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600b29d7-793a-4836-8a2b-5f79eed8fe71",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd17b7-1453-4410-91e5-1eac4e009104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470a5259-5545-464c-9312-54a2e82e9d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b50eded-4f65-4508-b9ad-a9cdf088909f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed5b594-91b3-4e04-885b-254384ed700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0801c325-58ae-4957-a22f-c32f8b804863",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048d25d7-4eda-4cdc-a5e7-b8d31f3efc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767e162a-36fb-40b3-a9fe-c217170f8b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4daa65-d8df-4584-b69e-2cfe4cd786a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2833037-cf8e-43bb-8e71-7169a9820787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23abd5e7-7f60-4a11-b6a2-67cbe90bc536",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd0b50a-deec-433b-872e-b088a5ed974f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9665ccaf-7c0b-421c-aed2-339e064d1c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03c67a3-29d6-4f89-a648-37749f2b5425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c5cd1b-0a86-439d-9b41-65dcd1cb3ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a15226d-998d-4369-8a2d-c83ea450eef6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea30bb-1541-43e0-ad63-0f6caa834816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be294ff2-2117-46f3-a0c2-e3f3419cfb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e490f66-d1d1-49d8-9981-09acce703c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10eaaf5-c6a0-4de2-9f3e-5bcb8ae48ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8f55ab-ce0e-4a3a-b67e-fbec19562f11",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58c239e-1743-4ec9-892f-722732d48bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c6e00f-3be5-4f91-a16b-53b511712f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db9de43-f82d-4d73-a541-063076447089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b7fa21-9782-4e9d-a3a5-8679064eb870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34f5f1a-93ec-4f0e-9aaa-57ba305c69c3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faacc04b-df22-44b2-a3ee-889c8f206523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3ec734-5b2e-4a2a-89a4-b834fee11681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621cc34a-8b71-4784-8b11-1ad23a3481ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0add177-e78b-456d-8789-a73d926c2163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9029a5f-e7ec-4b03-991b-fd885dabb2ad",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680bf1d8-3723-4f6d-84cc-b8ce9a4dd234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede07de8-a520-4af0-b3de-00e9663ef52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede36e96-914e-405b-a917-2eff2e71e779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0657a99b-3580-4390-96a3-ca7c4c22b65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff95345-5285-4d32-bd27-e4cf98f89226",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdde4dfb-9aad-417b-a102-f143eb939e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397295cc-f3fc-450e-8d51-ac4492739f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e3e631-482a-4517-9a00-841f1420a563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d01d6d-3df8-4fa9-b9e7-7957fdeb2f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b190c9-7531-4653-9fb6-f799599fe3c5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fad8d5-6d55-41de-9947-d8f35e9355a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a9a4a88-5ded-4955-84e9-300396cbdf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2ec8c6-0e48-491a-920d-3a9e102fa700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c06b2e7-75e1-4558-b513-8e420274072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad2331f-1d77-4374-8c0e-e167d8e5583a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af7a4fc-59e8-4f6a-a3da-61a7edebe34c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a480cf3-65f8-4922-93a6-28f6a1813668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4a7176-0c69-43b6-8f84-5e874d85d90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67caa9ca-8e07-48c5-9cdb-c54525a07c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e45bda-e1d1-4e1c-aed2-eddad20b28e9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5917adb-ce3c-4cf2-8221-43cbbab1a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064d31d0-db78-4272-a10a-eff6c4f4dca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdc49ad-2a4c-44dc-a0b9-6027fd69ecb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70c59aa-5733-45af-a84d-e14885b87c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2dbd4a-1e72-44ed-a5ae-d5d88ba3f3ed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157e7351-cfd8-4414-9650-b592312d5d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930fd547-be3f-4e6e-84b5-1da064105d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92d2f22-d2a6-46e7-a7df-71385ac2e58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f6df08-aef2-48fe-905b-ee539accc9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08507724-3fc8-4edf-b345-2224616d7d5d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65cfb6d-a587-415e-af0a-be37fbcb5ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5626fb0e-58f4-45bb-9dca-52054f8d66df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cefacc-367e-4323-b997-af45faeed126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b854a1-9a7c-4f1c-ac31-f3b97ea49609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a293a-fece-4472-a7ff-5625e00423a6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a944d-04a4-4ed0-a400-5b5b97d8afef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f186cff1-5804-4b05-88e9-aade4f99100d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b1975b-92d0-4927-9f08-146acc875e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea64cd8c-3272-44e7-aad7-a80e3a3945b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd1d592-902b-45ac-90b7-b0e4d3488795",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b787680-31f4-465d-ab08-28aa3d387b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e219b6-469b-4272-a1b8-299327166020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06153a5-8099-4d19-b95e-c38b05fa5e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90007010-263d-4b73-9a6e-8db8d89a32b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc6f8d5-e7f3-4c86-997e-3d614f600d27",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b0bf2-c721-458a-b20c-68ab5caee666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ba72f9-3f57-4069-9e7c-8d1b5b586fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af48f6c7-1b83-4370-96c7-d541d36a09ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5568b4b-f46b-488f-992a-97039ec80b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c376cf0-3e84-40f6-b0f4-3056ca91732d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b228f790-9649-47b6-88e4-5419d310b825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ac7263-f36b-47a5-93c6-6927d4aea7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c3e89f-1643-4db6-9caf-4cc96ffb24b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cd3d7d-5651-44e6-823f-2b86e72757b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9117af33-9c8c-46a2-93e9-259a373ed98b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de17831-30da-442c-ba1f-b130a2fe2adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ef7295-8f31-4324-8fe5-ca95eacf4ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec840d31-9002-40c9-a25a-3f52ac2e94d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49f36dc-ceed-4c23-83e9-a611a8023b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a86a9d2-f362-4185-b6b2-9eda2cf27e92",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d65299-d499-4e1c-a5a6-de432ad70eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf537e9-ca12-400e-bed2-a9c004861209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040f8268-84b3-4564-b75f-2aa5cc8ae812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19806f3c-5282-43e3-a4d6-27a8afc9759e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196bcbbf-4577-4b5f-8d8f-007415c25aea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a73641a-81dc-4284-a834-719e513520c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ef7ce1-ac1f-45e4-ae64-c0de390e755f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f8719-3e54-4f7e-b0de-51da392f888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7b4ce3-5b33-4bf6-96e7-2b91b049c0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8a7195-f415-4856-aca1-a2675bba99fc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23ed6ef-1898-45e3-85c4-cd981f345ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7030febf-c4f1-431a-8760-11ba3f286b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d124243-fb4a-4da0-8744-357f4410ebb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc165be-2d2c-46d5-8966-5c7f832520be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bb0578-30f9-41fc-abf6-a378b791ce03",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f6ce85-32a1-4f3b-9c9d-7714a9ca2b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebae7f86-c571-4cc3-a7df-5a112b1e2648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2038abbd-7903-4b37-aea4-da9d8cfbe763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30257d9-541a-42f5-afaf-39c850fe1fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ab794b-a462-4e63-9cd0-56cd4cfb866a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f26df47-de18-41f9-8a2c-01067064853d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb884404-cd44-4bbe-9c18-b7da3d3d0e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b77fd6-5a44-4129-a655-20376ccd2a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b145c7ff-f6b8-44e1-bad5-0c26e0223f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff8a2a-4d3e-455a-881b-610e210d0676",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ed9150-2fa5-44e2-9ced-da1aaf1758d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8932414e-e356-40f7-bd6b-0c7b4c51627d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de5803a-1496-4fbe-b64a-e3925097a844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb71265d-6065-49ae-ab2a-def35fdb83ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6222a528-549f-4163-b250-3fff35ac8cb5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfa4456-7978-42f9-99bb-47c59b2d7100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fef2e95-bcca-4406-8d85-2afa3f457625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e0b908-452e-4afd-8b89-6e88572c0ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a8326b-ecb5-487e-9774-a2c1aa38f41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8e9c3a-6709-4e43-b4aa-12d73c6a3382",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930827ca-e4e6-4395-80c1-1017d0e216ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008c31ae-69f7-4ee3-b802-97a9dc834a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf68a3-c833-4316-9479-905bf05a249c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fff490f-08bb-4e5e-a509-d24081329974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df083e3-ee6c-44cf-8aee-79f3765e3d02",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df3ab76-bd8b-4a24-ab08-b0dc9496eb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d21ccb-2c43-4356-bd08-91c9ff54f4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14669863-6a76-4cd9-a76f-a4292357fdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24b25b2-2cbf-448e-a068-052b16e662ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1847a8f7-af30-466d-8a47-3139c1050db0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73204fc3-05fa-4f6d-85af-2fe165867e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55213b5f-a12f-401c-8b71-2f31195ab5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6f31f1-fe52-4623-8e0a-6b00db22c9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6989b59-05a2-4914-a77c-4111563e5cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f2354e-1ce3-46d8-b397-84017f909577",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11730b6-562d-4421-8fb9-792dc7771b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1733a8f-2296-40d4-8854-f8e122b5e51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbad5e0-b9ff-4f4a-a7ca-af891d90db7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95da62b2-b8a4-4e44-b678-8a29dbcfe54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c5441-be16-4c5d-8c22-9459fb96f614",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7f9c49-0264-41b1-8c5f-36ceaa12cf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac7a613-cc69-41e3-a78c-952389872126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2721aa7b-00ac-402f-aa5a-ba045313548d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdebf4f-e1b2-4664-b5ba-492876f687c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db094076-1ec5-4232-8da9-c3003eb06400",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d357a2b-7110-4dc7-9ad4-9b9694c8558f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f88996b-5fa2-491f-86fb-d4763f428bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ac2d14-2cdb-4a24-8e2b-b388d773fbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a24f46-7dda-4936-a402-5bd6ead61c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dfa19d-f3e1-4f93-ad36-6ad5f3db25e8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f51a9b8-a299-4f0e-bdfe-82e9a4af244f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cb4d44-34e2-42b8-b5a4-552de762646e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b3045a-7dff-4ff9-bb8f-6d1e3784377b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdeba16-6e14-417f-bc43-75104b1ba059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d96ebb-b34e-4f8e-964d-522c51db62ee",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6867c32d-14c0-458f-aba5-80d9e0f836d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0a8d58-7d8f-47c8-b824-b757303ad009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e5392-7b1e-41b1-9d0d-e3768238f7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f500bad3-2970-463a-bd0d-e50a9f82af84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b52302-298e-4b81-bfd3-d3300a02f003",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e73dba-87dc-46ac-bfc1-224235b8ed6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5091c816-d9dd-4886-a574-3894b9d6b51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a48f6c-633a-420c-97e3-14286af6b016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5baa8a-f66d-4f58-bb95-cea39b73fe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5479ed31-adce-4062-91b3-4a76468a1bf4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb57c05-01bb-434d-96d6-d3ae4790d820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5ac0e2-da78-454f-a809-02da7e8af04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183c1694-efeb-450f-89ff-41185de95305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657e6ee1-18d9-436d-b4cb-301ee10110cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e3bc5b-b5e1-425b-9718-c5cb3d3ba6a1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0e8d3b-949b-45ab-bbfc-43f706f1adb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5fdb64-3684-4e0e-8c26-e42a464e1691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b1a371-15ba-4022-8e78-764687998d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb182bc-0b89-4be2-b327-2ce8cdaf9a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159d7cc0-5c93-4d22-bd97-e880a8463c6f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ff5511-c0c2-42c2-ab1f-dc2fbce592e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e89a6f-777e-4df9-ad0d-57d3a4e7519b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d7d571-6b0e-49b4-af53-042bb150ed18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20162322-2cc4-4bb6-8bd8-1741b80c23c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdccde9-9f35-4d5d-848d-6d07d7405f82",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d3dbe-536e-4115-9e95-a5a5635001b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc799da1-e728-49f6-8603-17746f038dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddc10a1-988b-4f79-9336-e7ab8460a40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4eed61-31ed-4eec-8a36-4dced2983e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d9db87-b5e1-4883-93de-22a256d34f47",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceec2819-38cb-41e9-90ac-e5cea5199a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a34e14-36cf-4fe2-81a9-1f429f3e6c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4efd38-8293-4eab-8d49-15a6235daa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac0fbfe-65b6-46dd-afe7-2a8ba96fbae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a950cbdf-a9c9-4516-9d05-66d7205bf7ce",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0922aaaa-1bf7-462f-b751-cbca9cf22f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774158c9-17bc-47b6-931b-7f56ccdd1518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ffcf78-cb62-46d5-b4c9-69d3ca7c2f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca32fe48-b445-473b-ab56-7299bced728c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60357534-a174-4788-b967-6f0b5de5a11f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b2fb1c-aed6-40e1-9990-e731ae323b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659c199b-4b4d-4d7f-b322-fc07519c50f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98019948-5cf1-49eb-a04b-ad234c43ca9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8ac4d3-e849-4d8e-a1cd-0ab6c0969d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefa98f1-0d0c-4d42-b040-70df2d7c6c61",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c404a75-21d1-4491-a28e-ce685a6424a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75368f1-7493-4757-9190-cb79b0005d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b4079b-4bdc-4007-b2cf-993fbfb1951b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fea0ee-5519-45fe-9cc4-5c88ab9879fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0625e3c8-6e75-4382-9431-06c4e2c0ff0e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392254ec-f1ed-472b-ab7e-1b63f1576956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded1d2da-7e25-4f7d-abe5-e7f15983a21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7097227a-1e37-4918-8937-545e4badc9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eead870f-22e6-45ed-b9f0-306f1e71a5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f5519-7fd9-4ae1-830b-c4a00a11e4ed",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716d3f2e-9d2f-4511-a0bb-dd65f432e64b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da85d57d-cb6c-4b9f-96bd-2b54fbbc0f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b160e069-3015-43df-b7bc-128dd2de2ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0e140e-bb75-43ea-b84d-0013fb3c590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dfc302-ef82-4a5a-8776-753d859b4cd5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2c205f-f5a1-40e5-963a-fc273801c96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7951ad-6d3f-4e61-8de7-785bd9d2aa3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6f22e4-dba4-4fb1-8768-d64450092ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f66bed6-fb75-47ae-a24e-030c11fceb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3acbd6e-f4cd-4a53-ad8b-e47c2222d15e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e77c8a-18f3-419d-9cd9-fa115f8b1eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae7c3a5-9dcf-412b-8864-9f0eb0844697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515b5bc0-8608-44cc-a94c-2d83d1899b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05430dac-3b41-485a-9174-7680f8614c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f450e5f3-b766-45f0-be34-86d19918b753",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aba733b-2666-47e1-91e6-c8cdeb8267b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d7e039-d21f-4f7a-b86a-d3b2c1d7cd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bab71c-085f-405c-a6d4-9bc1c27de020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634f1735-062b-4615-9b45-22e22cd8a6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d1be7d-09c7-4b4c-8076-4d5d22c7e7f1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abc7c81-da62-45e6-aa75-7c92c2e55af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ca0fbb-d558-4f89-8588-fe341374f66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c826960c-500c-46b4-bc4b-803fb74a64e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710f7bd8-6875-44e5-a4ee-65e2cc88d89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e23994-00e5-4720-85f7-627aeb6fa69e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15a6540-542a-436f-8c4e-7f0d7935f615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ecd211-c678-4b0f-96b6-7afd5038af50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcc79a1-c03d-443e-a48d-2da02c0c4454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca21c43d-64a1-40ac-b1e9-6efe3ccbe951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de80dae-45a2-46a9-88a6-90e186b2626d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74426ec3-6d33-4173-b323-75ae5ba49cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3122aa-6fb5-4599-912a-44a16da645a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c4e8c-dd4b-4d0e-b6de-49c0c4958113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4d3aa8-853a-42bd-ac77-ce0304f47a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a848cc-28bc-483d-9821-db051d1c83d5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5722f-e08f-4f52-89e8-a6f3c745a5b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1572d5f4-b4d2-4be7-8737-08415ef5b86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048a463f-36ec-42f7-b566-f94fa5355d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f82d08b-5730-4610-99ec-f5e4baf03586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bef2579-889e-414a-9c79-183c29c8869c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b9ffff-f57a-4c20-9aa5-418eca1b8ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bd12f5-016d-46d5-bc6f-6a2f0192bbee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09b4be6-1040-4518-941d-489fedb91806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c119b5e-f3a7-4c3e-a326-51ee0023b2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17240f6-26c4-4930-8fb0-d8202fa5a35d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97ceef-8cea-4a4b-9a81-2adfaba87ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107351da-4015-46fd-a2d0-1c3c07c34fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c0efe8-3dc8-4fc6-a91a-97fe9ad60c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d3f548-245a-4033-9fa3-be116f4610aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9000a7f0-3019-4464-8c36-3beb1e1eb824",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53a4fa4-cf3a-4e8e-a657-8c4c993985da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557d6632-45b6-4f5c-a7c5-9659a4672060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6815e2e9-d62c-4259-8fc4-062cdd60376e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56814a8-1c8e-4a72-a77e-ac35ecfcd333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f294c462-20e4-47cf-b474-f2049b3d0387",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adc8bde-6140-4efd-84cf-1f91926ad875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5044ee-32de-429d-81c5-351afa1f3c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5540b608-f29e-4a8b-b7f5-eb54c263154c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d68c5ef-eaaa-4ebe-855b-51f7bd0511e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099e81e7-fcaa-4b29-aa72-914057f0399e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a763d1-0487-4eb0-a4c8-08f8e297f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b1ffbf-675d-4876-838a-3d939953a81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4259475f-39b2-4e4f-b710-7641daf2672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4293734d-d305-4dd4-958c-e3764f4f0883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377d8109-0701-495a-9947-f346a313d8d6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fc90b5-9a67-41ad-9a4f-568727b1129e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3a521f-02b0-4060-a5a5-6d4fe529b560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03539312-87b5-4326-ae8d-79acc5772b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ca3ced-9098-4c84-b1f8-16817f851a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6823ed42-904e-47d5-a6e3-035f3bbc9dbf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ab6ff9-efda-4f83-8fc5-a59ca3b7555a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b444c6-37db-45ce-a804-fe168fb6a69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c84230c-e765-4064-80c6-949fe3bfa8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398151e7-a85c-496d-844f-a4bce4282bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefea315-bfbb-425b-a0cc-8b1553c90588",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a06ce2-1d20-4b5d-894c-981d83ce9831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f809310-163a-4551-8fdc-129f4c64fbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85efb86f-c5d0-4fc8-8228-814855699e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198f0a95-f2e2-40c7-ba32-b21af362f435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8c67e7-52ba-4de2-bc09-2630cb1d418e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71f4670-fc3b-47b4-9a24-1f634da19b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ae407c-6b4e-4a27-ac3d-ef1e5ed67df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8b74b-8533-416c-9b1b-4cd472735f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e155ca-f202-431b-b1b5-f4d55a177c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea71c62a-62c8-4d67-a6ee-d51f2f1f3692",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49de7a7-730a-4f5a-a1b3-037af7675b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "626671ec-ba2a-48f2-afc5-0f9a3f5984a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c9660-b6bb-4313-ae4e-b24981a4ce2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7521a7aa-7160-449c-8788-71fdfc73d1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f3058e-422d-451b-80a1-e27f5a64fe4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f45e60a-1403-46a6-bc36-fff710e1ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f33012c-6842-4168-85a4-17c64445389f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9408d6-4637-463c-8a69-48b2dae0dd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637a42be-720b-40e1-a80b-df5aab0ab2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f132301-675f-4a75-a37d-0cf14d8a1a20",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50e3008-f248-4428-a19c-6f22c4c18db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01651497-bd65-4862-9552-80351744410e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98a1d1b-3750-4245-9425-3224a8b564f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deab46ad-65ce-4615-96a7-68f13effd549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a489354f-59dc-43fc-9ffa-6f9bedd2fac7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea870a4a-c3b3-48da-bfa4-cc24c6a576a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667f26af-8f10-47ea-885a-0c1b1ef16e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31be73b5-f463-4d90-a3a2-621b1b98fe58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ce35c1-09a3-47be-bacc-990464e8dcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00edfef-6e75-405d-ab34-3ca94d5c83ed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da23c64-9132-4a2a-9545-f6bd66da75ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b14d9e1-b18a-4811-b16b-71daa88ce01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a0b7c1-ce3d-4b40-9840-6c47fa5312e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3d33ca-23d0-40e8-8189-bd67e2fb1848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aaf2519-9d4a-4b9d-91e6-5a9ac47f8db9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1381d5-1911-4e4f-86af-7bf7a94bd439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0794ab-471b-48e4-acf4-6c4f7cd10841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be07d865-5df9-465a-8488-3daa3a40bcf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eebeb7-0a9f-40a8-ac5a-b27500c0ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71467e-8cd3-405d-a88c-1c399342016d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e9b41e-ef18-4824-8859-4fbc608e41ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40b6c5e-0778-43b2-9b92-7dfabe8e6111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e6c7c1-1775-48e3-bf28-a5268c044ce1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f7a6bd-a3d6-4c65-ac8d-0824ba7c61d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b74660-3ca5-476b-a494-0d6257b34b26",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9264858-c843-4c78-8529-c3e806d9b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90cd3a1-4fcc-4f53-a406-8a7d5f2af830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17286d46-8876-4ea3-b93a-87533ed5718e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf2925a-1087-43f9-91f7-5e6bd833a212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4632945-9d7f-4787-bef8-78ba44cab5f6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b68220-c98a-4a1d-8c40-cd7c8a589a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc085504-c81b-489b-890b-f6cbae842af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909e8358-d357-4aea-b50c-55bfbb890c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e69f50-9c0a-4bc2-a20e-ced3c54c7ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b751dc-cb67-4a89-9a09-9da1e8f19744",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9187c5-b910-421b-b213-b1c20cb756c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48793f4-3828-4ad5-9c91-e29c5d8cdf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a75cf7e-e184-43a5-91b2-4d90a1768420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5966165e-c144-490b-bed5-45d8089bc411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74565ef0-d167-406d-bf3d-723a3a855226",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deeb3d9-078e-4edc-993a-e8213e705dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bb7999-322b-4037-82cf-6c3604785b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82de05e3-88f7-4dba-868a-6b6afdc18a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1058bcf1-2179-46d4-aef2-ee037201a01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d596503e-960e-40a7-a3aa-a3e4f4ca2964",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98e3746-6928-4ed0-a65c-bccee4e8c76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7881fd-48db-4ab9-9e54-dfc4341f3d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f286563d-2875-4a76-8bd5-8143ab42e478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75fa165-7eca-4854-a520-fc00bee23058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81ee84a-0e82-4ff0-b3f6-4a3bc3cc6c6d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e70c7a-27bf-4c4a-86a3-abebb1179ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d740d70-6fd8-417b-992c-3822056b8e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a69813-2f3d-49f3-b316-30c1f7ad332f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a4aa1b-946d-4014-a3da-2baa0a8a0b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5c4b6b-f4cc-451a-ba6e-efe01857ec31",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfab9db1-40c1-442c-a833-cab9b987a280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b49f15-504b-4c62-8230-e11e927f0de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e13e0b-f801-410d-9c6f-3ec56b59a254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfded186-e9f1-4972-95d3-3542a9831eb6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16352839-a2cb-4ca7-8d02-af850f040b6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc2c1292-18da-4408-9b43-082af3afa86f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f14feb5-d7fa-43a5-b69e-7441e642c59c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f1772fe-b4e4-41b2-a599-d0e7cf04a56a"
                    }
                  }
                ]
              },
              {
                "id": "6034727c-5889-4931-a6b7-14efab599b7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76eaf37d-bcd1-4a4a-a30e-bf96ebf73d43",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db06c0e-0d75-4a26-8ac2-95f343f412f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8a256d86-a41d-4559-9986-f082b0b15134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d034d0-8e7a-4af4-8062-7b47abdd14da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f8c6560-e2e7-449c-885a-541516b8dd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bdc1f6-d189-47d2-94d0-f48235eaa8b3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd66171-54b4-40a8-a973-e7ada36b4957",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8eacd36c-d2e5-4e85-9a58-070e80af6832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab9bf97-63a4-4d7a-8864-6055c4389bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f99e65a-673d-46ea-8a72-ba80df03331e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "043b8f43-1a52-4deb-b626-6e7fb93277f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86d422bd-d520-47d9-9b75-b0973bd2bd3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf9c499-aaea-42c3-ac3c-6b1fa8ebf316",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "433c5d64-5579-44eb-af52-2c01af03f164"
                    }
                  }
                ]
              },
              {
                "id": "e22933bd-934d-4713-9825-6cd281b8a62e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eb861f3a-dda9-4544-a479-4cea5b5e097a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1657a9af-ab43-46cf-9873-ab72163ab48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "24411445-9379-4488-9d1f-7602de98adc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3b62cf-4708-462c-aaed-b1b698eb4615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87ce1e3-1119-47ee-9d0e-92a74057f40c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "79767b65-0705-45ce-b854-32ab9475f2b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "899adb84-1460-4ecf-86da-840ed363b439",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19252574-d48d-4651-aa20-bf3eb5544f6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "500b0614-0cec-4fab-90a5-4930fc065767"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48bf6885-a9ef-45e7-8401-b0b06ea612ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab6dc562-933b-4d77-9a8a-17e5444b2427"
                    }
                  }
                ]
              },
              {
                "id": "b5fdd9af-ff92-46a7-8a38-870fa6897d65",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05faab4b-f822-4a76-b590-ef0349adc4ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11f66d72-1744-43e5-858f-85213b8e5841"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1618c4fb-e714-429a-8448-af778546af21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28949fc3-6075-41b2-b21f-93fb8b334189"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beff526e-8266-48c5-9439-59fa85254ea8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "57cc3bca-80b4-4c42-a818-15daad44465e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1446e55-1a5d-4950-9dc7-aa8042af613d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "426ba537-d82b-4ffa-bed5-45d7cad02a1a"
            }
          }
        ]
      },
      {
        "id": "4089a77c-8daf-49b1-afcb-d36fcb64b0a6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "67def78d-1163-4b0c-8237-dfdc02922650",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c3f7d90-492f-4e34-87f6-26c578b28c3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3edc9e-1ef4-4442-b516-76d44436cf2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "305cd077-eb2e-443a-9a9a-45b2c9e22c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8678d497-95f1-4dd1-bc36-beca3ae29bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66c86693-5610-493d-a317-8be2446085a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952ba110-0a21-4fca-8e98-7c1735b448d3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba4533a-db2f-4f13-b1b5-132a933189b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6028133b-cb9b-44c1-8635-791c540dac55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe02e41-a1bd-4617-8cb9-50b76411cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0f409f9-0009-4b2a-80ce-9f6b1863169b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1c74b6-4c80-4636-b19b-10ec4abf01ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ad9e57f-3159-4091-b5b4-ce483fbd7fd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b879c570-258d-4223-98b7-3a0547ace5e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebd99206-e481-479e-ba6b-cc611d2265b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "503c7051-2d06-409d-a286-c616d07f1562",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "61ba639d-3298-4319-aa8a-8409cbda9716"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a08cc916-749a-4b25-a7ef-2dfc949f421c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ed0a039-e562-4fee-a889-8bb046ab4d59"
            }
          }
        ]
      },
      {
        "id": "a007865b-7c58-479c-ae21-8f859d60d4bc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d1667d29-dac3-4a9c-a6af-4788f8df037e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab0e12a7-87f1-47a0-86eb-01de48f3ab60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e41deb9-fb75-4476-a8cd-ebc1480856d0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b692711-9983-4895-b2e0-c52868afa030",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1ec9158-a589-4473-8986-bb6a1e304c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9f500f-e723-4c4b-93a3-1bef4889fc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3e7573c-5b3d-44f0-9b2c-92fd3c18a1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7f31f3-0b59-4478-be17-8693456be8a1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c96964d-da08-4070-849f-10abd754b22b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1e8364-ca44-45bf-af65-9198231dc374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb36fd6d-9322-4ad4-9b9d-4b3f3b8d1dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40a141a4-48dd-4c62-bf69-9e618021e8d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67b72564-0454-4424-bf71-a95fdf023d5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfcab366-d5aa-42a2-96eb-3ee5dc2c30b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f264c08-e1df-45de-ad13-5d75e3795495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d9028ec-f7dc-4858-876a-53ca7f5ba3dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8cfdc02-085b-4c5d-b3ce-73d35b1927e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "627486db-958d-4437-8ae1-7e3bbf06ff9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cb61ad4-bf35-4c1c-bd8a-d61ef56cec55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a50a7bf4-0287-4e9a-9b86-5545ed04224e"
            }
          }
        ]
      },
      {
        "id": "9c59a5bd-c316-411b-94d6-a99f8fcb98f7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3361d3c5-d76e-4a71-aa35-27fe6ed21eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27c93888-4478-4924-a7e1-8cd4fe4239ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd9e98de-f80f-4a4b-aec5-83ceef684bdb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6238346-d376-41d2-991f-cc3c60e20500",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0932f1ff-2162-4850-89ba-d58aebaebe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc21bef5-b9b8-4689-895a-0c31eef86d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "734333af-e62e-49b9-b841-66bb7eec17f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73df215e-d253-427e-aa92-8e8816ec9834",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6befc7d7-6efa-49c4-a515-8a032a34de31",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6fdcec-1350-431e-a583-33e22105cc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f5c61-b710-47af-84c1-aebe0399160c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "841a3614-ba11-4947-b075-3287ccc8b7cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3abe9e-0fe0-463a-ab5f-c7e2c6744de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91e710d2-06f2-4380-936b-dd321a129181"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a7cbe3-e49d-48c2-8b7e-1022b6bda1c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f502d27b-c22f-43f9-bafa-0034b6ca8a96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d4d556d-6de7-4a23-9610-2108b28e82cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e9eb1a9-697e-4c63-b33d-ee249bb0df99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "344b1f08-b610-4fb2-aa7b-60ffaa580a8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e566272-38e1-4ce0-8077-31189429034c"
            }
          }
        ]
      },
      {
        "id": "0208c922-a6bd-49b5-9fa9-29543f700844",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abae4eb1-926a-4b7c-9d70-00e33c2e688b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eceaf14-845a-406a-8b69-a9aac966a5ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ce199165-78a8-4648-a702-c93a8f88ec72",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2303bd49-84ea-443c-bd35-6b062fbc70c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fbcecad-5f9c-4cd7-a708-245da0c62db5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.18846153846154,
      "responseMin": 3,
      "responseMax": 293,
      "responseSd": 37.50229559048637,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685320731977,
      "completed": 1685320745997
    },
    "executions": [
      {
        "id": "e4a8ec43-7cef-48c3-a748-506f5c98ba00",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0ecf98c9-f80e-4429-967a-72ac3b5120cf",
          "httpRequestId": "b71ab5db-a3fd-40c7-9b4f-66a6e1eb6054"
        },
        "item": {
          "id": "e4a8ec43-7cef-48c3-a748-506f5c98ba00",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fec5d087-43ab-499c-860b-4a118b1867c1",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "fa3aa34b-6bc6-46a6-b78f-0e48aa64194e",
        "cursor": {
          "ref": "65e4498c-b82b-4353-852b-c3615ba76d7b",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e7fc2ad5-350e-4e32-abc3-0b18bcbf0623"
        },
        "item": {
          "id": "fa3aa34b-6bc6-46a6-b78f-0e48aa64194e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "40f13529-4097-44d5-9a86-c61e27fda033",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "59059895-53a8-43e5-8940-f593b0d86a22",
        "cursor": {
          "ref": "b2fc2d1a-f13c-447a-87ed-8193eabee087",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1142e858-a28b-41fa-b6a4-0f9406977076"
        },
        "item": {
          "id": "59059895-53a8-43e5-8940-f593b0d86a22",
          "name": "did_json"
        },
        "response": {
          "id": "2eee1a0a-3cc2-48e6-b9c8-e2ea978778bc",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa8a00b-7c8f-4c25-a73f-8986c1ed94e8",
        "cursor": {
          "ref": "53076b2f-8de5-419a-9634-a68c56130ca7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9e88bd8-4850-4527-866a-98ddfbc2785e"
        },
        "item": {
          "id": "3aa8a00b-7c8f-4c25-a73f-8986c1ed94e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "9e0fffd3-bb13-4a53-928b-6f5791f2152f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa8a00b-7c8f-4c25-a73f-8986c1ed94e8",
        "cursor": {
          "ref": "53076b2f-8de5-419a-9634-a68c56130ca7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9e88bd8-4850-4527-866a-98ddfbc2785e"
        },
        "item": {
          "id": "3aa8a00b-7c8f-4c25-a73f-8986c1ed94e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "9e0fffd3-bb13-4a53-928b-6f5791f2152f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d84d414-a94a-4141-b794-10137396bfe9",
        "cursor": {
          "ref": "fa1b8501-f433-4cfa-bba3-715f8ad1dd2a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1f9e6f38-5455-4f27-95e8-86666c8514fc"
        },
        "item": {
          "id": "3d84d414-a94a-4141-b794-10137396bfe9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bbe33e02-6a5b-4605-acba-1559f9d3036c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6433ea81-c533-43b4-a190-72f21f0bc95f",
        "cursor": {
          "ref": "bb658632-7452-427f-b2ed-507a7c69f30f",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6e844bb-a436-43b3-8d50-d8affc1400d1"
        },
        "item": {
          "id": "6433ea81-c533-43b4-a190-72f21f0bc95f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9a692eb1-6b8a-4daa-bd0a-fef9584c3c99",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0207c3-d43a-4b4d-a43a-f44272911914",
        "cursor": {
          "ref": "7d0ddd55-3da0-4d73-a830-32193429364c",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c5a0cbb4-6fa8-4095-af9a-97607496b6bc"
        },
        "item": {
          "id": "1e0207c3-d43a-4b4d-a43a-f44272911914",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5731fa8e-3fb0-41b5-976d-eacc31e1e05f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f0e59c-af25-4d19-8b05-e522ed96131d",
        "cursor": {
          "ref": "3370e5d0-7f3e-4d76-8db5-f370fa5e9273",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "441d5b96-0545-4dcd-b180-ae187ad27630"
        },
        "item": {
          "id": "f3f0e59c-af25-4d19-8b05-e522ed96131d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "58031c2a-f3c2-4850-a2a7-f6c861f9f655",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f0e59c-af25-4d19-8b05-e522ed96131d",
        "cursor": {
          "ref": "3370e5d0-7f3e-4d76-8db5-f370fa5e9273",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "441d5b96-0545-4dcd-b180-ae187ad27630"
        },
        "item": {
          "id": "f3f0e59c-af25-4d19-8b05-e522ed96131d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "58031c2a-f3c2-4850-a2a7-f6c861f9f655",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698809f6-c934-43ab-87c2-9fa0ffb679b5",
        "cursor": {
          "ref": "e8766467-b594-4cee-b851-877c0003ecfa",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "385694b2-a16e-41af-a25f-a6a64e8115cf"
        },
        "item": {
          "id": "698809f6-c934-43ab-87c2-9fa0ffb679b5",
          "name": "identifiers"
        },
        "response": {
          "id": "55febc97-9f20-4e8a-99f5-ff6eb4e4cb2f",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec6d3a4-35ac-4acd-a5b1-7b7530104321",
        "cursor": {
          "ref": "f597f8f4-9e7b-4a15-a5d8-7c23d3209e30",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a378842-95db-4dbf-8bc5-1d6b49382830"
        },
        "item": {
          "id": "8ec6d3a4-35ac-4acd-a5b1-7b7530104321",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2622c220-eaee-42ac-b3bd-050e736093dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec6d3a4-35ac-4acd-a5b1-7b7530104321",
        "cursor": {
          "ref": "f597f8f4-9e7b-4a15-a5d8-7c23d3209e30",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a378842-95db-4dbf-8bc5-1d6b49382830"
        },
        "item": {
          "id": "8ec6d3a4-35ac-4acd-a5b1-7b7530104321",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2622c220-eaee-42ac-b3bd-050e736093dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a51c59-2885-4d86-aaff-a15d309de4ab",
        "cursor": {
          "ref": "7ecf477f-28c8-4e5e-a3b8-a11b3dba9b07",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3215176a-fb5e-45e1-8f3b-575283003cfe"
        },
        "item": {
          "id": "b8a51c59-2885-4d86-aaff-a15d309de4ab",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d7313cc7-30dc-46bd-af00-bad6938f7467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82e026c-2619-47c5-af1d-22cd235b4c58",
        "cursor": {
          "ref": "163085d6-77e1-4426-a107-0c9745b92c2d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a8ebf664-c9b2-413b-b476-4171bdd65892"
        },
        "item": {
          "id": "e82e026c-2619-47c5-af1d-22cd235b4c58",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "54bf6d8a-b1e0-4cde-b0f1-270cfa053729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45afd20d-46ef-4b10-9dd3-d81f5f0ddfca",
        "cursor": {
          "ref": "72f4fa36-d54d-4c5b-81c4-f53c5afef2ec",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "59f7774c-4ac2-4809-be1a-5b1e10eb3798"
        },
        "item": {
          "id": "45afd20d-46ef-4b10-9dd3-d81f5f0ddfca",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "38e112fa-7f08-4159-a54f-1143fb3b2253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4525c48b-26ae-4219-8de9-c478c95e1475",
        "cursor": {
          "ref": "eccaddd4-daf9-496f-a380-8bfc119160ac",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "34d13d91-3a64-436f-8f30-ee89a4bcf1e4"
        },
        "item": {
          "id": "4525c48b-26ae-4219-8de9-c478c95e1475",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "97515817-e4b3-4b4f-95c4-8fc9198abb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f1d295-aa50-42c6-a03f-c4e44f230bb2",
        "cursor": {
          "ref": "13b8c022-d44f-4d44-aab0-c1cdd75abb8d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1181f56c-05d9-42d6-8507-6117ce75a537"
        },
        "item": {
          "id": "72f1d295-aa50-42c6-a03f-c4e44f230bb2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7029c08b-5324-4040-917b-13562e6c8832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67479c75-b0a8-4971-8168-2314553a24ba",
        "cursor": {
          "ref": "8740d548-259e-4f0f-801b-84c949f25365",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a11e7568-bf10-47e0-8d2e-2af8328fac64"
        },
        "item": {
          "id": "67479c75-b0a8-4971-8168-2314553a24ba",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19155b91-5c98-4273-8eee-7e4be01f6237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d895d8-c3d8-42bd-87d4-2d3c8679f476",
        "cursor": {
          "ref": "c3f1dd03-98db-4c49-a8ad-9231ceaf0d26",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ddff5d3b-45ef-4e2e-a949-983197b3d66b"
        },
        "item": {
          "id": "23d895d8-c3d8-42bd-87d4-2d3c8679f476",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "08e46cb8-51ef-4aec-837a-e9a5ad8b2809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd76da7-b4d0-4320-b163-ae2ca21c3198",
        "cursor": {
          "ref": "7072e86c-6221-47c3-bbb8-33b63499d0e0",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2d394826-a594-4bee-bb4b-ec1fcd7b23f1"
        },
        "item": {
          "id": "3dd76da7-b4d0-4320-b163-ae2ca21c3198",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5f0e644b-9bcb-4872-83e9-e292e78b0876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd31c8d-a030-442b-adee-24b65db521ec",
        "cursor": {
          "ref": "098b0942-4f6c-4f2b-965c-6044d49594e6",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "919e3761-6f89-4be8-8378-8ce27fcfda81"
        },
        "item": {
          "id": "8dd31c8d-a030-442b-adee-24b65db521ec",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41fb702e-2125-474f-91d1-6b6dc07ad28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab253c0c-9b17-41d4-b647-cd644cc8aaaf",
        "cursor": {
          "ref": "a89a7d87-35a2-4c55-8b6a-6262dde48715",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8d5fb269-d006-4fdd-8005-e67c232c1399"
        },
        "item": {
          "id": "ab253c0c-9b17-41d4-b647-cd644cc8aaaf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cf79768b-ed11-407b-8b6e-65691b350bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82101f8-5d44-4f04-8be9-c9211ea417f8",
        "cursor": {
          "ref": "96f9e908-7d64-4f49-885a-dcc14ceea068",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ba273021-ae4a-46af-b216-8437ac88a44f"
        },
        "item": {
          "id": "d82101f8-5d44-4f04-8be9-c9211ea417f8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "27396f9f-4760-4ed5-ac85-7f23d16cf144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99515ed-46e7-41dc-accf-14e2ed641d0a",
        "cursor": {
          "ref": "ac5f7e54-bf6d-4b61-9e20-2d91eb41fe1d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "853b367e-e58a-48ea-b76c-574d0dbac84f"
        },
        "item": {
          "id": "a99515ed-46e7-41dc-accf-14e2ed641d0a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dbd7e58d-f7c1-4c21-95a1-8e5c34db0d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d0502-89b6-4b9e-8015-4487fbac927a",
        "cursor": {
          "ref": "14424bb9-c86b-49e7-84a7-a6b3639cd472",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5efc2d24-9835-4e2b-bcb5-d3d7f2477885"
        },
        "item": {
          "id": "010d0502-89b6-4b9e-8015-4487fbac927a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f6168eec-63c3-43c6-967a-224ca77f27ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd8decc-f712-4873-92c0-25fd42caafcb",
        "cursor": {
          "ref": "7c56f046-2aa9-43fa-8d3f-fad569a33bd3",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "05acb884-acad-4ea2-8f9a-3e1a328afa06"
        },
        "item": {
          "id": "fdd8decc-f712-4873-92c0-25fd42caafcb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "26294362-8827-4f7c-998e-c01a44bb9643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab65e3e-ddf4-4878-beae-795c1bb35681",
        "cursor": {
          "ref": "1d687829-a230-4ad2-96e6-88114a3ef368",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "37a4716b-8eda-4d0a-a1dc-92f712e8147d"
        },
        "item": {
          "id": "4ab65e3e-ddf4-4878-beae-795c1bb35681",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "614dc3f0-5aa7-4382-8a2c-4c0d6558a550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9d1249-d0c8-4064-95b1-5933625d797e",
        "cursor": {
          "ref": "74819e41-5cb3-40b6-90fc-08a6773de0fa",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4dd6ac84-c786-4a6b-bb5b-644455aee07e"
        },
        "item": {
          "id": "6e9d1249-d0c8-4064-95b1-5933625d797e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b8bf602-b92d-4439-847b-5454011279c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69af2087-b402-44e9-8453-6af5d6b4aefb",
        "cursor": {
          "ref": "ba68c8bc-f524-4ea0-9b7d-052c00fef85c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "784a5fd3-9e2f-48f8-9d9f-f2cb493ce15f"
        },
        "item": {
          "id": "69af2087-b402-44e9-8453-6af5d6b4aefb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "535852b4-9c2d-4da6-abae-84a694667cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9692d-792e-4891-ba6c-80fc889890d4",
        "cursor": {
          "ref": "6ae2779f-7961-450d-baa9-0ed6e8ba7487",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "738b382f-44ef-488a-b678-410cb06de653"
        },
        "item": {
          "id": "0ee9692d-792e-4891-ba6c-80fc889890d4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "632f2e53-01ae-492d-a856-f325d9175155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907caabc-2626-4722-96e4-69dac64e0ee2",
        "cursor": {
          "ref": "321777c3-8987-4346-96ea-4a046a2489e8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ebb2cdc8-2bc2-4918-8078-36f410336a58"
        },
        "item": {
          "id": "907caabc-2626-4722-96e4-69dac64e0ee2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4a7070a2-d8bb-46b1-b7fd-97d426e4de71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a777aa1-36cf-4079-b0dc-d20185a38718",
        "cursor": {
          "ref": "23db8281-a46a-4944-86b7-b46afda7d9f0",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "253b7eea-5378-46a0-9044-f92a3534ae00"
        },
        "item": {
          "id": "5a777aa1-36cf-4079-b0dc-d20185a38718",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ae2c1f1e-5c29-4b5b-a6dd-b5b998a5ccb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4a81a-6e53-4d50-bf9d-c99fe583d500",
        "cursor": {
          "ref": "65cc94d8-39a7-4490-9f0f-1071f764ea47",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "40ac52f3-52d0-4d34-866d-c3f4d67b774d"
        },
        "item": {
          "id": "d1d4a81a-6e53-4d50-bf9d-c99fe583d500",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "89eb9b09-9594-490a-97ad-9455f8a836ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3880f235-8704-4224-a66e-302c957b9922",
        "cursor": {
          "ref": "fc726305-7e00-4dda-a4dc-d0fd199931f6",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b743648e-1a12-4db0-88a6-1bee7a751b67"
        },
        "item": {
          "id": "3880f235-8704-4224-a66e-302c957b9922",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "439bbcfe-2952-4312-9b61-a33270ef0a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d195d16-c08a-4a8e-8dbe-5511143a242c",
        "cursor": {
          "ref": "93dd5763-b735-4b31-8278-3444547987d2",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d3636450-5a37-4604-8e20-05055319d4ec"
        },
        "item": {
          "id": "2d195d16-c08a-4a8e-8dbe-5511143a242c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "040bfd10-fe82-44ca-8dfa-4b8770098a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8419138d-ad5d-4d56-86ef-e8ca2baaff9c",
        "cursor": {
          "ref": "91e7338c-acca-430d-a503-9796b4c5c31f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8f51178e-47ed-4204-b1e8-b04066a039bb"
        },
        "item": {
          "id": "8419138d-ad5d-4d56-86ef-e8ca2baaff9c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ac3a8f51-92f4-46e5-93ed-490eeda062b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc9c35c-b23c-4518-9d38-5cc5d7ef8d55",
        "cursor": {
          "ref": "c9c57f12-6378-4860-b631-b6137d32312e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cf98460d-bf3a-49dc-986d-cb7d005819ad"
        },
        "item": {
          "id": "edc9c35c-b23c-4518-9d38-5cc5d7ef8d55",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ea612cb6-b378-4ab6-900a-5e469ceeb386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be02e99-6800-408a-a9d2-3d9c487782b1",
        "cursor": {
          "ref": "d46cc1d4-62ab-4129-a29c-179c9cb65a45",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d0042ab3-50fc-4886-8546-787b616b78da"
        },
        "item": {
          "id": "1be02e99-6800-408a-a9d2-3d9c487782b1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "548517c9-70d4-4efd-86c5-ea562ed429f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4da5b2-10d0-47c6-8917-3da82ebfe48c",
        "cursor": {
          "ref": "ea4e5ed0-a182-4434-b4e7-a7fd5d1d3254",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b7310ce7-bbd1-4ae8-a3ce-6ae28f441b5a"
        },
        "item": {
          "id": "7c4da5b2-10d0-47c6-8917-3da82ebfe48c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "af013d44-d8cd-4738-93a7-d79d445bffba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a5efa-8a32-48e8-8a6c-ea063cf9bae8",
        "cursor": {
          "ref": "6a220b04-0aa9-4364-ba81-e19dd6b289f7",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7f4020e1-f698-4e8e-8681-5185e0222fe5"
        },
        "item": {
          "id": "a57a5efa-8a32-48e8-8a6c-ea063cf9bae8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8a939388-b4c6-4d36-a6a5-e3f12aef9012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cf8fa1-243c-47f6-b540-c147a0d39113",
        "cursor": {
          "ref": "e48fdfb4-0aa9-4262-84b9-7e367408a0ca",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7a2de30c-74a7-4f87-aa8a-40502a3a6a8a"
        },
        "item": {
          "id": "79cf8fa1-243c-47f6-b540-c147a0d39113",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dde09e71-db3b-40bf-92a3-1b0b8ffc276b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34da87d6-811f-405a-bf53-d44d741b8544",
        "cursor": {
          "ref": "c823a77c-c8fa-4781-9272-7869eafda199",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4caef4c7-175d-452d-a55c-7079bd59494c"
        },
        "item": {
          "id": "34da87d6-811f-405a-bf53-d44d741b8544",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4fbe5476-94e4-4304-92fb-ff03d5b01a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a63566-35f6-4ac3-8f5a-0f3e2fb86ed3",
        "cursor": {
          "ref": "d61dcfd2-6735-4dac-93c9-d5b013ba7ff2",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "03076e2c-3ff2-493b-85eb-c0d0272a2dcf"
        },
        "item": {
          "id": "d2a63566-35f6-4ac3-8f5a-0f3e2fb86ed3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "92d78d54-0387-4923-b3b9-60a916958466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426b4d97-091e-46cd-a612-634e460cec17",
        "cursor": {
          "ref": "1690c45a-def5-4eaf-8e7a-d2445200734d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "76142b4e-6017-465e-b313-60d71a1e3330"
        },
        "item": {
          "id": "426b4d97-091e-46cd-a612-634e460cec17",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "af56d1b1-46bb-4e0d-aec9-3d4bd40c87a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192ad67-946e-4988-8327-ba92cc22aa67",
        "cursor": {
          "ref": "ac5dc26d-f79e-49d3-92d5-ed0189113fb0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "704a6fb4-5d34-41fa-8c93-3481d51009c9"
        },
        "item": {
          "id": "a192ad67-946e-4988-8327-ba92cc22aa67",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a17c38f1-9347-405f-89b4-8723179cb163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083a6962-00da-4996-89e2-9a19fe5a4e95",
        "cursor": {
          "ref": "008a8eec-8e38-48c1-ad8b-33a46a64ac1d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "547e8af5-0874-47d5-a889-fd166788da2c"
        },
        "item": {
          "id": "083a6962-00da-4996-89e2-9a19fe5a4e95",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fafb4399-8936-42fc-ac42-7bc84ba639c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f9a23d-af63-4b15-aaf8-815ecbb70548",
        "cursor": {
          "ref": "63f57b2a-35f1-4ddf-92eb-30124231a879",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b56160d9-28ee-429e-99b6-1cc0c8d022e9"
        },
        "item": {
          "id": "61f9a23d-af63-4b15-aaf8-815ecbb70548",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6799bea-66cd-4911-aac3-5467efbdfd44",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810f04e0-0db9-4c00-8d40-a14a096b76ca",
        "cursor": {
          "ref": "3ce6f251-9ff6-4047-a4b9-a3175803fcb3",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1d03da83-de5e-4321-99c0-344f0c9ae2cb"
        },
        "item": {
          "id": "810f04e0-0db9-4c00-8d40-a14a096b76ca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "010a5e4e-1ab2-4b9e-a128-75acf6bc685b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575f9a78-76f4-472d-b7a4-1679094af625",
        "cursor": {
          "ref": "57d2aec9-ce86-4bbd-ae38-3ca29fa5425d",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fef27bf8-79b3-4d79-9737-95f79591eec5"
        },
        "item": {
          "id": "575f9a78-76f4-472d-b7a4-1679094af625",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "68ba0bb2-49a3-4ed5-b04a-cf44a6bcf149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc6f86-0fa3-4d56-966b-65b3f16e4d94",
        "cursor": {
          "ref": "e53690a6-e7da-422d-a89c-4e2f2100a6d8",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9661a83d-161b-460c-952c-204061aacd9c"
        },
        "item": {
          "id": "5bcc6f86-0fa3-4d56-966b-65b3f16e4d94",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6782bc10-57fa-4b3b-88a0-d56fda348b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9b9078-e268-43ea-aefc-d549943ad4cd",
        "cursor": {
          "ref": "1f510355-49b9-4f12-865b-040e83f717b0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "71dbf509-df97-4c97-9f67-36058cf44b83"
        },
        "item": {
          "id": "4b9b9078-e268-43ea-aefc-d549943ad4cd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dd5c2138-2c95-4e94-ab4b-28b5994de673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33766944-10dc-4058-8de3-d91f31eccb34",
        "cursor": {
          "ref": "f76e60e6-8180-4980-b0b7-d50bd00a505b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9db205ed-9576-4b3a-8951-b9a6bca4bab5"
        },
        "item": {
          "id": "33766944-10dc-4058-8de3-d91f31eccb34",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8411b501-573b-4f12-b891-cf24207cdeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdbd75f-6a53-4a85-8871-d2f701b32a84",
        "cursor": {
          "ref": "98d866bb-3256-48cd-8600-eed07df56dbe",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5dd6a917-a3d3-41d8-82a4-8f0214dff02b"
        },
        "item": {
          "id": "2cdbd75f-6a53-4a85-8871-d2f701b32a84",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "13d6c79b-84d9-468a-b3ea-aa903edf99e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da156b55-69f2-47c9-9c21-b380157a7a24",
        "cursor": {
          "ref": "68599711-7716-484d-8f25-925be111b26c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "27a4c3c5-cd4c-41c3-9f9e-4bd6d02f2804"
        },
        "item": {
          "id": "da156b55-69f2-47c9-9c21-b380157a7a24",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "28c9b991-a500-43fe-b108-a9c34199c277",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ba19e-a5cc-45c6-a14d-00542c22aaf4",
        "cursor": {
          "ref": "30c0b6ff-7951-490e-ba9b-52e5b56dba0a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e412ecd0-4d7b-4e6b-9250-765fecf8528d"
        },
        "item": {
          "id": "b57ba19e-a5cc-45c6-a14d-00542c22aaf4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b07d9f5d-e5b2-4e77-be04-8398d8badf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96feedf2-3019-4b5c-9ba9-85cef55d62e1",
        "cursor": {
          "ref": "d1910d11-57b6-4037-960b-40ea05e903a3",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9e711c53-cebb-4ae0-9c2d-7932449d5d9f"
        },
        "item": {
          "id": "96feedf2-3019-4b5c-9ba9-85cef55d62e1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "89f83da1-382e-4b67-8bf9-719b0ff2d1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc504e2a-6687-4b91-8e86-807c311fdd72",
        "cursor": {
          "ref": "25be2601-a734-4b5d-919b-43a80a984011",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "33a45b5e-7d4f-4cbd-a4cd-faf8d680d839"
        },
        "item": {
          "id": "fc504e2a-6687-4b91-8e86-807c311fdd72",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dc0f7023-5b6b-4b11-9bac-66a071f1101e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d982f1fb-c247-4932-9397-28d97d8f3eb1",
        "cursor": {
          "ref": "aa928417-76bc-4b22-b320-d60375b5ce59",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8d3c2160-eb59-4b61-9352-0c0abeadb0b1"
        },
        "item": {
          "id": "d982f1fb-c247-4932-9397-28d97d8f3eb1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a228079b-73e7-4c6b-813a-37c94a39d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74632d85-530b-4e29-85ae-f9aaf8ea117e",
        "cursor": {
          "ref": "cd7456ee-f46b-4f4a-bdac-45e4ffa335ef",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5379efd6-5e69-430b-b5cf-6c187422ef57"
        },
        "item": {
          "id": "74632d85-530b-4e29-85ae-f9aaf8ea117e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "018dcf53-84f6-4e65-ba23-61b541178910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eb6451-5b8d-4495-99a1-150812b6fcff",
        "cursor": {
          "ref": "e2f8452d-d792-4537-ab7c-ea67c0481c81",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3aee5ecc-c336-411b-b8ba-37cb12e7f4c3"
        },
        "item": {
          "id": "a4eb6451-5b8d-4495-99a1-150812b6fcff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4eff5271-eaa0-4c50-a276-bb35cfe274e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd54b77-5329-4e45-acf8-a7d0c2476d86",
        "cursor": {
          "ref": "0b408b8e-eae9-45e5-a852-fc98eddeb6b9",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c3569029-548a-472f-9961-76fd2c41ca5c"
        },
        "item": {
          "id": "7bd54b77-5329-4e45-acf8-a7d0c2476d86",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a8c4f002-0d80-4ff2-b065-f953a3fad81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d0358e-2292-44da-98fd-8d49d51071e4",
        "cursor": {
          "ref": "045ad27c-4116-4997-b514-12c76db625a0",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f26b8d3d-b75f-48f8-ae47-3bd4ad092a27"
        },
        "item": {
          "id": "e4d0358e-2292-44da-98fd-8d49d51071e4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8f507829-d863-40f9-a343-bb1f44196999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc8305f-4ed3-46b4-b6b6-3696f75e750b",
        "cursor": {
          "ref": "b58ff441-39ac-46e4-8dc8-38afc9b5eaea",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40ab41a0-050d-4b29-8a36-abe777d4d87e"
        },
        "item": {
          "id": "4bc8305f-4ed3-46b4-b6b6-3696f75e750b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e6681868-c24d-4b47-a9b0-7f64df9357ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a268bf-58cc-48ea-8068-5149b4f0f818",
        "cursor": {
          "ref": "3fe0388a-6043-408f-b9a8-7ea5e9b199d0",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cae4455a-b359-4d1a-81cb-4f75baa6ad00"
        },
        "item": {
          "id": "05a268bf-58cc-48ea-8068-5149b4f0f818",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ae236f94-577b-4234-ad54-3a3a2a8e865d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9492e4-3bfc-4788-aac5-c0a16eab1665",
        "cursor": {
          "ref": "bc42dbe3-9b17-4756-b8b0-5920337c1330",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "40dd03dc-d770-43b1-bb10-c65fc9e6924c"
        },
        "item": {
          "id": "3a9492e4-3bfc-4788-aac5-c0a16eab1665",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb107885-062e-4d45-81fa-3971495db687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca50f1e-a641-471b-b0c8-aa38da6ad4ca",
        "cursor": {
          "ref": "c945ddaf-a8c0-4aad-a88b-f8006e9c2335",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "700e66eb-7d75-4dfc-b55e-08d46ba55e1e"
        },
        "item": {
          "id": "6ca50f1e-a641-471b-b0c8-aa38da6ad4ca",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2af994c9-16c2-4ea8-b830-c7de2e7a65ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7846e4fe-f05f-4a4e-bee7-022a03b2382f",
        "cursor": {
          "ref": "c2eb8df7-2e50-43b1-a9cd-b51412666584",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f3a868dd-7922-4ef2-b72d-2a61edc36daf"
        },
        "item": {
          "id": "7846e4fe-f05f-4a4e-bee7-022a03b2382f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "314b7f4b-a38a-4548-b210-7b8af693f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60952945-d725-4380-8f96-955d8200ffa7",
        "cursor": {
          "ref": "db7e030e-8257-4c25-82ac-c449581bd64b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fefd4e34-196e-4a2a-8808-77b6aedfbb4b"
        },
        "item": {
          "id": "60952945-d725-4380-8f96-955d8200ffa7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2c265eda-fe50-4c14-950d-1b84060f49fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f532b97c-26e8-4110-aa16-49c515376b23",
        "cursor": {
          "ref": "07faefd0-719a-4813-85f7-573f05591327",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1a5df11e-7d93-4648-88c1-c1c565ced8cd"
        },
        "item": {
          "id": "f532b97c-26e8-4110-aa16-49c515376b23",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e3ead75-4a38-4532-b1e7-4f02ece2ad75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f6b7d8-feb5-4454-8647-a5061658c673",
        "cursor": {
          "ref": "ef140b82-3bee-4f4d-88f1-3b96f99b93a6",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd314f5f-d753-4f4b-bcbe-a0413905a85e"
        },
        "item": {
          "id": "88f6b7d8-feb5-4454-8647-a5061658c673",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "642b2e7f-da8e-4d4c-a178-3a544b36a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a151013b-8d5d-4063-9315-502d4606e290",
        "cursor": {
          "ref": "b9979e27-3d33-4e60-9e49-e1cf4318f794",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27020966-a84d-40e0-96a0-68eed5813356"
        },
        "item": {
          "id": "a151013b-8d5d-4063-9315-502d4606e290",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a62d3458-5984-44cd-86cf-f840024a94a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f390fc2d-8a36-4c30-8223-fb3ed11bc357",
        "cursor": {
          "ref": "d18e7903-6520-4c18-bc31-8444c6bf950d",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "af7f155a-1c67-4153-b733-7585c662d0cb"
        },
        "item": {
          "id": "f390fc2d-8a36-4c30-8223-fb3ed11bc357",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1dd0915d-f282-4639-8645-9c599ce30626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cbf818-226d-4ba7-8eb6-61dbba28056c",
        "cursor": {
          "ref": "9f13fc22-5081-4a54-b36b-e9734ad2d4a9",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d4103290-9547-47bd-a329-b33e31b5bf07"
        },
        "item": {
          "id": "88cbf818-226d-4ba7-8eb6-61dbba28056c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "488a32f0-9120-40a4-910d-b410a7ed0642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5a97e5-4480-455b-aacb-eb00fd26c5d0",
        "cursor": {
          "ref": "bc32b807-d746-4de0-af05-749ef2af18c7",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f3edb8ad-1d1a-4a62-a9a5-ffe72d10c6b4"
        },
        "item": {
          "id": "7a5a97e5-4480-455b-aacb-eb00fd26c5d0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "977c6931-67ad-417c-b71f-4c65fb8f0d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d22567-eeec-4bdb-a10e-cd404cfd34e3",
        "cursor": {
          "ref": "f12c39bd-ea24-4fbf-8d08-90b4ed5445c3",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bb8937af-79fa-4c37-8ebb-39f15a43c876"
        },
        "item": {
          "id": "70d22567-eeec-4bdb-a10e-cd404cfd34e3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "313cb2bc-cf73-4b0c-bca9-8c79363e141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb24f10-6f75-4136-beab-2afc160bd773",
        "cursor": {
          "ref": "ea9e9197-fe16-4775-9c02-77fd7084d4aa",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a5675bae-2545-4fe1-a4d0-40350a1d5872"
        },
        "item": {
          "id": "2fb24f10-6f75-4136-beab-2afc160bd773",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7814eebb-a640-45a3-acf2-33c769076462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88206fe8-c113-48f4-b2cd-f3c6178c51bb",
        "cursor": {
          "ref": "6b038338-b44b-48b9-8f15-e3a12237d24e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "76c3a4ed-8cd0-487f-8177-d52c96b323cd"
        },
        "item": {
          "id": "88206fe8-c113-48f4-b2cd-f3c6178c51bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "218dcbc8-b5e5-464f-b425-e66876ac4574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f40361-b987-45c6-96cd-3bf466bba698",
        "cursor": {
          "ref": "11f3f9db-603e-437f-8249-baa217fed233",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0feaa2cc-c891-4b1c-acc4-5dbfcd23da58"
        },
        "item": {
          "id": "a2f40361-b987-45c6-96cd-3bf466bba698",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a31f18bb-afd7-45f8-b5d6-b3bbd30abf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcd3a4c-5f37-4914-a1ac-c837b6c638cf",
        "cursor": {
          "ref": "8f026e44-1ad3-4747-a5bd-bf2e71fcb3c6",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "106289ed-64b6-48e6-94b2-a104a00fba9e"
        },
        "item": {
          "id": "bdcd3a4c-5f37-4914-a1ac-c837b6c638cf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1e747e9-64fb-409a-a71c-16b7bfc030a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bd3d44-d055-4cb9-bc56-4cffdaa85da0",
        "cursor": {
          "ref": "77c3a49c-c382-47a3-9d47-d27db3a7be1a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "821a8ab8-8ddd-487c-b7ea-dae4938d8b65"
        },
        "item": {
          "id": "21bd3d44-d055-4cb9-bc56-4cffdaa85da0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4ea7490e-f016-4658-84a9-0676b6a27b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed90f7e1-4dce-4a8e-ba8b-8157b04e4497",
        "cursor": {
          "ref": "2326806b-a36a-4a5b-ad0e-15c67e62859d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bd39a2aa-d51c-4466-aede-5e6ab49d6f76"
        },
        "item": {
          "id": "ed90f7e1-4dce-4a8e-ba8b-8157b04e4497",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "76c7dc79-319d-48b5-b52d-599713151f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1d5b8b-87df-4a40-bb27-5b7ed60b64fd",
        "cursor": {
          "ref": "cffaf23d-d7d4-4f79-9435-40d568309562",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "078d4f01-79fd-4fc7-8235-ae2a77e1aa69"
        },
        "item": {
          "id": "9a1d5b8b-87df-4a40-bb27-5b7ed60b64fd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c46d8a29-cc36-48b6-9342-5d782c9cac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7762f9a-5885-4d49-b313-9ca10686e792",
        "cursor": {
          "ref": "d23ae074-f383-4a9a-85c7-998017df9711",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "03a23df0-c8ce-4988-b66c-acd7631c48bc"
        },
        "item": {
          "id": "c7762f9a-5885-4d49-b313-9ca10686e792",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6158336b-21ca-4452-9cd5-66210f0d1bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8e8f55-9bcf-42da-b6fe-1693aef3b656",
        "cursor": {
          "ref": "3d006957-1c08-4f32-bce9-a5e4292e7495",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f52cd735-831e-4b88-a2c0-3ca495c4d631"
        },
        "item": {
          "id": "0b8e8f55-9bcf-42da-b6fe-1693aef3b656",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7548c91e-0a6e-4e4b-ba75-2a92f985d691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92f01fe-59ff-4c86-9904-344f3ccfece1",
        "cursor": {
          "ref": "422c4e43-4d3a-4af3-94ca-7c6ff2325fd9",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3b35d1f1-9329-45a3-a20d-e8de0ec4f926"
        },
        "item": {
          "id": "e92f01fe-59ff-4c86-9904-344f3ccfece1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f17cf0bd-fd16-4fcb-85e9-806f6f0fcb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ee60d-5ec5-41ff-aac3-fefcfa3b0e6f",
        "cursor": {
          "ref": "356875ee-c8b5-4e38-aff9-baf78cf7cac1",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "238912e7-4b08-4eed-8cc0-bcab59cb6091"
        },
        "item": {
          "id": "1b7ee60d-5ec5-41ff-aac3-fefcfa3b0e6f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ad54c305-5a10-4110-96ca-2ace7d175c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4dfaf0-6630-42eb-9047-9a24fe4724d8",
        "cursor": {
          "ref": "67149cfe-c11d-42d0-a34b-8e30aa0a43b1",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "22dc7b70-b9bc-48a9-9903-8c365b22230b"
        },
        "item": {
          "id": "6a4dfaf0-6630-42eb-9047-9a24fe4724d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e85d84ce-3439-4a6e-9b12-e0fea6e42585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8890c48-e766-4763-8393-a3ffd594b5df",
        "cursor": {
          "ref": "f168ff36-c278-4669-bd03-45f7f3e69dd3",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c28b3a7b-6148-4664-97ed-16e5aaee853c"
        },
        "item": {
          "id": "f8890c48-e766-4763-8393-a3ffd594b5df",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "493fa648-0570-4282-b3b8-d76e377060a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b255b0-b2e0-4f77-9d09-c43501084e80",
        "cursor": {
          "ref": "eb95eb09-c914-4ce3-84b3-52d0ffedb6da",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8c28e8db-d31d-4758-8e80-318a3fe3fc0e"
        },
        "item": {
          "id": "40b255b0-b2e0-4f77-9d09-c43501084e80",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b4ae9b41-6414-4a3b-9551-d502d68bd080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35751dc-09ba-42cc-8f7b-757d2e436b35",
        "cursor": {
          "ref": "0273694b-e607-4ba7-a800-ae1654b76f6c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b43564e1-3676-4beb-b632-c696a54c7b92"
        },
        "item": {
          "id": "a35751dc-09ba-42cc-8f7b-757d2e436b35",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "36bf447c-10f8-4dde-a456-70d2ac521b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026c7383-fc0b-466b-a926-1972bf405953",
        "cursor": {
          "ref": "6d447d35-1153-4346-9946-1692648ccb11",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5d32bf47-df84-4d8e-b5aa-240b93712391"
        },
        "item": {
          "id": "026c7383-fc0b-466b-a926-1972bf405953",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4d95387e-e58c-4a34-a0e2-41ce13d48e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b8afb-97d8-4015-b4a9-5c5f772cc500",
        "cursor": {
          "ref": "5713cd9b-8fe7-45aa-9601-c88101fef25f",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac8fcf1b-cbbf-444a-837e-a24c0313120f"
        },
        "item": {
          "id": "273b8afb-97d8-4015-b4a9-5c5f772cc500",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "566dcc86-d944-4460-8468-7b8a455fb793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9beec3b-06e1-413f-9a3f-130bfff1117a",
        "cursor": {
          "ref": "8aef4c04-0a13-4a9b-8ee8-bbf42154fa09",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8dee7147-d2d1-4d1e-904d-a3d392f19386"
        },
        "item": {
          "id": "e9beec3b-06e1-413f-9a3f-130bfff1117a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aa7f187e-e20d-4536-aeb8-2eb53a4a5dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db777d1-bfca-4b64-8d84-3bd7cdf8cd5d",
        "cursor": {
          "ref": "1bb9a921-96f1-40b3-a2be-0ac9efaead79",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5869477d-3b94-4612-b9c6-63511007cd7f"
        },
        "item": {
          "id": "3db777d1-bfca-4b64-8d84-3bd7cdf8cd5d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "49d2611e-1315-45c4-bd07-11d7dafa8bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42d6e83-335c-4887-9388-c88596b07efe",
        "cursor": {
          "ref": "fab2adaf-c456-4124-bb8a-67045e80d3cd",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5056a47e-e7dc-43b3-b88a-6a9dc529d9ec"
        },
        "item": {
          "id": "f42d6e83-335c-4887-9388-c88596b07efe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b970efbf-3dfc-4457-a240-ce35ed4a0c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73ad370-a408-4e06-990e-3ea457468888",
        "cursor": {
          "ref": "343a618e-ee23-4c79-b1df-84fdda18d3b4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f2c08e7f-e6d2-4068-9214-ea7fa34437bc"
        },
        "item": {
          "id": "a73ad370-a408-4e06-990e-3ea457468888",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0cf6df2e-3a8c-4df8-947b-bc1d1e9d32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362a6393-d007-48bb-aabc-3eaf62e7f776",
        "cursor": {
          "ref": "85bdab31-2009-4d0f-83f0-304f14d8aba7",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8058e31b-0b2c-4eb4-849d-00b1403a4290"
        },
        "item": {
          "id": "362a6393-d007-48bb-aabc-3eaf62e7f776",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9e1aa351-8209-41d9-8d7f-55cc4d705470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff17668d-6126-47d4-a536-974c3496bcdf",
        "cursor": {
          "ref": "0f4a61ea-6fab-4bfd-a581-967918a010e9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "73127149-021e-414f-a759-45b6e8b7019d"
        },
        "item": {
          "id": "ff17668d-6126-47d4-a536-974c3496bcdf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "efc841db-46e0-4e14-8bfc-a48cac68c8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd35df7-49b3-4868-acaf-618cd916ab39",
        "cursor": {
          "ref": "1f11a293-1d4f-4eae-98ac-796966abf1e0",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb1c570d-f36e-403f-8a76-cd53d2a8e3cf"
        },
        "item": {
          "id": "3bd35df7-49b3-4868-acaf-618cd916ab39",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0e3a1514-108c-48f1-98dd-f3a9c2641a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d124f890-9688-443a-a296-9ad9d4a71183",
        "cursor": {
          "ref": "532e70ee-06b8-4ca4-a962-b2459b257a46",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "673f5e32-4b14-4a0d-90ee-87d2781407ad"
        },
        "item": {
          "id": "d124f890-9688-443a-a296-9ad9d4a71183",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "45793ecd-2d23-4288-b829-ef1b08488be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4219ebce-a6fa-4738-ab07-e261cca0af02",
        "cursor": {
          "ref": "6c547446-8fcf-4169-88db-632a22c722fd",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cb1ec36e-f971-436a-93a5-5f823b14297d"
        },
        "item": {
          "id": "4219ebce-a6fa-4738-ab07-e261cca0af02",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3b215481-a319-4ac2-95ba-7add71b4612b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac35047-6980-44f9-8c56-78b1727cd498",
        "cursor": {
          "ref": "7a0c7edb-1b23-4118-b39d-1f535f7c97be",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "43b362dc-dd08-4125-ad31-9201ce4c579f"
        },
        "item": {
          "id": "0ac35047-6980-44f9-8c56-78b1727cd498",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c0033060-4db8-40b7-a4a4-c179701c58ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c17fd-a990-40d0-9922-b192e277265f",
        "cursor": {
          "ref": "2a66f253-1c5f-4582-bb9f-fd137648200f",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b53897ce-672f-447d-b6a3-4a2d4267a398"
        },
        "item": {
          "id": "7e8c17fd-a990-40d0-9922-b192e277265f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d5f3610e-033c-42cd-bd82-3d097a46aa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa24733a-0037-4831-bcaf-15dae65789f6",
        "cursor": {
          "ref": "5a75e326-01a2-4d15-8b45-5d5e2fd0cbda",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6cd41a52-2d02-409e-9b78-34795498791b"
        },
        "item": {
          "id": "fa24733a-0037-4831-bcaf-15dae65789f6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f2d2fbcc-ad46-4fbf-a98c-07aa96e75063",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12147a6-3060-4386-b71c-c4a0a619f454",
        "cursor": {
          "ref": "cad5c81a-92f2-4aac-a271-63c3bdec2016",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b0a8650a-ce69-4367-9b2d-cd3635ebc387"
        },
        "item": {
          "id": "b12147a6-3060-4386-b71c-c4a0a619f454",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1a093270-9f3e-419d-8c76-2239a8240714",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2da9a80-67b2-44ca-81c1-10800b6b157a",
        "cursor": {
          "ref": "d3089788-1422-4e55-a2eb-8a550b99bbc7",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "54653602-9301-4b8e-8a80-018945ea6f9a"
        },
        "item": {
          "id": "d2da9a80-67b2-44ca-81c1-10800b6b157a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "26817ce8-2579-4ed2-9a00-d2cea7157d2d",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3b5940-f381-4a91-a483-671f707b1b69",
        "cursor": {
          "ref": "a5ab418e-d7a5-4aa4-8860-5e551fef5311",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1e65cdf2-b59d-4147-b056-592d5ec327e3"
        },
        "item": {
          "id": "4f3b5940-f381-4a91-a483-671f707b1b69",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "947c860c-ca8f-49f3-a9bf-1d413e60dfeb",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb6c6c6-b1a5-4d6c-ae95-018793a67472",
        "cursor": {
          "ref": "1aee85b6-fa9f-477c-b7d0-b3f282243354",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "049be170-78be-458e-ad24-d22723ae5b8e"
        },
        "item": {
          "id": "cbb6c6c6-b1a5-4d6c-ae95-018793a67472",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0029d947-a8be-4932-9919-b2b6673b018c",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b65791d-f378-4832-b903-b47ffbaab57c",
        "cursor": {
          "ref": "894e219d-954d-45c8-8faf-e6f43b099a52",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8945205f-436c-422b-8776-3b3cee98743f"
        },
        "item": {
          "id": "5b65791d-f378-4832-b903-b47ffbaab57c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ec5daa7d-0463-4607-ae70-cb52339a92c2",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56e0af6-6a65-4f19-94f4-11d148ce967b",
        "cursor": {
          "ref": "70194d6f-e740-46c5-bcaf-3932aba3fe29",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "eccf36c9-f3bc-42c3-9c2b-ab60d918bcd1"
        },
        "item": {
          "id": "c56e0af6-6a65-4f19-94f4-11d148ce967b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d571bbc2-1262-4ed6-b3ce-d6d99ed1fe14",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ce1ccb-aac0-4c6e-8655-a17ab1e90192",
        "cursor": {
          "ref": "7f15db3b-f5b0-46d7-99cf-19dafa8c50f2",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4f1ca18b-b2fc-4a00-a118-9ff4a3b49919"
        },
        "item": {
          "id": "c8ce1ccb-aac0-4c6e-8655-a17ab1e90192",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e91fedcf-e482-4c01-9537-135f02a55825",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ca76c7-ac4c-4a21-b753-168fcc61c36d",
        "cursor": {
          "ref": "46e2582c-3043-4338-8680-54fd15a3ca3e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "89db3358-9768-4aca-8201-62e098868384"
        },
        "item": {
          "id": "23ca76c7-ac4c-4a21-b753-168fcc61c36d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7b6fec8d-a709-4e1c-a0d3-53cd802688e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ca76c7-ac4c-4a21-b753-168fcc61c36d",
        "cursor": {
          "ref": "46e2582c-3043-4338-8680-54fd15a3ca3e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "89db3358-9768-4aca-8201-62e098868384"
        },
        "item": {
          "id": "23ca76c7-ac4c-4a21-b753-168fcc61c36d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7b6fec8d-a709-4e1c-a0d3-53cd802688e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90de3338-6dbf-4c12-9e94-f9280c452f5d",
        "cursor": {
          "ref": "fb22a1f6-9150-4ec2-8375-568f07f36f5b",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7bcf9c55-04be-4141-a50a-337f7c8775ab"
        },
        "item": {
          "id": "90de3338-6dbf-4c12-9e94-f9280c452f5d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f76ea356-03bf-4375-9747-3d8f9466f5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec18906-d836-453f-a923-3537eb0b6293",
        "cursor": {
          "ref": "213c80cb-cf5b-4c51-9583-fdb9c97fc04c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dcd79904-5ac7-4ab0-b9e7-059bd73bb7a7"
        },
        "item": {
          "id": "cec18906-d836-453f-a923-3537eb0b6293",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1a499bf0-95f3-4234-aa4f-2a99bfe5f938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c479e8-8466-4759-b222-05003aa47575",
        "cursor": {
          "ref": "9f6a4c55-5534-4585-b7c6-041cfa490916",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cec15e74-6d0b-4773-9d7f-466fe3ad5f2c"
        },
        "item": {
          "id": "76c479e8-8466-4759-b222-05003aa47575",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54278cab-6e2b-4e8b-9bf9-cefebd727edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d066ed-466f-4339-88a1-3d04c5408dba",
        "cursor": {
          "ref": "7433e82e-e0d9-4520-a1b0-8c0415f0b85e",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4b2243d0-6e3e-41df-bb85-7e79048ada6b"
        },
        "item": {
          "id": "23d066ed-466f-4339-88a1-3d04c5408dba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ae6d750b-3188-47fb-9f6f-5ec63081bbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15305702-498f-44a2-a230-1affb364ecc6",
        "cursor": {
          "ref": "38d87e83-7bdc-4558-9ce7-6dc47ae51199",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4f7f9496-e239-4bf4-add8-4a4776a9822b"
        },
        "item": {
          "id": "15305702-498f-44a2-a230-1affb364ecc6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae9a070e-da54-417c-83b7-fd75bfbb6a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1af6d3-41c2-4f41-ac79-55c3df17c618",
        "cursor": {
          "ref": "156ad2d6-dd52-43dc-b639-6fe991d7d426",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "50007aae-8857-402c-8f66-dd3eaefd6eda"
        },
        "item": {
          "id": "0b1af6d3-41c2-4f41-ac79-55c3df17c618",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d283234-72e8-4ab4-b3ad-0aa02e9988fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07fb41-3337-4af6-83d9-670c22b45fe9",
        "cursor": {
          "ref": "bd304634-0d10-46b3-9bab-2c47b8d0a391",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4b43891d-6f4a-42d0-93ca-47264e19b606"
        },
        "item": {
          "id": "3f07fb41-3337-4af6-83d9-670c22b45fe9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2b4b664f-fbcc-4836-b20a-efe4acb47722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad88a75b-2f40-4c70-9bbf-dc6d67dbfdf5",
        "cursor": {
          "ref": "ee6640e4-c1a0-4f0f-a1be-19d8ad5354f8",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ffab2efe-2b1e-44ee-b433-474e53049697"
        },
        "item": {
          "id": "ad88a75b-2f40-4c70-9bbf-dc6d67dbfdf5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40c17998-f993-4c2b-bdb2-eaa82e8143c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934d4e66-da3b-4c27-ba1a-c2c160c4a5a1",
        "cursor": {
          "ref": "08961c16-039e-4ad9-99fe-7c180322c331",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b9245156-ee05-4247-8f57-ddf752c19efc"
        },
        "item": {
          "id": "934d4e66-da3b-4c27-ba1a-c2c160c4a5a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ea4aed5f-6b27-4c23-867c-105770798e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c4fb8-a5ed-4f97-b50b-37eb006c5845",
        "cursor": {
          "ref": "f4d505d8-a338-46bb-ba4a-9f34e325e2b8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "65c58aaf-0b12-44f0-84c8-d31bc4011d2b"
        },
        "item": {
          "id": "950c4fb8-a5ed-4f97-b50b-37eb006c5845",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4fc8dbe2-4395-4928-a4e7-5ebf5f5aed41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44013570-b8fb-4c22-9b51-3d83b1c13dd0",
        "cursor": {
          "ref": "d783853e-1b3a-4f85-9a4a-3b3bdafafed3",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "37693510-6bc6-405d-84c0-5766b93637fd"
        },
        "item": {
          "id": "44013570-b8fb-4c22-9b51-3d83b1c13dd0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f6e644c9-d8ee-4a8f-bb0d-650b2ab5a6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fc8b65-c470-4b78-b89a-88e606adcf1e",
        "cursor": {
          "ref": "b32e9e24-c2e1-4d44-b3a9-1c8b7917593a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fc5ee174-a02f-4e0e-aa37-700d690cb00a"
        },
        "item": {
          "id": "23fc8b65-c470-4b78-b89a-88e606adcf1e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f0389487-0ed8-4c26-98cc-e3e33695ca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb4fc7d-622d-495b-bd94-34d752d6f74d",
        "cursor": {
          "ref": "5b953f00-0824-453f-95b3-f8a8c1b63c0e",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "42374305-2ea8-4b6f-8b23-f56b3084c441"
        },
        "item": {
          "id": "1eb4fc7d-622d-495b-bd94-34d752d6f74d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6700ae8-4df1-4239-bb25-633f5b60d45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9871ac6f-8e94-4b09-87dc-9c7c2fa74566",
        "cursor": {
          "ref": "c3441a64-e1df-462a-944a-e5023dc66a7b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ef9ceb11-b67f-43c9-872b-71e63b58de36"
        },
        "item": {
          "id": "9871ac6f-8e94-4b09-87dc-9c7c2fa74566",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5bd63baa-67fc-4a1e-bb08-0fabf31baf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c783681-2cdb-4ea8-a867-b4ec74f3b0a9",
        "cursor": {
          "ref": "e1a6bb74-d8ca-4133-b059-3c3098278d08",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72cebb5c-a5b5-4416-9060-8224e58a3431"
        },
        "item": {
          "id": "6c783681-2cdb-4ea8-a867-b4ec74f3b0a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ee45faa8-2df5-4c3a-8d0d-2f3aa2602f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816dfb3c-e1ea-4485-bfc0-b1c1945008d4",
        "cursor": {
          "ref": "1b02c16c-afca-4ab5-9390-671e8fc92ec3",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a577180a-8347-482f-87a4-58ee3bc04533"
        },
        "item": {
          "id": "816dfb3c-e1ea-4485-bfc0-b1c1945008d4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d121c556-15b4-4a41-a6f4-58ffaadeb54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105e1f54-4aa7-4554-9584-858c96d653e8",
        "cursor": {
          "ref": "e91b032b-648c-4876-ab88-5fb720090379",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "58844bd3-4f4a-4673-a502-c0b0f7eb4e0f"
        },
        "item": {
          "id": "105e1f54-4aa7-4554-9584-858c96d653e8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ac5ec2f7-33fb-4ba3-8616-ffb93be5de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bfbdd5-b43d-4517-942c-5fcbc82064eb",
        "cursor": {
          "ref": "0e63b9b1-bb17-4f1b-9cd3-ab5162a8d6db",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cc95d089-070f-4242-9ac1-64b4ad50bf4a"
        },
        "item": {
          "id": "b1bfbdd5-b43d-4517-942c-5fcbc82064eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2364452b-43a7-4322-b250-90e2d6d30113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f1f34b-77e1-4270-9601-abd670a5e79c",
        "cursor": {
          "ref": "8bda449c-e3d7-4b2a-b531-a80e92453004",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "23b4ea01-1a05-4fc7-9a2d-bf68f89ac510"
        },
        "item": {
          "id": "96f1f34b-77e1-4270-9601-abd670a5e79c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "39f5e12b-37ba-4567-b753-441ce57f70b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7b0706-1791-4a1f-8eb9-5add6c572672",
        "cursor": {
          "ref": "8abb18ac-20d5-4d18-963d-9807e4427266",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b027dadf-8245-4b65-ad8c-cc72de2407ea"
        },
        "item": {
          "id": "9d7b0706-1791-4a1f-8eb9-5add6c572672",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "638fb5df-74b9-4c18-b62c-72b7179441d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae3208a-deec-4df9-8eec-f2295991b43a",
        "cursor": {
          "ref": "2f6a3658-41ef-47d5-8c6a-705ea5f67693",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "40512aaf-495d-4dfd-a44a-cf87f53da398"
        },
        "item": {
          "id": "9ae3208a-deec-4df9-8eec-f2295991b43a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "15c9743f-2443-4ebb-8625-6d344eb7b8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe31526-e9e7-4cdf-af46-8d92ed647140",
        "cursor": {
          "ref": "3dcc3451-5505-483d-8c24-fc5ed8c80a48",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eaa7ac34-f195-447d-a09f-c1d4255d3a65"
        },
        "item": {
          "id": "1fe31526-e9e7-4cdf-af46-8d92ed647140",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8dd2aa65-d683-426e-95a5-d95bc95ed95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bb219a-c287-4e0d-95e8-fd176ceb0e7e",
        "cursor": {
          "ref": "b65161e7-e642-437b-8ee9-c089e750ca3d",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "955c081e-45a1-4be4-ae5e-dd16e3b26aab"
        },
        "item": {
          "id": "20bb219a-c287-4e0d-95e8-fd176ceb0e7e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "efd5cc25-e734-4069-b27b-5ef56249d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8037023-e154-461d-9b47-04c8d5487759",
        "cursor": {
          "ref": "67737186-8ecd-456a-99cf-a12ba26b6adc",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a44150a5-170d-48bc-b564-9bbf3ceda174"
        },
        "item": {
          "id": "b8037023-e154-461d-9b47-04c8d5487759",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "258d5085-08fc-4905-9116-6f56e7030456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98908ba-2818-45af-b254-59d895fa25df",
        "cursor": {
          "ref": "6ca6d0f8-fbe7-4846-96a6-d2ef1effce0c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6308a0cd-463f-41e2-aa9a-f422e8926aaa"
        },
        "item": {
          "id": "b98908ba-2818-45af-b254-59d895fa25df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c2e39feb-b883-4e59-b063-335d994feac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8c8fe2-7a24-4648-92a3-ac8f2a0c1b26",
        "cursor": {
          "ref": "81098a60-4117-4497-b87b-a35604b678b9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1532b9e2-31a7-42a6-96df-fea01ccfc7c4"
        },
        "item": {
          "id": "ec8c8fe2-7a24-4648-92a3-ac8f2a0c1b26",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b298c39-63bd-4c0c-a45b-aac93d03725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa94f11-c16f-431c-bf5d-e1a27a0b89d4",
        "cursor": {
          "ref": "6bfcc111-70f3-42fe-b96c-bf0981ef147b",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3a17c25f-4203-4af5-804d-34d20e93ed72"
        },
        "item": {
          "id": "7fa94f11-c16f-431c-bf5d-e1a27a0b89d4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a5a302a2-3a7d-4c6e-a8ba-d88507b0ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cae0a8-bfbd-4db7-9883-7b0e2c3b8129",
        "cursor": {
          "ref": "701aebda-1cdc-4480-b272-ff6a5721bb47",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2ab215d0-1b9e-4716-b582-e7709944b372"
        },
        "item": {
          "id": "57cae0a8-bfbd-4db7-9883-7b0e2c3b8129",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a1fd28b6-b5de-43ff-adec-be71695c0e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d30ee2-c124-4030-8038-9ff13cf93fec",
        "cursor": {
          "ref": "c2070978-50f1-4f62-973a-43841fa46587",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a464722-276b-4d9e-bd93-f3875bc56292"
        },
        "item": {
          "id": "15d30ee2-c124-4030-8038-9ff13cf93fec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2e00974b-b6de-4e1b-83b7-a05629f9cbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e75fb3-e12b-4077-814a-391c7e7dbe59",
        "cursor": {
          "ref": "6c2e50be-3c22-4533-a5da-0432451d8e28",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a06161f3-4028-41d5-9c99-d0e011ac6a83"
        },
        "item": {
          "id": "a8e75fb3-e12b-4077-814a-391c7e7dbe59",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4458ec9-8f92-427c-bd64-7d48dfa12b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d34881-218a-49d8-9c7c-dce63c0c4d4e",
        "cursor": {
          "ref": "cff01a4e-aac1-4894-a747-6b30a258b0b7",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b994f905-4740-4ce7-adb9-d534acfc9855"
        },
        "item": {
          "id": "42d34881-218a-49d8-9c7c-dce63c0c4d4e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6a3251e8-b166-4bc4-9d4f-31bd9f35ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df35779c-a98a-4e1b-b49e-3c93f6eb9b69",
        "cursor": {
          "ref": "355b22dc-bfe9-42d0-8e44-dc62f2b61dda",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "86a26db5-0242-4262-a1f5-0e6d96f8c32c"
        },
        "item": {
          "id": "df35779c-a98a-4e1b-b49e-3c93f6eb9b69",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ff12c39-cfed-4cd4-9c7f-eda4d83af3a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1658bef5-7bf0-4b10-aa22-2e206692c329",
        "cursor": {
          "ref": "887a257f-5940-478b-9c17-33a25744fe9a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7535b2da-016d-4b14-9f04-712288bee606"
        },
        "item": {
          "id": "1658bef5-7bf0-4b10-aa22-2e206692c329",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "97a45000-f993-4732-9a29-76b5fec48724",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253aa60-44a4-4224-86b3-36cfa9a1fb7a",
        "cursor": {
          "ref": "4c91e2d9-ca2b-4572-b8d4-4e6cf2171e77",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6e43514e-b6d3-4d6c-a699-2e762a657a48"
        },
        "item": {
          "id": "8253aa60-44a4-4224-86b3-36cfa9a1fb7a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bd630bce-087d-4e1b-986c-deea668b2cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253aa60-44a4-4224-86b3-36cfa9a1fb7a",
        "cursor": {
          "ref": "4c91e2d9-ca2b-4572-b8d4-4e6cf2171e77",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6e43514e-b6d3-4d6c-a699-2e762a657a48"
        },
        "item": {
          "id": "8253aa60-44a4-4224-86b3-36cfa9a1fb7a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bd630bce-087d-4e1b-986c-deea668b2cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e6b75-5913-4c73-830e-1a02a3b3b85e",
        "cursor": {
          "ref": "9dd37476-8e49-4a62-81bb-dd94e1053b34",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "90e21127-29a7-4dee-8505-a1270b83d7d6"
        },
        "item": {
          "id": "dc3e6b75-5913-4c73-830e-1a02a3b3b85e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30ebd49c-be02-4ea5-8591-3996e6ad71c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e31e1e-f93c-4b4e-ba34-65b2afa8eec1",
        "cursor": {
          "ref": "41ae00ca-9c3a-4fd9-861f-8b0713fc396d",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9262fa1d-6d1f-47fb-b9a0-efd61bf92912"
        },
        "item": {
          "id": "74e31e1e-f93c-4b4e-ba34-65b2afa8eec1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b432eef-45dd-420c-9c41-b0509f146903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a0c842-5822-43e5-8e62-39297a531ddc",
        "cursor": {
          "ref": "1681a65f-5329-4347-96f6-be79ba95b30d",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7e8b985c-9519-416a-b36e-3ae7e6cac23e"
        },
        "item": {
          "id": "66a0c842-5822-43e5-8e62-39297a531ddc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6944e735-be9b-4041-b3e9-6df96bdaa477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06398acb-d407-44d6-9a8c-6b5e5fd295fa",
        "cursor": {
          "ref": "0d3db18c-9d5f-418c-bd98-2de63c7ded00",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "841762e9-fe23-4f18-80cb-cdc28b69bfd9"
        },
        "item": {
          "id": "06398acb-d407-44d6-9a8c-6b5e5fd295fa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ef0a3d9c-8958-4403-96cb-3f12ceead0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5ae00-4609-4f10-9dcb-e191d23287ea",
        "cursor": {
          "ref": "a75b6faa-2f7c-487a-a579-4e3e9febf6ed",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62d078a2-43a2-4479-ab37-f4a23b1b3b06"
        },
        "item": {
          "id": "e2d5ae00-4609-4f10-9dcb-e191d23287ea",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f4f8ee5-a368-4291-aed4-5022285f7d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f77d26-a020-42aa-9c63-f6c6c3055f8e",
        "cursor": {
          "ref": "9d332fca-0d9f-4f1c-aa6f-f797dfa8ff99",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "21cf8ba7-36a3-48c1-aca7-9b3f2262d0b4"
        },
        "item": {
          "id": "b3f77d26-a020-42aa-9c63-f6c6c3055f8e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e0226b44-df87-4641-bf5f-fd6bcc524411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911a7773-b976-4bce-b8d1-0bb1b452fc5d",
        "cursor": {
          "ref": "66dce4a5-6297-4adc-aa0e-fdaf080b365f",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "39c1bc9e-b1ba-4b77-8aa0-ee5554c2fc64"
        },
        "item": {
          "id": "911a7773-b976-4bce-b8d1-0bb1b452fc5d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9679e481-2968-4d9d-a0bc-18322ae8a23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88808e71-8491-414a-99e0-0fc0c7bee49d",
        "cursor": {
          "ref": "e1f8ff9f-98ca-4700-b391-452d6af84255",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fdd5ba2b-dc48-4a7b-a005-6a22f33e276d"
        },
        "item": {
          "id": "88808e71-8491-414a-99e0-0fc0c7bee49d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "25688e95-e2f0-4f71-96e1-b53540175cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9e14c-3461-4431-83d6-8c5e8269c0cc",
        "cursor": {
          "ref": "b1356423-b549-4d9b-9479-3f4a327fa60c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b410a5c9-f5f3-4250-9752-cdeca559b31b"
        },
        "item": {
          "id": "f2d9e14c-3461-4431-83d6-8c5e8269c0cc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c77a8309-a46c-4256-8eb6-98dd512e8a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd506914-c7a0-41b0-9bc8-adfeff1a2e37",
        "cursor": {
          "ref": "a3385631-0245-43a0-9fab-fe8ed5f76869",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ceca94ae-2197-4cdb-b772-7faf70c5e5e2"
        },
        "item": {
          "id": "fd506914-c7a0-41b0-9bc8-adfeff1a2e37",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "49bebf8b-da29-43eb-adcb-10be4e41f10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2d9b17-435b-4a43-9a4a-10a8d5499c5a",
        "cursor": {
          "ref": "d3621984-c3aa-42ee-9b43-2aa8f231fbe9",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aa39de57-eb64-415f-8e1d-d22a8d49c55c"
        },
        "item": {
          "id": "6e2d9b17-435b-4a43-9a4a-10a8d5499c5a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8e879fb3-53fe-4769-9230-d9896c32b66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fbd209-58e4-471d-8aa3-c14a3691e46f",
        "cursor": {
          "ref": "27574e47-83d6-4aa7-a5d2-b74bb57020a7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1b0792e5-0a68-4659-9be2-862e04ec4081"
        },
        "item": {
          "id": "69fbd209-58e4-471d-8aa3-c14a3691e46f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4a0cb688-3372-49b0-8fc8-bc1e16543352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e416260-b657-4402-aa3c-8f7a17518395",
        "cursor": {
          "ref": "1ca4a1c1-c8a3-4bdb-964a-7403a65336eb",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e38296ba-be84-453e-99af-c4a1a571ddf4"
        },
        "item": {
          "id": "1e416260-b657-4402-aa3c-8f7a17518395",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "815ce8cb-407d-4bc1-a304-806132038f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67039a61-3c5b-4bcb-a607-8108e7c275a8",
        "cursor": {
          "ref": "fa23ebf7-f715-429c-abc7-1cb869903367",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2aeccda0-0670-4e90-8693-b56ddc2496be"
        },
        "item": {
          "id": "67039a61-3c5b-4bcb-a607-8108e7c275a8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e38a1ad2-c8c2-4a22-8fd7-f32a3d9cca7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e522ef-ac28-451e-8cb5-1ca31982274d",
        "cursor": {
          "ref": "1939f722-a0df-471d-a028-f0d0ef70330b",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "91dcb221-1f17-4d2f-9853-059b1b69f5ba"
        },
        "item": {
          "id": "52e522ef-ac28-451e-8cb5-1ca31982274d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c7cc9ed0-5a76-4c74-9d5c-88de974b2d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5267a067-1b80-4922-b8ed-43acfaee564a",
        "cursor": {
          "ref": "a8cbff12-d9e9-4c27-b1ad-e163b9a49df7",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ef664b53-3360-481a-be22-a4e066fe7008"
        },
        "item": {
          "id": "5267a067-1b80-4922-b8ed-43acfaee564a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d8996f34-006a-44b0-bd46-09e4818de7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d62316-fdda-47f1-9b54-b3359f4b0d44",
        "cursor": {
          "ref": "298345a4-877f-4a7f-852a-80e68fc7e56e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cf7a3f7b-b802-4792-b33f-839d7b7170fa"
        },
        "item": {
          "id": "91d62316-fdda-47f1-9b54-b3359f4b0d44",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6562313d-fde4-4613-9e22-b4d0a5989cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced93a76-77f3-4f92-b4d1-83a92377a5f3",
        "cursor": {
          "ref": "b0b937d6-74c4-404b-a63d-d5d58b94126f",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0382a4e7-5b9a-4725-b3a7-2c568b2ba771"
        },
        "item": {
          "id": "ced93a76-77f3-4f92-b4d1-83a92377a5f3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "333d50e2-a25f-42ef-898b-7ce68ef241bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828b4618-6253-4de7-b334-308dcf00de77",
        "cursor": {
          "ref": "4c71619e-c1bd-4a4b-a05b-cc9253ae8dfa",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "da995c06-6c4d-4feb-ba89-dae0b332ab8b"
        },
        "item": {
          "id": "828b4618-6253-4de7-b334-308dcf00de77",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b92f7ea3-933d-4878-ab6b-43d5075b94d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dae984-5192-463d-9ca2-907c5acc2102",
        "cursor": {
          "ref": "839140ae-8a13-4228-aeda-2d32e8142dc8",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3dd62d56-32da-4bb9-b53a-55970ca0b906"
        },
        "item": {
          "id": "44dae984-5192-463d-9ca2-907c5acc2102",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47eba2ab-3921-4ff6-a499-4a2c44c4bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a216d07-5c3d-4324-b546-59541a608f89",
        "cursor": {
          "ref": "1d2a0881-5bf9-4445-ad51-19a2e2469087",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dd01ac43-df40-4348-84c2-e5460588962d"
        },
        "item": {
          "id": "5a216d07-5c3d-4324-b546-59541a608f89",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99897b28-5d91-4883-92f6-9818d0e4e791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab6c746-5c45-4e15-821f-143017d23202",
        "cursor": {
          "ref": "96d1b9fe-bd32-4ba6-b38e-b23d0a42fa3d",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9679da87-f0fd-45f5-a72a-043b940d4113"
        },
        "item": {
          "id": "dab6c746-5c45-4e15-821f-143017d23202",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "765fee4f-8fd9-4675-ad6e-ec36b703f3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600b29d7-793a-4836-8a2b-5f79eed8fe71",
        "cursor": {
          "ref": "ddf1ee22-3a8f-4828-8a23-745716c203e7",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6319eef9-853b-4c7c-be86-2730b3d35d5f"
        },
        "item": {
          "id": "600b29d7-793a-4836-8a2b-5f79eed8fe71",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3fa78763-9a2f-4314-b49f-7d58b8891fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0801c325-58ae-4957-a22f-c32f8b804863",
        "cursor": {
          "ref": "b4320322-c9d4-4f15-abd3-76174503a656",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d40e445f-cd49-4e53-b68a-b298245d68bc"
        },
        "item": {
          "id": "0801c325-58ae-4957-a22f-c32f8b804863",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4da87766-c938-4aa2-8d05-e04d47096dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23abd5e7-7f60-4a11-b6a2-67cbe90bc536",
        "cursor": {
          "ref": "7e3ecd03-0513-477a-bb5f-822ea9a1faf8",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "905557be-9f04-4e81-859e-046a95b5f3a9"
        },
        "item": {
          "id": "23abd5e7-7f60-4a11-b6a2-67cbe90bc536",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "df5273d4-bd79-4d98-a877-d79066c5d74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a15226d-998d-4369-8a2d-c83ea450eef6",
        "cursor": {
          "ref": "1fd66748-929c-4a87-99c7-8a7e6271e856",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "57a267dd-54e5-4656-b6b6-0421f5b20e51"
        },
        "item": {
          "id": "6a15226d-998d-4369-8a2d-c83ea450eef6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1bf378f1-23ce-4768-8920-042bad9808e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8f55ab-ce0e-4a3a-b67e-fbec19562f11",
        "cursor": {
          "ref": "dcb88f28-86ae-4f3f-9d0a-7aa88b712bf8",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "31039388-8fcc-420f-92fd-66dab6ec17b4"
        },
        "item": {
          "id": "ea8f55ab-ce0e-4a3a-b67e-fbec19562f11",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "03c99782-ecda-4691-b7df-5601d5f500b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34f5f1a-93ec-4f0e-9aaa-57ba305c69c3",
        "cursor": {
          "ref": "4677dd3f-6c05-43c0-be46-d3abb8d62b84",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "21fd4dd2-7abf-4b18-a057-afa5d742d7f5"
        },
        "item": {
          "id": "f34f5f1a-93ec-4f0e-9aaa-57ba305c69c3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ce0966db-f6ac-443a-be29-35bb97134516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9029a5f-e7ec-4b03-991b-fd885dabb2ad",
        "cursor": {
          "ref": "c56d086d-2f95-4227-8283-d63da49c0dac",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "66aa6c36-92c4-44ce-87ff-75e225a04007"
        },
        "item": {
          "id": "c9029a5f-e7ec-4b03-991b-fd885dabb2ad",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b6859d15-b21e-42db-ba11-fffe6286b3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff95345-5285-4d32-bd27-e4cf98f89226",
        "cursor": {
          "ref": "f1304fb8-589f-4d3c-9616-5cb2721adb20",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "00042990-5c51-4ec4-9e76-fb1c58916523"
        },
        "item": {
          "id": "bff95345-5285-4d32-bd27-e4cf98f89226",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "76cffc62-c466-4d6b-bfa9-1cb03efe3229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b190c9-7531-4653-9fb6-f799599fe3c5",
        "cursor": {
          "ref": "337c8861-7dfc-44ba-be81-463fb23f49f9",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f5b1d441-4f59-4d6a-9f53-000663111735"
        },
        "item": {
          "id": "a1b190c9-7531-4653-9fb6-f799599fe3c5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "160091d1-3a18-455b-b0f2-beed16628b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2331f-1d77-4374-8c0e-e167d8e5583a",
        "cursor": {
          "ref": "a4179248-ca8e-4fab-8f5d-5790af824a52",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "097753c2-a113-461d-9543-218f1c8267fc"
        },
        "item": {
          "id": "9ad2331f-1d77-4374-8c0e-e167d8e5583a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3a5a18b9-ab36-470e-93df-541a743e4090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e45bda-e1d1-4e1c-aed2-eddad20b28e9",
        "cursor": {
          "ref": "d2ea202c-0764-47f0-9b89-4e592e483959",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "385d8dc0-1b41-4b58-bc44-3cd88fc28a70"
        },
        "item": {
          "id": "a8e45bda-e1d1-4e1c-aed2-eddad20b28e9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "63f37197-8014-4c4c-98db-359945b56014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2dbd4a-1e72-44ed-a5ae-d5d88ba3f3ed",
        "cursor": {
          "ref": "24fbed3a-104b-40e9-b2c5-1014a1cfab9c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f3689394-fea8-4d0a-85e8-b7a8f5a7c880"
        },
        "item": {
          "id": "ae2dbd4a-1e72-44ed-a5ae-d5d88ba3f3ed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a3140b16-c429-47ad-9011-997412ed0700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08507724-3fc8-4edf-b345-2224616d7d5d",
        "cursor": {
          "ref": "72463f10-1486-448d-bab3-29933380c063",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d790ca48-71e0-4a98-853c-1c00a8ced989"
        },
        "item": {
          "id": "08507724-3fc8-4edf-b345-2224616d7d5d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc8e8eb9-852b-42ed-8629-b049c2b32dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a293a-fece-4472-a7ff-5625e00423a6",
        "cursor": {
          "ref": "0343f6fa-21e3-4c15-ae3d-926fad9a0682",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4efcd310-08da-4d6e-be57-f96eeb1ee74f"
        },
        "item": {
          "id": "e96a293a-fece-4472-a7ff-5625e00423a6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4bdb502f-d8b3-4981-b139-4caccfc5a406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd1d592-902b-45ac-90b7-b0e4d3488795",
        "cursor": {
          "ref": "8ab1330c-9d88-417b-ade4-87ecfe09add0",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f10691a-4924-4f64-9b8a-9c8c64034081"
        },
        "item": {
          "id": "1dd1d592-902b-45ac-90b7-b0e4d3488795",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4de4f980-364b-47be-9cb4-38ed5ef88526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc6f8d5-e7f3-4c86-997e-3d614f600d27",
        "cursor": {
          "ref": "bc6c81ab-00db-4efa-9db1-b627804c79db",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "322a7c44-f376-4785-9f98-629c3d2a8e6b"
        },
        "item": {
          "id": "0cc6f8d5-e7f3-4c86-997e-3d614f600d27",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3fd437c3-0765-495a-8b88-5a4b984ca0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c376cf0-3e84-40f6-b0f4-3056ca91732d",
        "cursor": {
          "ref": "3f01a75e-b02a-4b00-ad90-6e110f9f2bab",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7569181a-f45b-4f37-a80b-d56d43cbbabf"
        },
        "item": {
          "id": "4c376cf0-3e84-40f6-b0f4-3056ca91732d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "680f35e8-cc94-4784-95e0-521bb3c5e884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9117af33-9c8c-46a2-93e9-259a373ed98b",
        "cursor": {
          "ref": "0eb33674-40cc-43c1-90c1-1de376858ac6",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7ac9d5c5-abae-4fe1-ba73-ee051b2cf400"
        },
        "item": {
          "id": "9117af33-9c8c-46a2-93e9-259a373ed98b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "71445f3c-5742-4b71-aa72-0b33bd12642b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a86a9d2-f362-4185-b6b2-9eda2cf27e92",
        "cursor": {
          "ref": "85b41e6b-ffb8-430a-b29d-5bfaf4515981",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "83334116-ff3e-45ba-8722-6d4c14abd26a"
        },
        "item": {
          "id": "5a86a9d2-f362-4185-b6b2-9eda2cf27e92",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "12b9aac6-87a1-4f5f-a599-00770d8492a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196bcbbf-4577-4b5f-8d8f-007415c25aea",
        "cursor": {
          "ref": "5a1d1bee-e0b5-4d32-b39a-86a11d76c99b",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "caa2a16b-25fd-4fbc-8df1-7dd1b864a307"
        },
        "item": {
          "id": "196bcbbf-4577-4b5f-8d8f-007415c25aea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6f17cf64-1910-477e-949d-a463236e57cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8a7195-f415-4856-aca1-a2675bba99fc",
        "cursor": {
          "ref": "abbcd932-2e5b-46ca-947b-c469bd9f5f18",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "23941400-fc68-4ea1-af08-b6474c86d79f"
        },
        "item": {
          "id": "9c8a7195-f415-4856-aca1-a2675bba99fc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "63a2d9ac-31dc-4627-bbe3-677eae43c6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb0578-30f9-41fc-abf6-a378b791ce03",
        "cursor": {
          "ref": "9381650a-7362-487f-b688-6498584bdd11",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a895ad75-f649-4a43-a6d0-7892273dfdca"
        },
        "item": {
          "id": "f2bb0578-30f9-41fc-abf6-a378b791ce03",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "35f26d70-f9a3-4686-94c1-3002d9c4c90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ab794b-a462-4e63-9cd0-56cd4cfb866a",
        "cursor": {
          "ref": "029c0cb7-0e1b-4058-89ce-4e4eb8739539",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f46406e7-c5ad-458a-b3b3-1a180cdb6546"
        },
        "item": {
          "id": "31ab794b-a462-4e63-9cd0-56cd4cfb866a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "825887da-d313-477a-b686-f960d306ed59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff8a2a-4d3e-455a-881b-610e210d0676",
        "cursor": {
          "ref": "cb1de066-b2b9-439b-b923-1f2f6ec40319",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4c50869-4401-4ece-a3c9-6a65bb4baf86"
        },
        "item": {
          "id": "8cff8a2a-4d3e-455a-881b-610e210d0676",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ca8aedef-3430-44f5-a13e-d58534cbb5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6222a528-549f-4163-b250-3fff35ac8cb5",
        "cursor": {
          "ref": "35f9ae5a-2654-4d84-9d6c-364d7d259821",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aeefbbae-1f01-4617-8383-2308403f7cf4"
        },
        "item": {
          "id": "6222a528-549f-4163-b250-3fff35ac8cb5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "760cdc2e-d885-4778-8f91-927ec96387e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8e9c3a-6709-4e43-b4aa-12d73c6a3382",
        "cursor": {
          "ref": "e5831fcd-e201-47d9-b28c-22ac0516bf99",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "73c945e7-58ad-4471-8c85-170b222cb116"
        },
        "item": {
          "id": "aa8e9c3a-6709-4e43-b4aa-12d73c6a3382",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b7db1176-2afd-4d41-a456-5268c214239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df083e3-ee6c-44cf-8aee-79f3765e3d02",
        "cursor": {
          "ref": "244c9b9f-f6f1-4a3d-b8df-a39a7f5396a2",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1ce1f61b-c3c8-4981-bef7-40d731f24849"
        },
        "item": {
          "id": "8df083e3-ee6c-44cf-8aee-79f3765e3d02",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "69af1d8d-56e0-43a5-9780-2474d47d8bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1847a8f7-af30-466d-8a47-3139c1050db0",
        "cursor": {
          "ref": "b4147b99-fdd9-4329-ba16-da257f1905a6",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "74cc4d90-ca67-42fe-a57d-22dfcf3c44d1"
        },
        "item": {
          "id": "1847a8f7-af30-466d-8a47-3139c1050db0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "efab98ad-57b4-42fe-bf51-b78672060170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f2354e-1ce3-46d8-b397-84017f909577",
        "cursor": {
          "ref": "8aefc3cd-16dc-4ef0-a5b1-cb3521ebd063",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cd5875cc-173c-4b7c-83e6-f0ecbe734f27"
        },
        "item": {
          "id": "68f2354e-1ce3-46d8-b397-84017f909577",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "262c2049-17ce-48ed-bb75-29715158a771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c5441-be16-4c5d-8c22-9459fb96f614",
        "cursor": {
          "ref": "8c177fb3-1f47-46c4-846e-c7f925bb6dd6",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "083281b0-d0f5-4209-92de-f68d4368854e"
        },
        "item": {
          "id": "b66c5441-be16-4c5d-8c22-9459fb96f614",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a84aac79-479c-447f-b303-6af3702526eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db094076-1ec5-4232-8da9-c3003eb06400",
        "cursor": {
          "ref": "d99dea60-cb6f-4b56-bce5-c04c8a0714b7",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "46ac5f78-c141-491f-9b14-157777672776"
        },
        "item": {
          "id": "db094076-1ec5-4232-8da9-c3003eb06400",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "69b98085-80bd-4e52-8fd1-fff86cd1467e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dfa19d-f3e1-4f93-ad36-6ad5f3db25e8",
        "cursor": {
          "ref": "be861050-dcbe-49e4-a18f-6ea02a1182c3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "68f5d0e3-5d57-4814-93ed-54d77e6300e2"
        },
        "item": {
          "id": "51dfa19d-f3e1-4f93-ad36-6ad5f3db25e8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1729a8a0-11ef-4609-b0f5-f9513319b052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d96ebb-b34e-4f8e-964d-522c51db62ee",
        "cursor": {
          "ref": "e705dbf1-376f-411b-a231-4d34cce9f844",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "84f66759-7665-4228-9517-19098f8d5335"
        },
        "item": {
          "id": "50d96ebb-b34e-4f8e-964d-522c51db62ee",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "55da05c2-0de2-47ca-a533-24fc69763b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b52302-298e-4b81-bfd3-d3300a02f003",
        "cursor": {
          "ref": "12830cc9-512f-4af2-8633-4b3d2a44b5b8",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "61f59d6b-0b8f-4ad7-80c5-d342b7e851da"
        },
        "item": {
          "id": "23b52302-298e-4b81-bfd3-d3300a02f003",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b28113f9-b62c-460e-abaf-b34920ed70fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5479ed31-adce-4062-91b3-4a76468a1bf4",
        "cursor": {
          "ref": "96e2371d-0bcb-47ad-94ff-101f562ddc3c",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f368ceab-19c1-46de-89b6-d447aa13b1fb"
        },
        "item": {
          "id": "5479ed31-adce-4062-91b3-4a76468a1bf4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "90d26f31-eab4-411e-baec-990001a72ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e3bc5b-b5e1-425b-9718-c5cb3d3ba6a1",
        "cursor": {
          "ref": "771d5f44-815f-43f8-8cdd-7b905aa549de",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b1448fdd-edec-4709-9854-3e503c98f682"
        },
        "item": {
          "id": "59e3bc5b-b5e1-425b-9718-c5cb3d3ba6a1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bebb83d9-eef5-4849-a9cd-826684e90d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159d7cc0-5c93-4d22-bd97-e880a8463c6f",
        "cursor": {
          "ref": "333c8f05-a0b9-417a-840d-e4fcb71143ca",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c3c69940-e75a-495e-ac4a-5f44bab28d69"
        },
        "item": {
          "id": "159d7cc0-5c93-4d22-bd97-e880a8463c6f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c1272f46-fe0e-44cb-ae76-544cc98bf5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdccde9-9f35-4d5d-848d-6d07d7405f82",
        "cursor": {
          "ref": "c3dc4e7c-d2e3-410a-a860-4ecd8f209e28",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9ca60fe1-3bbd-406a-9746-c888fea7ff69"
        },
        "item": {
          "id": "afdccde9-9f35-4d5d-848d-6d07d7405f82",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "93b0c155-b3ee-43e9-ab05-36c0fe58f495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d9db87-b5e1-4883-93de-22a256d34f47",
        "cursor": {
          "ref": "7692533f-9074-4dee-8fa1-a3e9c33468fd",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2ddd88d3-592a-4975-b8d3-0d57244f775f"
        },
        "item": {
          "id": "e6d9db87-b5e1-4883-93de-22a256d34f47",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "846b95ac-2b84-4870-9f09-d38f69fb723f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950cbdf-a9c9-4516-9d05-66d7205bf7ce",
        "cursor": {
          "ref": "dd8f8bcc-ab9d-4f0e-9f45-d2ef0560d1cd",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3cf546d3-de37-4ecc-97cc-77e44c65d7f5"
        },
        "item": {
          "id": "a950cbdf-a9c9-4516-9d05-66d7205bf7ce",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e2c5567-3a0f-4a52-be92-e7c1998a0d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60357534-a174-4788-b967-6f0b5de5a11f",
        "cursor": {
          "ref": "54f62ac9-7353-4c29-bad5-3e8af45c1af4",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e0a08f44-0898-40cd-9313-cbb84f1f1dd0"
        },
        "item": {
          "id": "60357534-a174-4788-b967-6f0b5de5a11f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "470ba02f-0607-4c7b-83fa-4576a6293b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefa98f1-0d0c-4d42-b040-70df2d7c6c61",
        "cursor": {
          "ref": "fec7114e-a950-4409-9bd4-3ccdbb6aa272",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ae14e05-4fc3-457b-97d1-298d88e92a40"
        },
        "item": {
          "id": "fefa98f1-0d0c-4d42-b040-70df2d7c6c61",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "10d3709a-c1cf-4efb-b182-14dd48ece3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0625e3c8-6e75-4382-9431-06c4e2c0ff0e",
        "cursor": {
          "ref": "9d751385-9375-4470-8f80-9e90e93d2275",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ba9b92f-4e77-4c95-961f-7f6731124cea"
        },
        "item": {
          "id": "0625e3c8-6e75-4382-9431-06c4e2c0ff0e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3969453f-fceb-4b1a-9174-ebb51583798c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f5519-7fd9-4ae1-830b-c4a00a11e4ed",
        "cursor": {
          "ref": "ebb7f3ba-9d00-49a8-adad-85430b11f8e1",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c038c16f-2ff4-4ebf-8b2e-667f80e2a523"
        },
        "item": {
          "id": "c11f5519-7fd9-4ae1-830b-c4a00a11e4ed",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "717f2def-92dd-4902-831f-954d4b404cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dfc302-ef82-4a5a-8776-753d859b4cd5",
        "cursor": {
          "ref": "31df1d2a-7ace-4b91-a0ea-48fc3e940362",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d90ec739-aacf-4b7f-bee5-713cdebb3fe6"
        },
        "item": {
          "id": "b0dfc302-ef82-4a5a-8776-753d859b4cd5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "385d8889-706c-4143-9051-b18c812b803a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3acbd6e-f4cd-4a53-ad8b-e47c2222d15e",
        "cursor": {
          "ref": "a629ef7c-1c89-4b49-b1f4-ac405b23c1f7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2bd80953-b436-4117-83a1-ba19e9082ca8"
        },
        "item": {
          "id": "d3acbd6e-f4cd-4a53-ad8b-e47c2222d15e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "56de55dc-091e-4933-b9bd-b324a3993038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f450e5f3-b766-45f0-be34-86d19918b753",
        "cursor": {
          "ref": "b4b4f204-5f8b-4985-8665-c293702e45e8",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f0d38705-76dc-433b-9da9-9913004166bf"
        },
        "item": {
          "id": "f450e5f3-b766-45f0-be34-86d19918b753",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "49cd682f-6afc-4535-b8cd-12590734252c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d1be7d-09c7-4b4c-8076-4d5d22c7e7f1",
        "cursor": {
          "ref": "d9d36996-00c3-43ef-b8d7-257e9b075a93",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "77c43680-54a2-4c56-a252-ae10f45194f3"
        },
        "item": {
          "id": "97d1be7d-09c7-4b4c-8076-4d5d22c7e7f1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e6d5c46d-4a6e-4fbc-ae7b-38f3b65e6642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e23994-00e5-4720-85f7-627aeb6fa69e",
        "cursor": {
          "ref": "51ac745d-d4f9-4eab-8d70-2443ae34148d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e1064f9e-d95d-4372-b75d-1d93e1f58948"
        },
        "item": {
          "id": "34e23994-00e5-4720-85f7-627aeb6fa69e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6036f45d-3bc6-4428-b88c-f6a9b6c0dc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de80dae-45a2-46a9-88a6-90e186b2626d",
        "cursor": {
          "ref": "abacd3aa-173f-4f1f-bdab-a3d8ff8c0a2c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "55bdf6df-3709-4b3f-9140-c4c3852fac20"
        },
        "item": {
          "id": "7de80dae-45a2-46a9-88a6-90e186b2626d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ae6abf1f-4dd8-4424-bb09-88210ef63727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a848cc-28bc-483d-9821-db051d1c83d5",
        "cursor": {
          "ref": "9d3a4628-0339-4dad-a87d-4c09ebd81ba6",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac1017f3-545c-409f-8a80-3804a2be2ae4"
        },
        "item": {
          "id": "a3a848cc-28bc-483d-9821-db051d1c83d5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "66d49995-2df0-4501-b3f9-2951d7cac1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bef2579-889e-414a-9c79-183c29c8869c",
        "cursor": {
          "ref": "7255bc77-33d6-40f4-9ee3-eb9f7a9f7a4d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "99682521-c3c9-4990-81d6-70f7ecb989a5"
        },
        "item": {
          "id": "8bef2579-889e-414a-9c79-183c29c8869c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e7cbc1e4-31cf-47f4-8090-60cb40e17bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17240f6-26c4-4930-8fb0-d8202fa5a35d",
        "cursor": {
          "ref": "c83f0773-4e93-4974-9c23-de0a6ae37e46",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dd401824-8d33-45ca-aef3-efb446da345b"
        },
        "item": {
          "id": "f17240f6-26c4-4930-8fb0-d8202fa5a35d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bb9019be-16cf-4701-988f-c5fe314bc617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9000a7f0-3019-4464-8c36-3beb1e1eb824",
        "cursor": {
          "ref": "a43f63dd-9b0b-44e0-be30-d7a46ea146af",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "14641bf5-c254-4eaf-812f-9bbf14115e6c"
        },
        "item": {
          "id": "9000a7f0-3019-4464-8c36-3beb1e1eb824",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3de6df83-4917-45fb-b4f2-25df3b4104c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f294c462-20e4-47cf-b474-f2049b3d0387",
        "cursor": {
          "ref": "bc072874-cb72-402a-ad83-ab23364ecea2",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "65305842-c284-477c-b616-a38fe3748936"
        },
        "item": {
          "id": "f294c462-20e4-47cf-b474-f2049b3d0387",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c8d3635d-b062-43cf-907c-c983e84f4fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099e81e7-fcaa-4b29-aa72-914057f0399e",
        "cursor": {
          "ref": "856505ac-4ed8-4c76-a6e6-54a6eb22816d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "91ad29a8-4f9b-4637-907d-95ffd7bd6132"
        },
        "item": {
          "id": "099e81e7-fcaa-4b29-aa72-914057f0399e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bcfb8879-9d62-4ae5-9270-52f3622cf6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377d8109-0701-495a-9947-f346a313d8d6",
        "cursor": {
          "ref": "0d6a259d-831b-4e1f-a7fe-dc617dbfe826",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "945602a4-97a6-47c3-ab22-6bbe4e3d855a"
        },
        "item": {
          "id": "377d8109-0701-495a-9947-f346a313d8d6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "547f43f9-e7c2-41ce-888a-1f8fd6d1b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6823ed42-904e-47d5-a6e3-035f3bbc9dbf",
        "cursor": {
          "ref": "52caad0b-2bf8-47f9-b035-9e6d4236f497",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "034e52f5-c8e7-41d3-8c71-2d76b28dff77"
        },
        "item": {
          "id": "6823ed42-904e-47d5-a6e3-035f3bbc9dbf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dc175f1a-08c5-4b1a-8195-6b4903c67dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefea315-bfbb-425b-a0cc-8b1553c90588",
        "cursor": {
          "ref": "5098f837-374d-4c3f-91aa-b218900ac645",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "24139466-19ad-4158-b1bc-dc67d6a6df30"
        },
        "item": {
          "id": "aefea315-bfbb-425b-a0cc-8b1553c90588",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c3734caa-d43a-49a5-97d6-bf52c2849288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8c67e7-52ba-4de2-bc09-2630cb1d418e",
        "cursor": {
          "ref": "3e26de07-9bb6-4d8b-a9bf-30bdf82b1e10",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "36373e82-6fe4-419c-9622-7ae05c7100d6"
        },
        "item": {
          "id": "ef8c67e7-52ba-4de2-bc09-2630cb1d418e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "afa5b679-b97b-4f99-b020-b55242b3e99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea71c62a-62c8-4d67-a6ee-d51f2f1f3692",
        "cursor": {
          "ref": "ac00ccf0-00b5-4afd-bd3a-9fa65b6b4709",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5e9824cc-bee9-43bd-a232-59c83062da43"
        },
        "item": {
          "id": "ea71c62a-62c8-4d67-a6ee-d51f2f1f3692",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7ed34d2c-ffb3-41a5-b935-fca945f44898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f3058e-422d-451b-80a1-e27f5a64fe4c",
        "cursor": {
          "ref": "8de4a95a-7639-4bb3-8fc7-62a892ee4d75",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ee53fc76-0a60-4ca3-b2ff-46d79584ffe2"
        },
        "item": {
          "id": "b5f3058e-422d-451b-80a1-e27f5a64fe4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a923ab62-2829-4be1-b056-3a4cdf58e428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f132301-675f-4a75-a37d-0cf14d8a1a20",
        "cursor": {
          "ref": "86eb4a6c-78e7-48d5-9abf-f61b9d25c92a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c1dc350-455c-4ee7-aee5-a57c8dbbd5f9"
        },
        "item": {
          "id": "5f132301-675f-4a75-a37d-0cf14d8a1a20",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "868e7123-5120-4089-903a-f2107584f854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a489354f-59dc-43fc-9ffa-6f9bedd2fac7",
        "cursor": {
          "ref": "4496f7ca-f16b-4d99-8def-dc2b43856e12",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "defa010a-b3f4-481e-b88a-d254623885ee"
        },
        "item": {
          "id": "a489354f-59dc-43fc-9ffa-6f9bedd2fac7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f6cbaade-23cb-419e-ba7c-fa43baa61a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00edfef-6e75-405d-ab34-3ca94d5c83ed",
        "cursor": {
          "ref": "c06b2c55-72bc-4cf3-9d2b-83354de1e38a",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "160de7c1-7e5c-49d5-8fae-9d7e64ed9279"
        },
        "item": {
          "id": "d00edfef-6e75-405d-ab34-3ca94d5c83ed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "205520a4-082f-4503-a764-15e55b7fa83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaf2519-9d4a-4b9d-91e6-5a9ac47f8db9",
        "cursor": {
          "ref": "6b78dedf-76ae-41bc-a1e2-f5b1b74e655c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a0f560bf-48d7-4ea6-94ec-ae55e2c3a2bf"
        },
        "item": {
          "id": "0aaf2519-9d4a-4b9d-91e6-5a9ac47f8db9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "78096220-1403-4ed6-8024-a935783ac9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71467e-8cd3-405d-a88c-1c399342016d",
        "cursor": {
          "ref": "60b60cb4-4dae-4e2b-966a-d10ba410981a",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bc761f1f-20a0-4cf7-b486-4c06e382bd91"
        },
        "item": {
          "id": "bc71467e-8cd3-405d-a88c-1c399342016d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "edd8f197-30f9-41a5-a46f-b90e42258d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b74660-3ca5-476b-a494-0d6257b34b26",
        "cursor": {
          "ref": "76d9c2fb-9a23-4888-a2c0-6b60072af7c5",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2b078a47-250d-4d45-9d77-cbdaac033e8f"
        },
        "item": {
          "id": "b5b74660-3ca5-476b-a494-0d6257b34b26",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "038c13ac-93ff-4d79-9629-1501beff3bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4632945-9d7f-4787-bef8-78ba44cab5f6",
        "cursor": {
          "ref": "75258bfc-9301-469b-b55b-7148c65ea29f",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8c42892d-dd0c-4f39-8563-84b9d45b01f5"
        },
        "item": {
          "id": "c4632945-9d7f-4787-bef8-78ba44cab5f6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "16996871-bb07-48b8-84e8-01f348265e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b751dc-cb67-4a89-9a09-9da1e8f19744",
        "cursor": {
          "ref": "5eb24c67-902f-46dd-8750-c65887097021",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dd128369-6f75-4de3-b9f4-ac6e0b76524a"
        },
        "item": {
          "id": "80b751dc-cb67-4a89-9a09-9da1e8f19744",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b8265e3b-b9c8-40dd-9515-2aab0af0ec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74565ef0-d167-406d-bf3d-723a3a855226",
        "cursor": {
          "ref": "c4af3c16-f852-4a31-a2ae-88b35854b2ac",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "adc1c874-9620-4687-931e-67381a6d9935"
        },
        "item": {
          "id": "74565ef0-d167-406d-bf3d-723a3a855226",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "460d37e0-63f5-4d0d-aca7-9a9f8c4d32b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d596503e-960e-40a7-a3aa-a3e4f4ca2964",
        "cursor": {
          "ref": "e486ce3c-c6ee-47a9-b607-78e6115ae151",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c00d233a-58c2-4da3-979c-a6e3cc3065a8"
        },
        "item": {
          "id": "d596503e-960e-40a7-a3aa-a3e4f4ca2964",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2e88ce2f-dd9c-43dc-b5ce-ab19fb0f2a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81ee84a-0e82-4ff0-b3f6-4a3bc3cc6c6d",
        "cursor": {
          "ref": "4ca49813-13fe-49b6-b18a-869b1974e03b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "24c8fc31-d59d-4176-a1d1-405160140bc8"
        },
        "item": {
          "id": "d81ee84a-0e82-4ff0-b3f6-4a3bc3cc6c6d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "52fa8b15-f8aa-458c-b60b-792589ae7bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c4b6b-f4cc-451a-ba6e-efe01857ec31",
        "cursor": {
          "ref": "ef1d5499-6018-4cfb-a95f-38c2268ceb62",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9aa78bb1-f648-4cb6-a0e8-45d3af6fea2b"
        },
        "item": {
          "id": "3a5c4b6b-f4cc-451a-ba6e-efe01857ec31",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "44ebc9ae-dc90-4374-b0f1-8d310cf0dfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eaf37d-bcd1-4a4a-a30e-bf96ebf73d43",
        "cursor": {
          "ref": "b3b6664b-b897-4051-b44a-1056733df3c6",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3cf1f744-5f11-480e-b703-a63042b7d0f5"
        },
        "item": {
          "id": "76eaf37d-bcd1-4a4a-a30e-bf96ebf73d43",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "efd39efa-347d-414b-b475-361d600ff734",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bdc1f6-d189-47d2-94d0-f48235eaa8b3",
        "cursor": {
          "ref": "ba71d657-05d1-4ed8-a6e4-75b1179d8792",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0c14c6be-aabe-4718-aacb-28e6fd23eb23"
        },
        "item": {
          "id": "e9bdc1f6-d189-47d2-94d0-f48235eaa8b3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9b2bca5e-8829-4e33-9322-b62e8f131ea9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb861f3a-dda9-4544-a479-4cea5b5e097a",
        "cursor": {
          "ref": "2be1bc8d-2e02-4cae-81a5-2f6841214590",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3dcec92b-6524-45f3-a0d9-e218441b1884"
        },
        "item": {
          "id": "eb861f3a-dda9-4544-a479-4cea5b5e097a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ecd83a05-284d-405f-a0f9-eef86345db09",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "899adb84-1460-4ecf-86da-840ed363b439",
        "cursor": {
          "ref": "c28459b6-590e-4aca-ac33-823177f23d7a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "45529107-2d86-4559-984f-2dd420c9dd93"
        },
        "item": {
          "id": "899adb84-1460-4ecf-86da-840ed363b439",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d67a499-d142-4c97-b52e-56d3375e0543",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fdd9af-ff92-46a7-8a38-870fa6897d65",
        "cursor": {
          "ref": "e5ec416f-315f-4f53-b4c1-aae014ad3c6f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3f008b2f-b874-4a61-94de-d8872d416a3f"
        },
        "item": {
          "id": "b5fdd9af-ff92-46a7-8a38-870fa6897d65",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e8ae4f85-24a6-40f5-bc2e-0563ab8f6154",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
        "cursor": {
          "ref": "fcee53e7-25f6-4e0a-af07-832127d0f0ac",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0719d57a-7f8a-4974-a81a-262d57ee5c0a"
        },
        "item": {
          "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19c59c76-bc50-4cb1-81f9-32a6bac0ee19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
        "cursor": {
          "ref": "fcee53e7-25f6-4e0a-af07-832127d0f0ac",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0719d57a-7f8a-4974-a81a-262d57ee5c0a"
        },
        "item": {
          "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19c59c76-bc50-4cb1-81f9-32a6bac0ee19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
        "cursor": {
          "ref": "fcee53e7-25f6-4e0a-af07-832127d0f0ac",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0719d57a-7f8a-4974-a81a-262d57ee5c0a"
        },
        "item": {
          "id": "7284768e-2c1c-4e4f-8429-7144fe99fccb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19c59c76-bc50-4cb1-81f9-32a6bac0ee19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952ba110-0a21-4fca-8e98-7c1735b448d3",
        "cursor": {
          "ref": "6ed14463-7576-4043-a7cc-16e7d5e642cc",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7f24af93-12a2-41a2-a8e9-89ffc4403549"
        },
        "item": {
          "id": "952ba110-0a21-4fca-8e98-7c1735b448d3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "09499e40-9941-4230-8e4b-b6ef2cf2a6b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e41deb9-fb75-4476-a8cd-ebc1480856d0",
        "cursor": {
          "ref": "835ca4ef-198b-422e-b2ff-bea8b4fdd4c2",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3f5321e-eaf3-4bcc-b5bc-9fec5e646a28"
        },
        "item": {
          "id": "0e41deb9-fb75-4476-a8cd-ebc1480856d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0c6e9430-e5fe-4227-95f2-a47eedf51418",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e41deb9-fb75-4476-a8cd-ebc1480856d0",
        "cursor": {
          "ref": "835ca4ef-198b-422e-b2ff-bea8b4fdd4c2",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3f5321e-eaf3-4bcc-b5bc-9fec5e646a28"
        },
        "item": {
          "id": "0e41deb9-fb75-4476-a8cd-ebc1480856d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0c6e9430-e5fe-4227-95f2-a47eedf51418",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7f31f3-0b59-4478-be17-8693456be8a1",
        "cursor": {
          "ref": "9b81848e-97c2-4cd5-a7f7-c437acadb131",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7555e530-cf37-4c42-9b04-2419fc030d2d"
        },
        "item": {
          "id": "6b7f31f3-0b59-4478-be17-8693456be8a1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "35c94adf-8fe3-4044-947d-65a9c8a5309a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9e98de-f80f-4a4b-aec5-83ceef684bdb",
        "cursor": {
          "ref": "43194bf2-1dbc-41b2-8626-94c818cc6eff",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "20e07cc2-00a3-4501-a4a0-0684a0f17d3d"
        },
        "item": {
          "id": "cd9e98de-f80f-4a4b-aec5-83ceef684bdb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e43be56f-de8d-4849-8de3-a03eed40f33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9e98de-f80f-4a4b-aec5-83ceef684bdb",
        "cursor": {
          "ref": "43194bf2-1dbc-41b2-8626-94c818cc6eff",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "20e07cc2-00a3-4501-a4a0-0684a0f17d3d"
        },
        "item": {
          "id": "cd9e98de-f80f-4a4b-aec5-83ceef684bdb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e43be56f-de8d-4849-8de3-a03eed40f33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73df215e-d253-427e-aa92-8e8816ec9834",
        "cursor": {
          "ref": "b8f9fd62-1dd0-461b-bcd0-746ceeb2c3eb",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7aac33e1-00a6-4fc4-a9c8-d15c0e8c6f57"
        },
        "item": {
          "id": "73df215e-d253-427e-aa92-8e8816ec9834",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "11d6f461-a3d1-4a1a-af9d-359cd97dc47c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}