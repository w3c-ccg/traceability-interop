{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1f7139e6-0467-49d1-9481-db46cfeee4d9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d68125b-1f88-4f1b-be65-fbd4f558ee48",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18f4fbaf-4d15-4114-9c8e-5869a9af8520",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2bf2286e-3562-4917-ac79-3e36dc430397"
                }
              }
            ]
          },
          {
            "id": "3c4522e9-c6f7-4b78-81b7-0c56aee7505a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98f5a614-f4fe-429b-b174-1229064ce3b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d73856c6-d913-4768-ab1a-28d4f6e12c15"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1d3204c7-d7ec-40bc-8815-e78c2bff1bed",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b8de96f7-e17b-4c5c-b8ca-8b14306c7918",
            "name": "Positive Testing",
            "item": [
              {
                "id": "904cda9c-fa87-426d-ac6c-a93783ef01c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd5dbc50-2e1c-4fed-9a14-9f0933697bbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a50508f-a4a4-4cc4-a613-a67c9856bea7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1d0b575-57c7-4564-8171-cf1ac7ee81af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98a8177e-7a4b-454f-a7ef-896d3774bf93"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca7e1cd7-4bd5-46ea-9e4d-ef7d1ae6b747",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e2ad3d2-19e0-43ae-8cc9-6a30ce045fee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "863de96c-0f77-4650-8710-cc9f4b537062",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1d4025bc-e402-4064-a9ad-aba98020b25c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b8070bb-78a8-4e58-94d5-3e815951fc0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29a135f7-dce5-49ad-aa92-a768039e240c"
            }
          }
        ]
      },
      {
        "id": "29248c10-0e9e-4657-acd7-61dbea30bbe3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9d302203-5d7e-44a5-97ae-f705858efe4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "555625c7-ee5c-4533-ae69-b8cb71a90962",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61a1701d-e217-4b8c-89c3-ba61ab08b3dd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c06d57-f9b1-4f81-9d16-b28954044a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c757d2e8-a640-48a3-8a7a-5f81dcfa7c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d8208d-35fe-4c8c-84ba-138685a7eb67",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69472502-bbdd-44be-bddf-1dda3d42e186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d733d8e4-1fd9-412c-b1fc-7b636b1be7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e25ab6c-bebd-4295-86ff-0e8cd460e2f1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c17d4b-6372-48af-96a9-47254c945960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70aa8ba8-0133-4c74-be25-b05d95a85519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6104abab-3f47-4b49-a1d4-ba75f12c301f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dc252d5-25b0-4d7c-ab82-2bd3ef4793f1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b4c47b-d718-4dca-8515-5f9652752e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21d94a61-8562-41fe-9bf5-c86a9ef12582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cac2921-d4cf-4d3a-b6c1-5a47f583b01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743073b8-524d-42db-ae5a-ad04c17a336d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dec0c918-0ce7-4c1d-9822-ff92e5f1b0a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48b0f4a8-33d5-4e48-a410-7961554e3f78",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dfdd1be-982e-4971-8cd0-86ce786e89a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "32874ac4-2477-412e-99fa-d46ed5517a60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f81b230-80b5-464b-8227-eeee1b27a70f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "33dd89df-707d-4829-bd1b-0eb2cf0021f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc1da89d-b840-46c7-9bc6-b36144f317c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f89387a-428f-406e-98df-2d24e8deb672"
            }
          }
        ]
      },
      {
        "id": "6d2ccb4b-e2f7-4a84-94ee-9e63101f7b28",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "342a40e2-16ee-49cb-b06b-9129dc766bdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe45055c-d2eb-4cdd-b49e-d0d71d14efc2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "73ee43ae-994a-425d-84f6-f337d8663a10",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92504b4e-6ddd-4281-8877-961f486dd0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76082047-b929-4864-9da4-e998b7852206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b64ee6b-7194-413c-b111-ee384178b0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a24a2a21-fdcf-4f9f-b315-5279c819de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25f8946-d7a3-4164-8884-bfda1e332389",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0740d2dc-4070-41a0-b181-86e6bc00c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8b352a-52bc-4e29-9527-4545ca0bb24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d8de70-08b3-43aa-96f1-a06394efaef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e22cb6d7-1cff-4c85-903f-2c049bfc9138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1575d1-25fb-4bbe-a4de-90d05c681442",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b388b4a-94bb-4ba4-97b9-99eae6174531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9c8145-392a-4437-92d2-cef0c4c22271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2024b835-6216-4435-a135-58259c30797b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70d199a5-545b-497f-bdb5-301cf7261bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ba5f8-cebc-4e34-92a6-6d583bf1c0cc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93939b2-246f-4e53-8d06-6acfea64ebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c24ad9a-468a-4db1-b20b-c9d747cd0e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5201eadc-a628-4cdf-b5d4-459778e18af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0cc7c3d-f6ad-4806-b916-e8858d01f12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2703ab-3616-4a85-91db-59505c941c64",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef4a05-61e7-4408-9808-7316898491c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4e1979-93ad-4574-9a74-9f5f181d171f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68da1c2e-e975-4b62-bc81-792df319b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077634da-13b9-4bbc-9479-49010cc17158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08d7c24-5412-4c25-be6f-a31c654c388c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423d8cc4-ce18-4e37-87bb-8f1a4cad83e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029d00d4-fc9c-47d0-9a39-ad8fb39427d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b7f349-1260-4565-ae94-c1ab902102d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51ed1c4b-d5dd-4e68-964f-888ba5104186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8a520b-1dd6-4d60-867f-fe05d0ac40d2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b90276-ac11-4eb1-a07e-4dfe8d94de14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca5c832-0b35-4c27-9412-7d2ab8993665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d8a1b1-8855-440a-b34e-0ecc603b3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa873d89-d692-41b3-8c72-679e672ed517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1247a12-a97a-4632-821e-81e5c28abad1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a79623-2f61-4fab-a94d-2b759455a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5912451d-f5fb-48e4-89a3-0bfabcb69c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dcaa95-29e2-486b-8d77-d603d580c907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c806e302-d3e7-4faf-b180-e6f571195f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b108ddc-7bb2-4410-ae15-b0f92b87bbd0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f5f5cd-51a8-4433-a367-2ba3ccfa6e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb5c3d8-02d4-4810-90dd-8f31022aad29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af793ff6-82c3-4a98-b4c9-76290fe119d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adcfd057-4fbf-4630-947a-82c225c1a387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b232b0a5-7211-4c41-8e0b-11774fe8ba43",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f023939f-35cd-4b75-bdf3-3f0a10772b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c29d43b-404e-4b47-9549-effa2715946b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007b6882-c2c1-4250-9501-8909feb03c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c95995e-e73c-4133-a392-0b5497d592de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d581f3d-8d0b-4141-a198-fd6de9339d5f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d15822e-a7ae-42a5-9165-451ba1f8381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bc82d4-5048-40a1-b65c-206ee81c723d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3375122a-ebec-4f7f-8c68-81b5d72f06a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5916fc0-8472-41c0-be48-c44a59467540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2c7b6e-3cb9-4871-bade-bc519a67df61",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a40ce2-fc6b-4f05-ad40-324e4c44d72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac74c4b8-ff3a-4ec1-992b-8e1b7d8db03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564a3660-21d0-42a1-a325-54920a0277c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a484154e-9838-410d-916e-cda85f18266c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f07416-ae8b-4a58-885d-7691a4c83add",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe322b2-f7e1-4464-92a2-52f957bdd641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b77d53-bdfe-40c3-a4b2-bb190826bd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe29665-99b8-4aa3-8d57-56bfb295f79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7229039-a176-4b40-95d6-f59650e4c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50883a30-1f46-40da-a910-62939ecc038a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bcf369-a020-40a3-85fa-b7058e33ccb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e0d377-f1e8-435a-a590-7db165945443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9074c2ee-53f8-4863-8c4b-0f1ad243d810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c75e3fb-5c89-48c8-afd8-2dec73dc0a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d31a4a-433c-44cc-a1b2-eab9d671f825",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b0f23f-f5ee-4f08-98e9-2e464b67c371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d606c9b3-09e7-49a1-a4d5-38d20695131f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318e7c5d-b638-45bb-ae15-b41cf089724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c2b5693-2fc6-413d-9834-fe327bbcd8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b9bb47-c62c-4b0e-a3c8-d8ea20ce3b27",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f53dbf-c08e-41fa-b674-41b7a965a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a907383c-a196-4a2d-83a8-0f9d00c48247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62780fde-4a5a-4fe1-864a-896bf3757832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a61abe45-89e4-42e0-b6f3-cae5e2cf87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2292d52e-6cd0-47b6-a642-dc9479aa346b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fdac1e-6889-417d-92f9-385ac39dc6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b9bd5c-a43b-468f-ab60-f45f9f448488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b98c5b5-6fb4-4d28-89f0-321dc2302b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a055d09-5d41-48c5-a2e1-404791953ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87688b0-dedb-46e3-98da-10118bdd9f1a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543a953a-53fe-426b-82a3-3e8095e48906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4c4c57-db2c-4a2f-83d6-a5f5a85c9da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9a6dd1-ce9a-4a7a-a0c3-c14e1839f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58380ff-aa3c-479d-a6f6-cd34d1a7a179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1e93b3-644a-4f5e-ba2d-423e2d1c190a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fada85fa-eec0-4a79-869e-e2fbd9d6f1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d49b749-5fd2-4878-b0e4-9fbd2b158e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42fe0d6-9de8-4158-bb8e-007b2e4af478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd88585-e771-41ad-9d27-dd2d75274aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2642a476-1b87-453a-804e-9796ef597e92",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad548b2e-2ec2-4abb-b39f-b959d4786225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c36a4c-c2fa-4609-9fd1-daad23a6e9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948a3aff-a8d2-4ee0-92e3-ad6cf2798a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28818401-51ff-4582-a1ad-45a6c28ec9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ceea2-e0f6-4586-96bc-425d808026cb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4dc9a-aeef-4dc9-ba77-60b26579a6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d3b387-405e-42f8-b3c5-f189875d84ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a35d8f-5214-4772-b1f6-1e67c575e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46ea0f4-d7e4-4e6e-acab-1e632086653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3064017-a842-4b38-a8f2-a420b2cb56e1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf38a903-e13e-426e-9547-38e92d435048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c48e1d-9417-40c0-8d38-21e9bf7f127c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c625fcc-c7a8-4afb-8d4e-2091573f6062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1294dff-2b07-4eb5-ac70-b2e1e9362c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c12368-826a-4a44-8eda-1189984ee509",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ee8899-a9f8-45ec-8284-4c4e816d8ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace17b83-367a-4a7d-af36-324a187523f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b17541-8db8-46bc-a112-2f9c8138391e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52814141-3100-4e79-a8da-bd42a8bbaece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb68af22-2271-46df-a103-e2990f02dda6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9419b3c6-ac7d-4198-a393-7a8ac0a3fed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b92c79-0d32-4e0a-bb62-8ba5f9ee46d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f825f7-dc7f-4990-ba9c-9fbea821c051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccc1ec2-f404-4382-98ca-82b85389c53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01e16c2-74ea-45d8-856d-4b43d04d3976",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff979e11-9ff5-4c44-b2ab-b1c998579831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec08f15-d60c-4a00-a491-2491c513064f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30847177-a2bd-4c3e-8056-60477c73228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e891169f-24cb-4a82-ae67-ba59caca0188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fffcb66-baa7-4a26-af3c-afa077ff8579",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c528f677-00dc-432a-b4bf-982e4add27c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd72f9f-94f7-4a37-b03f-aa7dc8929f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f341a-dbf7-4ca3-8ab2-03809c780591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95543f7-93f3-4e3f-88e9-162788609b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db621b7-5b04-4f05-8967-c98f0ab13101",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470fbd7c-8344-42f4-afca-0dc786935e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980014b4-8e4f-4db5-b079-a148b9f6caf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182504e1-6249-40d8-bb01-3eaa15b6841f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2767af43-f62c-4ef0-a323-c670bc8f1480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948aec8e-386b-4297-97da-7bc16e8658af",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca234d5-57cf-45e4-8b2f-28fb18d86193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607799d-3117-43c4-a143-3b5e626d10b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505374cc-4561-418d-80bf-84452deb50a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a94c2a-6425-44ae-853c-ae1e96e9850d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8806c2e3-b3eb-43ca-a0b4-6993f9045cdb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e501840b-c1c2-4832-b3b1-2ac59d6faea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac302ca1-9efd-462e-ba34-9620a73d66f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a9919-6ac2-4f2b-ad9c-5768e800354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "195f6b06-23e7-4262-a5c9-ed3a1df93d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b111b094-58b2-4533-bb3a-981ac2d1ba3c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee97427a-08b1-4be5-8677-ca9e6c5ab705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0869cca-d9d6-4638-8034-6e79684b53a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe7fc09-77fa-4475-ac43-c521e9918094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "88952f39-497b-4b6e-ad5d-018659acab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3ec700-4d42-4c2d-aae6-c535267b9925",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ad807b-4802-4caf-9b11-71b6802e3572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b957d823-1c0a-4098-a739-8905d9f4d845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e6f52-a6e4-4287-8251-f2584377d546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c332645-02cc-41d0-ad91-fbf941fd4c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb2f355-7dad-40cc-9fc2-887fc0faafe9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e5e214-0df1-4896-af7e-afd61b6ec173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050a84c8-e45e-45fc-a925-b73f549a8a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6dc8ff-dbad-41ec-a649-1b4e615d9d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86cb5c6-0705-4bc4-bbc6-640c6793aab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eefbbd-2088-4482-82b5-8cf91f18d0d6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3224a1-b9f2-46a2-8b06-8abfd1d8b8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d9f78e-cb95-4c88-8c2e-985e5f129a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5ef40d-bebb-42a0-867b-6f96f4b5ee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb38580b-d773-49fa-99b5-837a911114a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559d9def-5dca-4e3c-9fa7-4cf49757f253",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9708a159-dbd6-4e6d-8a53-8bab6c9efc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e59ed3a-7853-4abc-8b29-a17c83b52c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d14f3bc-b74d-44d2-b133-0bb19b3f3095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8218daf8-3ee0-43cb-b232-6b24ef17eb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902a5844-53fd-4d76-91d4-6ded0b549686",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f4d52d-146b-4d8f-be0a-3f52bffd294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef9c7c2-0a26-4405-a42f-85699ba0a9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1105f68a-9ffe-4a17-83f2-efdc2fe86477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "51b0b726-089f-45a6-9b8d-f87d9fa45dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5807a2c-52d1-4b5f-b977-b5e9aec16be1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfe93c5-e45e-4f1b-be4c-363e3915eb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56bfd71e-3612-4f0e-bb63-180319beae05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e612d53-14ba-4f1b-9ee8-bf53be59f381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1876eb-3b8e-4f68-b346-c55366966ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9fbeda-199f-4793-a267-35c71c9debc8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae602838-f423-490c-b578-b046f209ee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87907fe4-8caf-439d-89da-1d0c36809b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16983b7d-440f-462e-805d-3d6580ff0cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "caf9d155-c20c-4d01-b42f-d8ad6899920a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a600064-9c0d-47e8-9df2-9761364b4647",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682972b2-c2b9-4f65-8815-97732660a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef6a9fe-d365-43e4-87e0-0adb118c44cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55101521-6af8-406e-b32f-5c153e8f9ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a46ff1b0-17cf-46d4-8953-c85b863c50b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb873e8-29a0-4a85-ab34-84755f92a971",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa13efb5-98db-4a87-9853-db7e48d18079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a6a5bd-19fc-4b07-9e12-384c8dab3d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718c07b8-9a4f-476f-9a9f-7499b38dce94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36aefb70-3309-45a5-b8bd-b286dce0785e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c634ab4-22c9-4e62-b89c-d6c9efeb6a27",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a905ad1-5e81-4c37-b487-b4129a75623b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e6789e-53ee-4b4e-be29-763178797643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1189f608-0c50-406c-a78b-972b9763bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c052246-12cc-4b72-9110-3d9b2cb864cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aab593-5ed8-46b9-915c-d3b7da8a3337",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57578b75-aad3-4380-99a2-54a24d1670b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45be92a2-3cf7-4fa5-8afc-5a8eddfbbcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad42d55-4991-4d12-a252-7f9c3245784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36433170-e40a-4be9-b1ce-d3d0f3404b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ba0a65-7c82-436b-9032-518008d980ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e242c6d-0c7f-4651-a279-b35a0c66aabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b396bff-a730-4b56-af05-6f31f7f4ba25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ecf28-fcec-4cce-96e2-f8e13793c270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fff40b-c75f-47e3-87a5-e031ccf5c7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b6a77b-4b20-459f-8c9e-287639208a8d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ae0cd7-3457-4d00-8b94-38a01559be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7685bd8-8039-4bfe-b977-8aaa899a49c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cd685a-e9f9-4e1b-b95f-bd3d240b8e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37027b2a-3471-46c8-b94d-d80934f87efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4354d9d5-3b75-42b4-b091-f979385bad63",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50a5589-94c8-408d-95a0-e69610bfb92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313b093e-4019-48f3-8a74-42ca0fa6e583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd26fc8-709a-432d-b9c8-e0adf51c424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "461f4855-8726-4f06-93c5-25dc580e847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa3393f-eea6-49ee-9ce7-059c432c1de9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065f3137-3b5c-4bce-9b7c-de47df7b00d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ab0c8f-978e-4b2a-b8ec-df271a9737c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581b5c7a-9e07-4c5b-9b18-2b4497372360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4103baae-61e8-416a-87b2-c4c349013941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8983bb10-8aeb-4f40-ba2b-b24654030bae",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e877015-ee7d-44f0-b783-6499b8528c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149cdb68-f8ab-4219-994f-5da3ab4e623c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8805cb59-e205-4f47-af20-1c8a2a420809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab64970-53bd-4eef-9164-2b63238b60b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6736600-2957-4f6a-967e-daeb97bf2dd8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bf7c1a-f69e-4e46-bfa4-8bdd68dc1bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5553e45d-010d-43df-a1e7-01154a81b4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275285cf-484f-496b-8ed2-bad6882f8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be09d66-3bf6-4eff-9fbd-29d563d3335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8534f3a-4314-449c-86d7-f38e9ca173f5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab6474-b017-4eb7-9453-b9f09898a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44d5de4-f879-4042-9b7d-1a723340f577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d8bd14-528f-4414-b02c-d33ca217232d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6110aae-a6d6-441a-8262-192bad99eb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74af281e-ae80-4488-a5fd-2dc90e2cb169",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd91b64-64f8-4bc4-a4f1-228251c8c1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea617aa3-e390-468c-960a-dc61d9013f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42794f6c-1411-4a7f-a991-7438337e830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4af3e46c-4538-414f-a80f-22cbb4764d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924430c-9e5f-4ce3-bf1e-706d2e705f4d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0ab1e2-9e63-4a20-a788-10699a533bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444989ee-181c-41d3-9fdc-48a944fbfed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af97f83-e92b-4ac7-a9e7-093bc27c92e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3fdb88-242e-4a10-bfba-6af93789fb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2785af33-726b-4d2e-bc74-25d8636505d6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728f1458-79a5-4db1-b1f6-c632f4241e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776528e5-4c1c-4664-80a2-bc035e1ba2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd5c099-6003-4dde-a3de-fd01e5814914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b4ecb4-1081-492d-bbde-8c8e2f56a3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8ba15a-d95d-4696-b5fc-23dd25e1a9f8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e09646e-4f89-4d14-8b84-7fa2ff40b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40418478-ad61-4367-aef3-c44c59a8c59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3837ce92-e8bc-4520-8844-5df4e18685cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16dbe3c4-cf64-41eb-9d29-0dca5cba6277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e44a616-1e5a-4cdb-bb0d-0769fef1d735",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbcdaac-88ff-4f44-818f-261008039085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33ba75c-7401-4678-beea-5c2bb1ee5caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44516a20-d711-4754-809d-31d920b4dfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffc08e9-d3c4-4232-bdaf-d3b959eebdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb08a88-5dd3-4d15-b39f-50d95cb85f26",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ffa9b2-132b-4dbe-b668-698cbd279d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f91700-a91d-45f1-939a-33e7467cea73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70b8e9b-c5d3-4bd9-9909-a3cc42dd3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0559649f-42b4-4598-921c-38c9adfbef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612bd5f5-2d35-4773-92c6-6cf6345595d1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637990dd-3fa5-4518-b246-2b8b39ffafe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9877a278-0e41-4b18-bb84-f5118ae78b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59221c4f-ef0f-4a00-b9fc-55f5a468669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73e0c56-417c-4eae-af55-b22335cf36bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e65b92-c3ed-4c98-aee4-077f997b5620",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ce2529-ac06-4c10-952b-534470363eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce99e74b-15d5-4c78-b773-91223fa53725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb99e8-075b-4eee-a764-3d95aac294b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf8e4c5-a5df-40cc-8661-d266e899f877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda6d5ee-d4d5-4b54-97e9-cc72e1b8229f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84065e95-c635-4d8a-979b-7c504e0cba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72219492-fa5f-4f42-a9fb-4c0fd4c601de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3192019-1a1f-47c5-bac7-9e5aa43fe40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fca40b-842f-4a2d-9e6c-571b16d731b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93fd8a5-e8b1-4444-9960-e673a0691fbb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ac3f15-b853-437d-8b66-106c72a55923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b18d07-5268-4bd3-8b8a-efb5e6f33c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3533813-e626-407c-9585-790914d30e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2dcbda-294a-42f7-afec-1b1ac7d4f8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dafdc6-284d-4364-b8ca-3621d0dfdded",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d512a36c-23e9-4e26-bf46-2b2ea00387bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fd565d-4449-497d-a338-ac40a5ffcf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609365c2-6e89-4c85-a7bf-6ca5fdd7cdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b6c5c2-6aae-442f-b56a-77b00d53e002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a083953f-c9d7-4822-a58e-4fed65baad06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdcac12-788f-4e21-b212-7d8be2c94da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0cfae3-3935-4476-87fc-ddf1a0251cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c763a145-a3af-44b6-aaf5-9b8f3381c08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acbf53bc-30c0-4e22-beb7-76cbb9ca14e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e749dae-46af-4ede-abec-2a91e306088f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a3ff75-a05e-4167-8e65-e68ec7df0799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1561a8-c8f0-4426-a3c4-193411435f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5dabe-bffe-4fa7-a249-7d51cab275c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "634d0438-89a1-4f2c-a7b0-1d7b1044dee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1871e140-c00d-4991-a358-09130d583eeb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265301a-dfaf-4c5a-8cef-1d540ba14933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3850f1-4d9d-43ea-8b4f-3d84cf973656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c97b610-2c16-4509-88e0-a8250c2faa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "36fa4de7-de37-4557-bf54-c7027f967c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742f52f2-b5ec-4166-8771-6af096681c2b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f271231f-9cdc-4ed0-ae77-bf9b57c2496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72b1e87-9f7d-463a-b8ed-8eca37ddaa71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19270b74-b563-4fd9-8501-2babddccd3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0fb4a9-7a25-489c-8687-97ba1b3a3502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b379728c-f492-4370-9d54-f5faab97d427",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2092dd6f-29bf-42a7-a929-3c138141f93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045fbc72-ce95-47f2-ab22-eda7aab03988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dd0443-c0bb-4c3e-ab0b-040b0274b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8339d0f7-922c-4a0d-b200-2e03e118747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca69a6a4-e244-4ccf-8d42-d8deb1b9ba53",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6db44b-daae-4efb-a2ef-5bbdeea07825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4814160-4fba-4bd7-8b4a-28713316c286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba514bfd-79c0-40f2-aaec-3a8cf52e7b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d76c43f1-e19e-457a-ab3f-e4e31084c0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff53955-b220-4b49-bc3e-2b303dd3c8fd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e272a174-4dff-44f8-b989-b1033f05cffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d923fb-4640-4ea0-871e-4667b972dee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2431ea6b-02c0-48b3-a657-286fa13f3bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a252fa5-7077-4882-9375-fd1647ba3651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e99e35-d44d-462a-b232-1e495586c085",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33df6394-6903-4e1e-8758-ca9c8445c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf5ee56-b4f2-47ea-a534-f3c6032e1dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337a4cfd-ab3f-4352-9bcb-82c1f4feb05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdd33b4-5dd9-4430-99bb-60c83e2f57a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162e0463-7256-4991-86fa-20516b429127",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499a8155-1100-4e66-aaf2-9801f8dfb32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d1b115-01c2-40e0-a15d-976939400f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3588bc4-c140-4e97-a9d7-daa35c0428e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa78a5cf-1f95-48a7-9f72-7b5efb3cd1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dc6a37-4582-40e9-b3d1-0355f227db61",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af10b5f4-22d7-4511-8086-b6f096fc24eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f980b73-054a-47be-a893-7c1be1ecc1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39072fda-9dad-4b33-b1e1-7155ba6379e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b71330-ebaf-447a-93b6-c72e800958ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f4c102-0f4e-4d4e-a366-85a4f80b044d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3f299d-9e1e-4d07-93ba-319274977ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d19f04-e8a9-42a4-8cf1-d3bcf205861a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2354b5-dc72-4a57-8e14-ee7371ae6e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "809015c7-9647-4e22-ab03-687aa6c030c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dca70a2-c1ae-4a06-83c0-b10339230efa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d670f6b4-3e54-4f74-83b1-1c07943dd81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bc9260-19ff-4b37-9ed3-4bb2810afd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaeda64-2b38-4af5-9bda-342adc4880f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde032e7-fd9f-4e9c-ab2b-fb8f3935eb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5947c7a5-6122-4a3e-9881-b9842dfaf794",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82132ba1-45b5-49cb-87b1-9cab506cc32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb150c11-3b39-4b8d-818b-5f3fea7dc412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aaa0e1-bedf-49c5-b282-590c9f01cf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de2314b-9052-4c3b-95d7-9bde15e08998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d01ef0-deef-4510-96b5-6afbf79b02fd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999f127e-da1c-433a-a6f9-30d147cad599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e472166-dfea-46a5-b8e8-aab306b21a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68109e15-3948-4311-a81f-f403f3d9e385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "631009de-5873-4114-9442-1efe3b7b0b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a906a6e6-1c80-4982-88da-e1698746b39a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697f4590-1c8f-45ad-ab76-17bcb8e7dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00c7e0f-c66b-47fd-9096-4b9d85d94ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c3c259-4549-44ef-b11c-67a73409686b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83103aae-8383-452a-8983-8405eac012ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9431548f-85ce-4e64-8c24-6281a16ae363",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382edf31-8a45-4644-8d75-b740641c164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc36228-f199-417f-9710-06646320219b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa047333-5ce9-4723-bd86-04e151068a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f385670-1007-451a-b39a-8dc1e86ddf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b38bad-fef2-4898-9ada-d7a00b076d23",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3910a2fc-895c-4aaf-8b13-6f43768ed4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b525d17a-8f38-459e-881e-5f5ce3a0e53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc22be73-891c-446f-ae43-4671e1d5f24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2755e3-3c72-4cca-8046-411ffe128abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619b584c-4ca1-407d-b729-edddc7d4f30e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6573c3-5a6f-4a00-9e70-ee1522a6246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dd9a7c-421a-4538-9925-a62976c57cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ae35f4-5726-4b1e-81f4-609ed1f5e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cccfe9a6-2619-44a8-badc-a4617b352642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e65309-c77e-4b74-8a74-abaaac1a38c6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5151c2c7-328a-453d-84a4-85cbe8e374cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fe9b4b-312f-41be-8bf2-fa76167ac8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794d220f-0e25-426d-81e1-7ef64b98b47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5da18f-eeb7-48cf-97e0-8d0c17b704b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd5795e-cf6b-4626-b2cf-bf8552a604b2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54b4404-668c-43f6-9e51-d86004eb22a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398c927a-4bf5-4077-ae53-28501ce01a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d78f1e6-ea6f-459d-882d-3bcf89830d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f40e15ef-29b1-4505-9a7a-e4ee6226d5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a8f95d-4a93-4f8d-9d60-3861f40e73ed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6153d033-6deb-4020-9e13-32a80b70dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55418f1d-45cb-4b60-8da9-30b81ab88a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38fcad0-c034-41f9-8e5c-eab7f1445175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf5f776-df53-4f8d-bb27-16c7bb065054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f5caca-8d12-432d-b8bc-95c92282adb9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4ccc40-e07d-4188-935e-d7ddce384f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58d118c-2a7b-4e6d-8880-6fef45e5edde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d8236a-143e-4daf-85d3-12405af56306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6680bb9-3a1c-4448-b749-d9b7341a0f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca90cf5-4efa-4de3-a722-b4c1599ea59d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545b5389-0620-4c6d-89f5-6235c8bc85be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84a6eea-8fff-4b13-b7ed-a4d5205839d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a53bfac-548e-4428-8e22-5903162da086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e75270c-d841-4368-9189-d308d8a83e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3789e563-f2c1-42b9-91a9-0143929ae78e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7bcd10-85ae-4392-9052-1ae56dc955ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421aab65-1466-4001-b77e-51e06a9d4af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96ac61-e5df-4366-a6dc-bbb5839de3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3e3eea-67b4-4b05-94c8-4f87c7d2441d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f775cd-db96-49c3-b12d-17333c60962c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3bd173-c682-4441-bf42-19c5dca808fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5082b03-bb22-4781-9f19-cc2a79f32022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59acc605-791a-4297-8d8d-010dccfc4c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74874c61-bc23-40ed-ad3f-a1ddd84bc6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe116413-9cd3-43cd-883e-a57f4b8b59a7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a0c58-2697-48a2-be07-98424325b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb7ed85-a61e-454b-a439-400d01af6620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd9c651-bf1e-4fa7-b551-2d57bcae12d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0953faf-1a5b-4a48-85c3-214f736a6e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08330527-08ca-4230-b2aa-83771b8ed81a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e626454-3a69-4bfa-b22f-74ce0cc00beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cb4657-daf5-4233-a58f-f733d583d0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9125c9-075f-4118-a700-6f37087b6e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "838bd0ec-b5f1-4c7d-abfa-213cb3ea36f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483064ca-8b22-4b52-9854-d6794abd022f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf05516-6433-4748-9f46-24c0c3b04508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0077a8f-5c60-4674-980f-a8ccd0cf85c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6408e505-316a-4798-bd93-db5af80bb082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "60343618-89b4-4041-bfa6-5f2293d3469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0fa3eb-d36c-4155-86e2-875b2d1fb0a9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a527791-47cd-4709-a40e-a6d18781bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af21617-b7f0-446e-8cbc-a75cb0473c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d821afa-c556-45bf-aa34-e7b8ccba6d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78aac69e-ebd3-45b4-85f5-02b1530715a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d4979c-8f27-4717-a3d5-28fb1699c15b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153a5ad3-c73e-494c-897e-668b9a8a7132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd32d17-fbfd-4393-b17c-750ddabf7873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80468765-86ca-4387-a3cb-e9dba38f706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3e4796-e4e1-4783-b3f9-07e5e65c77e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff89663a-f58a-4461-b120-15c858d266aa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aa89cf-34a8-4767-a923-e7c08cbcdb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a55c02e-b2ee-496d-8fc8-d7982abef293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca3c502-2850-4325-8327-95cb0cfdc3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6647e1a6-b412-4cad-81c6-774a5ea34241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d8a6e-b056-4ef1-965f-3092b0519341",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9f4085-152e-4010-a182-cb5dda1b383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f4859e-1964-4ab3-982d-d27b70ff0873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ad5d4d-6fe3-460a-81ac-a903d5d37b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a26fbc42-dcc6-44b1-99f9-22d522fa227f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f62336-1ddc-4651-8280-f324550ff2ac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b322aa-0f21-42c9-9c45-0909a22188ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "360939d2-a219-4a0f-a683-700eb29554ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaf4636-b6f8-48e5-9752-2af202f68538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e484e06-ae69-418b-a43b-62b455489027"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c18a0d44-a4e7-409d-b546-5a0d2f132dab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e72d88b-ab50-4840-b9cf-42906b1cf9eb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d03a29e-c593-4ad3-8bbb-abfdac38fe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7579fc4c-b617-4337-a965-761c6d397af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e359572c-acdc-41d5-9da9-ae47ef8a1309",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b3fbf8-5c30-46ca-a457-f9d1473fc8ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abfc006c-44b6-4bd6-a7a3-8c6f8c0431d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e80e940-6c22-4a06-a247-fd0ecd19ac45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efaec7dd-35f1-4338-a4e5-a1cdfa9527b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d060f3d4-3435-46b6-b47f-3a5c2cefb9df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7398b84-4a3a-4f88-9c8f-f619385c9e99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ad42b3f-d64d-464a-ab7a-80823ecbcb2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c827bc33-5bd0-4863-b282-0c607fbb31c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65bfb9b4-f41e-4939-ad06-717295ea6225"
                }
              }
            ]
          },
          {
            "id": "71e6882c-ecd8-4cf2-8371-ccf5045d7c59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdb3fa44-ee7a-4fd0-8db2-fd851bf3b7d1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2e2c083b-fb83-499d-a2c4-af4a91d3d2e5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a3f74b-d33f-4d00-9058-4b688ed5bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16dad107-bf8d-40ce-a7fb-865e558315f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1284f0d-6e6a-4a0e-abde-31c31e1a4354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8be2fc4-1df3-4e1e-a551-e6de96b2d248"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11dcbade-18b4-4bd1-adf5-0337547a6229",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "514f4731-2614-4aa4-ae68-c343282902a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9f39985-3f1f-414a-ae1c-3ed05f16865e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa8d2ffe-1fa0-4426-baf7-b998a47a515f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27c48512-6529-417a-a980-9d6d076e56d5"
                    }
                  }
                ]
              },
              {
                "id": "b658de71-0894-4a09-afc6-15ef173b39cc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8448af32-52db-4bbb-914e-9e9568e86fe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00bec285-85f8-4a2f-84b9-862d36ab884e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "324a811d-02e1-494f-9c70-bac373409ff0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41ec3021-1c60-4897-b928-7b70b7ed2940"
                    }
                  }
                ]
              },
              {
                "id": "b736ae77-8ad0-487e-9cf2-c2958b39b198",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b28ad7-05fa-4204-82e2-edbf8d556da8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7423f2c8-b131-478b-856d-3300f970fe55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5409ee9-4043-4ee1-84ac-2bd3958a08ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32296238-724f-40f4-b260-2303a9ecba05"
                    }
                  }
                ]
              },
              {
                "id": "063e5ea5-0b7d-4c4c-a4ab-5ac7421666b6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7b11b43-fe6c-4517-b9c6-bfd0241680aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9f94e8e-da5b-49fa-bab9-3ee4e2025f2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31a87517-e052-47e0-add6-c9d52f25f8b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d671b1f5-ebe8-4b4f-b63c-06562bfc9ba7"
                    }
                  }
                ]
              },
              {
                "id": "38eccd7e-e52e-4434-a398-daa4cdc492da",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebd5fcf1-af78-41b5-9a68-87ce68da9ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c48df18-6338-4511-911c-e9f421c8a913"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca8e15b2-5b82-4653-9dcd-90fff6779f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "94056c1d-f955-4c97-b078-f9f281305a1d"
                    }
                  }
                ]
              },
              {
                "id": "0d5bf8fd-8486-489f-9483-8476f7d88306",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6f5057-b08c-4c35-bf91-d3f464c48d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97cb4675-6dfa-403f-8a59-de27a53c0d87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb3f0d5-d634-4873-91da-5c5e7cbf1a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9435e8f0-1e54-415e-a613-f5448f8816ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef334f49-f5e1-4069-a6b2-9e376578e7af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebf7ed66-b35f-4f4b-8226-236061939949"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8eda8884-3bed-4083-8350-752479f852e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bafb46d-6816-44fc-a799-d43c4ccb057f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54e26b1a-0ef2-435e-929f-dbe7f310c133",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f143db0-f4c6-4a99-bd64-a6a67dc7c7c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb633b6e-4dfe-4a43-895b-c3998a296f88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8f3a184-87b9-4ce0-992c-6de0c87a00e6"
            }
          }
        ]
      },
      {
        "id": "103e8414-c5fb-48fc-971e-ee740634c770",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cd768adc-ef82-45b0-91a4-3b25427c50a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac7cf8fc-55b6-456f-9b91-bd37c19b27a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07f889b0-2dbb-4d1b-9469-8c0db31cab72",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a495c6-f5a4-4527-a9e3-2934ff511f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52eab11-56d7-4863-a78f-ef2c9032b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06e06a9-e122-4bb4-95e4-4ed8c4ab286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d73977-3375-4931-9147-c00157961135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d9b553-d750-4ff0-9b2a-042b531d41ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f483f2-a29e-4c7e-b0da-ee5cbd0c3e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99674f30-317d-4b96-b52f-c7fbd7496566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caf586c-3c1c-4cd4-8e7e-2c3c8fdd81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d71190a9-2d20-428c-b975-64994796280c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c481f022-fa2d-4fba-b5f9-22ac63910a46",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd6ac11-59ee-4b75-949a-57df816f3af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45a25c1-009f-4601-b508-490156ea3b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5548a93-d84f-4e5a-b8b4-9fbf12a3cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73de53c4-9650-4923-9d61-cbf20e12b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a594a0-5c53-448c-8ce5-3dd17e1d9974",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4210e37d-ffe4-4cec-a627-1c9928d1d1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79e40a6-ec09-4255-b6b0-db578080bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f566d4a7-e04d-4769-936a-8ef8fe323027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6527a36b-81b6-4cb6-8712-585de37b2062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71719db1-0ed3-46b6-9a5d-ddb06ad0cf7b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d8b3f-ae26-460a-b83c-752e26f07a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7056f62-65fc-4f07-9ebf-bd9d93e396e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3f7e64-2f53-4509-a7c5-1512d1b3f5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bc6849-637f-4535-a066-77a3cc22a540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66c4f2f-f7d6-41dc-8982-a40b41defcc8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b406f03b-9c3d-4684-aee2-54db40e418a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1d894e-39da-428b-9891-7a8490894b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120a47a7-6895-48af-984f-4023ae43cb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49a06585-60bb-4c42-ae8c-fd16b1834e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26650fd8-ef7e-42a8-9886-85d05848d947",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f267595-1cdf-4edf-8cad-d1498bfa3672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e9a0aa-147c-4206-991c-c6b236416fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a9d8d5-e383-42fb-aaeb-ce7b4ef6a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73245eb1-c076-4bbe-8c81-8e1523df477b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7df6b25-2510-47cd-8d00-b2cefb50d9b5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f51f30-64ef-48a7-b86b-7285eb6abd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d697a9-eb9b-48f3-8a15-7aa61be0d9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec71136c-c061-4baf-93b8-17bf34462de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee880f4-8b25-48fd-abe2-2d6ecfe328ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32898d-9337-4cae-ac18-643c6173dfd4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6146f8b2-83d0-49ed-b788-b59caceb479e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a486bb-55fd-4f3f-8de5-f83dc7fc3416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476d9315-4ce3-481f-abc3-f26ccdeea218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f4c70a-cbd4-45a8-93ce-b13ce3a490e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9831869-a357-49f8-82ed-11b93b0b26aa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e6974e-fcd6-46eb-ba6a-e17b6466fd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e21a03-a6d5-4fb9-a6db-c7bd64c4252c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ff67c-a997-417f-aecd-e099a4798521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "213197f1-8a06-4945-9574-419809e8a41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0712d4-193e-432b-8dee-e82054a6e982",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118cec5a-af29-4e73-a524-1423e40945e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f08641-9faa-4e5d-a06f-c9c8dc2d5888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b075fc6a-e386-45ca-aeea-ec174f8f6b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2ca46a-462e-457a-ad9f-84866201cf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc03fbb8-1b5b-4ff1-a2c9-9142b15fa1e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99894b28-2006-43d4-a12c-1a4fdd4c1fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64b4d7e-dcb7-44cf-9e81-77274dcef1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fa4cec-0fd2-4480-b411-a771cc1178b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35e5ab9c-7ca8-4a5b-8d0b-5a2db68833c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca2d1b-109f-414b-9738-f202f40ca9b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7fbd9e-ea1e-49ab-a557-bdf2252ca7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac5335f-8f48-43fe-9846-de4b0f92dbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7b3b62-45e3-42e1-886e-e3785b42de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c90d6f-df1c-4d35-ad42-081f63e18962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86971f5-29b5-46bd-9318-e7e015cf8f46",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25ace87-0b29-495d-aa7b-26f4825f62bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ddc1ed-f833-46b9-acd4-83d9c3a7bf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9a5301-a482-433c-af29-3b2df7a0f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "902deffa-d8de-4d0d-a651-5c59d0256d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c09dbcd-f7c6-4a9f-b467-ee7fb5c985c3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a419646f-f861-4191-a01b-791680f1277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03234524-2de8-46a9-9506-22bd36c3b292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21da0676-9575-4d9e-9fb1-2a1b54b22fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eac1e1c-322a-4ad0-bf55-a7c72329df79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b3c6e3-3447-428d-8d80-79c06c9e2f16",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4055dbde-a564-4bc6-b74b-3c2ebce24a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a337f5d4-b2d4-4b04-ab53-a9a3eb3516c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6846a5b1-f277-4c04-abbf-544475434eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac4a0fc-1a2f-40c1-81d6-311e5ef28dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f4709-0f66-4369-b51a-291a8aed1b97",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525dde14-7ece-4ed6-b081-abef05c2d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5738b1c-b8ab-4a71-9784-a8fa1736540c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fe74e4-6429-40e3-bbad-b804d6d388f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f303b8-0ae3-4c88-9447-e02ed2de3664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78f28c0-adab-406d-93e7-248c9fb4e7f2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cba6e06-a810-44f0-9c8b-0ccc5325edb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe01890c-9e7a-4eb9-a75f-e1949adcf5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e81a3-fbd3-4874-942b-c97eefdea7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e45352-d6b1-42c8-a967-a503483c78e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b7bfc7-ff64-426c-a26a-eee59d2f033b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b06646-479a-46a9-8a75-c79627a8bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442f61b7-1f54-417a-a14e-5207a353bb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e35a6-4044-40b4-a34b-cd474adc3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab7c484-7a80-4601-8e23-6f7518ac1ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f3143c-7b3d-4658-abc2-6d8606150a96",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82a53cf-2ce2-4276-93a8-0b43675c9ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145c973b-ac02-4c55-a4f7-7b102916ecbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee44047-b8aa-4335-878c-449222f5fa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbf6f09-aea9-4bb0-b6fa-4cce1146c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a243905-7c41-4938-8734-8d92ed5ded30",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd38380a-9219-4b36-94fe-e59167de8b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e061a53-900d-4695-849a-c37ddba5122e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee92c2e5-6f65-4b16-911f-5280154f843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776f9f33-17cf-41c9-9093-49dc91311694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e699e1-5ca8-4776-b6fb-8646a30b8cd6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b6a52e-6809-41b6-b8e6-89349408dfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2144f7dd-a9e7-47ec-94db-1d7af5813377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0904168e-f462-474a-8c9f-63f6337d1b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b04ccba-2aec-483c-8153-5f36afa77572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750dff24-f3b2-45ab-acde-508ef3758dc8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bb3d5e-303e-4346-88bb-e7185cbd8cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21b7dfa-e0a2-4181-babc-348272a3dfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e9151c-7755-4b70-b669-188c3a5b52d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9f618c-4e23-429f-9974-63f677245cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80676352-fb1f-4c76-b5d1-5d9292f7a041",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb47368-c5e5-4e26-a6b8-4fb874ab52e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c919558-e2c2-4c79-bf84-3dcf66209989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7e6c37-2208-43d7-9d87-740cec3e67ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7c073b-24d9-41cf-a38b-7810e6f8c7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0f036a-b04a-4c78-b720-b4b683f2b0c8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2220355-9cdd-4488-886b-14f2c91a5d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f14a3a4-88d3-41de-8d6f-917c24f13579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abc08c1-427d-4f9c-bbd9-c2ae2ff0026a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc88a1c2-bef9-4327-90db-3b4596349300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f36da3-34b9-4e93-9022-e4951443b8fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20568178-18d6-4d7e-9e27-1bedcbe9dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21044dab-7618-4eab-ae8a-dd4f57b9e4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3eee8f-dd80-40f9-b9a5-21bed6a2245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74781daa-bddf-4e9e-8dfa-3630e6ddedf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a35ffe-3dfb-49f7-8d38-8a96cbe680c9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd5e708-b5c8-422d-8ad0-4e3431c40052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f174bf8-606f-4532-9b88-dc63868594cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6282baf8-1abd-4958-95c3-0b327d2a2bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "284a75c7-a277-4445-a4f9-e3830491b7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2c235a-0fa2-4008-90a0-0cafb6dac7d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d216663b-a0dd-4004-a1d9-c84a0788e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88b6657-b6a0-4fda-bd8a-a33d48eea3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708a927a-d8c0-41c2-9ad8-284d328ad54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92322b7e-812b-42ff-991b-d4d9fc6858cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896370a7-0196-4d8c-a9dd-6cbdcc972205",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf9782-2565-4bcb-8624-fd116c68a54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27a2004-03fb-4c6d-9988-ab7289f78cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aab6add-76cd-48c5-8513-1b05cac9c019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "605fbd44-1f0f-4a83-bfa9-5824bcb85df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d563a1c-3f86-4201-8a80-f9df515b2d22",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f87de79-628e-456f-935f-e9b19d7cee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612c2afe-0b9e-45ce-ba5a-99c63ace00dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b4debd-86ad-405f-b2ed-20d0ff609604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "093227e4-5325-4cd0-8053-4deee5d108df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d7a45d-0037-4b9a-9e69-8fd1982fa765",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3c963-3ab8-4281-b273-91f682754a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a0fc67-928e-4549-a5a9-7bdceb0cb1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa03580-ce58-4154-bac4-d83e2ddf45fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ade002a-19a0-435f-b0be-e1457f406a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1466def5-91b2-42aa-9e29-f8e2868ffbba",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e75df39-97c0-49d5-93a9-a8c72943db48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e705e1-07d0-49af-a8e6-a678d9fbcded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0cdf55-63b0-42b5-ad3f-3204945a624b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "044da0b3-ae77-49d6-a7e5-0b26242e55b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cec1695-8751-4151-ad12-0744cbbebe5d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8748403-241c-411f-81c5-caaf3edbe7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b60dc0f-d3ed-45f4-a4c0-c7dcfbc3a52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f69151-5a6a-44ab-9c25-640b7e11495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1db3fd2-ac22-4817-aa60-038f30fffe10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa68a1e-50bc-49f6-ba0d-dddcbd7374e1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17cdac0-9831-40e6-9ad5-51bfff0f8a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a801a7-ca1f-4b1b-9131-2631d93fa6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fba348-55f5-4a45-9d4e-043d7bdf9a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fe4347-96f5-40bd-8275-91253ba20372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36738a6-1b21-4430-a4e3-1aaf8d5c9958",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5387b24d-8698-4992-b064-68dfeb3fe334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29cdde1-a6e6-4b8c-a0ad-681f24b9f7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865a4ce2-a831-4be0-99c9-cde885422e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2f1e04-224c-4663-a5d9-1a397195bc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38494112-d3e5-4216-abb5-1dd2497b45ba",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ccd802-063c-429e-9068-70dcae167465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21419fa4-ad08-4680-bb27-0644dc1db048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d493a5b-5862-44c1-b012-2658330ad334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0a375e-94ae-4507-9cbf-224382bf41b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf6e436-9940-488a-9c1b-72f300f07bc5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6a32a4-22ec-4690-aba5-c73e020949fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca824f82-a32b-42c7-aca3-599ae958ff91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a98bc6-7d1d-4997-8626-ebc58c62d65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e467c4d-719f-4bfa-8ec7-4b8f8ab72792"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "038ef82d-f8f4-4ee8-b70c-1a5179ede506",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1058dd-3f5b-4200-8c0f-d9ad3157c528",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9812db6a-da0b-4c00-8780-26abced1dd5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "224c27f6-3d95-4d98-9efa-10d41b67e7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2141d091-1151-4e18-a696-6fb1b4d9db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af6322cd-12e7-4874-b0b0-4ce9d7f7420d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49f4bde3-8203-40a2-b86b-cf9d82fa4f3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a461a653-8c27-464f-8a14-cb0dfa0c2688"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70533e1b-da98-4e6a-9ca2-8f168e0e93c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd73716c-a212-461a-9c38-a7b084c0c241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7b8cfb3-d6ba-4b3a-8c39-5a260668dafb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e31eda7-fc68-4606-8e11-999022200aca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29a72f7e-7a1d-42a3-b5f4-aaa9c7556ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "811d63c6-5dbe-4e37-a51d-488cf656d4ab"
            }
          }
        ]
      },
      {
        "id": "b43b248c-7ebf-4003-8fc8-bfb53c17f679",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "64af6afe-f29f-45ad-8ca0-89226c32b086",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfb8d028-2db1-439f-9845-c50aa8707caa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbef5551-6f42-4fdb-a8c6-246cdaa5d5e5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2066a044-4a99-42e2-aff5-def0e042f7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1803f505-207d-4ab9-9a5d-36b9e00819b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77242b06-4f9f-4b12-b65b-a1fd7b15f94d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763dbf1f-a3e2-4037-987b-c0ea25821d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc72d0d-4439-4116-8990-7a5f12893495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a4c349-07a6-4a86-a48a-e312592f6038",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe6382f-b032-4852-9dc2-efabe07dfb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091469d7-6d11-4ade-a64b-5dce8c7adeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b07a522-4685-40f0-a454-c9c6ad1f21e0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fc81e5-77e6-42e4-803c-ca1ecddd64b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055fad36-8c50-4cae-9247-dfb02264f328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb890f4-d6a6-4181-86dc-ecc9c7390ec6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8da681b-b8dc-4f07-89e7-ed67b8d6a8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d0a53f-f083-46ae-ab6e-d24215de0a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a131a960-83b9-41a0-b0b1-497fb49e7e9d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f50dda-d990-4b9a-b878-afd3b3def870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c0c0be-4f27-4e7b-a67b-33abca63f73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4243dc7-cc6f-4958-866f-afa4d4725ee7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e55cdc8-aa01-45bf-86a0-88e29d975dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d08ac4d-8643-4825-92c0-04714716cef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a714b-a5ed-4cc6-bf13-e6237d18b07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd136570-8f8b-483f-8113-41b3313ca6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc316fd-9993-44e8-8ba7-113b9fa66514",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c09072-2c64-418b-9661-b24ae1df2632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8487b6da-ec1c-4f40-a439-c080509019c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43e76b0-4fa2-4a8e-a258-ced1b3bb35ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85395bbf-b1d8-469b-a08c-42e7663f9b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5918b962-67da-4abf-af6f-d7571415f3ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c6a13-4a1e-4e34-80d1-d78eb25d8e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34a5e69-a5df-41e4-85bb-16b0a728b8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cbb13f-8002-4c0f-b537-0a5eed347093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29c6c22-af4d-4903-8c80-dfeeb85c9dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3b85f8-788f-4f0b-a3e5-2bb61f293b36",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb0367c-71f4-463c-b322-980d354085a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba5dcba-a485-4b0a-9053-d019d52ebe50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1114ac6-2182-4977-b9b4-c2f86b731962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1398d09f-6c28-4bbe-91b3-38aa31d561c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473c45e-1d30-4d1a-a499-02962c663131",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634c520e-9149-4e50-a960-194f1af2b273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103af762-b204-4683-8bae-038d1f988266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711b3c1b-d255-4092-91a7-e4e4ec56ce07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfbdf68-e7db-4992-824e-592efb255d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb8806e-2d01-462a-bba3-88101d05b17d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c8eb91-5ddc-4f4e-abf5-0daba902921b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1f3bdb-3a95-4862-8f4f-2f87b422e526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702746ba-65e8-4018-b373-b5bd5d835973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6ae837-e3e2-428b-aa6a-58e773429f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec6e212-7cfa-4c85-877e-e39addb6bf7f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d84e18-a189-468c-a78d-2d3969310942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895c4acf-abd4-43d4-a96a-34b617c68823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cffde53-26ac-4108-bbc2-f37028838dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112ed59b-bbdd-480d-a798-b42a0816cbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d3bedf-9439-4202-af84-9cefb20c1e1c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d92f90-80a9-4243-8149-9160e7f05ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3295d008-1f2f-41e7-bf4c-a8158ca58ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bed56c-2cda-4513-9bab-a01dbfc9d8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293d0b6b-d80f-4e15-8556-cbc475090970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef10f2-5bcb-4247-9ead-e4c017355cfd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ce0f2a-1ce6-484e-bbe4-d823fb723d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62de2615-3476-4b47-98ab-b2c4e094c2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7882e66-02b3-4785-9675-7f88b69ce6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4091dc8-be9b-41e3-88ee-3d7567eb7960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e677e3-735c-4f63-9b21-42823d4ca748",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404678ad-e32e-4d08-880f-26767786c572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e193699-407e-441e-8c34-114e0615b73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370df38e-eac0-415d-80bc-fe7fc6ad9a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08690cb6-ac34-494c-b128-f1cde91327a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b7c5fa-673a-4d98-97d7-1b1bb737be94",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deffc84-6b9a-4c78-8799-044983978d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7941d8-222a-440f-a14a-b29301eaef60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737ead35-d1b7-4f88-8ca8-e988d6cfa1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731c6038-0cd1-42de-99f8-e1f97bafd030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c934c1cc-dbc5-4985-8e9b-d2bcba4c07fa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49db7730-acfe-4613-93c5-3c876e36700a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134870f2-bee4-4326-8ab6-6e35dbefa102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b91d39-745f-47df-8ccb-62bfa73fc5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135c5bcc-d648-4cdd-a957-02df1dad16e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd4b5a7-2aae-4cb4-9a5c-5b189151fc61",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3422545f-8093-4141-b8ae-2493e1a15e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4059dfb-5fc1-4697-a6bf-d316c9cd43f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae5b412-bce2-4b51-a282-44bb51146bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c596f553-59c9-45f1-a401-8c5c61fccf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d34dd4-4330-446a-a023-f7834d0be1ef",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2634a5-396e-4e5d-adf4-bf76883ad5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd575dd-c83b-4751-9305-dc85aa1f75f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadcd601-dc2d-4abc-916a-d5fc3ad2efd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0957627f-fccf-4398-ac3b-81d127d4310e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fb19e1-2913-4599-bbe4-578bb80669aa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b7c10f-ef5f-463b-8355-d3f39202b300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e10091-6eed-46e4-b3ef-2abb8c6ff9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ea3620-de5f-40cf-87a0-fd71ef4be707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2657228-0422-4107-9f35-73a1e25582de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38273f76-b80c-4358-bb21-99b073ee5e55",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb908a1-2ec0-47d1-b7ca-b3579f8830f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f51986-f84c-4fd2-adfc-e71687deb21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dbfcf1-8230-4a99-9237-1cfa74dfb267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4f7495-2926-4446-9472-56ef87729d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548c845a-ed09-45fc-a040-3629674856a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b4932a-d008-41c4-8559-63cb90f9d484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121494bd-4f26-48cb-b0e2-973326737510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f7bf5-649e-4e07-9f79-ba2352ffc177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57b0815-897c-45a3-8afe-cf3b4d9886ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cdea67-bd9f-4d04-a93e-f4138a135c8f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb987758-8be5-4557-905b-a8b6ed793bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423f3190-95a1-4242-b5b6-e1ab4299736d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf83f58-13c6-4f81-8b59-d28fe636697a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09d22e4-7b21-406d-b469-9c4e19eb4e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a574fa8-399a-4b2a-802e-8f58aa2ae6f9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7247b0ab-d246-44de-851d-e0b3c2e4d591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936cbd5a-5c6b-4e52-a8a1-d47e3d846507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d418919f-2884-419d-a266-8bcc084551e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4395ac-4100-4915-82b3-f81b1415dae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1a3b84-293b-4402-9dff-c76d30736853",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cbd69b-2c20-48b7-8883-1f857a23edc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf6e90e-fe55-464f-a1a1-c30e3011c334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2726b878-f4c4-443b-821f-8d19510cb646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0c45db-23ee-47cc-9898-206db42da9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e834c58-2846-4e44-bd08-70452c25d638",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503ed148-465f-4418-990b-797528160ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b7be38-b6fe-40db-a4d4-6c309c3c8f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b407c6da-a3a2-4db2-a97c-f0e4ef87262e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef46343-8c93-4cdb-9f02-80bf586ea56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60139ddc-d8aa-4043-8d76-fc1916f39322",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0d0cf-a7aa-40a5-b35b-44d721965a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d824827-527a-4738-bdbd-5db848f7f237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81180da0-6430-477f-b3ff-29b32d33ad18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d744b60-6f65-4cb9-a470-fbb9dbe3dc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61da005-87f7-41ed-a477-cca8a70bd0c8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3776c9a1-1189-4df3-80c4-57734fdfc5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd210694-43d6-4ece-aaa9-bb9e7dbc5981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c1a141-465e-46fc-9344-218675f7f97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf498165-7ab6-4a02-b37f-d775f08d689a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a6c8a-2709-4de8-adb4-899f6ded8228",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a77ef00-6db5-49bd-a73d-179f36acbe87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc9ff2c-9b47-40a6-8766-2aae858ab5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471065f5-1648-4114-a863-dee0f1cbf411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6daf33e-9e3c-4f83-acd1-af5e05c0219e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0471a2-dc93-4d52-88f8-8f6011c47267",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7ff02f-519b-4fb9-bdfa-d1e8283784fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecc011c-737e-4fc4-894c-ff8897c6ccbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552d3d11-5f8c-4727-905d-33ee1afe3da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b66134f-d54c-442a-a4b3-c3d4f05d321c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442703aa-4338-4e6f-9071-c972f8ab5339",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c1657b-92ec-4c20-b671-4ad50fa11f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ba404d-6653-464a-9906-fced7427aeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ac07da-8b26-4783-bfed-e07479b625ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc5bf0f-c003-472a-bc25-3361a20c0aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca644a-c275-4a39-891c-9e7f29281173",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de788a54-c344-4879-ad41-2ccbe7db69db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8d2a33-c6ac-4eb1-8dc9-3bb0845b5541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eaa59e-d3c7-44ce-91e2-95a5992c2420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044d3162-2739-4697-9048-979011bc0910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f650913a-847b-4348-b663-2acda737e1da",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b7a260-e817-4eb0-9be5-92e3c788e9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9ec507-714f-4d5e-8fd1-48215009f2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20fd5d2-fd32-42ea-b0b1-02b6caef4a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64ebc01-da9f-4ca4-8a7c-938112ef7044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c756380f-01f5-4f81-9353-c87fc71db0a6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ce9100-7ee1-4e8e-9291-11a6c31dd6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128928cd-adca-4183-af8d-054c2ddd0450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ef44a-7224-4c41-a1d8-0e1f3aacc1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b504e9df-7077-4cab-abf3-6c2d9e0df7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8374f1-57c6-45ea-b05e-ac5b4c163a27",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b0895f-0753-472c-b2a9-e4a85d1169fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ecddac-9b4d-4d49-873f-fb21cc042e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b977ef3-6bc2-479c-9bff-0ff05b17dace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b8a685-0c15-42d7-9a2a-c6834086de4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9798afed-b28d-4452-9f15-c9805ee6b88c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c9aba9-1490-47b2-991e-ba22058d8804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3bfb57-058c-4bfa-9028-772686cd1e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab94454d-ab0b-4fca-96f6-8037af051aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d34c78-252e-47e8-85b8-6c837dfc5af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29094bff-8cf4-4c53-93e0-c900ecfaf89d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c820b7e3-8579-48bf-aba6-e3c3d1bf08fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260c4032-c9ea-4d7a-908c-ee729b3bd645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407aa1b2-c212-42b9-94af-e965e4d62eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8db633-45ac-464b-92ad-0f9faeb67553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27314e0-530b-4b32-80b4-9a871049a105",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef319aa9-ed5f-407e-b02b-7f5384f09b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d7cb8a-ce7f-49f8-af33-5d1c3d74c3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33809e14-6cc8-4750-9905-6d8a611e515d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92955786-b209-4c1a-80a2-c790a9600bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfdd169-c42c-46d4-878a-384263b0bf8d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3122bf43-45f4-4c6a-9186-a072725dc4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0008206-a358-48c0-baa2-d3e9594da36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4288da-c33a-4e8a-854b-91782f92ef72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc33c0f7-9bb1-40b2-adaf-5e5ab2d995f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03a1252-7d8a-4b90-9111-c52e05bdbdcb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d36ad34-5984-4df1-ab2a-f31d31b2d783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea98837-0a08-46cb-a5d7-f2c22386b8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c121ae-fbcd-4108-afb3-c9447af16d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa501e3-796f-472b-ac59-298898d96ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3226de9d-523f-4c71-b2b7-d5b44b1f70c4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0747e04b-bc25-4247-a9d1-88efd4a74244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03659da9-fdb0-4f59-a537-5d695a3e8cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f6c8df-e4ad-473e-a920-2bb0e9525f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd4e7c3-51b3-41da-b1c1-710df366a45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4af653-de3a-4b96-af1b-660b295cdd4a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edb0d76-c479-4ad3-8d0b-6eec9ccc9f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e630cf54-5412-41f0-9a4d-3a247244f406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b9987-1901-4a25-bbd8-d4623e7cf946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1289e346-03e6-45f3-8c5d-3c76c2de8d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6508fe33-8066-4ada-89ed-d6e23b25a7ad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb1f534-cd07-4321-b6e2-c18bd762a211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f400f365-69af-4ba3-8efd-3f1e4357dbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c712132b-90be-4b50-8970-833f4da05b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c8be78-703a-412d-94c9-4b7ca141f309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8138275f-8bab-4c2a-9c58-b1e1bb99b364",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a23eadf-78d5-43f6-8d0d-6236add14a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389a6865-f8a4-408e-894f-0a4fc14060dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc1a74a-5272-4670-be7a-60cf08240e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f493340f-3ae4-4156-bf71-a1b37da046fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaae5ac-3781-4ed0-8b14-4ed70ccb8edb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9881b3d-cae9-4c01-8d77-6b6758e2e416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7133f8e1-f7d9-41a3-a391-6b837a436441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1360df92-643b-4cd0-af70-695852f6af78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd24d27-d55a-4d76-9f55-50ada72b5983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9483c875-9a70-43d6-b01c-d035b8c0cb7b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c784220-a3c9-4847-b35a-e40cc0e71869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3874bcb0-11f2-43b4-ae67-6352abbceb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3073bb8f-3e77-4b2b-b21d-285b524d289b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faed8c8-4698-437a-b908-3080e74f12c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c8b00a-b83f-4fb8-a110-2e8847ffbaf1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77862c61-1a69-4bad-85de-f9b29fe0e0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea7ff91-ce48-4239-895b-f769d5561688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8438ea2e-4ad9-4d57-a526-3ec5c6cfe872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbf68cf-03c9-4083-9647-59247a9f3fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8724c3cc-65b6-4b0e-88be-0db93c160c9a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a37b3a-0451-473a-8ff9-ed6aea0a2f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2c2376-0e63-41f6-bddb-459c2860f533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aed085-b6b3-4294-bf0c-aafaf01dafe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dd6613-8ba8-469d-9838-2112ae55be73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ee4e02-8ba7-45ae-bb22-05373f2eda37",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b239ac-c085-464d-b8cb-7d13da70726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7871bb1-fa0e-41a0-b006-8bff55412283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca11f297-e398-4bc7-8c2d-e19949ccf97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace5b0bf-5d60-4236-a495-134603e2999a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745234a5-5c09-47d6-a1d1-77c15bea0bab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c159c77-dad9-49ac-9fc5-4d0b645b764a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e452a63-569e-492a-afb5-0c834ddce4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624a5976-4280-4297-a472-7de1af56556b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0836e375-881d-4a63-9787-218fd6ae593c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94753cc9-44d3-4edb-837b-ec4a33824140",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92428eea-131b-4d38-bc45-47cb53a2a2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc89c99-e9c8-49ba-a6ae-73c4ea2691f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1e921e-f03c-4aba-b779-18611078c6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26ab05d-bed7-48d9-b7a5-2ee2155e9565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaac0d7-3dee-42da-bc9e-d69c8fc08cd7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74864cd-51c0-4547-a2e7-e05afa99ef01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46be33dc-4279-4aed-868e-030079929005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb798099-7c1f-4936-bab2-c94a3d8709a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f07828-e854-4ff2-89a8-bbc505c01c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ef62ed-7f66-4026-abbb-0d78f58efa68",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b0b4ea-3d3a-44fa-a1e2-ac90a9d2a57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563a2bcc-ac59-4476-a8ad-34453c87a258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92342b36-bd4a-4951-8e4b-14d231972b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f75358-0bd7-49c9-9c51-06dd6d8a32c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95370ce0-401d-415c-b0d3-ece83836b4db",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c262c633-8c51-4824-90ba-7477e5e7f60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3e0bbf-27fe-480e-b947-98e0877c86b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce304516-c824-4837-8a21-5838af07a6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966dac9e-ea2e-4743-8290-ea61ef3492f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41beecf-72d6-4a89-958f-a85128bf1935",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75ae739-dd43-40fc-ba71-a821606e822d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0109836d-f141-4c25-97b4-be73e33918dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce76f695-da37-4c4f-9d16-270b11fd82b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402a5408-9f88-4f5e-b927-54cc036f34e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec25e8d3-0f42-439c-ac1c-eb7d8dd1bbca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd169205-f5a0-4590-86f7-c560fc5986be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d283ac-d2d7-463e-860c-9ad3f82e88db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25dff7a-a2ba-4256-a6e1-fb9c684cbcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5f95a5-e735-40b0-9aa5-a7a5a8df36b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403afd0d-a4b2-4397-868a-2539a3d25223",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515007a3-5afa-4af1-95be-57a1f7d74fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad62546-1b43-47f6-b2b2-dd9700eeb77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12cd074-6101-438b-aa07-3480b075529b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6d8dd5-714d-445b-8f32-45f82ba50ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dafa9a-fd71-46fb-9419-b8c5305b089e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c92c601-0fbe-4556-9ad8-04ef2544bed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b0cbeb-f0dc-48bc-8ec6-b58f0a103987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0f4663-5a6c-43e2-8e6f-316d65bcfaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878525e8-207d-4a52-9e1f-a9c701f5faeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c10525b-213b-46f7-aba4-0ede5d4e24af",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8733a090-a28e-4a82-8fd0-292604794daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0326560d-4497-4c38-898a-ec4b961e1b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0672ba7-235f-4787-b46f-5dac3b127a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c46f62-1926-40d1-91cb-ad20fdbc8d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e109cca-635b-4c1e-ad95-040837da29c3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdc06ca-ee40-41ca-ac4c-e3346433a391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1c54c6-7f43-4fc2-84a7-98dafa736ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aca115-ab53-4593-99a5-e9f61282f44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e222908f-ffda-417b-a397-30a55a59ee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08e40d3-6366-4c5d-8058-bdc5e317e0ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3367dd1d-0443-42ba-8e79-542f388f7731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642427c3-324c-4bfe-9bb5-43a7854039b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b395e4-51c9-463d-9d67-13b2629e414e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50d6f2a-a1d9-4ad1-be69-d4e98d3964d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0ba6ac-e214-4ce3-96e6-1e779d79f9e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9993d361-e8f4-4629-a8fa-620c60a3c26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a982f8f-b300-4da2-83d3-efab0bf028cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a1bb57-9801-49ed-91f1-f0efea7eced3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c63e89-40dd-4307-b2e0-3b4b82f33765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7dc3ef-a634-46f4-b4e9-c18e4354fce0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7121c8-6d77-41e2-a080-c5d0ca9f381f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a69f2cb-20cb-4746-9efe-24aa7a397502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5d9781-d71d-45bb-a98a-4a764e34540d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb25d0f-b4ed-474c-98b9-5fcb44bc83ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ad03ad-19a9-4946-aeec-33bbcb0857de",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89bbe1b-b838-4df3-8826-46e1fbbba474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ff56bf-a53d-4469-9a90-b58747f0f2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727691c6-1712-4398-b359-4932b2402978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24fb24b-fa3b-44ce-a682-953f87366a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832b6ba1-a751-4151-bdf0-1831b09db848",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7af535f-e1ca-4804-8b9a-559cce2f62c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec92f8f6-84a3-4ad2-9d5b-d972ddc07b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39405a5-df5b-4289-ad03-d1546e069de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f3bd85-d485-4b52-a721-18860bc633f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dde9213-d3fd-4cf9-8d36-f1a5a90a060a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c206e238-ff35-4c15-b0c8-7cbb0d7eba6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4260eb09-63da-4f03-a677-c781b615b631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcb4fdb-3f1c-4172-9307-e1e040cf19a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb58fdaa-531c-4a62-95f3-61bd3e7f40d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d953f1-1bfa-497a-b085-bc47f95368ed",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80162b1d-42ce-4ca6-b449-1d1b30d81f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5708ca3-3555-4922-973a-61bb5ded88c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e01f84a-f212-4199-a229-d476c5db4a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c8ba85-bf01-4ad2-bf44-a423434b8493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cfc841-5227-4956-8598-e77a1860a693",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f41cd6a-d43c-402b-b1fe-522232d2f240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94dd5b1e-ff0b-4f65-8cb7-27cf936eeff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b622c4ff-bf35-4dbd-9cf5-bf260eaeec16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db017b0-4ab5-4bf0-9ef7-d8522927d02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6659919-8c47-459c-9b57-95695765acd2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb4fca7-a606-421b-b028-ea745c14ee51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5607c3-d887-4dc8-8757-66a2ec31b423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43d8866-752e-4706-af9c-ef0ece9f5ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a55f2b-1a58-46a6-ac09-fdfa8a7a706f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b4ff1-c621-402c-8ae4-5ad271dc92ee",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e8f910-f379-4055-88fe-fd39c1d3289b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd174878-2289-4ff5-8acb-d1f6e41e7c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ad165e-4d33-4ca4-aa60-7c12488de70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01a8988-ae60-46a9-b48d-6547af422a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48893f1-886e-4881-a6f3-23b431421bc4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfd0f82-65d5-4dad-921b-667d14569f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ea495d-78da-4b78-bb41-43e437729730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52976b74-6088-4b9d-887e-49cf77fe7b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3585463a-7924-4db1-88c8-1a64515d0d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5920d422-d0ae-4c22-9d0a-1d08fc9fcbd2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ab3144-d33f-4afa-8074-ea6997781c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5a1633-99f0-4bc1-b7fb-2894f49df7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8524856f-962f-4625-b381-34f4b3356121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6178cd0-965f-4d01-b98e-8ce38894f7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d4e884-690e-4d21-abd5-ded97c27c202",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf57c9d-05b4-418f-a305-88e78f3cd72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5891353-d0e6-49a9-85d2-a09724a28e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00062480-fc1e-4c16-a831-4911b9eb0ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d4b7a9-3e65-42f6-81cd-41bc8b895726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15c9bbc-0b66-44e5-9e6c-bd6ff3a81ce8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c216ce5-86c9-443d-b177-b2227d93fd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2873fc2e-9e2a-4ef0-bf53-795497465f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf8f09-ab02-4474-a091-9b65136a0047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf7cd35-4b98-40ea-b850-9392ffee5c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321e6ed6-7238-4a6f-91d8-25eff2008a15",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6169e0ac-c526-4723-bf0d-4af4a0ccd2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4f41fe-df58-4493-8a57-9ee4c3e19f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b55d50-64ea-4fa7-8e27-b33c8d954fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be366e4a-3608-4e12-8070-d15181737fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b186df-d92e-4f63-b0e2-dbaf2d1a16fb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef55032f-7b25-4ea7-9e3a-458652abe263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e65effb-e427-456f-8560-9bbd2c200775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf66f0c-6ccb-4ae2-a069-31312ac61dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19226d4-d63b-40c1-807c-e41c373553e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c2ebbd-2ae1-4c18-9c79-63947703a5bc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60590f43-ee42-446d-9415-cd6492cdcab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26ad63f-7d78-4605-9169-12b3a6fd598b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e9a86f-872a-4ab4-8e33-7bf3bae23659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9114f2e-8b07-4065-b895-2aa2fb84e64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ab6d9e-f26a-4aca-93db-fadff8e17001",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50247076-244d-46e7-be8c-d9ccbff9b481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ea2d38-d649-49a1-8c44-186df89f3f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e17ac7-2d83-4b97-a869-accdc2d542ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f0414c-220e-42ca-a396-566b28e73473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b130fc95-9d0e-43d0-abc8-4eed67514ee3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da256989-a381-46de-8fdd-ae08fb632e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd5d7ce-f9b6-4519-9575-87f831f25e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155e0306-e1c1-4e51-b361-064a84e2e8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a83f3a3-5e36-4167-9c42-b576dafb00e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1c6483-7ae1-4ff7-afff-c4541b04d595",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b511d-1491-46c0-975d-6ec3b989a979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa0bb42-b61c-40a1-b2d5-1695bb651c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e98ad6-525c-4787-a921-9aae07cc142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5d49e8-d8f1-4493-ba96-19cd68f5146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acc56da-77b9-4f78-88dd-7155df82bd02",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01daa16f-63d3-45fa-aedb-560fb4c22533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37755c53-e5f2-4e51-a763-cf1c68df4440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2a6408-fd6d-43c4-91ff-99ed0f49af29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06064163-93ca-4d8c-a0fe-4316affb2994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98860a36-d3a1-4ba5-8d30-cb60ed8d25f7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bdd811-4122-46ec-bb9f-b88e4310e961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6eaeb0-884b-4183-9274-4e7e03480b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ea2dd9-e611-467f-bdef-cda44ee1c2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643208e3-220d-4e67-af50-4eb191d0a3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7438c8b-e1b0-4380-aecd-ef4e5543c325",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a673b5-6620-4c5c-b76b-d8b45e4e5ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efefabf9-5403-46e2-b5e5-3bf9131a71fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4416f2-3ad8-462a-99af-e55b3f3e3fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15b735d-958b-4201-9366-077cda20f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2975fc6-41c8-487e-a64a-df35946556d7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784dd1db-ae77-4818-9cbe-ed0797132c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a3d8d0-5dd2-405e-a4f5-d4b4e47281e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c73f47-7d01-476b-a52e-6f1db555f3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bded2c4-57e1-4748-9e64-86199de87bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0beab68e-55da-4ef9-a535-2dd6578ed2f4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5130b1fa-3328-4e96-aeb1-520e0518daa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad6b29b-c4e7-41f7-8238-beaa6a201bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe411edb-8331-4f03-88f0-b5e350c5376e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8473fe-bbb2-45ef-a3c1-897434e00c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac75018-b9c0-44a1-ac9a-aa3eb1944719",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3130bf-c87f-4661-8221-623cf11bde9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e58a393c-6cb6-4411-b255-fb51759bd72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b354d8a-aa5f-435b-bc92-891990e39c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c1650d-30f0-42b1-b285-9a51e5282fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ff09d0-3750-40e1-a5fe-c3a36b4693e8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfec970-348e-47a0-9091-ae64133082ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353e8e57-fb81-410a-b6d7-22865599a209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33753b91-6785-461a-875a-bc22f99b41b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d43334-ba59-43d7-a608-ab51460b052f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf63f09-9a98-4310-b76b-60470030d9f9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8c8bf2-8828-4fc4-9812-bd24ee69b6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d721b6f8-7d46-494d-92fc-aee24a89f71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa37f323-2f11-4804-9383-f77fa89ea10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caca43ba-73cc-4b41-9cbe-071f2d3847eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d8ab4a-5138-402c-af4d-815e223a7280",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691756a0-5334-4003-847e-b5f31c10ef8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7dd10ba-2f7c-48e1-8fed-79620d1d1446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1537e313-85a6-4455-8ac4-3d0db75547ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8251f2dc-7b86-4e50-a30c-c248249732a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb64b3a-8d84-4bc4-a6c9-e10fc30dba98",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4f020-2f2f-4be8-9103-428233d9e733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34100be3-85b2-4d8e-b4f4-4a31ea7be3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b60c346-9fbc-44a6-b488-ce55bfa823aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a3ea69-ea73-4555-b845-4c2de5e30e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f7afa3-8747-4958-9862-0ca115da4f08",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a611d3-a6fe-469e-b0fa-a7aaf3950aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9945f09e-23b5-4acd-8e18-d693911e61fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6462134-0f15-4f24-8f89-28925122c136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af229cd1-d39f-4c96-b780-0405ea9e26a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bedd96e-a49f-40e4-a041-6a2f3452bcd8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a9b36c-e451-4296-b9e3-d878562ac735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd27456d-6d4a-48e6-a7d4-44165dd55422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a3c844-4c6d-47e2-89f9-846ae588df53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ecc332-bcdf-4363-b49b-ad920073d0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ff1c9b-2fa3-4f56-a3d1-4a5ed9f206c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ad0790-d211-478d-9a01-a4a250b94ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8cfb579-16e0-4afa-8eff-6a9b1d05cb28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993c5337-87db-4855-ab28-ac5d2aa6b5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0075f0-0d5a-43ea-b3e8-1445f229b95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df61199e-c671-4663-b366-182530715013",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b314fa9-c668-4706-a511-470c3c042453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd699da-0589-4f01-86bc-4b165c0b85b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b980d138-aed7-43dd-96a5-4c1c94cbe58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad73c70e-a14f-4107-b430-a10172521281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c902598-6bee-4f08-9341-d50f5135dc91",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ff0916-66a2-47a0-9aa0-ffbee1be155a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3e58b2-ce8e-4126-bd99-3e06aa1cc8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b2c08c-9647-4c83-bd42-4c1a229b68c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619b5fa4-be39-468c-8053-399a40254195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ba53a8-68a3-49a7-848f-5d62a58a32d8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee215076-26fb-4285-95c2-c5e672f0763d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2194d13e-d0e1-45a6-b18d-0eda3b9ba933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7221b6-4399-4fc1-8bad-a07314804464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f759c4e9-7f80-4f5e-83a3-d0efea768ca5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d99d56db-2772-4336-95f0-d1fbe36e04d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3508380-7be0-4d86-90a6-1940ca7bd0a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffd6c6c3-6858-4681-b22d-eb6e5b116db9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7315e19d-6695-47a9-bc43-72b2eb7b8c17"
                    }
                  }
                ]
              },
              {
                "id": "35bf0e2c-9a5a-4bf1-ac2f-73a9a06a63d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c3ad8ef-2122-47d5-8f12-eb36449727bc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e9b8a-ea19-4214-ad8a-2dcce620db06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a6189589-7645-4c77-abaf-d17405d67b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d26f7d7-1ccc-4d7b-91e5-de74c16213fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3946e19-9dda-4699-b992-e6b96ab6f8e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a00ec1d-cdcf-4273-bae3-29756f477917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbc52387-b402-455b-bfb7-e0912ca8a418"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e6ca9f8-81eb-4427-9767-a0540fc52237",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcadbdc2-41a9-4aa9-9668-c81ae2805f84"
                    }
                  }
                ]
              },
              {
                "id": "b222dd55-116d-40dd-9d61-f799db71bb6c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a491dfed-9dc5-4066-97e4-0d86651eda5b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584f8b82-0ca7-415e-aa98-5f465bc63b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c22c84c1-b758-4bf4-ac48-084f3d641356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60335781-8e25-4feb-b973-75c2ab1784ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88842792-a376-4ef2-b6a4-ee3a1fe054f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae0ff7d0-49c2-4aed-9e4d-7252a4d4aed1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2551b5e2-d833-46b1-9852-91bd6ace1ccd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "288fab0c-2d38-491b-9bc0-90b4f5fb42a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "74dcf9b1-b003-446b-9abe-9fcbb51fb6f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87adfcea-61d4-4154-bb28-4846373f8916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d99affe-f46e-49e2-95d9-64b2ade8fa95"
                    }
                  }
                ]
              },
              {
                "id": "cfcc3c45-1eb1-454e-9f12-f07198c868b5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9776d55e-a947-482a-8054-912469e728b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "920d5381-0eeb-470f-8cdd-abf36a381dc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bd15f4d-5065-4fe1-8faf-dfb0cd147769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b2bc209-2228-4ca5-96e3-07c1e71fa50a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ad9b2b1-e139-4be6-abde-0f1de5135981",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "58e64e2f-7982-41d2-815d-f8b2168dd1ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "680ae96f-4d8b-4bdc-ae44-27fcf982903a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdba3c3a-a01e-4bfa-b4b3-8d7d65b1b6a5"
            }
          }
        ]
      },
      {
        "id": "beb65736-f30e-4bfb-adf0-dc96e1768f94",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "087b73f4-c34d-4b20-8820-3dcc2c6c8277",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c59bdf11-cd86-49ca-8fec-d07356a6b917",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92b9ce26-5b3e-47a3-8aea-f16c80925369",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a3488a-4e7c-4535-995d-30bef24611c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "83362dd3-3d0d-4519-b107-3ae01d9e1e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f54d9-8961-4aae-88f9-5bed663c83dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7176beba-3596-4a92-8f4f-3474578816ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "769454cb-2936-470b-a818-53ef01277444",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b288949f-ef1a-4b22-8b3d-172448ee9923"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "daf055a6-b383-4d4d-873c-2e565dd10bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98dc9677-aef3-4670-ad06-6214da57a95a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "953f2453-adaf-4196-9125-25693d58033f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a11eba32-ec8b-44dc-9c5a-7c9221dc7942"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c58b8bb4-c8f1-430b-af1a-159279a4c2c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a856d826-0fba-4427-9bc5-3d3ffcd67c0a"
            }
          }
        ]
      },
      {
        "id": "272a8ea8-ed4a-453b-a372-c5481df5a208",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf37ca5a-e6f4-4bd3-9476-2233253f9299",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98b5c1d9-8507-48c2-895f-36db7e0bd3e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1495273b-d360-474f-ae67-0765f2383537",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bfb326-c6d7-424b-a53c-b0a54d899fd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acda9b80-33ad-4d8f-8524-e7f0d55bbe3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd70247-039d-437a-b1ab-5bad84ab4944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11e8f3f6-03c5-4afe-b2cc-2d5967a3e02e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27e074be-193f-4f1f-9153-53347bf84545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77bfb49a-8cfc-4d52-8215-16cb7c5aa284"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9a68a14-d62d-4554-b752-e7850bc10dbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "367baccd-b458-4546-81ec-5c7cfba110e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca0e37de-a2a3-40f9-859c-b6fc703eb3fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4282c915-10c9-468c-b71c-66ceabb01c53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c48b0a90-7f22-4f64-9217-9d410617ea67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2670720-57ba-4d37-a500-d7304d4f8ae0"
            }
          }
        ]
      },
      {
        "id": "414362d7-4bcc-4d16-8944-9d215ab25774",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "baea2b4e-0152-4420-a048-faf56342c82c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "238ea0b8-5bd6-46e1-9ce7-e5331627405d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d71d0872-028d-4539-9b94-9523367e9cb6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a997a44a-a7cd-4ed1-9abf-ea1d52550cba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e0c372-b1ae-49ef-910a-215c1da3a03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c2e06f-2cc7-42af-884f-46b3b236fbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1b3bd75-c7be-44b3-9b99-7d0eabc03b6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f04a421-363c-4874-9f37-2f9d34af24dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa2e3db7-1e46-4960-95dd-8ecd3b1a4fb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9011f3e9-d18f-4ae8-b71c-b1b3395e6191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd2bc76a-5454-4d6f-adea-c12f35a49204"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46dd64a2-0a01-4fd7-a43d-271954763ccb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39c1a23a-af1b-4e91-8dcb-a161bfaef036"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98cb4bb5-d0f1-4627-8069-48e6253c81ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f1e8f8c-8f66-429a-a5a5-d4f1165560b5"
            }
          }
        ]
      },
      {
        "id": "8b445d73-5460-4170-8c20-c6fca0912845",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89a6f135-7885-4fea-afb1-7e6026df374b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a329d3b6-5303-425a-9e71-b1e69eb0d9aa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f7402b5a-193a-4a4f-8f55-9e8e66c77a9d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acdff5ff-3f0f-48fb-974f-35d9bc5d9b9e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06586dc6-2232-43dc-b63c-e1724a18b937",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.97222222222224,
      "responseMin": 6,
      "responseMax": 6529,
      "responseSd": 463.0693955568764,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722473050355,
      "completed": 1722473089775
    },
    "executions": [
      {
        "id": "8d68125b-1f88-4f1b-be65-fbd4f558ee48",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af9e2a52-8f0e-4989-ab3e-65ec7af678ef",
          "httpRequestId": "77c00ac2-ab10-4ebc-8311-90295a9e88dc"
        },
        "item": {
          "id": "8d68125b-1f88-4f1b-be65-fbd4f558ee48",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "20d6ea1c-3ea1-42bc-8ed4-12e6f22820f6",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "3c4522e9-c6f7-4b78-81b7-0c56aee7505a",
        "cursor": {
          "ref": "2803ef95-a0ab-4add-8939-e803bfad9c9d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "319403d8-6087-4231-864b-10804205a9c9"
        },
        "item": {
          "id": "3c4522e9-c6f7-4b78-81b7-0c56aee7505a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bb8382bd-ef4b-4958-84e3-5919ed912f63",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "904cda9c-fa87-426d-ac6c-a93783ef01c7",
        "cursor": {
          "ref": "5ef1bb7a-5897-4b33-b019-5ced2d497d24",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fcfcd0e4-c5b7-45d5-befa-634f7b2e34bb"
        },
        "item": {
          "id": "904cda9c-fa87-426d-ac6c-a93783ef01c7",
          "name": "did_json"
        },
        "response": {
          "id": "1f3bb179-182c-4877-9063-c3154d5985e4",
          "status": "OK",
          "code": 200,
          "responseTime": 419,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a1701d-e217-4b8c-89c3-ba61ab08b3dd",
        "cursor": {
          "ref": "42a74cfd-2661-4556-90ff-2d090fc970b2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34888178-8478-43dc-9895-c2dc6279dada"
        },
        "item": {
          "id": "61a1701d-e217-4b8c-89c3-ba61ab08b3dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "af78ca3e-c38a-4013-87d9-f0d430746bf0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a1701d-e217-4b8c-89c3-ba61ab08b3dd",
        "cursor": {
          "ref": "42a74cfd-2661-4556-90ff-2d090fc970b2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34888178-8478-43dc-9895-c2dc6279dada"
        },
        "item": {
          "id": "61a1701d-e217-4b8c-89c3-ba61ab08b3dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "af78ca3e-c38a-4013-87d9-f0d430746bf0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d8208d-35fe-4c8c-84ba-138685a7eb67",
        "cursor": {
          "ref": "e68b6d1d-be40-4db0-8ec1-70224f228c09",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88da9d51-fecd-4ef6-bd61-278dfbc5915e"
        },
        "item": {
          "id": "d0d8208d-35fe-4c8c-84ba-138685a7eb67",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f1ab89e9-8dd7-4671-b553-a4a195b7119e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25ab6c-bebd-4295-86ff-0e8cd460e2f1",
        "cursor": {
          "ref": "052e942f-c6af-47e3-a0d0-28d41ea6a0fb",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fc4d6780-bc87-4a2e-a949-e2a459865c74"
        },
        "item": {
          "id": "0e25ab6c-bebd-4295-86ff-0e8cd460e2f1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2090a62a-c82b-4983-a468-4fbb641a9bfe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc252d5-25b0-4d7c-ab82-2bd3ef4793f1",
        "cursor": {
          "ref": "29c1d5d5-f1d9-4334-b377-b7f2e41697f5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "244e6aca-bf9a-427f-9c52-a3590b999d6a"
        },
        "item": {
          "id": "9dc252d5-25b0-4d7c-ab82-2bd3ef4793f1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b54f284f-b056-4096-83a3-374f7982ddbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b0f4a8-33d5-4e48-a410-7961554e3f78",
        "cursor": {
          "ref": "0af994f3-5b4f-414a-ba83-79688c201774",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d0a7884d-ad33-4e5f-8536-acd789b0c9bc"
        },
        "item": {
          "id": "48b0f4a8-33d5-4e48-a410-7961554e3f78",
          "name": "identifiers"
        },
        "response": {
          "id": "eb7995d3-5fc3-4b27-b18f-36f4fc5b4277",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ee43ae-994a-425d-84f6-f337d8663a10",
        "cursor": {
          "ref": "8094128a-0333-4f2b-a2b5-bf57c8ae8150",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df9cb823-5e66-4ba1-a120-39e3108aaec8"
        },
        "item": {
          "id": "73ee43ae-994a-425d-84f6-f337d8663a10",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2c95406d-d84a-4074-95ba-cfb3eed14623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25f8946-d7a3-4164-8884-bfda1e332389",
        "cursor": {
          "ref": "5fdee6f1-3256-4024-bc4e-ca5e965d13d7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e568d10e-6235-4e70-b4fe-54eb8f4d319c"
        },
        "item": {
          "id": "e25f8946-d7a3-4164-8884-bfda1e332389",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b8c01dbd-87a5-4642-8206-cfd99325ee05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1575d1-25fb-4bbe-a4de-90d05c681442",
        "cursor": {
          "ref": "43b1cd69-6b5e-4ee0-9f65-54464a8f08d6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d178eec6-f2b7-4135-bdd9-6f4fcdc44e09"
        },
        "item": {
          "id": "cd1575d1-25fb-4bbe-a4de-90d05c681442",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f44558d9-6692-480b-928b-de21c6dede6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ba5f8-cebc-4e34-92a6-6d583bf1c0cc",
        "cursor": {
          "ref": "03cbf9d2-f9fb-4225-8a08-c350a234679c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4ae9d731-5617-4fa4-8fcc-c929dab20eaf"
        },
        "item": {
          "id": "044ba5f8-cebc-4e34-92a6-6d583bf1c0cc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4af5e13b-b24e-4963-841d-79448a6829c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2703ab-3616-4a85-91db-59505c941c64",
        "cursor": {
          "ref": "1d17ba84-3035-4d9e-ae47-d5f601428dd0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "05d98c55-6dcc-447c-b0ec-c8e09a1c7c5d"
        },
        "item": {
          "id": "9d2703ab-3616-4a85-91db-59505c941c64",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fcca20ce-eeda-4c3a-a13d-90a90b8d2636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08d7c24-5412-4c25-be6f-a31c654c388c",
        "cursor": {
          "ref": "027f9bb9-ff4c-4c3f-a507-8172f32e108f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cdb54840-06b2-4840-a201-86aae6eb4acd"
        },
        "item": {
          "id": "e08d7c24-5412-4c25-be6f-a31c654c388c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eb515b70-2077-4d8d-979e-b3cf33fb28fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8a520b-1dd6-4d60-867f-fe05d0ac40d2",
        "cursor": {
          "ref": "61f94fb2-8b40-40d2-b3a3-adb2166a7a69",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "669fd77a-08eb-4237-8474-988d28404bb4"
        },
        "item": {
          "id": "1e8a520b-1dd6-4d60-867f-fe05d0ac40d2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9b8068ce-eff8-41e8-9366-7f1e07308080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1247a12-a97a-4632-821e-81e5c28abad1",
        "cursor": {
          "ref": "672e0ee4-5948-4f58-a3e7-691b4564fea0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d89ca44-8142-41e8-92a2-41088181c388"
        },
        "item": {
          "id": "c1247a12-a97a-4632-821e-81e5c28abad1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "05a08283-0a93-4a8c-88c0-798d49dec4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b108ddc-7bb2-4410-ae15-b0f92b87bbd0",
        "cursor": {
          "ref": "1553aa35-07b3-474c-9aa7-010123d3dd4f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5b900d86-fcca-4977-a83d-c4fbf6c0b4ef"
        },
        "item": {
          "id": "6b108ddc-7bb2-4410-ae15-b0f92b87bbd0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5d2333fa-a3c7-4ecf-b9b4-5be38edb0be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b232b0a5-7211-4c41-8e0b-11774fe8ba43",
        "cursor": {
          "ref": "bf7ae5ad-e834-4eb9-87b3-fa88dadf059c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f91a886-5205-4870-b8f0-3d043575f6f8"
        },
        "item": {
          "id": "b232b0a5-7211-4c41-8e0b-11774fe8ba43",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af1265dd-0ca1-482c-b41d-6cab137cef04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d581f3d-8d0b-4141-a198-fd6de9339d5f",
        "cursor": {
          "ref": "dcf579ab-6ed4-42f8-b317-9cde9ce94075",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f4b156b5-1ebd-4b50-9ea3-e855ff332822"
        },
        "item": {
          "id": "3d581f3d-8d0b-4141-a198-fd6de9339d5f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9af769f-3164-4b1d-a649-3da5abc491e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2c7b6e-3cb9-4871-bade-bc519a67df61",
        "cursor": {
          "ref": "669677f2-0048-4c62-b60d-f76e4df815c8",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "12bf6b44-a7a6-4dd6-b030-78ac04d6d7dd"
        },
        "item": {
          "id": "cb2c7b6e-3cb9-4871-bade-bc519a67df61",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6aa5a5e3-0810-4b2e-a24f-d13fc7f2fc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f07416-ae8b-4a58-885d-7691a4c83add",
        "cursor": {
          "ref": "b0214f99-8bbc-4a93-8938-8b8b192e3dc8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb5112eb-9394-4b0b-b786-ce3d368adcf5"
        },
        "item": {
          "id": "08f07416-ae8b-4a58-885d-7691a4c83add",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "592001fd-7629-4ee2-912e-a0086e3b38d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50883a30-1f46-40da-a910-62939ecc038a",
        "cursor": {
          "ref": "098fbf6e-8fdc-422e-adc7-60b3f90dd4b2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c8690618-8508-408c-bd67-4bbb28b4bfb5"
        },
        "item": {
          "id": "50883a30-1f46-40da-a910-62939ecc038a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7fa69ed0-9275-4a5d-828f-8e0a061de855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d31a4a-433c-44cc-a1b2-eab9d671f825",
        "cursor": {
          "ref": "7a4db58e-f529-4ffe-87e2-cc4eeff17af3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e943fc6d-691c-4d44-a5d2-96101bc4e6af"
        },
        "item": {
          "id": "95d31a4a-433c-44cc-a1b2-eab9d671f825",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "db5873ee-e2a9-433c-b2e5-8a3a5cb9e418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b9bb47-c62c-4b0e-a3c8-d8ea20ce3b27",
        "cursor": {
          "ref": "a1af740e-f0e2-4f22-a321-0360dfd97631",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d4b612a4-fa35-42a3-8445-a5a289cc9023"
        },
        "item": {
          "id": "e8b9bb47-c62c-4b0e-a3c8-d8ea20ce3b27",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d2f05ab4-fd6b-4c3a-bb29-80efa7e54cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2292d52e-6cd0-47b6-a642-dc9479aa346b",
        "cursor": {
          "ref": "79a1449b-08e4-484f-83ec-a1057e527945",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8c473c0d-2533-4702-b53a-63dbdd15eea5"
        },
        "item": {
          "id": "2292d52e-6cd0-47b6-a642-dc9479aa346b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d5a954ba-19ee-4e37-8d95-bc2ba3b00c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87688b0-dedb-46e3-98da-10118bdd9f1a",
        "cursor": {
          "ref": "499a3da7-a866-4659-81d8-dd179d381f0e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd62b8f5-dc14-4b72-9882-889ecb5af850"
        },
        "item": {
          "id": "e87688b0-dedb-46e3-98da-10118bdd9f1a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "334559e5-84a2-4460-8285-1ab1c488c7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1e93b3-644a-4f5e-ba2d-423e2d1c190a",
        "cursor": {
          "ref": "39faeeb2-294c-4128-ae94-6cce0fb5a528",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ba22b14d-661c-4b54-b52d-ffed0979144d"
        },
        "item": {
          "id": "bc1e93b3-644a-4f5e-ba2d-423e2d1c190a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "982b44c3-9e2a-47b6-be30-5d4e18346b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2642a476-1b87-453a-804e-9796ef597e92",
        "cursor": {
          "ref": "a1f7d2a1-d867-4964-92a4-e0de4b7e0f68",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e5d4832b-0708-4a52-9756-5c8c00f8b31d"
        },
        "item": {
          "id": "2642a476-1b87-453a-804e-9796ef597e92",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a7845098-5cb5-45fd-9a67-b84e0ab4129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ceea2-e0f6-4586-96bc-425d808026cb",
        "cursor": {
          "ref": "86297c8f-b9d7-4582-a8d3-49db7f294049",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ffbb4cc-acf5-4c3f-b15d-18b98c2b04ab"
        },
        "item": {
          "id": "2c5ceea2-e0f6-4586-96bc-425d808026cb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "64d157cf-e2ca-4557-925e-9d006de3cff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3064017-a842-4b38-a8f2-a420b2cb56e1",
        "cursor": {
          "ref": "cd2666a4-6fdf-4eee-a2dd-d43a10533b7a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "514fd415-c966-4d89-9705-1ecc10758838"
        },
        "item": {
          "id": "c3064017-a842-4b38-a8f2-a420b2cb56e1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "92fc8d79-4675-419b-b776-3a826e1dbe8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c12368-826a-4a44-8eda-1189984ee509",
        "cursor": {
          "ref": "e9b35720-c0e9-4858-be4a-c28ab49d7498",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "048df254-cd48-46cb-8c9e-95e05e51e75b"
        },
        "item": {
          "id": "88c12368-826a-4a44-8eda-1189984ee509",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4318d666-886c-4781-8f4d-7163f4fa8633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb68af22-2271-46df-a103-e2990f02dda6",
        "cursor": {
          "ref": "6635ead7-26cf-4aec-8f03-bd2ff4ddf947",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ca6d937a-3ef7-48a4-b932-60af9b74bc52"
        },
        "item": {
          "id": "cb68af22-2271-46df-a103-e2990f02dda6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dd5c34d7-015d-4996-8cbe-86fc06ef508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01e16c2-74ea-45d8-856d-4b43d04d3976",
        "cursor": {
          "ref": "502a8732-c003-4bfa-9a01-240b3ffa8fdb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "45fd2209-13dd-4a5b-87ef-bfc2eb1fa0f7"
        },
        "item": {
          "id": "a01e16c2-74ea-45d8-856d-4b43d04d3976",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "05a8d018-062e-4f77-9d5b-7d35d4c2c8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fffcb66-baa7-4a26-af3c-afa077ff8579",
        "cursor": {
          "ref": "eba8ea15-592c-47ba-848e-ea13f7bfcef0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "250da2e9-ed6e-4ee4-b40a-5ab36f56b121"
        },
        "item": {
          "id": "6fffcb66-baa7-4a26-af3c-afa077ff8579",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "220200f0-69d8-488a-abc0-a1c8763e53ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db621b7-5b04-4f05-8967-c98f0ab13101",
        "cursor": {
          "ref": "6bf0cb2d-6c74-4363-998a-a15be157558a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e383336a-b295-45dd-95ec-463066a806a1"
        },
        "item": {
          "id": "6db621b7-5b04-4f05-8967-c98f0ab13101",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d37004f4-997b-4e8b-95a1-944e15a6f5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948aec8e-386b-4297-97da-7bc16e8658af",
        "cursor": {
          "ref": "c6c43c52-bb66-4a12-a5a0-0f3e00c8d44e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bbb51d4a-849b-48f7-8864-112e9c88ec59"
        },
        "item": {
          "id": "948aec8e-386b-4297-97da-7bc16e8658af",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3f1b1c41-acb7-4aca-9d4a-c24eba26fac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8806c2e3-b3eb-43ca-a0b4-6993f9045cdb",
        "cursor": {
          "ref": "dac50734-a3ac-4dd1-be5f-e8d1ee92d554",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "889c6e55-d190-4dc2-a051-7f2a660c455f"
        },
        "item": {
          "id": "8806c2e3-b3eb-43ca-a0b4-6993f9045cdb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0af21a87-86f8-4d40-8b27-b77e866b53e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b111b094-58b2-4533-bb3a-981ac2d1ba3c",
        "cursor": {
          "ref": "55a5ea23-c65d-4ba6-bdd0-560b1cc32583",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ee0f8f97-ce3e-4eb4-86b3-0e8fdf6fc263"
        },
        "item": {
          "id": "b111b094-58b2-4533-bb3a-981ac2d1ba3c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "df72acf2-871a-44b6-9ae0-f710f137a1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3ec700-4d42-4c2d-aae6-c535267b9925",
        "cursor": {
          "ref": "35846f6a-4aee-4ed8-8d42-ab0dfb2524fb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6c25dc19-5c96-4f1c-bbe1-2940f1126fb2"
        },
        "item": {
          "id": "cf3ec700-4d42-4c2d-aae6-c535267b9925",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4c3cec78-9189-4e13-a54a-7202f9d121d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb2f355-7dad-40cc-9fc2-887fc0faafe9",
        "cursor": {
          "ref": "fec03bcd-e1ab-49ad-a688-96de3a6761c2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "876dce7d-e9a3-408b-9aee-8cbc6bfa2556"
        },
        "item": {
          "id": "1cb2f355-7dad-40cc-9fc2-887fc0faafe9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "143e1c80-fa5e-4d6e-92fc-a4d79ae96270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eefbbd-2088-4482-82b5-8cf91f18d0d6",
        "cursor": {
          "ref": "14348c22-af1e-4c8b-ad48-e84d653add26",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b66a5672-f329-4cd7-82df-2e539160c160"
        },
        "item": {
          "id": "69eefbbd-2088-4482-82b5-8cf91f18d0d6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4775311c-c997-4295-9c33-8a90b75e3c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d9def-5dca-4e3c-9fa7-4cf49757f253",
        "cursor": {
          "ref": "91f47d85-e405-4fac-a6d3-f2a63f2f5507",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3a99f8ec-0c41-4a8c-b10f-4ff0587097a6"
        },
        "item": {
          "id": "559d9def-5dca-4e3c-9fa7-4cf49757f253",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3e1a4056-c48f-4fa5-a2f9-07336952ce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902a5844-53fd-4d76-91d4-6ded0b549686",
        "cursor": {
          "ref": "04e058ed-b169-478b-a697-0253780e6508",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c221e800-4200-4518-9306-6d618726fed2"
        },
        "item": {
          "id": "902a5844-53fd-4d76-91d4-6ded0b549686",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aeae92d1-c2d8-447b-8516-a154e35347c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5807a2c-52d1-4b5f-b977-b5e9aec16be1",
        "cursor": {
          "ref": "c1116ee0-5eaa-4b66-b4cc-37879a1f7401",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93d0c960-ed91-49b6-b201-993ffb621a38"
        },
        "item": {
          "id": "d5807a2c-52d1-4b5f-b977-b5e9aec16be1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a6f0836a-a407-401a-b952-1293b21c29bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9fbeda-199f-4793-a267-35c71c9debc8",
        "cursor": {
          "ref": "7c8a5613-e028-48fc-8456-406f870c6747",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ec500117-a237-4911-866b-4b59e75c54df"
        },
        "item": {
          "id": "8d9fbeda-199f-4793-a267-35c71c9debc8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f58664d4-ab53-440e-9490-703cd3e387dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a600064-9c0d-47e8-9df2-9761364b4647",
        "cursor": {
          "ref": "88f29d2a-b45a-4b49-865b-05d3f8004932",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c004a85b-a16a-4e0d-88c0-19611ae6790e"
        },
        "item": {
          "id": "5a600064-9c0d-47e8-9df2-9761364b4647",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29245f57-ea0d-4b79-9111-29d472ec1f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb873e8-29a0-4a85-ab34-84755f92a971",
        "cursor": {
          "ref": "0a8967fe-4683-4ce1-9860-a3ab9384e9d0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "553c8c32-461e-432b-a944-c7d4ddacc509"
        },
        "item": {
          "id": "9fb873e8-29a0-4a85-ab34-84755f92a971",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "06167607-9e4f-497c-a6dc-8ee2c52a0e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c634ab4-22c9-4e62-b89c-d6c9efeb6a27",
        "cursor": {
          "ref": "fab8b017-d12b-4522-8120-3fa12026c0d5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "885c9b61-7df2-47a3-83e6-097da4f26d3e"
        },
        "item": {
          "id": "5c634ab4-22c9-4e62-b89c-d6c9efeb6a27",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3c97b3c9-7676-470d-8688-37b01cfcddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aab593-5ed8-46b9-915c-d3b7da8a3337",
        "cursor": {
          "ref": "0491f052-74ba-4427-9c47-e3890f981430",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "757e3bf2-895f-4f54-88df-beb57d0ac048"
        },
        "item": {
          "id": "05aab593-5ed8-46b9-915c-d3b7da8a3337",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "44dd967b-7322-4e4b-a70f-6455995a6fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ba0a65-7c82-436b-9032-518008d980ec",
        "cursor": {
          "ref": "74922a4e-894e-44d6-bd70-06b59e390fbe",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "851c71b3-3290-4c26-a5a9-8864b1aef10e"
        },
        "item": {
          "id": "b2ba0a65-7c82-436b-9032-518008d980ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4fa0897d-1a49-44a4-9d0b-f7d257b89b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b6a77b-4b20-459f-8c9e-287639208a8d",
        "cursor": {
          "ref": "d8937b3f-7b69-492d-b7ac-e54a176a997d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ed9699ab-d3a7-4597-9e67-3e617a996b10"
        },
        "item": {
          "id": "21b6a77b-4b20-459f-8c9e-287639208a8d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ed39e504-68ee-49c0-ac65-028101c07526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4354d9d5-3b75-42b4-b091-f979385bad63",
        "cursor": {
          "ref": "0def469c-6996-4f18-a854-8b36bbd4a3ea",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7225270d-6378-4e94-b368-58d2b51d0316"
        },
        "item": {
          "id": "4354d9d5-3b75-42b4-b091-f979385bad63",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2a24f36a-2524-46c2-98d2-793cb39d56c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa3393f-eea6-49ee-9ce7-059c432c1de9",
        "cursor": {
          "ref": "d435c642-e919-47e2-b261-5f288b17c09b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1e19db01-f576-437e-9854-0f29ab4eb8c9"
        },
        "item": {
          "id": "3fa3393f-eea6-49ee-9ce7-059c432c1de9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "666bf4ca-2a44-4bc0-8aba-fc5f4421060d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8983bb10-8aeb-4f40-ba2b-b24654030bae",
        "cursor": {
          "ref": "790279ab-73f6-473b-8ff1-44267899b6fa",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7f3aaf62-8f78-44e4-86e7-96ffdba41afa"
        },
        "item": {
          "id": "8983bb10-8aeb-4f40-ba2b-b24654030bae",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8a8c8100-9e31-4723-b671-afd8e16692b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6736600-2957-4f6a-967e-daeb97bf2dd8",
        "cursor": {
          "ref": "db153a82-9b2b-4a8e-b0d9-61b52575c7fa",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2c68e753-0d13-4e57-87de-f60bfdabe859"
        },
        "item": {
          "id": "b6736600-2957-4f6a-967e-daeb97bf2dd8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9bf26ea3-d0cd-44aa-9731-58db39721e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8534f3a-4314-449c-86d7-f38e9ca173f5",
        "cursor": {
          "ref": "5afc507a-db78-4f7a-8054-9c24442094c9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "422c730b-4c55-4c2c-80b6-8e7fbeca04c7"
        },
        "item": {
          "id": "c8534f3a-4314-449c-86d7-f38e9ca173f5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c9dee74b-9388-4f03-8e58-4120ef7a759e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74af281e-ae80-4488-a5fd-2dc90e2cb169",
        "cursor": {
          "ref": "3284fd37-15d0-4429-8363-959ec7365e2a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cc01b263-6bf9-450b-9257-ae074f4f48d1"
        },
        "item": {
          "id": "74af281e-ae80-4488-a5fd-2dc90e2cb169",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bab17990-8815-49f5-988b-e4b757204889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924430c-9e5f-4ce3-bf1e-706d2e705f4d",
        "cursor": {
          "ref": "a9f287b2-9337-4e02-974b-26000fa80b2d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6b156f8e-7782-4a22-88a3-ad2eef4ae8c3"
        },
        "item": {
          "id": "2924430c-9e5f-4ce3-bf1e-706d2e705f4d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b58a3709-356b-4342-8696-404528f73f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2785af33-726b-4d2e-bc74-25d8636505d6",
        "cursor": {
          "ref": "dffc8095-b25c-476d-975b-10ed64f1bcdb",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "61657380-7918-431e-820c-3ab764d65f2a"
        },
        "item": {
          "id": "2785af33-726b-4d2e-bc74-25d8636505d6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6b2f1f49-31a6-43d7-9541-6ae3675b933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8ba15a-d95d-4696-b5fc-23dd25e1a9f8",
        "cursor": {
          "ref": "9fcc843e-5a2d-4641-8897-50cd3b49f4cc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3e19719d-aa45-4e19-9ef9-4d8fc6b27ce1"
        },
        "item": {
          "id": "fa8ba15a-d95d-4696-b5fc-23dd25e1a9f8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8c9808b8-8346-468b-956d-fcaad524e177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e44a616-1e5a-4cdb-bb0d-0769fef1d735",
        "cursor": {
          "ref": "7f8eecff-9eac-4394-8456-023475b8a1c0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e551915-0d69-4123-b44f-93cbaea510b8"
        },
        "item": {
          "id": "5e44a616-1e5a-4cdb-bb0d-0769fef1d735",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6090226c-c052-48df-b845-61f630d6752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb08a88-5dd3-4d15-b39f-50d95cb85f26",
        "cursor": {
          "ref": "28d1110b-6f26-4e74-aa91-6ee1d918d56c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae2d3144-1f09-4c4c-baad-591eeef358ed"
        },
        "item": {
          "id": "cdb08a88-5dd3-4d15-b39f-50d95cb85f26",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "30c0ba7f-7314-420a-ab6b-34b7dc51ad7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612bd5f5-2d35-4773-92c6-6cf6345595d1",
        "cursor": {
          "ref": "99a3e4fe-e346-4f01-a889-753b263abf0f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ba13b575-071d-4b29-8a55-9ff214fdee67"
        },
        "item": {
          "id": "612bd5f5-2d35-4773-92c6-6cf6345595d1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "db035e4b-aac8-47e2-98ba-128db75de372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e65b92-c3ed-4c98-aee4-077f997b5620",
        "cursor": {
          "ref": "eafe0587-a004-4e07-9ed8-b77df9e25c73",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "14ff1495-418d-4a80-b7c1-8a62544973aa"
        },
        "item": {
          "id": "d0e65b92-c3ed-4c98-aee4-077f997b5620",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "33ae6f17-492a-41d1-9783-49466168238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda6d5ee-d4d5-4b54-97e9-cc72e1b8229f",
        "cursor": {
          "ref": "40d2f4ff-86c9-41cc-92dc-a334e571befb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7923e181-591f-4737-b48f-f5b6d3ec0953"
        },
        "item": {
          "id": "eda6d5ee-d4d5-4b54-97e9-cc72e1b8229f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "94253913-5c78-4852-bd19-71ec77948391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93fd8a5-e8b1-4444-9960-e673a0691fbb",
        "cursor": {
          "ref": "7d25c1b7-4b04-4024-b46e-554a7041b7a0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "30aea097-438f-4f69-ab0f-74cb7bcd1cb6"
        },
        "item": {
          "id": "e93fd8a5-e8b1-4444-9960-e673a0691fbb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6d71797e-968c-4641-a206-6cd4a55bd904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dafdc6-284d-4364-b8ca-3621d0dfdded",
        "cursor": {
          "ref": "f4fc9c92-19e6-4cc9-95ab-0c658471d05f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "734da8db-770a-4458-b1c7-0e86933805a4"
        },
        "item": {
          "id": "69dafdc6-284d-4364-b8ca-3621d0dfdded",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79adba68-bd06-4f0d-bca9-7d7e06f11108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a083953f-c9d7-4822-a58e-4fed65baad06",
        "cursor": {
          "ref": "85fcc843-27a8-47a3-8986-6e1427e65687",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "28a25e62-4cca-466a-97be-4e0f2d674576"
        },
        "item": {
          "id": "a083953f-c9d7-4822-a58e-4fed65baad06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae14d983-5033-4662-b2f5-328f15a48f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e749dae-46af-4ede-abec-2a91e306088f",
        "cursor": {
          "ref": "6b428a1d-dd72-4de3-a72a-b5b561b7ad2f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9afe21f3-296f-4051-8684-2e95b7f6ead9"
        },
        "item": {
          "id": "7e749dae-46af-4ede-abec-2a91e306088f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a17424ba-dd17-4509-b415-52b8b1b52883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1871e140-c00d-4991-a358-09130d583eeb",
        "cursor": {
          "ref": "021766e4-d077-4caf-bbed-199d868153de",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7cd3324d-aaf2-4459-bf90-ef80a16bb67a"
        },
        "item": {
          "id": "1871e140-c00d-4991-a358-09130d583eeb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e21f126f-4ee0-49af-a212-8aac8f5a5cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742f52f2-b5ec-4166-8771-6af096681c2b",
        "cursor": {
          "ref": "ec49dc2c-51c3-4219-9f54-9e16d2367568",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "223555ed-a13e-44c7-81e1-9d3678f57fc6"
        },
        "item": {
          "id": "742f52f2-b5ec-4166-8771-6af096681c2b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f6dd7d15-eace-4177-b1c3-b40ade872673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b379728c-f492-4370-9d54-f5faab97d427",
        "cursor": {
          "ref": "17d59257-a874-4c91-86e4-b3654f253918",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0547a825-1908-4b4c-ad7f-823edc20b014"
        },
        "item": {
          "id": "b379728c-f492-4370-9d54-f5faab97d427",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a1490170-045d-4384-903c-0d494586b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca69a6a4-e244-4ccf-8d42-d8deb1b9ba53",
        "cursor": {
          "ref": "bd4893f5-dcf9-4fe9-ab8b-85d8c5eaac7c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "44576cae-3098-4a37-bbea-0543326d4273"
        },
        "item": {
          "id": "ca69a6a4-e244-4ccf-8d42-d8deb1b9ba53",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2e5844d4-4723-41b5-8139-50212c9db7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff53955-b220-4b49-bc3e-2b303dd3c8fd",
        "cursor": {
          "ref": "807ebd27-7dc8-4cca-b7a5-3b181575d81c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "31ccc668-8e72-4d7f-a7fe-69a7b772461c"
        },
        "item": {
          "id": "fff53955-b220-4b49-bc3e-2b303dd3c8fd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a268d6d4-7eb7-4177-9785-d486ad3ce04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e99e35-d44d-462a-b232-1e495586c085",
        "cursor": {
          "ref": "c711d162-c5f0-4502-8b51-492b9c794aea",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "01b8f959-e6a7-4321-a5af-484cfb283c5d"
        },
        "item": {
          "id": "16e99e35-d44d-462a-b232-1e495586c085",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "90e374a6-d686-4fcb-a8aa-2cd2d9505eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162e0463-7256-4991-86fa-20516b429127",
        "cursor": {
          "ref": "c9d1fea6-458f-44c5-a800-5fcbe30e04b7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3411054b-8671-4e98-81ca-1099c8693f2c"
        },
        "item": {
          "id": "162e0463-7256-4991-86fa-20516b429127",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bc5121bf-a71e-4939-929b-13b5907842fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc6a37-4582-40e9-b3d1-0355f227db61",
        "cursor": {
          "ref": "d963e0b3-ff09-4565-ba75-ca8084063042",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ec5f9ce5-585f-4e81-b8ba-aecddb234cbf"
        },
        "item": {
          "id": "18dc6a37-4582-40e9-b3d1-0355f227db61",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c761258b-217a-4abe-b137-0d21f54d31c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f4c102-0f4e-4d4e-a366-85a4f80b044d",
        "cursor": {
          "ref": "5356f989-8076-4776-a0f5-77f8952f268f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "716e3eb9-ac21-47d3-8476-b249c3e82274"
        },
        "item": {
          "id": "32f4c102-0f4e-4d4e-a366-85a4f80b044d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4d8b88f7-0432-4aa1-a858-dd8e41bd85d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dca70a2-c1ae-4a06-83c0-b10339230efa",
        "cursor": {
          "ref": "29f4e617-4e16-4fd0-8e16-36be460f2e52",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0608c569-d54a-4e55-9489-4cdf518ea843"
        },
        "item": {
          "id": "0dca70a2-c1ae-4a06-83c0-b10339230efa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "399389b7-a3df-4341-9b5b-c7f751246695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5947c7a5-6122-4a3e-9881-b9842dfaf794",
        "cursor": {
          "ref": "092912d0-f160-4cc9-89df-1e76ee4cccaa",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fe5e7de6-a86a-449d-8ecf-ded76c0e17ac"
        },
        "item": {
          "id": "5947c7a5-6122-4a3e-9881-b9842dfaf794",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "82c38005-6942-43ee-88f6-2335ecce7e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d01ef0-deef-4510-96b5-6afbf79b02fd",
        "cursor": {
          "ref": "9529fbfc-7312-482b-aa3e-ddc1b0185ce3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d61771f-a10e-4334-ab50-eaf7c635ea53"
        },
        "item": {
          "id": "80d01ef0-deef-4510-96b5-6afbf79b02fd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f0cfc912-9ec4-484b-934a-c2a3e4c6860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a906a6e6-1c80-4982-88da-e1698746b39a",
        "cursor": {
          "ref": "5364322e-3aeb-4a72-a5e2-985c4e77fc85",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b392e05-967c-4c9a-a0ea-cacda8245a08"
        },
        "item": {
          "id": "a906a6e6-1c80-4982-88da-e1698746b39a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "19cdd6cb-541e-42c9-83b4-17f89d9c628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9431548f-85ce-4e64-8c24-6281a16ae363",
        "cursor": {
          "ref": "276c6330-c9d7-4c51-8e1d-6d412c94c67f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6684f971-b4c7-44c2-bbeb-3008792e2553"
        },
        "item": {
          "id": "9431548f-85ce-4e64-8c24-6281a16ae363",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3257606b-1407-4095-b917-514588bc8348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b38bad-fef2-4898-9ada-d7a00b076d23",
        "cursor": {
          "ref": "00a02423-d3c4-48a2-84a9-327ee1838dbc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c6061fbb-6dce-4cbf-8487-0c8a4aeb8636"
        },
        "item": {
          "id": "23b38bad-fef2-4898-9ada-d7a00b076d23",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "85d67389-53a3-4e42-8112-a9b43ddf0486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b584c-4ca1-407d-b729-edddc7d4f30e",
        "cursor": {
          "ref": "8c40fdce-61a0-4047-8378-5a76091b0de1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2657b216-ceae-4208-841d-90311e2cb7af"
        },
        "item": {
          "id": "619b584c-4ca1-407d-b729-edddc7d4f30e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "794ef4f4-7c62-4cc9-b85b-906456efbe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e65309-c77e-4b74-8a74-abaaac1a38c6",
        "cursor": {
          "ref": "edebe452-edce-45b1-b0e5-13d05571c832",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e68a2b9b-54d5-461f-a09a-b8373fb0da3d"
        },
        "item": {
          "id": "e7e65309-c77e-4b74-8a74-abaaac1a38c6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "42949160-4521-4ee9-b57a-4900c33a555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd5795e-cf6b-4626-b2cf-bf8552a604b2",
        "cursor": {
          "ref": "44ca09dd-6e21-4a0a-88bd-4ea1bba4b90d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "394a0e5b-c002-4b99-80db-e6b98e834e11"
        },
        "item": {
          "id": "1bd5795e-cf6b-4626-b2cf-bf8552a604b2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "61d9cf8f-a806-4523-8dd7-29852382dffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a8f95d-4a93-4f8d-9d60-3861f40e73ed",
        "cursor": {
          "ref": "4d3c4971-f5ba-4f0f-a873-e4e1ff03a569",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "432d920f-f3d1-43b5-9d09-6fcaf3d5fbc5"
        },
        "item": {
          "id": "c9a8f95d-4a93-4f8d-9d60-3861f40e73ed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9ae6e8ac-cf89-4649-a018-81da485e54a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f5caca-8d12-432d-b8bc-95c92282adb9",
        "cursor": {
          "ref": "f0add5a2-1aec-4a0a-8db2-d6905efeac99",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b6805e5b-b828-4617-aafb-58c9597d085f"
        },
        "item": {
          "id": "43f5caca-8d12-432d-b8bc-95c92282adb9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "df0dca60-f3e2-43a3-b52b-ff83c5c0f8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca90cf5-4efa-4de3-a722-b4c1599ea59d",
        "cursor": {
          "ref": "f55044f3-a191-4f12-bf7a-6e8101261d39",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "05cb83ae-04d5-4adb-9a7e-1f458b843020"
        },
        "item": {
          "id": "3ca90cf5-4efa-4de3-a722-b4c1599ea59d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f31a0117-bfc7-4c89-8cb6-9adb11a554f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3789e563-f2c1-42b9-91a9-0143929ae78e",
        "cursor": {
          "ref": "15eeb9b1-1968-4d33-8d2f-583a824f50ac",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "04f3e0ee-d52d-4dcc-b67b-84611bbee067"
        },
        "item": {
          "id": "3789e563-f2c1-42b9-91a9-0143929ae78e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1afbcad3-b34f-4f0f-9e26-34893922df0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f775cd-db96-49c3-b12d-17333c60962c",
        "cursor": {
          "ref": "42ec7055-9326-4a3c-a39c-d12458570000",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5e01e658-34d0-4a2e-93ca-78a86428145b"
        },
        "item": {
          "id": "d2f775cd-db96-49c3-b12d-17333c60962c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "525833fc-a40b-4a65-b70a-b7403281926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe116413-9cd3-43cd-883e-a57f4b8b59a7",
        "cursor": {
          "ref": "b4367b46-fb2b-4741-8242-79b75a5852b4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "15320720-5d8e-4b13-bcee-8dd53ecb9891"
        },
        "item": {
          "id": "fe116413-9cd3-43cd-883e-a57f4b8b59a7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cdcecd31-8a33-48aa-ac4c-88aa9617e219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08330527-08ca-4230-b2aa-83771b8ed81a",
        "cursor": {
          "ref": "c3a90639-7c4f-42b3-bcc4-28e6f1271045",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3fe2c1b4-3f51-4f33-87a8-8dc8d18a5598"
        },
        "item": {
          "id": "08330527-08ca-4230-b2aa-83771b8ed81a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "53cc08da-7d17-4340-8189-43a667d514d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483064ca-8b22-4b52-9854-d6794abd022f",
        "cursor": {
          "ref": "fb291cfd-cac5-48b0-89ca-b0d6bcda7b7e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d1c4d771-6ab8-462c-83f1-6dd23eea0806"
        },
        "item": {
          "id": "483064ca-8b22-4b52-9854-d6794abd022f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4817d729-7bef-4ab8-aaef-9aa990f21e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0fa3eb-d36c-4155-86e2-875b2d1fb0a9",
        "cursor": {
          "ref": "b9da9661-ce25-4d7c-9413-ce1507c65fdd",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5bc400e8-09d8-4e90-b831-91989490742e"
        },
        "item": {
          "id": "3b0fa3eb-d36c-4155-86e2-875b2d1fb0a9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7b18b307-b172-4e3c-85b2-e86b95d8316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d4979c-8f27-4717-a3d5-28fb1699c15b",
        "cursor": {
          "ref": "15f37aa0-9f1e-470e-b88c-3e33a3e423f3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3a774510-223b-4cdf-9749-2542410f81e3"
        },
        "item": {
          "id": "76d4979c-8f27-4717-a3d5-28fb1699c15b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4164e6d0-5021-4511-976b-6ca6b5c1b6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff89663a-f58a-4461-b120-15c858d266aa",
        "cursor": {
          "ref": "5fcee8af-5e8d-4cae-9365-261ea37a8120",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7e491768-5496-4eed-9d02-998c98759f13"
        },
        "item": {
          "id": "ff89663a-f58a-4461-b120-15c858d266aa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f401d612-93b9-4ddb-b3ce-049e18f5e1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d8a6e-b056-4ef1-965f-3092b0519341",
        "cursor": {
          "ref": "cb1ea1c9-0564-4ec6-9d3e-c8212cdff024",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0987e4f0-b942-4b05-9424-eab0eec3d29e"
        },
        "item": {
          "id": "230d8a6e-b056-4ef1-965f-3092b0519341",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6fd325df-e058-4949-9131-5285a3aaaa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f62336-1ddc-4651-8280-f324550ff2ac",
        "cursor": {
          "ref": "12faec5f-88e1-492e-9969-79a822292196",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "92f46b89-a3db-43ad-b16d-d533d28a1884"
        },
        "item": {
          "id": "67f62336-1ddc-4651-8280-f324550ff2ac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "063b48d1-4bdb-4916-a110-9e16a747b2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e72d88b-ab50-4840-b9cf-42906b1cf9eb",
        "cursor": {
          "ref": "c2f422ab-1258-4be2-86c2-2cd4799476cf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2eb6927e-7d22-47bf-8ef3-ca1ddd704c13"
        },
        "item": {
          "id": "9e72d88b-ab50-4840-b9cf-42906b1cf9eb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7a2d7fdc-8752-4618-bb5c-15b5e920f38f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c083b-fb83-499d-a2c4-af4a91d3d2e5",
        "cursor": {
          "ref": "aa6660a3-9b0e-4d29-b60e-a53ad5788f11",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9cb484dd-96bc-4ccc-8dd2-e780f8a7b53b"
        },
        "item": {
          "id": "2e2c083b-fb83-499d-a2c4-af4a91d3d2e5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6a4bb808-c597-4fb1-8ad6-c1ce34b4fee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "11dcbade-18b4-4bd1-adf5-0337547a6229",
        "cursor": {
          "ref": "5f241988-1185-49f2-85f4-c64d20cb56f6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "145914d3-a98b-463e-aca7-fe561c109def"
        },
        "item": {
          "id": "11dcbade-18b4-4bd1-adf5-0337547a6229",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6aff347-fa70-4eea-bb58-1eba28c96855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b658de71-0894-4a09-afc6-15ef173b39cc",
        "cursor": {
          "ref": "96bf4b5c-c2dd-4287-9c5a-ec39ea1fe008",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "23e88285-d982-4b01-b993-fa304cfac088"
        },
        "item": {
          "id": "b658de71-0894-4a09-afc6-15ef173b39cc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7edc6db9-60cc-4034-af2f-4a9d0023fe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b736ae77-8ad0-487e-9cf2-c2958b39b198",
        "cursor": {
          "ref": "4f2bf963-83d5-4e9c-b659-3ebb5873bf94",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5ad747dc-ab86-491f-ac71-a63b12c70009"
        },
        "item": {
          "id": "b736ae77-8ad0-487e-9cf2-c2958b39b198",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e530576b-8368-4760-ab15-d1cc768db152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "063e5ea5-0b7d-4c4c-a4ab-5ac7421666b6",
        "cursor": {
          "ref": "9c720ffd-fd11-43f8-92e3-45aa7fd4cfe4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f3e04ba5-2786-4295-b8eb-36b4a923dab6"
        },
        "item": {
          "id": "063e5ea5-0b7d-4c4c-a4ab-5ac7421666b6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "af27df3c-2052-4813-81af-712c3bfcabbe",
          "status": "Created",
          "code": 201,
          "responseTime": 6529,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eccd7e-e52e-4434-a398-daa4cdc492da",
        "cursor": {
          "ref": "77975b97-a06b-43ca-aa69-1dda19b256b3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "01b23850-3930-4757-ba1d-e0b5da2526ea"
        },
        "item": {
          "id": "38eccd7e-e52e-4434-a398-daa4cdc492da",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "da4702de-5e22-4785-aaa4-3bf661d04d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0d5bf8fd-8486-489f-9483-8476f7d88306",
        "cursor": {
          "ref": "e13da5fa-96eb-4c28-b652-166d34b9de3c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "62481786-e96e-4aa4-adca-9a5c46f432ee"
        },
        "item": {
          "id": "0d5bf8fd-8486-489f-9483-8476f7d88306",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2d0354d0-4130-4221-97c4-23f290d19598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "07f889b0-2dbb-4d1b-9469-8c0db31cab72",
        "cursor": {
          "ref": "0dbd3560-4ca0-4268-8b3e-42cc03253dcf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "84e607b0-cd13-4b4d-8520-e46e3c66501a"
        },
        "item": {
          "id": "07f889b0-2dbb-4d1b-9469-8c0db31cab72",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0334622-2631-41d1-a442-9981b540a219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d9b553-d750-4ff0-9b2a-042b531d41ef",
        "cursor": {
          "ref": "d07722d7-cce0-4160-b2f7-47e0c1ed4616",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a8268b1e-31a3-447c-ae0b-9e8b81434dda"
        },
        "item": {
          "id": "f4d9b553-d750-4ff0-9b2a-042b531d41ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d3598375-d0c9-4f22-aefb-f4e2d44b4604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c481f022-fa2d-4fba-b5f9-22ac63910a46",
        "cursor": {
          "ref": "51261fc6-9826-410e-a8e5-29d8211cb756",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "27384129-e823-4da7-8728-622d7ffa428f"
        },
        "item": {
          "id": "c481f022-fa2d-4fba-b5f9-22ac63910a46",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67f8ab02-da16-4896-b415-22287927f312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a594a0-5c53-448c-8ce5-3dd17e1d9974",
        "cursor": {
          "ref": "e6e1f22a-a4e4-4d38-ba06-14c0cd46bf4b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "498742fa-9e3f-44bf-b696-2481e6894a83"
        },
        "item": {
          "id": "a7a594a0-5c53-448c-8ce5-3dd17e1d9974",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "49a7f655-7f0b-4de5-ac6d-fc7b90fe979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71719db1-0ed3-46b6-9a5d-ddb06ad0cf7b",
        "cursor": {
          "ref": "e9b7ce40-7079-4426-b21c-c261de647557",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b0b44efd-9b91-4269-9912-0125ac5f9197"
        },
        "item": {
          "id": "71719db1-0ed3-46b6-9a5d-ddb06ad0cf7b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f769b06c-6587-4a33-83a4-4fd94c8cc91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66c4f2f-f7d6-41dc-8982-a40b41defcc8",
        "cursor": {
          "ref": "2bb2eb88-4d62-431b-95ec-6093cb8d4287",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e9ca883-e74f-4392-8ff9-af286b6bb23b"
        },
        "item": {
          "id": "d66c4f2f-f7d6-41dc-8982-a40b41defcc8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "351b4d1d-7119-4e97-b333-05020fecea64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26650fd8-ef7e-42a8-9886-85d05848d947",
        "cursor": {
          "ref": "1fbc098f-a7aa-4105-b577-ea7fd3967793",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1cc77cf-3e96-46bb-8e92-4151e8b27e4d"
        },
        "item": {
          "id": "26650fd8-ef7e-42a8-9886-85d05848d947",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "092817c6-19bc-4acd-bcb3-01c21eee8c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7df6b25-2510-47cd-8d00-b2cefb50d9b5",
        "cursor": {
          "ref": "fda7aa2a-a888-4089-9e83-2f8bdd9e9e4d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9adcb3f1-cbf2-4921-bd55-93a6c71a435e"
        },
        "item": {
          "id": "e7df6b25-2510-47cd-8d00-b2cefb50d9b5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8e6d8fb7-7a72-4b8c-ac13-157822f35b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32898d-9337-4cae-ac18-643c6173dfd4",
        "cursor": {
          "ref": "0fa442e8-e5fe-4a10-9129-61614cdac23c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7648b5d8-dddb-4e07-b071-bf0bbd773f36"
        },
        "item": {
          "id": "1e32898d-9337-4cae-ac18-643c6173dfd4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc179c1d-4aae-4089-b05d-b32359d04c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9831869-a357-49f8-82ed-11b93b0b26aa",
        "cursor": {
          "ref": "affeafbe-fff7-4c85-9451-10ee1167dbbd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6a77e904-954e-4c23-ab6a-fd8de4148325"
        },
        "item": {
          "id": "c9831869-a357-49f8-82ed-11b93b0b26aa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa0ac0bd-74ab-4088-adef-e0147c21bec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0712d4-193e-432b-8dee-e82054a6e982",
        "cursor": {
          "ref": "a70ff00b-3188-4b57-8759-0ee1e2f11f20",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "115afd23-0733-4d36-b4a9-a6371630e903"
        },
        "item": {
          "id": "3c0712d4-193e-432b-8dee-e82054a6e982",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "406fbfde-84df-44ec-8234-607994aa3513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc03fbb8-1b5b-4ff1-a2c9-9142b15fa1e7",
        "cursor": {
          "ref": "7ea9c3a2-782b-4d7f-8888-1d7bbbdf0304",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "64903810-d070-46fc-ba52-b9863313eb39"
        },
        "item": {
          "id": "bc03fbb8-1b5b-4ff1-a2c9-9142b15fa1e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3409ce1f-7792-4b96-bd20-b589edff8aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca2d1b-109f-414b-9738-f202f40ca9b6",
        "cursor": {
          "ref": "f2b8e5bc-9985-4b84-a610-e4c80f9de49f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0bf52b65-0a28-4bcf-a64d-3dd399082795"
        },
        "item": {
          "id": "53ca2d1b-109f-414b-9738-f202f40ca9b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d1bc00df-3688-452e-8e54-3f4edc48a4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86971f5-29b5-46bd-9318-e7e015cf8f46",
        "cursor": {
          "ref": "2eedd5f1-90e0-4bb8-9376-87073811a216",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0c5c44d7-d5e0-4da3-ae43-9e4a65c0e611"
        },
        "item": {
          "id": "f86971f5-29b5-46bd-9318-e7e015cf8f46",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f1e8e8d6-614e-4e3c-862a-7dbb494740bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c09dbcd-f7c6-4a9f-b467-ee7fb5c985c3",
        "cursor": {
          "ref": "1a0fb47f-867c-40c6-a2f5-5a8645843218",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f5fbc43f-cad3-41cf-a1b9-e6e0c22617a5"
        },
        "item": {
          "id": "9c09dbcd-f7c6-4a9f-b467-ee7fb5c985c3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "747d6155-1c0e-418e-9b4a-10c2319142bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b3c6e3-3447-428d-8d80-79c06c9e2f16",
        "cursor": {
          "ref": "fdd2b46d-362e-4a31-9a3e-2541b46cd36c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a3d123c3-1eee-4f8d-a9b5-a6b2f3a0d27d"
        },
        "item": {
          "id": "20b3c6e3-3447-428d-8d80-79c06c9e2f16",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d9f1ef64-a538-42e3-b0cf-c542d96e7abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f4709-0f66-4369-b51a-291a8aed1b97",
        "cursor": {
          "ref": "9cc56dbf-4f23-4575-8cf2-3ca844cf188a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "39c264b2-3ea1-4f2f-9d79-4b3b94ca3aa1"
        },
        "item": {
          "id": "fc8f4709-0f66-4369-b51a-291a8aed1b97",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b30dc22c-84bc-4a25-b60a-f357dfa4bf0f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a78f28c0-adab-406d-93e7-248c9fb4e7f2",
        "cursor": {
          "ref": "c30a9291-d08a-4458-ba13-d9d3b25b93e4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3c472d44-da70-4057-bbcf-8ca56d233431"
        },
        "item": {
          "id": "a78f28c0-adab-406d-93e7-248c9fb4e7f2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ac8da95c-c6da-4fc4-aa87-c0d0c5d627dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b7bfc7-ff64-426c-a26a-eee59d2f033b",
        "cursor": {
          "ref": "292a0353-4da1-498c-a78e-fdaea85ef31c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a608bacf-3962-4ae3-85db-5bdd67c71e16"
        },
        "item": {
          "id": "91b7bfc7-ff64-426c-a26a-eee59d2f033b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0925286e-e82f-4250-b8ae-771020e9232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3143c-7b3d-4658-abc2-6d8606150a96",
        "cursor": {
          "ref": "9505e28f-3346-4c2d-b0e8-821499dcd823",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f241e7d4-04ef-4b9f-b525-5f8d0f78e468"
        },
        "item": {
          "id": "91f3143c-7b3d-4658-abc2-6d8606150a96",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81b78b4a-35e6-4561-b1a9-d2375daa864d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a243905-7c41-4938-8734-8d92ed5ded30",
        "cursor": {
          "ref": "428abf1e-6f83-4b7a-9e16-bab78e41e035",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5a83fea2-170e-4cf9-ae8a-fd2951ca14b6"
        },
        "item": {
          "id": "0a243905-7c41-4938-8734-8d92ed5ded30",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d6954ad6-c688-4507-b800-20baae0f3d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e699e1-5ca8-4776-b6fb-8646a30b8cd6",
        "cursor": {
          "ref": "c60c6d17-7089-45a8-88f7-c80955b2969f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2adf4cd7-aaed-433f-8e2d-282b72cc097b"
        },
        "item": {
          "id": "38e699e1-5ca8-4776-b6fb-8646a30b8cd6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a9d76f99-6ff8-45b2-9b4a-d81178983395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750dff24-f3b2-45ab-acde-508ef3758dc8",
        "cursor": {
          "ref": "e3b555b2-4372-4729-b290-b2fa0bfb4460",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1e993895-62fe-4ee5-bca5-95691edb7ea8"
        },
        "item": {
          "id": "750dff24-f3b2-45ab-acde-508ef3758dc8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e9e9f961-ce31-496b-9770-f70add02678e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80676352-fb1f-4c76-b5d1-5d9292f7a041",
        "cursor": {
          "ref": "76479e93-c3e7-470c-8827-fc9fabfc4e7b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f842472a-3bf3-440e-b1a5-2f72df79ceea"
        },
        "item": {
          "id": "80676352-fb1f-4c76-b5d1-5d9292f7a041",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a4e6d74a-9c55-4a91-98a9-e9de0186a322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0f036a-b04a-4c78-b720-b4b683f2b0c8",
        "cursor": {
          "ref": "a6792f06-eccf-429f-acd6-8b65ecd01c10",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "de7b09b4-79c2-4f6f-89e1-07f24ba52583"
        },
        "item": {
          "id": "dd0f036a-b04a-4c78-b720-b4b683f2b0c8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc0cd9d1-4fe8-4c19-bdbb-4119efe9e477",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "62f36da3-34b9-4e93-9022-e4951443b8fb",
        "cursor": {
          "ref": "70c46efb-31db-4f95-b95d-8a1487a3dde1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3063a82a-40bc-48e9-82c6-710d7ef37cbd"
        },
        "item": {
          "id": "62f36da3-34b9-4e93-9022-e4951443b8fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a076fa7a-c824-4e49-8257-0484bc1f351a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a35ffe-3dfb-49f7-8d38-8a96cbe680c9",
        "cursor": {
          "ref": "323ac3c8-bd12-4cfb-874e-dbd49c0c80a2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e52481e2-87a9-40ee-b59f-cb6adb256856"
        },
        "item": {
          "id": "04a35ffe-3dfb-49f7-8d38-8a96cbe680c9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb383edb-8ebf-45b8-a9fd-1eb6a739029d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2c235a-0fa2-4008-90a0-0cafb6dac7d5",
        "cursor": {
          "ref": "2bfc679d-f4ee-4ee1-8742-2b9b3f1dc347",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3955f1b4-ab96-443b-a02f-2083292c7a4b"
        },
        "item": {
          "id": "af2c235a-0fa2-4008-90a0-0cafb6dac7d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eae0f847-6550-4efa-86c2-3643b86a327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896370a7-0196-4d8c-a9dd-6cbdcc972205",
        "cursor": {
          "ref": "28cd290f-4ddc-4ece-b59a-aba5a97a01db",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bfaec3f0-f3c0-4a63-8d1b-21cb4fd6be76"
        },
        "item": {
          "id": "896370a7-0196-4d8c-a9dd-6cbdcc972205",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dc0fae0e-f473-47f7-a870-9d4e6648207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d563a1c-3f86-4201-8a80-f9df515b2d22",
        "cursor": {
          "ref": "05b1db49-61b2-42e8-a2ef-6822ab671b83",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dda68c8e-0b6e-4d93-9cba-76db10cf8a7c"
        },
        "item": {
          "id": "4d563a1c-3f86-4201-8a80-f9df515b2d22",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1c7babd1-5645-43d1-a111-0e73c041937d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d7a45d-0037-4b9a-9e69-8fd1982fa765",
        "cursor": {
          "ref": "ae9cda8a-6e6e-4d5e-a29d-a30659f59556",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "70f3d679-9091-4c74-8b22-769b0189eac2"
        },
        "item": {
          "id": "24d7a45d-0037-4b9a-9e69-8fd1982fa765",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "53d34704-e3d2-475c-81f1-5bde916be591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1466def5-91b2-42aa-9e29-f8e2868ffbba",
        "cursor": {
          "ref": "2bea0557-0722-4853-b14d-817623c1a54a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d345c301-2400-45f5-ac0b-ffa6e48aa965"
        },
        "item": {
          "id": "1466def5-91b2-42aa-9e29-f8e2868ffbba",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c04ec8e2-b983-461b-bf52-df2d34c03e21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1cec1695-8751-4151-ad12-0744cbbebe5d",
        "cursor": {
          "ref": "99145b5c-6d22-4ff4-a494-7c6e1e3ab8ac",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "227fa54f-c981-4a3e-a296-314544d08a52"
        },
        "item": {
          "id": "1cec1695-8751-4151-ad12-0744cbbebe5d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56defbdb-0389-4f66-93b8-5c7519ed0ba8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "bfa68a1e-50bc-49f6-ba0d-dddcbd7374e1",
        "cursor": {
          "ref": "571d4a0a-5b45-4166-bc69-272e86d96ce6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "00348600-7de1-44d8-a369-cfcae9ff15cd"
        },
        "item": {
          "id": "bfa68a1e-50bc-49f6-ba0d-dddcbd7374e1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "23712ae9-af41-4d96-980d-37f5ea4663f6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a36738a6-1b21-4430-a4e3-1aaf8d5c9958",
        "cursor": {
          "ref": "e36e8ade-68a8-4f22-9bb7-9d518e195a61",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "069bdade-d2e4-4875-b4a2-e5ca8ea3346e"
        },
        "item": {
          "id": "a36738a6-1b21-4430-a4e3-1aaf8d5c9958",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "006f98cb-edf6-4bf5-8cf4-74bb63a68b91",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "38494112-d3e5-4216-abb5-1dd2497b45ba",
        "cursor": {
          "ref": "9da42b67-980f-42fa-8a9c-e992e7377464",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a633bc66-a81a-4bf1-888a-44e04ddb184b"
        },
        "item": {
          "id": "38494112-d3e5-4216-abb5-1dd2497b45ba",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c20c7f09-ff39-4b8b-8504-e3a670b15779",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "cbf6e436-9940-488a-9c1b-72f300f07bc5",
        "cursor": {
          "ref": "8a8abd71-28d0-4a30-af5a-15c10709c4c5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0ae61426-6acf-4576-90a6-db425b7073dd"
        },
        "item": {
          "id": "cbf6e436-9940-488a-9c1b-72f300f07bc5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f8bb74c0-c68a-4c18-86e3-99e57c44859b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "db1058dd-3f5b-4200-8c0f-d9ad3157c528",
        "cursor": {
          "ref": "7ac26223-e7df-4baf-95aa-ebb82da05d0c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4a4e8e51-0bc1-4438-aab5-2c6310b1c8d8"
        },
        "item": {
          "id": "db1058dd-3f5b-4200-8c0f-d9ad3157c528",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8738ee3-00db-4301-8599-a9ec2e15c7da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbef5551-6f42-4fdb-a8c6-246cdaa5d5e5",
        "cursor": {
          "ref": "31570b58-464c-4d9d-a1b9-3ee467ba84cc",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b7099eb2-65e7-456e-b0cb-d1606ed24ff8"
        },
        "item": {
          "id": "fbef5551-6f42-4fdb-a8c6-246cdaa5d5e5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "657885df-cadd-4a7d-95fd-c2af61f5e0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77242b06-4f9f-4b12-b65b-a1fd7b15f94d",
        "cursor": {
          "ref": "7b6d1f5e-6e92-4189-9582-a4f15c789179",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "181bcabb-d0ce-4a72-bb42-722b178308f3"
        },
        "item": {
          "id": "77242b06-4f9f-4b12-b65b-a1fd7b15f94d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f739b330-0d15-4e0b-9dc9-17e5c2ab1c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a4c349-07a6-4a86-a48a-e312592f6038",
        "cursor": {
          "ref": "05425f2d-e9af-4065-81c2-39db812f8f24",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "86c7489c-3e79-4519-80c1-9d3a99dc0628"
        },
        "item": {
          "id": "e3a4c349-07a6-4a86-a48a-e312592f6038",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "81d8a028-5287-41a0-a404-f9eb7088d859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b07a522-4685-40f0-a454-c9c6ad1f21e0",
        "cursor": {
          "ref": "d2c6acb0-5387-4ae8-8d0f-acbf0947fe0f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "61e42f62-0888-4e9d-a80e-612d5e6b542a"
        },
        "item": {
          "id": "4b07a522-4685-40f0-a454-c9c6ad1f21e0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4d07eb6f-0205-4a2b-9508-c49c3cd775b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb890f4-d6a6-4181-86dc-ecc9c7390ec6",
        "cursor": {
          "ref": "cd27fde1-173a-46aa-8a61-ac0dd7c520a0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d5bd2b7f-6502-453a-b0c5-832deaf717fc"
        },
        "item": {
          "id": "7cb890f4-d6a6-4181-86dc-ecc9c7390ec6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "35372dea-f324-46bc-a5cd-2ecec1b0219f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a131a960-83b9-41a0-b0b1-497fb49e7e9d",
        "cursor": {
          "ref": "9c68a759-fb81-4e2e-a4db-2ecb23dbd9b2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "38c13022-91b1-4a6d-a1bf-9871bc3d1e6c"
        },
        "item": {
          "id": "a131a960-83b9-41a0-b0b1-497fb49e7e9d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c731bb8e-45e7-4bf5-96fa-a36387a0c48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4243dc7-cc6f-4958-866f-afa4d4725ee7",
        "cursor": {
          "ref": "75ee872d-e89f-4305-b635-c343fe8cf432",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "732c10ea-9a41-4803-9f08-741585a81aa1"
        },
        "item": {
          "id": "b4243dc7-cc6f-4958-866f-afa4d4725ee7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "353e9a80-f2bc-4a40-9a3a-f165b6049b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc316fd-9993-44e8-8ba7-113b9fa66514",
        "cursor": {
          "ref": "d734d137-02f8-409a-8b0c-308ae867c4a8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "347cc2bf-9e59-45f1-b64d-e1f2f50cbc9a"
        },
        "item": {
          "id": "1fc316fd-9993-44e8-8ba7-113b9fa66514",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "08b01b71-73d4-49a5-9821-154600249bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5918b962-67da-4abf-af6f-d7571415f3ef",
        "cursor": {
          "ref": "1118fe47-884c-46ed-96ad-22b347fc222c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4c43b7d6-402c-4638-8657-19a8e713bc0d"
        },
        "item": {
          "id": "5918b962-67da-4abf-af6f-d7571415f3ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b8db3f7c-89da-4495-8004-389d6eef67ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3b85f8-788f-4f0b-a3e5-2bb61f293b36",
        "cursor": {
          "ref": "81bb012c-f36c-4ffa-92a3-f2165e2578e0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "089d8428-de3a-4566-b02c-8f41deafa6d9"
        },
        "item": {
          "id": "7a3b85f8-788f-4f0b-a3e5-2bb61f293b36",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "998fb19c-9019-4e1d-a856-13ff9b70f18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473c45e-1d30-4d1a-a499-02962c663131",
        "cursor": {
          "ref": "9e06bef8-81b6-4c72-ad74-84ad986e8a08",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6230935a-fdb8-4298-b26e-3cd56c4e9603"
        },
        "item": {
          "id": "e473c45e-1d30-4d1a-a499-02962c663131",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f815635a-4dc3-4b93-8dca-645bb6fdfd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb8806e-2d01-462a-bba3-88101d05b17d",
        "cursor": {
          "ref": "c3a745c8-8fe6-4d85-aede-9c5b1ec293b2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a3242614-3bd7-4bbf-894b-71f7367449ce"
        },
        "item": {
          "id": "ebb8806e-2d01-462a-bba3-88101d05b17d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e40fe6cd-2078-4d96-9e9d-adc8283af371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec6e212-7cfa-4c85-877e-e39addb6bf7f",
        "cursor": {
          "ref": "eb8d4a8b-493c-4d77-b865-420bea83e0ac",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b7a17689-bbc3-433b-9146-3a2e8e4db2de"
        },
        "item": {
          "id": "1ec6e212-7cfa-4c85-877e-e39addb6bf7f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "80e794ff-813c-4b21-83b4-ff66a6f7176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d3bedf-9439-4202-af84-9cefb20c1e1c",
        "cursor": {
          "ref": "e6a21eda-3285-4c0c-af27-73a06131e2f0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b0ebd17f-40a4-4cdb-be73-0eeb108b55e3"
        },
        "item": {
          "id": "72d3bedf-9439-4202-af84-9cefb20c1e1c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eb88e8c4-133d-4b16-97d2-06a1113cd4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef10f2-5bcb-4247-9ead-e4c017355cfd",
        "cursor": {
          "ref": "90c964a3-9f01-43ce-8b83-14cb794840f8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "754b33a0-fc7e-4b0b-9e72-9e371ff5da9b"
        },
        "item": {
          "id": "06ef10f2-5bcb-4247-9ead-e4c017355cfd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ccf6e016-b712-442b-91ae-588048a51d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e677e3-735c-4f63-9b21-42823d4ca748",
        "cursor": {
          "ref": "6a8d102e-d7d5-4e3e-9ff6-f051a6e06e13",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9188ac3e-3d64-4e10-b59c-96901f50c460"
        },
        "item": {
          "id": "49e677e3-735c-4f63-9b21-42823d4ca748",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c9edeadb-2f48-4a6d-8ed4-1d0b41ef2b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b7c5fa-673a-4d98-97d7-1b1bb737be94",
        "cursor": {
          "ref": "63d03322-cc55-4915-8250-3c88f1cd694a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f0b265c1-3de6-43c6-bd40-58d2554c5a49"
        },
        "item": {
          "id": "83b7c5fa-673a-4d98-97d7-1b1bb737be94",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "51ca9304-b2aa-4a7f-a033-0ffc13185c92",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "c934c1cc-dbc5-4985-8e9b-d2bcba4c07fa",
        "cursor": {
          "ref": "7d53e21a-31bf-42da-aff7-cb2892ea939d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "971f523a-3fbc-4520-9c5b-1c57564816c1"
        },
        "item": {
          "id": "c934c1cc-dbc5-4985-8e9b-d2bcba4c07fa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0d1006cf-6457-4696-afc0-e8335ebb0738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd4b5a7-2aae-4cb4-9a5c-5b189151fc61",
        "cursor": {
          "ref": "06dbd9f8-b18f-46d0-b366-0481740d2f70",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "44e3d15d-7a23-4915-9c4a-ce743de9b245"
        },
        "item": {
          "id": "ccd4b5a7-2aae-4cb4-9a5c-5b189151fc61",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5fdc241d-2a31-4e4c-9974-18eccd119c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d34dd4-4330-446a-a023-f7834d0be1ef",
        "cursor": {
          "ref": "3099e8b2-6de5-494e-b521-1ef4f37d402e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7c82a614-aa10-488f-b19f-7e92fd5f3f96"
        },
        "item": {
          "id": "19d34dd4-4330-446a-a023-f7834d0be1ef",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b0e5a746-30d6-42cf-a8c6-93ef9ccdc9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fb19e1-2913-4599-bbe4-578bb80669aa",
        "cursor": {
          "ref": "f4b704a2-4407-4988-b69c-a8fa0ca08060",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bd88aacf-648b-49b5-96f0-4ebac199b34a"
        },
        "item": {
          "id": "24fb19e1-2913-4599-bbe4-578bb80669aa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aefafc0a-ac16-4714-a462-8d8d578b474e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38273f76-b80c-4358-bb21-99b073ee5e55",
        "cursor": {
          "ref": "247feb12-08b8-4c2a-a6e8-65a29d3e6a94",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "13a33d8f-4504-4889-96fc-ff125fa94904"
        },
        "item": {
          "id": "38273f76-b80c-4358-bb21-99b073ee5e55",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9a1ec2e6-774b-4f88-9e69-98439203a9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548c845a-ed09-45fc-a040-3629674856a3",
        "cursor": {
          "ref": "38c6066c-9f93-49e3-b896-a4d816792b86",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b29893f1-ac28-43e0-958b-a3abe290bdd9"
        },
        "item": {
          "id": "548c845a-ed09-45fc-a040-3629674856a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fe9bb127-e934-49dd-8e71-c5e291cad2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cdea67-bd9f-4d04-a93e-f4138a135c8f",
        "cursor": {
          "ref": "87318a2e-b03c-426b-adf3-8efbd748b2c4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6cfefd6-a10f-439f-8ab7-e3766955bc1e"
        },
        "item": {
          "id": "21cdea67-bd9f-4d04-a93e-f4138a135c8f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "68f3fae2-4d84-4074-b925-bf247719ac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a574fa8-399a-4b2a-802e-8f58aa2ae6f9",
        "cursor": {
          "ref": "0e1cfa55-15c1-4a98-9332-149729bd9e9d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b0f1a282-fb5a-41fb-a7f4-d507df03f15c"
        },
        "item": {
          "id": "1a574fa8-399a-4b2a-802e-8f58aa2ae6f9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6185c888-4c10-40b8-b183-504d5bb74569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1a3b84-293b-4402-9dff-c76d30736853",
        "cursor": {
          "ref": "e73dce86-8be7-4f9c-8b32-6e1732f32b91",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "892fd7ce-c5d8-4d3f-a121-dfc743a730bb"
        },
        "item": {
          "id": "bd1a3b84-293b-4402-9dff-c76d30736853",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "973b145f-1d1c-4339-be05-6b2d3edb4197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e834c58-2846-4e44-bd08-70452c25d638",
        "cursor": {
          "ref": "feb213f2-6727-4e8b-8905-37746f8be37b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "823baa0e-7eea-4e32-bd3a-099d5433c35f"
        },
        "item": {
          "id": "6e834c58-2846-4e44-bd08-70452c25d638",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7624b38c-0eb7-4ae7-bf8e-336c962bdbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60139ddc-d8aa-4043-8d76-fc1916f39322",
        "cursor": {
          "ref": "2deaa3cf-af5f-4195-ac48-15bceab94b80",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b8afe34-fed2-4ea3-81a9-3a6b491f3a62"
        },
        "item": {
          "id": "60139ddc-d8aa-4043-8d76-fc1916f39322",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "57a48484-4392-48eb-801a-a077030e6140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61da005-87f7-41ed-a477-cca8a70bd0c8",
        "cursor": {
          "ref": "637ab04d-4f60-4475-9aa9-347d93247783",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "20a7688f-add7-459b-817a-fe2976efca9c"
        },
        "item": {
          "id": "f61da005-87f7-41ed-a477-cca8a70bd0c8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "09fb2d59-20ac-428f-9d6c-e5b1722b742e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a6c8a-2709-4de8-adb4-899f6ded8228",
        "cursor": {
          "ref": "2ecca5e1-f45d-4d95-88a5-91d82c27c150",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5eab5b34-733f-4a02-83ed-92bc23811f13"
        },
        "item": {
          "id": "630a6c8a-2709-4de8-adb4-899f6ded8228",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b76e6242-c84b-4da9-8846-786feebf2e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0471a2-dc93-4d52-88f8-8f6011c47267",
        "cursor": {
          "ref": "58389a14-4aba-496d-8dc5-a9fe5a4be2e4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "73ba198c-3cd7-4097-a20a-a26ee9ce985d"
        },
        "item": {
          "id": "1f0471a2-dc93-4d52-88f8-8f6011c47267",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ffb9be0b-9a76-47ac-bcd3-db582c5090dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442703aa-4338-4e6f-9071-c972f8ab5339",
        "cursor": {
          "ref": "aef32fa3-2980-449e-b485-57565e9cf997",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5df74bfb-06b2-49ad-ad6f-ba5e103c0fbe"
        },
        "item": {
          "id": "442703aa-4338-4e6f-9071-c972f8ab5339",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea666dad-3629-4aee-8b82-e2e3ef54805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca644a-c275-4a39-891c-9e7f29281173",
        "cursor": {
          "ref": "aaebff57-6bdf-416a-8cef-6d7661f7c805",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "37e18624-f854-44e0-93e5-12c813b4d773"
        },
        "item": {
          "id": "beca644a-c275-4a39-891c-9e7f29281173",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8eb07701-8a58-4b4b-a775-7235caf4fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f650913a-847b-4348-b663-2acda737e1da",
        "cursor": {
          "ref": "152f45f2-5086-49a7-9928-e9ef7f452c86",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ce1e55ad-d41a-483b-b9c8-d8f2e7b90d99"
        },
        "item": {
          "id": "f650913a-847b-4348-b663-2acda737e1da",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cb6739b6-cfd5-4a87-b5b6-7bf0695b5d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c756380f-01f5-4f81-9353-c87fc71db0a6",
        "cursor": {
          "ref": "96aac842-4674-496d-a684-2faf6888faa8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d565ae46-2754-4614-9d3d-7169f7a9cf6e"
        },
        "item": {
          "id": "c756380f-01f5-4f81-9353-c87fc71db0a6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d47f0227-526a-41f3-8d04-82d02ecae491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8374f1-57c6-45ea-b05e-ac5b4c163a27",
        "cursor": {
          "ref": "ce12805e-604b-4211-9851-39c03910c2ce",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c05e170f-aa68-449e-a626-efe791cdbeca"
        },
        "item": {
          "id": "ad8374f1-57c6-45ea-b05e-ac5b4c163a27",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b27fe963-11d1-4e84-b976-38d85aec50ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9798afed-b28d-4452-9f15-c9805ee6b88c",
        "cursor": {
          "ref": "a9206963-d2b7-477a-b600-f210a1e67cbb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4bf8b1c9-34ac-4189-8e77-fc7def90db64"
        },
        "item": {
          "id": "9798afed-b28d-4452-9f15-c9805ee6b88c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c258c52a-e226-4e52-adbf-7322d00f51d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29094bff-8cf4-4c53-93e0-c900ecfaf89d",
        "cursor": {
          "ref": "536118b8-587b-4eb4-901a-40531588308a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "34f30224-6f0f-4ca0-8189-52ccb2871edf"
        },
        "item": {
          "id": "29094bff-8cf4-4c53-93e0-c900ecfaf89d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f4da833-6454-4e93-8d97-0f4f4e7e56fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27314e0-530b-4b32-80b4-9a871049a105",
        "cursor": {
          "ref": "2a39486c-9f59-4f47-aa5a-17244afd4aa7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f0091673-da1a-41c3-90dd-7552b03d3ccc"
        },
        "item": {
          "id": "f27314e0-530b-4b32-80b4-9a871049a105",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c1204d57-6fce-4035-aa4d-56a4480c8ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfdd169-c42c-46d4-878a-384263b0bf8d",
        "cursor": {
          "ref": "02e48f96-4cf6-4f6a-8229-071c0ed8f401",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8391f762-28d4-49d4-a576-58246ea29fda"
        },
        "item": {
          "id": "6dfdd169-c42c-46d4-878a-384263b0bf8d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f50ca79e-e80c-40b0-881a-7ba5062330e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03a1252-7d8a-4b90-9111-c52e05bdbdcb",
        "cursor": {
          "ref": "2e138ed6-164d-4d1c-b297-4e16894f0cc3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0b26ee75-8e5c-452a-b85b-6a74a818ca5e"
        },
        "item": {
          "id": "a03a1252-7d8a-4b90-9111-c52e05bdbdcb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a8fd7970-5e17-4517-88ea-609f07784475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3226de9d-523f-4c71-b2b7-d5b44b1f70c4",
        "cursor": {
          "ref": "910cefd2-af6b-40cb-9763-962631b2bbb9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4612e976-cdba-4477-9fc1-75a1477aec22"
        },
        "item": {
          "id": "3226de9d-523f-4c71-b2b7-d5b44b1f70c4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "362af94d-c50e-410b-b2eb-34f2d794c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4af653-de3a-4b96-af1b-660b295cdd4a",
        "cursor": {
          "ref": "256b09f9-c2bc-44cb-87e0-e5dc44b8dec8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2efb7a8d-9171-41bd-a1f0-eb75ecc682d3"
        },
        "item": {
          "id": "9e4af653-de3a-4b96-af1b-660b295cdd4a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "719df923-3d7b-410a-9860-8955e956d660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6508fe33-8066-4ada-89ed-d6e23b25a7ad",
        "cursor": {
          "ref": "6f1d4125-7706-493f-acc2-8acd7adf3578",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4044beba-9aee-496e-b3b6-d8e75b56ba4c"
        },
        "item": {
          "id": "6508fe33-8066-4ada-89ed-d6e23b25a7ad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8d880ccd-0926-4497-9fb7-a92429aadfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8138275f-8bab-4c2a-9c58-b1e1bb99b364",
        "cursor": {
          "ref": "e97cc32c-bca9-40b2-b066-ebb76bc87abc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fe96a949-3ac2-43a2-87e2-302ae5985d9b"
        },
        "item": {
          "id": "8138275f-8bab-4c2a-9c58-b1e1bb99b364",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f2ee1f01-1d11-4cdb-823e-3f58f5c70bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaae5ac-3781-4ed0-8b14-4ed70ccb8edb",
        "cursor": {
          "ref": "d07913a9-69c9-479e-8e08-2d0663f58696",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2512f1f2-471d-4af1-bb88-c20d8abd3466"
        },
        "item": {
          "id": "feaae5ac-3781-4ed0-8b14-4ed70ccb8edb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b863ba8a-d3c5-432b-a6dd-8fccd5ee389f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9483c875-9a70-43d6-b01c-d035b8c0cb7b",
        "cursor": {
          "ref": "2f5b7562-cb32-475a-8db5-75c93816c36a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "de5b2aef-1843-4a18-94fb-894e9cd368c2"
        },
        "item": {
          "id": "9483c875-9a70-43d6-b01c-d035b8c0cb7b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6cd40f8e-f85d-46dd-852e-5f920624034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c8b00a-b83f-4fb8-a110-2e8847ffbaf1",
        "cursor": {
          "ref": "f11e0900-f075-4f04-875e-e79933eef283",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f1321617-bd97-4f71-a212-5a3edce4b861"
        },
        "item": {
          "id": "02c8b00a-b83f-4fb8-a110-2e8847ffbaf1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2757fbff-2aeb-42fe-9ff9-b0b4380bf223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8724c3cc-65b6-4b0e-88be-0db93c160c9a",
        "cursor": {
          "ref": "9910e953-5ced-45d3-83f8-eccaea89da05",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eda9ddc6-ca47-4095-9004-38e826e9de9a"
        },
        "item": {
          "id": "8724c3cc-65b6-4b0e-88be-0db93c160c9a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d7702fd5-6001-4832-b382-ddaa902ff11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ee4e02-8ba7-45ae-bb22-05373f2eda37",
        "cursor": {
          "ref": "78cdb315-bfd6-4515-8655-d9f187c404cc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dcb9944b-372e-4456-a0e6-48ce887920da"
        },
        "item": {
          "id": "08ee4e02-8ba7-45ae-bb22-05373f2eda37",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a3d772f1-bcb8-482b-bd3e-12c3e3881e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745234a5-5c09-47d6-a1d1-77c15bea0bab",
        "cursor": {
          "ref": "4873a102-7a4c-44f0-af42-ee1aeb99f641",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b45891a2-6f02-459c-a082-7407c5262646"
        },
        "item": {
          "id": "745234a5-5c09-47d6-a1d1-77c15bea0bab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ae3012b8-ca91-475f-8f39-e05574e20757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94753cc9-44d3-4edb-837b-ec4a33824140",
        "cursor": {
          "ref": "2f4f24e1-3cd9-4466-9081-d3d7a7f121ee",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b2371d81-49bd-456e-99fd-9e5081ba4bad"
        },
        "item": {
          "id": "94753cc9-44d3-4edb-837b-ec4a33824140",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2464c884-3df0-4ef4-ae4c-1e9866510352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaac0d7-3dee-42da-bc9e-d69c8fc08cd7",
        "cursor": {
          "ref": "53d64f65-72fe-45cc-84aa-295b046bce70",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c0c60053-03b2-4e2a-b85d-198fec3bca79"
        },
        "item": {
          "id": "ebaac0d7-3dee-42da-bc9e-d69c8fc08cd7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "92b5b4ab-3632-4008-937d-2b2dfc85a34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ef62ed-7f66-4026-abbb-0d78f58efa68",
        "cursor": {
          "ref": "41b835e5-e80e-4a19-bbf4-9945aa11bb1e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "38da3eda-8e06-4fb4-adf5-fb5241a02244"
        },
        "item": {
          "id": "13ef62ed-7f66-4026-abbb-0d78f58efa68",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2893d5a3-960e-47ad-9576-66579292bf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95370ce0-401d-415c-b0d3-ece83836b4db",
        "cursor": {
          "ref": "fc680978-eeb7-476a-a9e4-d920cf1f09d6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e083b905-3649-4148-a243-4159fb31c4c7"
        },
        "item": {
          "id": "95370ce0-401d-415c-b0d3-ece83836b4db",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1a305828-74ff-4a3a-af85-32577ccc10d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41beecf-72d6-4a89-958f-a85128bf1935",
        "cursor": {
          "ref": "779634ce-7063-46b7-abb4-0fbe1c445f1d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ff977c7c-884b-4fd7-9605-bacbc78967ce"
        },
        "item": {
          "id": "f41beecf-72d6-4a89-958f-a85128bf1935",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8e592dc1-1ad4-42af-8270-474046207086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec25e8d3-0f42-439c-ac1c-eb7d8dd1bbca",
        "cursor": {
          "ref": "e9b73ded-2827-43df-9f16-26f9e6f0abe7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "500b8cb8-0983-41b7-85db-6616d0f127dc"
        },
        "item": {
          "id": "ec25e8d3-0f42-439c-ac1c-eb7d8dd1bbca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "51ff9476-13be-4f09-8a06-978f98fa80fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403afd0d-a4b2-4397-868a-2539a3d25223",
        "cursor": {
          "ref": "52a37d96-f2ea-46ae-a8fb-03b3a28dda95",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5960789b-04f5-4b79-b7c7-ae704cab061e"
        },
        "item": {
          "id": "403afd0d-a4b2-4397-868a-2539a3d25223",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "78075f7f-9dc6-4376-a190-6b8bb19f7c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dafa9a-fd71-46fb-9419-b8c5305b089e",
        "cursor": {
          "ref": "b0a11c5b-299d-41ba-91ac-1a892f6f3ec0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f9cfa3e-b000-4fdf-a372-14a4281b2300"
        },
        "item": {
          "id": "f0dafa9a-fd71-46fb-9419-b8c5305b089e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff3aab3a-0423-490c-a071-87ecfbbac219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c10525b-213b-46f7-aba4-0ede5d4e24af",
        "cursor": {
          "ref": "468e1e92-095b-4cb7-97a0-91817a695283",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "52a1b7a2-2637-4536-b36d-e9e4878fc630"
        },
        "item": {
          "id": "8c10525b-213b-46f7-aba4-0ede5d4e24af",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3249e3aa-d003-47c3-a9c1-97c24a67dba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e109cca-635b-4c1e-ad95-040837da29c3",
        "cursor": {
          "ref": "c1f74b2e-ec18-4179-928e-d36db978bff0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "38bf235a-d4e4-4067-a8d4-a7fa10e04c34"
        },
        "item": {
          "id": "0e109cca-635b-4c1e-ad95-040837da29c3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4a697526-292f-4c36-a5a6-5c8b9a2d678a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08e40d3-6366-4c5d-8058-bdc5e317e0ee",
        "cursor": {
          "ref": "3ba69923-4be7-41f4-a34f-d3309b789d09",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b1f1c820-3037-40cb-bdbc-4612a76fd640"
        },
        "item": {
          "id": "e08e40d3-6366-4c5d-8058-bdc5e317e0ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b82a4e80-e916-4b27-8260-5522319589cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0ba6ac-e214-4ce3-96e6-1e779d79f9e5",
        "cursor": {
          "ref": "ebf0380a-77e9-49cb-be6f-e944c784c51b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "041b175e-91e5-4389-80d5-e4ed6340404f"
        },
        "item": {
          "id": "7e0ba6ac-e214-4ce3-96e6-1e779d79f9e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3392f7cd-b6a2-4a3e-9dce-d8074566edd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7dc3ef-a634-46f4-b4e9-c18e4354fce0",
        "cursor": {
          "ref": "6988a856-34c7-47d3-8755-72ee559ef1e1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "df1d651e-32b6-4539-a36c-96396226f063"
        },
        "item": {
          "id": "7e7dc3ef-a634-46f4-b4e9-c18e4354fce0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a2e19afb-8ba8-418f-868b-bf3d302f64e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ad03ad-19a9-4946-aeec-33bbcb0857de",
        "cursor": {
          "ref": "0b45d119-4979-41fc-95e6-884195f03853",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a84a9e78-2092-4095-94a1-f17d01c0f1f8"
        },
        "item": {
          "id": "58ad03ad-19a9-4946-aeec-33bbcb0857de",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c36ea46-bc5a-4387-b802-683ce992a1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832b6ba1-a751-4151-bdf0-1831b09db848",
        "cursor": {
          "ref": "fdb69c60-b331-44c4-8868-e4e1b32220fc",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "12c3c005-6776-49d3-a66d-bcad2f47d69d"
        },
        "item": {
          "id": "832b6ba1-a751-4151-bdf0-1831b09db848",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5dc7fc17-49e0-43d1-a207-51f5a46abe24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dde9213-d3fd-4cf9-8d36-f1a5a90a060a",
        "cursor": {
          "ref": "489ecd6d-fa85-4ecf-bdbe-da92de516ba7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c353db39-2ade-4d70-b953-bc16f1ad6a22"
        },
        "item": {
          "id": "6dde9213-d3fd-4cf9-8d36-f1a5a90a060a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ef7ccdbd-620a-4d90-879d-f88afe103e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d953f1-1bfa-497a-b085-bc47f95368ed",
        "cursor": {
          "ref": "9f4342ba-f1f2-4ccf-9e23-62cdf0be0695",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3a6a4d1e-71ed-45ca-af45-012f50fa0087"
        },
        "item": {
          "id": "83d953f1-1bfa-497a-b085-bc47f95368ed",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8682c839-f989-4d6b-8dc7-626358b653a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cfc841-5227-4956-8598-e77a1860a693",
        "cursor": {
          "ref": "9640113e-89c0-4bf8-b503-6a97b88c12e7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bf931026-a30b-471c-a44a-9e99e2e0be3c"
        },
        "item": {
          "id": "72cfc841-5227-4956-8598-e77a1860a693",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6e0d325b-5150-4750-ab17-62164b6eea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6659919-8c47-459c-9b57-95695765acd2",
        "cursor": {
          "ref": "84457b42-cc7f-4732-a094-aae443a7e9f9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "75d0ebe0-c799-4027-a474-3d5051ff1bf5"
        },
        "item": {
          "id": "f6659919-8c47-459c-9b57-95695765acd2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a1ea74ff-a410-4bfe-abb8-ef2fecba5d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b4ff1-c621-402c-8ae4-5ad271dc92ee",
        "cursor": {
          "ref": "eea9cc5e-5ae8-40d6-a7ba-06f4d3fa16f9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2d679c89-b903-4a81-9cbe-dde1782abddc"
        },
        "item": {
          "id": "035b4ff1-c621-402c-8ae4-5ad271dc92ee",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5ccea4e5-cf81-45d6-88eb-724e27a6f687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48893f1-886e-4881-a6f3-23b431421bc4",
        "cursor": {
          "ref": "fb4ea4d5-4288-4092-97dc-cbb9d6dec54e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a84b17eb-7a5f-4974-9bb3-c1f129dd15c6"
        },
        "item": {
          "id": "b48893f1-886e-4881-a6f3-23b431421bc4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9ff11871-eded-44cb-ac19-5d122c53b5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5920d422-d0ae-4c22-9d0a-1d08fc9fcbd2",
        "cursor": {
          "ref": "db16a447-a3c2-4a4d-bcbd-0a2eeeb79b4f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "946de70c-273c-4007-bfa8-bc1fab82804b"
        },
        "item": {
          "id": "5920d422-d0ae-4c22-9d0a-1d08fc9fcbd2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "418deacc-fb0f-4289-99a0-54b8480bef9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d4e884-690e-4d21-abd5-ded97c27c202",
        "cursor": {
          "ref": "a3db3a0b-fb7c-43fa-a7c0-76aa1a365063",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f0c852fa-3384-4d97-92cf-2eda7e8d0177"
        },
        "item": {
          "id": "a9d4e884-690e-4d21-abd5-ded97c27c202",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "724af874-5a44-44a9-bf78-081f3b83d308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15c9bbc-0b66-44e5-9e6c-bd6ff3a81ce8",
        "cursor": {
          "ref": "dda9c794-bc30-4b52-af17-7d4dba83b59f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bb3a231a-f04b-418c-9a67-1d66331fea53"
        },
        "item": {
          "id": "b15c9bbc-0b66-44e5-9e6c-bd6ff3a81ce8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c54e6c09-ef7f-4f20-88f9-72685f7d2b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321e6ed6-7238-4a6f-91d8-25eff2008a15",
        "cursor": {
          "ref": "8aa6f352-cbbd-4708-9113-b16408619b5b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b625eb48-03c2-4fec-b3b9-490173b18c40"
        },
        "item": {
          "id": "321e6ed6-7238-4a6f-91d8-25eff2008a15",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ed138456-41c7-4ddb-9e13-c108e5e305cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b186df-d92e-4f63-b0e2-dbaf2d1a16fb",
        "cursor": {
          "ref": "57a401e8-1047-4de3-b8d3-22c736c69035",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2b387f0c-51b8-4e12-a511-eb6245273b7d"
        },
        "item": {
          "id": "05b186df-d92e-4f63-b0e2-dbaf2d1a16fb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "be0b070c-83b4-4bf3-9cc8-19e0f0a9ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c2ebbd-2ae1-4c18-9c79-63947703a5bc",
        "cursor": {
          "ref": "16335622-5a51-42db-8647-ff07e1014b50",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10b802f7-35ae-4ba0-a3da-2d823e766510"
        },
        "item": {
          "id": "b3c2ebbd-2ae1-4c18-9c79-63947703a5bc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cfc9da58-8fb4-4ee2-a14a-aa72ae9f0ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ab6d9e-f26a-4aca-93db-fadff8e17001",
        "cursor": {
          "ref": "0acf853b-d4db-47ec-8495-33c567505eaf",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2f212a12-fdf4-487c-a3f0-57d5350ca5bd"
        },
        "item": {
          "id": "c9ab6d9e-f26a-4aca-93db-fadff8e17001",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a53a87c-2cd5-47da-88d8-39a6efffa4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b130fc95-9d0e-43d0-abc8-4eed67514ee3",
        "cursor": {
          "ref": "4479f332-dc34-4064-86cc-cab9f208cb18",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a35648b8-f534-4ca8-b3ce-741e2f0e74e4"
        },
        "item": {
          "id": "b130fc95-9d0e-43d0-abc8-4eed67514ee3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f51b1c62-715f-4051-a8e9-5b64c84f7a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1c6483-7ae1-4ff7-afff-c4541b04d595",
        "cursor": {
          "ref": "e426ae79-d937-4ad9-a39e-ef6ba0523f49",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae9ca1c1-5d71-487d-a1c8-24075ba147df"
        },
        "item": {
          "id": "8c1c6483-7ae1-4ff7-afff-c4541b04d595",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3e5d059a-fea0-4fb4-8d29-77b0b65a343b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acc56da-77b9-4f78-88dd-7155df82bd02",
        "cursor": {
          "ref": "3b98afb7-5237-40bf-a73c-af499b29fab4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1b11c31b-cfc6-4da9-a55c-98684c2607b7"
        },
        "item": {
          "id": "2acc56da-77b9-4f78-88dd-7155df82bd02",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4c4dc651-1e98-4567-9efb-3c88251f0a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98860a36-d3a1-4ba5-8d30-cb60ed8d25f7",
        "cursor": {
          "ref": "9393c293-ebe0-4c95-b210-7f0885147acc",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "46bb14e5-a7ba-4e23-a48a-eee926131b4f"
        },
        "item": {
          "id": "98860a36-d3a1-4ba5-8d30-cb60ed8d25f7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "58e6942c-f1f3-4db4-9ba3-7fd3b6495abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7438c8b-e1b0-4380-aecd-ef4e5543c325",
        "cursor": {
          "ref": "14fcd709-4e90-4a36-967a-6f717ad90d30",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "74d17113-bfa6-47b7-b871-83b4df8d8f54"
        },
        "item": {
          "id": "c7438c8b-e1b0-4380-aecd-ef4e5543c325",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7250cfb5-5ef1-4d79-98bc-140deecbdbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2975fc6-41c8-487e-a64a-df35946556d7",
        "cursor": {
          "ref": "29df0e82-52de-40db-ada6-0ff1f9dc14b9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6566f970-c232-4ad4-acff-c0dd4bd33907"
        },
        "item": {
          "id": "e2975fc6-41c8-487e-a64a-df35946556d7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a0148ba5-ab71-4434-a155-a00368a588f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beab68e-55da-4ef9-a535-2dd6578ed2f4",
        "cursor": {
          "ref": "d4bca1ac-6d49-4623-91cf-2f64f0b2e90a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "15747fb6-778a-43f3-b905-522ea1d2453e"
        },
        "item": {
          "id": "0beab68e-55da-4ef9-a535-2dd6578ed2f4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a218c1b4-fa5b-47b5-baf0-d9e9cd45bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac75018-b9c0-44a1-ac9a-aa3eb1944719",
        "cursor": {
          "ref": "b1498c93-6c8c-4922-9e89-ef3f6596455b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "62261185-540d-4d30-a68c-ae6ac31e1ea7"
        },
        "item": {
          "id": "fac75018-b9c0-44a1-ac9a-aa3eb1944719",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d14add5a-59a4-4fed-ac2c-66df7a2f7a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ff09d0-3750-40e1-a5fe-c3a36b4693e8",
        "cursor": {
          "ref": "59187eef-c173-458a-b70d-997fab1af294",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "75273780-8d68-4a4b-ae21-c0db6cd6fb3d"
        },
        "item": {
          "id": "17ff09d0-3750-40e1-a5fe-c3a36b4693e8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d8deffe7-005a-4508-92ea-f51b45180c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf63f09-9a98-4310-b76b-60470030d9f9",
        "cursor": {
          "ref": "359d496e-856f-4ef3-9eee-14d4c885da72",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9b249f7d-9fb3-4575-9bd7-b010d4abb3f8"
        },
        "item": {
          "id": "9cf63f09-9a98-4310-b76b-60470030d9f9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fb39893a-6d11-4f9e-a3bb-7f9540614339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d8ab4a-5138-402c-af4d-815e223a7280",
        "cursor": {
          "ref": "f371fd25-7450-4308-9368-3a1bcbc58ae5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3bb2208f-f326-43e0-a2e5-241d621c1cfb"
        },
        "item": {
          "id": "39d8ab4a-5138-402c-af4d-815e223a7280",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc9150bd-8488-4b61-93c3-65448ec2e7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb64b3a-8d84-4bc4-a6c9-e10fc30dba98",
        "cursor": {
          "ref": "5bc43d92-f866-4496-b981-e59725a9b923",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9f2801ed-67f3-41f2-907f-a5bdeb38cdd0"
        },
        "item": {
          "id": "dcb64b3a-8d84-4bc4-a6c9-e10fc30dba98",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "14ce9e61-c5dd-4261-98e9-3937efc24f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f7afa3-8747-4958-9862-0ca115da4f08",
        "cursor": {
          "ref": "11924581-02a7-4fb9-91f0-a324d849bfcd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "890d6b56-1b58-4c65-936c-e813ee55907a"
        },
        "item": {
          "id": "d7f7afa3-8747-4958-9862-0ca115da4f08",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "164062ed-f80b-4b7e-b45c-6fe69184cd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bedd96e-a49f-40e4-a041-6a2f3452bcd8",
        "cursor": {
          "ref": "1cc311fc-d072-41b7-b998-f8b81c725e02",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be605334-0482-4e3f-9fa2-ac2467324725"
        },
        "item": {
          "id": "9bedd96e-a49f-40e4-a041-6a2f3452bcd8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b25c1930-f2b4-4099-adc3-b16716d98024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ff1c9b-2fa3-4f56-a3d1-4a5ed9f206c1",
        "cursor": {
          "ref": "f4d1ea76-78e6-4165-88b4-d798f261000a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4cd4baf4-d97f-4f3a-b9d0-3edd4ab5427f"
        },
        "item": {
          "id": "d9ff1c9b-2fa3-4f56-a3d1-4a5ed9f206c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "85a6e6e7-df3d-4615-8c99-9f4ed7dae7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df61199e-c671-4663-b366-182530715013",
        "cursor": {
          "ref": "040baec0-477c-47d7-a313-693bec7ad7cb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3958852f-8d22-4b92-a05f-fd9dcc262eec"
        },
        "item": {
          "id": "df61199e-c671-4663-b366-182530715013",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "25f58ec7-5675-4566-aa1e-af8aa74881fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c902598-6bee-4f08-9341-d50f5135dc91",
        "cursor": {
          "ref": "7bd03e7c-d253-48c5-a0a5-76d89df38bb7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf01b8b7-99bc-4ff2-a849-85e151850443"
        },
        "item": {
          "id": "8c902598-6bee-4f08-9341-d50f5135dc91",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2ef5a434-d801-493a-a50e-ec959162b2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ba53a8-68a3-49a7-848f-5d62a58a32d8",
        "cursor": {
          "ref": "b344396b-d46d-4594-8975-ac5327a69cd4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b3fddf9e-fe7b-42a9-9985-3722efd53639"
        },
        "item": {
          "id": "c7ba53a8-68a3-49a7-848f-5d62a58a32d8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "975d5005-5955-4594-bf44-03a59d66172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3ad8ef-2122-47d5-8f12-eb36449727bc",
        "cursor": {
          "ref": "dbaa776c-ba9c-43bd-bbbc-57bdb22382e6",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "258d93b8-e366-4f71-b87b-b759d2605ec0"
        },
        "item": {
          "id": "1c3ad8ef-2122-47d5-8f12-eb36449727bc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "64811f65-926e-40c4-8be4-c092b4dae291",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a491dfed-9dc5-4066-97e4-0d86651eda5b",
        "cursor": {
          "ref": "017f36a4-1f2f-4ab3-bf7e-40d22213b390",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "959e0f4c-683c-4d90-8dd5-921c79b28a3f"
        },
        "item": {
          "id": "a491dfed-9dc5-4066-97e4-0d86651eda5b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b6aa1e44-983b-414c-9f0c-4ae4cbcb5cd2",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2551b5e2-d833-46b1-9852-91bd6ace1ccd",
        "cursor": {
          "ref": "e06a8707-2004-42f6-ad19-a062c11fa75d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71b2ee66-3699-4264-8d5b-3e89530adcfe"
        },
        "item": {
          "id": "2551b5e2-d833-46b1-9852-91bd6ace1ccd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "891d65be-7543-469b-a89a-c31073d8d382",
          "status": "OK",
          "code": 200,
          "responseTime": 2357,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcc3c45-1eb1-454e-9f12-f07198c868b5",
        "cursor": {
          "ref": "a6a0c8af-7c70-4447-94ef-9b881ee8aa5a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "44465251-c211-4423-bebe-544feb72f9e3"
        },
        "item": {
          "id": "cfcc3c45-1eb1-454e-9f12-f07198c868b5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7821f938-67b6-4690-a812-3dbea1b90ed5",
          "status": "OK",
          "code": 200,
          "responseTime": 2445,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b9ce26-5b3e-47a3-8aea-f16c80925369",
        "cursor": {
          "ref": "0834e4b9-f260-4f86-8922-3c8d2482de05",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30484b82-a419-4963-964f-a4d04d5e937f"
        },
        "item": {
          "id": "92b9ce26-5b3e-47a3-8aea-f16c80925369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9fee5411-c707-4643-83f6-a3ff4a56212a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b9ce26-5b3e-47a3-8aea-f16c80925369",
        "cursor": {
          "ref": "0834e4b9-f260-4f86-8922-3c8d2482de05",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30484b82-a419-4963-964f-a4d04d5e937f"
        },
        "item": {
          "id": "92b9ce26-5b3e-47a3-8aea-f16c80925369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9fee5411-c707-4643-83f6-a3ff4a56212a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495273b-d360-474f-ae67-0765f2383537",
        "cursor": {
          "ref": "9ed621ba-692d-44ce-92f3-2a9ea9277f1b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "df78d727-eaac-40ed-9ad1-d7afa6a04c65"
        },
        "item": {
          "id": "1495273b-d360-474f-ae67-0765f2383537",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "be8d3d92-ea5c-47d4-8cac-cba7366b8442",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d0872-028d-4539-9b94-9523367e9cb6",
        "cursor": {
          "ref": "feb7907a-9101-40a4-a765-006f34ec753e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7b72d229-2e80-4718-8784-f37c014e322b"
        },
        "item": {
          "id": "d71d0872-028d-4539-9b94-9523367e9cb6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "92b60705-4255-45cb-92b5-53404fe8d15b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}