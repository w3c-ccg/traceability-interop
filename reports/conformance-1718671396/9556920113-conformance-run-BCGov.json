{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d881d556-5f86-4a89-af8b-5d03913ca57b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0be29de1-6735-485f-b9fd-111c43f7c12d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd2ae303-6f5a-485d-9059-be18398fb271",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c62e4483-bddf-49f7-b7cf-856e6f975b6d"
                }
              }
            ]
          },
          {
            "id": "3c24e918-616d-41a2-93c2-1f550b073014",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "342ad56a-729a-4aa1-a9b8-af9f73959a79",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0be2659b-49f4-4b70-87ed-2bd65ae41499"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4b8b18d9-48a0-412a-9eff-affe641de5b3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "45fb1f12-ecdb-4a48-ab39-e8f52a83da41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d3beaac-e431-42c4-9270-d347f56e1f42",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57389032-9e25-476d-9334-172aef713faf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3634a1e4-87b1-4613-8dd4-475157f02b0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1358e0a-00da-43df-93b0-629f3156b24d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5d70075-a150-423e-a9d3-5c9011b7165c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80a0bc77-f870-4c03-b000-9c38db0b5d5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba97d5f8-15e1-483c-83cf-85d6a0a1a174"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4917b7b7-9158-4b73-98a7-2ca7cfc918a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b9338996-295d-4a4a-8dd1-d035de43a561"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "253c0167-f56c-45cf-9ff9-7a70bf6126ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad89e466-1d66-41d0-b363-34d202e56c9e"
            }
          }
        ]
      },
      {
        "id": "57b4715e-ffa1-4d17-9330-2a9d9a906842",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "08f6f89e-91d5-4f71-97ec-fdb512d79151",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9aa78c0a-57b4-4d30-84db-eebec722a203",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35f8756d-7817-48c0-87eb-df9111a8d034",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f2fa53-3931-416b-834d-64c3a939e520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fb7a5bf-629b-4998-b993-40a73982d7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995f3087-fe10-440e-81a9-e0b993c7fce0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9deb5-9133-425f-bec2-db62162d1c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3233ec54-e9ab-42dd-aaed-1ba2957f197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea8ab65-b35a-4713-b864-dbe23d053308",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a54fb1-9981-46ea-a4fd-f286386bbdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8babf20-9d92-4eb8-b4a2-59fca581857a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8c90d54-f012-4cf0-b53c-ee50111c1560",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f8970b1-bcdc-4925-ab6e-cbb1d85d6d46",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4651650-2a35-43d8-a531-d30a3040501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e2f40c4-0049-4f87-a252-ad7360f500d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcf79b4-a9fe-4f00-af3f-2e2b4fd5310e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27ce219-ef97-49f4-bcf2-1b18fcabcd29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "258c9e03-5150-4bef-aa72-c8aba83ef40f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92601a64-989f-40f2-b743-66efdd3e91a3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be1edae8-6c11-4e03-b325-895788551fbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc4e9c4b-ddbc-4f74-8a1a-9deb8cb5423d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3e36377-d65e-4223-9c6c-e67898061499",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c1b23bcd-3941-4c99-8b60-87f7ba213d62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a179b982-9f19-4f2d-a7ae-3489d82bfa1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65663be3-258d-456f-8063-17d5ba5bee7f"
            }
          }
        ]
      },
      {
        "id": "840dd3fc-6bf2-406e-8886-e5734640d26d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b8a6aeda-3bc1-49b8-b21c-36c99fbe779f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34ca12c3-936b-4460-a7b0-26d69158714e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d074693f-26a7-413d-8329-891b9fc3a2a5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ce6b23-5316-4ca7-a50e-233ee892ab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05671cf2-503c-43e3-a0f2-71edae448da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7267bf-1f59-432b-a911-af635c8b7e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fde7cc2d-3706-4f52-b4f3-0fe145b70a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e345ce-4642-4af5-a9e6-55a49a8979a7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8596b882-288f-4b73-aa94-068b3276a31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22feb1fb-e679-4aff-98de-ac43c2aa5fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b55575-8a3e-47b2-a0b7-6ee274348952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0664d19-6e47-4d0f-84c5-4934bd2e465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc4e3e4-f871-4f76-bf56-5f0a2bc893a1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c0dbc6-8b54-4334-8c45-a45b8d503a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab32cf74-74a4-45c4-8191-b8886a3ade37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e36f82-2c4e-489b-ac8b-acf6d832e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bb62c32-3c2f-4a48-a683-f440f910ad5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20046a40-3b4c-4862-94cb-f964227c138e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c315e9-1e4e-478d-8f99-369de5345ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0ef977-3d74-4f8a-a6b4-dbf3970fcdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9f4ede-6d7b-4e83-bca9-247af1f7649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e73fcc7f-7499-46c9-be9a-0d062f3f87b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8192df-bc04-47cc-acf0-644f6ffbe491",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ad615-ad24-4e69-89ab-3b375a3194e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77944470-ddb5-400a-8f6a-fd06686b2c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2a70d6-c7bb-4230-bf29-8bee28aebce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9a1da2e-1e22-4107-a6d5-47c7b7cb2b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8728cde8-497f-4d24-a0d2-5fa854f22c5f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0f2b30-a73b-4e46-b6f9-07d9844bc93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71b557c-e2cc-4b4f-b113-747d4724a910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e0c632-bc3d-4416-8f2b-812bbb55a8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ba5c5e5-b8c4-4fd9-88e7-0cc42dfc5b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7417b6a-adc0-43d7-bfd4-eaf2ec69e697",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28669e-cd6a-4973-af56-09429a5c1afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8de2672-7bd3-42d1-b92c-4cf32f55636b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498879d5-6afd-46e8-a3d0-472da1a36205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f9c4ac0-8fb3-4322-bd4c-e032fc187843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149f4b6f-6276-4d0a-bac5-a602d7155500",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdf5115-c75a-4af9-aaac-9c00c093471c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac41d2c1-f7b1-4c78-8a12-ca6de7edd69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec44810-ab13-4d86-8389-dd00769fba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "278a04ec-67e2-4913-88a1-d73347212549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d524a8-a40a-4e70-a45a-7189d0c0a13c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd19bf2-2f97-45d1-93b3-50ab961d7c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9102ac0-9f1b-4bea-8451-2200af7f58aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710c2e2a-bbcb-4862-8eef-75c69aa0c483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a39c0e6-5959-4012-a03c-d223264041eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90b5f21-6b86-48bb-9694-b029b500b9ed",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f145ce93-d272-4240-a7a7-20c44366bc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f21be1-817e-4a56-b4e1-55ca093172cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41cb0d5-841b-4f8e-9b36-5f7bca1f6cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d6ca52e-86fb-44a0-96bc-a4d3ce1c19b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b587b-319a-4f2d-ba2a-1f475224f24a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7edecd-84ae-4f01-a078-5841869d97f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fef4c6f-38a0-40ce-8374-7cac44aeb9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc21077-ae11-4b25-b439-5a737bca7d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86daced5-3ee5-4a11-800b-4b89056d263a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6342d735-c635-43ff-b6f7-2e2e4c353095",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29803cb0-9f68-4e7c-9f89-647857e14da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97e77a9-aad7-4c8a-8399-4ce2c229208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62afdb82-c577-4675-b88e-43677526d05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a23628b-255c-4500-8210-d345b5a9cc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7987a90f-5a03-4158-8f87-4497f030fc73",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c09a7d-4880-4950-84f7-dd4ac919f185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16da7d3-ba50-4dd2-9b75-3192e96f8018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a37087a-504a-406e-970a-f67ece59ac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "270e8e49-5972-4a00-89c1-63634c10dab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecccb56-a825-41cc-ba2d-3680b95f9550",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b73a32-25db-44b0-9518-04c9a3f38b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81240ecc-b31c-47bb-8cf9-15e4d4a0769b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e936cd-7810-4b86-9f73-40c0befda4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93dcaa09-fcaf-45ed-8d99-bfef486c9310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afa6911-f348-4b16-9160-376c6274e86c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403d4c2c-b077-48ff-95a6-769bcd4a77b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dd3ad1-124d-4ab3-9f46-0808c23a25b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b44c62b-b588-48fc-9531-2659772af4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce94a08-bb9c-4f7a-9011-faff1789b8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6406f6d9-36bf-4a7e-9647-5b60fb846bf1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b39d3c-7799-4a34-98fe-71448a23cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f4332a-5159-421e-8122-b73eef801d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1fe210-95ca-41e7-b9ac-a4f8c568e326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b66de572-5041-4344-ad11-d9a34219cde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079a8f77-823e-44a9-8f01-daf7c85947ac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6698ee-a98d-4df3-80c1-f586d9219428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903d7ac2-4f7c-4fa6-81d5-542eb9018d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59de09f5-4b29-4bd4-bc5d-3e3502e7ce23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71f580c0-a065-45e1-a8ff-69285caeee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dca4634-2517-4d79-a810-1fb9d0999310",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f929b84-27fa-4d42-8c6e-e709c050ded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e82b65-30b4-4943-a0fc-5963d6172312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e83b79f-5daf-4090-aebc-ef7a65de5b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff49d7b8-5347-4954-a1a2-4ffc4d6c89ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fac8279-44a0-4338-9e06-b1f180e4f6e7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc6dec0-0a2e-4915-be5d-c36c0b94cbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c65a0e9-8aaa-4d71-8582-2d0ac39172ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f9b602-d8bf-4750-9b2e-5bddaea75ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da35c7c1-ae84-4268-9877-fb32b1af4b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eef85eb-8a48-4564-a4c4-a1c0313a0b8c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0914ab6b-dbb1-4fc4-96b8-5ac8582efe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75021f34-7bf9-439d-bd00-eabda34b9b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3776af0-baf8-4c18-a2a1-b1f43f1490d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4027094f-8d6d-43f6-8175-d3152ebb8376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abc0a7b-14b8-493f-ab44-d8f56283bd70",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea75955e-51c7-40e1-8134-0ad7af484c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd19bc3-b3ab-4ff0-9252-e6e31380160e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fa49bf-080e-4b94-b821-b93a57003cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81257774-1abc-4e82-b02b-93f8e11da4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05876bbc-324d-4430-9e1c-0c200411be29",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fe3db2-20d8-43f8-919e-fadabb0268d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34487f5-bbdf-4ecc-97bd-a6bb8c21a941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11227df1-412e-456f-9f49-65860bb230cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8591e989-1534-4e37-948f-44f256c06285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d8df75-d883-4d5f-b303-911861b79c86",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7542c24e-e3e7-4516-8576-28f24e61df28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5658623c-0b27-4aff-ab85-c5b3b5f81726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6edd023-6ef9-4ff7-8519-b55b2c95a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea45202-d36d-4931-a512-553aeb3e9cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a857fb0a-313c-4519-b0c2-6d85df27adbf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cec9bf9-b6cc-4994-a58a-9e629c858e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63409033-9f8f-4396-9514-e2a141730ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f7657a-62f1-48fb-919c-99f60516a338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a993e76d-12e4-493b-ba2e-41eca732f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382e21cd-7bb7-404d-9fa0-ac8262d7690a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93249dbf-e470-4e2c-bbb2-9b6d5f120f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5179694-d11c-4c9e-a2f2-c7ea8e5d943f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132fc843-a6c4-4e2f-90b9-8f7eab0b9514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "679a157e-d6c5-45fd-9326-ad3eb8a1dd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8007e87c-4f8b-4246-834d-f996737de383",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1e69b9-2468-4ccd-af0f-3d98c02bcbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6474c92c-de63-4943-b801-3427102c8bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19d8bd3-d087-4f60-852a-20f70a20d11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c6519c-d363-4bf6-b9f0-4e7c0d456fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8256e495-1e43-4861-acad-0e82ac90ee80",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bbaed2-9ef1-4904-a2f2-70bcace13a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fa1a36-c1a2-4bc1-a785-9ca6e8d9f0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8dfcbc-de70-4432-a809-9b9724fbd211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4454a28-53ca-49ca-abca-004acfe80c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d98df69-6a53-4ad7-a4b6-faa3fa9f909b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f9a033-90e8-437e-a75a-cb402fa4f772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c55316a-98d4-4eb0-af7c-c4a4825a5d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20567dce-d13f-48cb-b5ed-66cfe25a9dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69c40f76-3637-4ffd-a6d8-cadc77c53cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84997c68-5aa0-4f9e-9d6a-7f92a0019ef2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99663e4-3ca1-4505-a58e-e3cdc8745e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cd9605-d8de-47e7-ad54-4fbaf572fbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a889cca-ca7b-42db-b3d5-950f3bfa1b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0bf351-1501-4deb-88c0-f744745dd49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9487823a-e634-45a4-bbac-4c282fde8f91",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cf4e3f-4655-4ffb-ae1e-ef2b66834741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365e4654-68d2-4f6c-8183-2bbc86bfb46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7cb2cf-e3ec-4d54-871e-7a30b43f20f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "be762c43-5132-423c-8bb8-4b482bad2f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47d98d4-f659-4b25-81da-9bd95d9a07ad",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0300969c-22fc-4fee-8a8d-77f548af7269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbc52a8-07ff-4752-848f-3ded2d86a73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1abb1ab-8a39-4e24-b75b-e52b9f6e893c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d0a9a1-b7e9-4bc1-91d6-ecd1d1ea876b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b03fcd8-8ef4-4cb1-9b23-f65d0e3b587b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3f8a02-f87e-43e3-862a-99a6271fc854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca3c7af-7056-4523-84a3-35c20ad88902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b177286-a7d5-41ee-a02d-8a1559b62822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ceaf6a9-8694-4a3f-9904-280e58f030d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72931723-3284-4b02-8034-ca75d3b2bcc1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08f776c-501a-475a-a8ee-1b35fa28b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34faf0a0-fc32-40c0-9f6e-41af0d1bc1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30376655-7ac6-40d9-810d-a2697e1dcb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe12bac4-6fcb-4d99-aa31-a97be8c04784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b17ea5c-eb83-4f55-a75b-d024de86a736",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50ce66-6ca1-480d-936a-462c7cac0ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4839542-d050-43db-9132-660e636e7b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a6b829-04db-4af3-b72d-ef5cc0b3d84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "596635d1-c35d-46d4-8ee5-f9285589002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4683adb-7048-4246-820e-4401b64bdce2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cafc4d-7b46-4917-bca6-2d5f1881b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8624888-29ee-449e-9f81-3108a214ddf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753dc551-515c-45f3-8c3b-1ee17d962423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "999928b8-a947-4ceb-bd81-648be00e4a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd3b01b-6dff-4912-b05d-e15f8a9a1148",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a79412-ce69-4681-8b31-ed83b7a1361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3f051d1-83e0-4e00-9432-734c70e5980d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6751f6fa-371e-4b17-ade7-ae2dda7ced05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c257ad0-738e-4499-a853-f6c5fd853985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c230d36c-24c5-4eaf-bdbd-190605bcf8a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fd9393-c1aa-47dd-a58c-01e8d623423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0a2bba-06cf-42c9-a32f-9da576aa7113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f477ff1-739d-479c-8101-7ddb652a1ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2df899d-3bc1-41f0-97b3-343f980af86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6772be99-ae34-4899-af0e-481b339be50c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a66a1f9-d47c-4ea1-b228-68c83e56d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c742f4-1473-4e3d-8011-992e72b6a2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a86662-c220-4d5d-994d-d122a8c5e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "622002f7-70de-4fdb-96c7-0be953144ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecd16ee-016c-44a6-aa82-efe279510cb1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561226f-ab10-4d8b-9340-4ea97cc8f2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7b7734-1113-4f90-a29c-c293d1be2839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd055a3a-bf36-49f7-bbb2-cdea3dd33d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da88a85f-3436-441e-a541-0779f47a0c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d87970-f0b4-4786-9c24-034ded6ca02a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0e9aac-f168-483e-8a7c-fa2d0488be59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff5cced-4b97-4188-9230-10d9092d2108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d3ac29-d485-4a4b-9e8f-c07536c24cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d59c90-780d-4360-955f-4646e8f58792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791008f7-4c31-4c1b-8817-f34e31bd2ef7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62a925b-a591-43c9-8d13-26c6781c3549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8461c589-918e-42dc-8a9f-3fbce65195e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eeb114-7593-4b0f-ba04-12a9417e3e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1291e3b-21f2-4b4e-85eb-87b7380cb0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc227903-aec6-4429-83f1-d762c3d3839d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb67b9e-cad8-4f16-a0dd-379bebc1bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7744393-1b80-491c-8700-68d137ad9674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bf30e2-d921-421f-8ac9-78d34b3dc459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f2814130-440d-4134-96ef-5f7750bdfadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e8aaad-431e-43ee-b1e2-d49a164c1e72",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7df8f8e-8531-4359-b140-958a88c4c68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f35fd7-9f80-494d-863f-780f4a680616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623f03c4-3180-4ff5-b42f-24382546b416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4848286-4559-429f-a694-b3a41f2d569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0807f531-370c-4352-88b9-cbe21c95fa00",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a539e-0972-4cf9-aaff-3d24aa3392b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c80649-b5ec-48bb-890a-ef67d39e575e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2562f74d-baca-4ca2-b24e-f99827236a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddccdbf-4f5e-4df0-a76c-f543664cb3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94713a5-91ce-4643-9df9-d131da3039dc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf64dec-c867-4b7d-a0d3-d845814f80bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcbe262-ecda-42ed-bd1f-c4aeb5432f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d09d02-d074-4578-9970-15e67d7a8b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b15cfbf-2172-4287-8016-64c77e548b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d541c-14c0-4667-82d9-d6fd09bbed7e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ef2554-5489-42af-bb83-4edc66af6073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9712d5c0-309d-4be5-a5e8-70a39e2613f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f3a5d6-6239-4c41-969a-dce906857a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab303ee1-7ab4-4294-987c-5fb4b3730c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb4b7f1-2361-486c-8f56-b3edf3788a87",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a298b4e-38e5-4959-8c36-fa6f1a8d2d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a266f607-27cb-4b4f-a7bc-a5bbc26eb054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8ad2f0-742d-404f-ae36-1dca101a0608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eba0138-7268-4a33-9039-76aaa73b0ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff57842-e9bf-403c-8685-2b379794f200",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93abe91-5b9f-416b-93e7-9a2476ba8d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177cb497-1263-42ae-a29f-4ef3825f6fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa6179a-70fa-4176-8973-e61701ceaabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18411af2-da1a-4948-8d66-cd9e33ca1872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d404c1e-7303-40a9-8917-36fa8f8188a6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b619a9b8-3053-4bf1-aeda-5d1219f034e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d10e23-df19-47ee-a568-fb8fd8723773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e510c415-381b-41ca-8b92-eca6f584bdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9754fd6f-9454-4bdb-a9b7-1975cc3e60a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9db19a-be51-478a-bf64-66a4e126043c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece373f3-de7d-4c08-9ede-669d47f1a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde9bc82-53e2-4105-8762-483bfad9e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e6d79c-e05c-4963-8c76-a2b1e8278f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21afb634-e034-4e05-8974-e68f65a4d275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e36168-5f1a-40f7-bacb-c6edb885452b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d46c70-40f1-4de3-afc8-0625fc16137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984bdb6e-28d1-4e87-a325-3b71fe4ef532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe6f524-bbff-4f7b-9e5b-3257f126571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30f0d7f-77c5-40ef-b6de-96a0c74804a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a4404-47e0-4959-94e2-7dd98eb6f71b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c482ce8-1b96-442e-83df-d2461f81fe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32376030-03d3-45b8-8d8a-b59039db2f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081ad318-fee2-421b-9ebd-3dd5a173f2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97531d93-86ee-4443-ad81-1ace881d5850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d4616-7fe8-4db2-be8b-16f824631221",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b56982-db44-452a-84a2-f2bf399fda7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41eb8e74-4271-46dc-9346-869d25aeb522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f242ff7f-6015-4af0-91ff-8ff904db4c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "becd1008-dedc-4047-b9c9-6ea95d63ec44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1eb593-b724-4af1-bcbb-d77b2d66a688",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e147952f-7ccf-4c12-b291-d8e6f9535c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd61fcaf-30d7-404a-b170-75638bca3a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9fa842-bde1-4d4e-88c6-45fc16fe053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2077e33c-7b14-4d8b-802f-4091c2534907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6215c5ca-ac27-43c7-afc5-aa02eba5860e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413a9c4f-b0a7-480c-b7dc-6ed5e6c40690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce273c06-8447-43cd-9e26-955df123ef77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f17d42-c76e-4f9c-b766-dfa02bfb1f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae11b3b-2dba-4684-8598-9542499fdfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b22d89-d78f-4258-940b-738ee85b687c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3dccb0-04b7-4d38-901e-236f411ebf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5216d4-3f73-4080-9f4b-3abe304bc35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edd98ef-5b08-427c-ab07-b48361531f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "23b6d617-8c35-4ba0-8881-3e19bd0b3b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8353e84-56b0-43d1-b497-d691b5d0a99e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9736dd90-d6d0-49d4-9c2c-73eef8b51d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bcd512-ff6b-4771-b1ec-0e371f559dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d21895-cdc8-414c-8a79-cca0f6ec7635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24dcf77c-526c-4e3e-acc9-a1d1bf7584f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145a172f-0bdb-4b3b-bff9-4d83d1d92ef3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1961bd03-dd4f-47eb-9cfa-280b7f9eeb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5bff42-b733-428f-b6f9-16cb62f8438b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d641168-6fb5-403a-9148-a3c568321766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1ce64c-d516-4278-9e7d-955d78618c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372e5816-40e5-49f6-b80c-e7b733f5659b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ef2b1c-e00f-4910-b162-1494802d7272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b2ecc9-4eca-440d-8877-347e64e9d1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2ecdc9-ce1b-48e1-8841-af7c9ae905f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "972a1aab-a265-49b6-9a00-66751a77347d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7939cc9-b487-4ea1-b7e6-68a57c27f4d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592336e6-0b8f-49d3-beb7-c07439014667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6c5163-b9fa-4a9b-af5e-440766ecea47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f09a25-538a-42fc-9da1-e0e0e0c3159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ab18b4-f8be-45f2-8f19-a34f89e5e692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d63624a-236b-4c65-8dbb-07f4fa7ab459",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9054116c-72a6-43fb-983f-cabf66311108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411efeaa-a902-44a4-903a-e3d6dd06de85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bc4817-9dde-4a01-8746-9d0404340155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abddc0a-4f7e-4e2d-9a81-4246d09f8302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce66c47-f86e-4a54-81bd-9b9cb8bf34c0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0abfae7-d67a-445a-94be-4b4431da57bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e444ae2e-93ee-42a7-8fa8-c49278e79a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052ab9bc-0918-4d9a-9bce-97798a2f2f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a606dd4e-6a35-4caf-8c0c-1580d163df05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73406bba-433f-4157-a3cf-a654284b4c4d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d54216-20f7-41db-ae93-e2b1edcaa6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfcbe00-95cf-4535-b25f-63927d51526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587c89a2-125d-4ca4-8140-1acf2f2490e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22c4e1f-8a01-4519-af46-30f6997908d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0f7e13-4117-4a05-92b2-66c98704534e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc923bb4-f64d-44e6-be52-8c1412342b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57700eb-aaa4-4b7b-af0b-5ed20477f66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7297dc50-023e-4f68-8a8a-b66fea650c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b43bc9-d3e8-41b0-b806-9030b6df7195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e6ab99-2760-4a5c-8747-f49cc6bb3f96",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8fe879-733f-4049-9c58-57d3285f0cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f66e03f-e9ba-456f-81c5-31e6432369d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3bf663-b4c7-4d55-84d9-ebeb30a8df7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83bc2780-6e7e-4dc5-bef8-f31a098da62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7904064f-e993-427d-b076-473661ad7e60",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acb1969-59d9-439a-a0da-b5816f72ea5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3c8f35-26b8-45ba-8b4d-c15051e43b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3fffd8-1cd6-4d8f-88e3-6e20b315beb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac93d888-c472-4e66-8a41-64407884b848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbf160c-772b-4e64-a403-fcb312d1e0df",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b645cc9-e65f-42fa-98eb-22a972479caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e17f87f-7fe3-4b71-8b51-c7baca351619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d0d284-6df7-401b-ba91-5fc3273fb003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b85aa4c1-2c9a-4f1d-b661-e6e0125e4970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013ec35-b6f5-44a5-a131-7ae19b0ad3f4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17527a0-4e0c-400d-8aea-a04133f208a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89db83f9-7a8c-4ae9-82dd-6ce8725eb962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679797c3-ae18-4eaf-b518-8cc39acaf5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "06aa38bb-538b-4e92-b821-a65c6ff2c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f534e68c-cbe9-400b-bab2-3acc47f4fb6f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22047e1-a61e-4694-9456-a6410953bf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739b1fac-d114-4b19-bcc5-9e36796e0e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c71060-8d2d-4316-80e2-f3ceb6707fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc612d9-d3b7-4fab-9a8f-4b6de6e627f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98402b7a-9804-4dea-a112-24bb5e371f99",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d7b6d9-879f-4e1b-94cc-f3630f3927cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986a9590-9c55-4e04-a097-cdc2fd3d3341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1837aa8-5f12-4d0a-9c60-24019855c722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "309573db-2a9e-4adb-8a86-2127c27a8981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4954382b-3b98-4021-9361-bd93f4a42985",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f818933-5164-406d-be30-e983bbb4321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecca00d-a995-4800-acc4-85cfe15ae68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3089f3a9-623d-4011-a4a9-740426737157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aac72974-6ce0-4204-8439-c446de820c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07115e2-23f6-410c-8464-557afd61d488",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab1b6e4-9784-44c1-bd8e-1eefafa20dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352d7dcd-a3bd-4c36-973d-77c3705d93e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2388b38e-a9db-46a3-904c-51c3fefd7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8d41d8-50a6-40ff-a620-2b509844f217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee7678e-7170-4f7c-a211-f735fa50f0a3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5f46bf-0e19-4929-bc6b-de967dad45cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b932f3-4a9c-4f2d-afeb-e6403e3c9d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb93b72-9c0e-44e2-a4fb-a92e7b2acc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83572d6e-c694-4e5d-9757-e01aaad3f473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4671b50-84ef-49cf-aca6-d583fbd9931c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041671e9-0d20-4563-9411-038d994ff7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfe70a5-ebf6-4680-83f0-10acef6d7749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b13421-8ae5-41a7-9e99-c9f9021f3432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb72ffd-1264-4263-bd43-afd389e69762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c276a4-ab67-4297-8336-133be5e10401",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdadf7b8-40be-4fc1-855a-e5dc1196ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b333b796-44ef-4f90-838e-6e04ef4db0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31dbf56-d8e7-4ea0-8759-577c0cf07dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4a0aa0-e1d0-4e0f-9f85-d27a57c584d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c2a5f1-2480-48cf-93cd-e7c4b51e26e5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a054f1-2a17-4051-8eb8-04b90ff59b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0757d03a-d833-4600-aa3b-c6d4b4e0264e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92038784-d8b4-4662-ad38-9986d2ea535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88bfbe57-3a87-40ca-9540-6e185d7a99b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da616f99-141b-4ec1-9e91-2ca1cbb680cc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdc23c2-7016-40d6-ad73-0d15c9dffc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d3f55f-91db-4386-926f-4eec8711d122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49269e0-fafc-45a3-9b1c-67ab28e65b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9173b3a-61eb-46ce-b7cb-fa37d0e105a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706d8bdd-69c6-419f-b2ce-3d39577df500",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88da2465-525f-4ab3-abc5-e2084b8b33ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4f5b8c-2993-4135-b48b-7a5c9be5cf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acee3972-1b0c-4e01-aefb-99aacbb1c44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "874bbf66-3e39-4ae6-8884-f94a074c7c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866d3bea-b0cb-4ce5-a077-d886f3bd9956",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47d7223-1f99-4bd7-b1e5-e1d69c59aa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e030d14-8931-4253-8e46-12bace18b12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dd5cca-f228-40d3-8bee-6af1ffd9980b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e30b83-44cc-445d-8433-d5d167a55f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28435140-c056-4386-9b33-3235b9197031",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe046d0-d26b-4d59-9b14-43999618ebc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff9f549-1564-46eb-a667-559350f2b038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04637810-9323-4127-a671-8420b344d613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "064cf5af-5ea5-4272-9c93-fa6a2136954f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f22b81-0203-4bea-b85d-c511e7899bc1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed48c3a-61ab-4de7-9d68-527eee3cdb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaefae1-6191-46d3-a0a8-2459142874a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c97ca38-c69e-43fa-aa78-df0d173b23b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3ca61a-5bfb-486e-98f8-578587220b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c49d5c-5f33-473a-9fde-15c98ef961f4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94406f5a-1e01-4202-b759-6769154e6779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bef4269-35ba-4478-bdd1-0cb0410a73fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b208c9a-4611-47b8-a8f7-5bdd3b400dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7e41ee-024b-4312-bbf8-486476980d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b4a4a-9079-4275-a79d-34ea462af205",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6a87a4-79ee-46a3-a5c3-55eae2a9edd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308ef697-ef85-4cbf-8fc7-ec9cc2e31508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cd2822-3263-4dd5-ab43-7820b810e81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "402d3e58-a736-41bb-a9af-6525dbfbe627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ffa0c5-46cc-4c5d-aeb4-51b8dbd47e15",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c038bad5-0a20-4017-8dc6-4c6e2518bab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90f16f2-756f-4e9b-8519-74c8ae067299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe81d6c-6845-4d5e-b775-e08720e205c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f09a591-4ce6-46a3-97a8-8771bc807658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ceae39-c41a-49e6-ba48-1e39725d01ac",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9c015e-eaf6-47e7-a889-8eed30dd216b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774b2b27-9ff0-483f-bb11-479155f903c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba92dc5b-6a7b-4db9-a06f-d36b40ca0b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cca5c54a-54af-4b73-8fa1-ba0ce08df844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586a9bb0-80b0-42d1-b0d5-d9f41c781c4f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425614e8-a81f-4d22-9a8a-4d808d1c5c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4ad4ba-935b-4b72-ac0f-8af5e1c4b62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c371c3-edfc-470e-84b6-0b859765db1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2f9140-2d6d-4b10-a80d-079bc52b599c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7589faa6-21e9-4286-bad4-eea0da87a660",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c1ee1e-5f66-4d5e-a268-f9601c8566c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cb09ca-bb92-4a0d-84bd-bd3dacd139a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b9a384-ea6f-45f3-9ad9-9bffb8cfaa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5716512-f742-4598-951a-a6d4fb3b36a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fd707b-5897-410a-872f-6cc52a5768a3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0942f72c-aaf7-4f0b-aca6-5326f3adebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371b2a2a-4847-4150-9471-4a8bec3a8924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26178de-fe34-40a2-8942-92e8b8ec465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfd783e-7442-4cd2-a40f-bc6c00e68fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c2955f-a38c-4ae4-90fd-97ca2979e22b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba583a-94d8-4374-8def-73d723cd7a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd150c3e-b652-4e43-9173-93520e0c3209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179e83b-0033-447f-a5c2-5266f216db02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd40d6a-1fd4-4057-9fd9-a29e0d128b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc636940-1803-4e72-a385-0d7945ac8590",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91369ba8-c357-48d9-bd51-4e301eee19fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c12f6fd-83ab-42b8-ba64-7aa991a6df8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b091c11-5636-407b-8739-e00cc509c504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b18c01c6-999f-43d1-9e9a-656e9631fb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b123a706-377d-4010-8eaa-7bad67cebeb9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b3bbab-e6bb-49f3-843e-dfda502e8bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1219227-78c8-4ce6-84b0-fb0ddcf76578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc73dd-e6c7-44b9-8d40-180cbe85d659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "998b80e3-dc1c-4bdc-b67b-be42a64a6976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c046a0-ae2e-4c66-a133-46335d555882",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5502b7a8-f6f0-41a5-828e-9f6f6d2b45d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3dc03cb6-92a1-45e4-bc05-47f3f9eff659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122e1d74-6385-407c-b9ac-cc8709a87696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "308c9156-4d2e-453f-9243-9eba4aecc1af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4cb4994-1ea0-4ffd-8fd1-9c4c4bd6df4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "032fc7ac-073c-49ad-9c80-6fdaec66596f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ffd17-74c9-45a5-8e1d-43a5dddd8e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b85c74bd-1eb2-4143-8e15-7e9785dba320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575ac0f7-42fa-468a-846d-9da2d4968609",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eeb3b77-2170-45ba-bed8-c7fc7612e633"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed86f606-b7cb-46db-b82e-f04740e2a363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8417302-816e-4444-904f-281420690da6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89936711-f408-46ec-b6f5-7e2ff586bc33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b16cf58-167c-4485-9a35-b4d13d0926e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90629edf-3b61-4755-9af4-e67528bee5ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1aaffb0-1e5d-4aaa-be30-fa5eeb476d7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ae4ebf1-eea4-4db2-bfce-f7bef087008b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa464aed-9d70-47c6-90a1-bd3206cb0b06"
                }
              }
            ]
          },
          {
            "id": "a6d26533-6e94-434c-873e-68610541d67d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8fcc4c61-dfc5-4416-b43f-4f31f548eae5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "81c7220a-60e2-4e13-846a-e62b7febf826",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ac829e-1b0e-4155-b3f4-b9156bde1173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac9f4672-5586-403a-970d-274270e1fe10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1812e28-98af-454a-94c1-c0ce75390418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fcd16f-5dd0-467c-ac8e-e7e6b9850dae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad29c175-5271-4857-8527-70be30991b11",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e852ead-fcd6-4e76-805a-3cff22d713bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5737916a-158d-4338-be7f-0ba456290bf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "747c9b79-e0ea-42e8-8977-278ea3cdaa18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5a7e05c-1d44-4cc6-aa0d-9ff3900c603c"
                    }
                  }
                ]
              },
              {
                "id": "97c89c1e-89f3-4ccb-a178-640c05316b87",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "309f493a-e396-4c70-abc5-7694c9a395e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70eb47bd-d37a-43cb-a628-b2443f0d931e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "913774e0-88f9-4673-b049-54702efc2183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff768131-7053-4101-b3c3-8d17f4c9f1c9"
                    }
                  }
                ]
              },
              {
                "id": "40db7621-d3af-43d9-9125-e63251585e72",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92830c32-2913-4f89-a0ca-5cf2ab9b433c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "135cae9f-ea62-48fc-962e-3551ae3d7853"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3892d430-2313-428a-bde7-6f169c6e00ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9607ee2f-446f-4b82-b471-4b64f63ede91"
                    }
                  }
                ]
              },
              {
                "id": "16057850-896e-4331-a423-9eab2ec751af",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f77741-fb11-45df-8cd0-8b391f55a82b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d94cebf-405b-4be7-a72e-7354cfe51a4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f63ef5a2-1164-4f96-a40e-242c72a53172",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "30ee8628-440f-4402-9c51-6fe2b94b0dd5"
                    }
                  }
                ]
              },
              {
                "id": "2252e8ad-c784-4d7c-a9b5-37b7e82b263b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6e9160e-9e18-4f34-95fe-60c55daa24a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2974965a-7e51-484a-8bd0-6752a75c8946"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6db3e8c6-5cd7-4939-b151-5ba5cb64f778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5227059d-1e6e-411c-8fb9-7a0dc799dc50"
                    }
                  }
                ]
              },
              {
                "id": "6ae1410e-10c1-4505-9900-6c2a14527445",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87467475-b344-411a-95d6-fbb2d183ae6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09b4e08b-8214-41a0-827c-f98352554180"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2829f335-7cb7-408b-a105-b2993012f0a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ae8d3c8-df62-499b-9fe9-675301d48f13"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd316c2a-196e-4d38-80bc-342110d10938",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "066dd084-01ed-4731-8be8-99da620b38c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b399299d-9551-4f89-b20d-68eeec878865",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a1a4bb8-97f3-4f31-bf09-da74e0317a01"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22b6aa81-9d3b-44d1-92e7-a822fcee27b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a55d482c-6ef4-4d25-9b7a-edfe4b320fc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd2dce4f-dad4-4e6a-b5f0-8376a7ad48af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fea401e8-65c5-4190-a888-a4714243a429"
            }
          }
        ]
      },
      {
        "id": "ce0806b2-f92a-4ec7-b64e-204e1a8aae5d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4e61c02c-5864-479e-a301-ba7b20b4d3fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fdfc401-6b2c-45b7-9b70-72104c26796e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cdec0119-04fc-4767-b413-a5a806357647",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84c3276-11d1-425c-8da9-c8622fcd169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f4910b-8fae-4321-b09c-2e466867ce22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5a454-aab9-4268-9a40-f28cdaf2e42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e28f5907-9b9e-410d-929f-1f5937e2cd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bfe1aa-b1d4-4515-970c-a5f57adc64ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc6d791-6f09-48a1-aafd-4187caa3e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db3ef06-51b7-49e3-8ac0-5174de4dfea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc0498d-7c82-45e2-862f-ea47910d8818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff0be4f-1ca9-4bac-a1f3-650b1459477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902c5ee5-a080-4e0c-8009-b78f512d5bcb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43c40b4-978c-4f23-92ad-eff5b09a3f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34413ab9-c70b-4c7d-9ae8-ab7ff8fe1f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06d48b6-5200-40ea-81fa-7ee45097e93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6144be04-d955-4ab1-99fa-9f171feb195a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aad1f1-7d06-49f3-96b5-06c4d88bcc4d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5066918-c33b-4a0b-b3fd-f3a08ddeb4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efd244b-9951-4d67-b517-d75422ccc0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fe9d42-0465-439c-b86a-14baba4eb3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6cd457-03aa-445b-9164-ea3dcb3fa781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4ac521-7aa2-46d2-b107-cd6ddc2114c1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cded66-f69f-4598-955a-193d1c7c412f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ad7f34-5057-40ed-bbdd-0fad955a69f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2449df49-7787-4e77-8ecd-8c26dfe6ac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "949eb662-4fa9-49a6-abfe-1c18cc56e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f70ed1a-2d43-4ed0-ad38-58deae6aeb72",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830f7cdc-9d67-4956-8736-65eedb8d6bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26defa26-dd32-445a-843e-a2182fbc48ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1cf272-7ee3-4114-994c-4fc8a4c9153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21d7449d-4e1c-4594-b624-9fcce6d559a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2f659d-fa76-4d3a-939b-c9eba8f8ccfb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342b2a34-1c8e-4a60-8e05-b00706813f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613fec65-da24-436d-91da-0d8ddc502f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b96c93-6dee-4230-910f-cd93e500e8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14eed7e-2251-4320-9036-a7d85b04cd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf2f631-e3c0-46f4-bf98-e41f6f289ee0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58394f5f-5c25-4d15-8ddb-c6d0f564e44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adab16ca-8b99-4c61-bc27-be2f116ee551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76df4d66-b8d6-4ce5-b3a5-2718dc23e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edbe01ff-b689-4ca4-831d-43fd7edbb09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda8fae-18fc-4a4a-9b50-24b4a497a38d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cab075-59a2-4488-af6b-9cd752fb2623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9bbfa2-b8f3-4e20-a7fc-316454270c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cbe74d-f44c-4dab-a905-d1226daf1e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e57b764-de13-4471-8366-ce9743b72498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e319682f-9941-4fa7-bbf1-e39d3d9fed4a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44143ec3-2946-4f98-b151-a0ce300695fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0501c979-cda9-4233-bcdc-b97e9858f1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de8b093-72bd-4483-ade8-f68d6701df4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "277a2fe3-41a8-474b-9239-532272a777e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd46179e-1954-404d-92df-4e908cccac99",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9724e3e9-b0b3-4671-9fa5-edecf6d61197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76567fc0-0d79-41a2-8a5f-8c81531f688e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496419af-701b-4b90-b69e-e594006fbc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c96e19-a567-4fcd-b30b-38165cd3b8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4624844e-4f08-4325-8d64-4e50c041d5e9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee932ce8-c474-4679-98d6-cbb2affef706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849b2cbe-b1df-4944-a981-4a4616fb5193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80241265-3e7f-4292-97c0-d12727bf753d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f95a56-762a-4577-a037-51e058b93ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04789412-63b4-4161-98a5-a53ae7b12d4c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1826fe84-ea46-4a98-83ea-fe72e5707ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85450d25-b3b0-48e7-9258-7bc9cd92688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bec478-1e17-45f9-a065-060803c1d2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71b2123-6cee-4f70-9dae-1a21adc44840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdcc038-a783-4a60-9a7e-cc783456591f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facffc82-9c7a-4012-8a9f-428b11541c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d874f9b2-b112-4b56-acc1-98193b811590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33ac8d2-d3ca-4d1f-aad7-894db39f88f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "78074bc0-9837-49f1-9c1a-b7c42def2633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa94b7d-c6a0-4097-a5ef-a415e39d62c0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1fc465-bde4-410d-9d81-8c8d9178a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c59a1d-7b09-4c73-bb37-736c838ec4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df94072-edd0-4623-b948-08d2d8c53970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c7a7bc-2794-4a51-b300-2a3c930640c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03140e63-8f2f-4153-ac65-2025a0d213d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ddb76a-84b3-4f08-bb63-e53f64eea37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094a1c68-d797-4eff-91e2-cafb843f893f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d2914-6463-471e-8064-5b723fbe51f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2c5569-1c6f-47f4-a878-217ec96b35fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf90e2a-5e3d-4717-9433-33eb5f7031ed",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e9689c-1d4c-4c9f-912a-38cc062a48ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014cf121-1d70-4a31-b091-0cff8e644a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989f351d-8425-4be0-81a1-4a4e16f89f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed9baa5-be0b-4de5-b776-a0bb66dbbe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c48227-0f83-42b3-9745-bf47a6d28823",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354b3bdf-1f4d-42e4-a467-bf82cb12de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d791040b-2fa7-49eb-9cd2-a14a0641f8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace018b0-eb01-4598-ab4a-94d4c7d8ea3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f0ed0e-bc2b-4e64-b3a6-3a3cf2e1b0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06184ce-d573-42c5-acb8-f309ac2f6b6b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2e134d-a318-42ef-9a37-a3f4f3e2eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163a5b16-3f63-441a-a7ea-afe5d93f2d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dac2830-9880-475a-8b92-429349837f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf65b3fa-0ce1-4eb6-982e-8c61b27f5560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6848c8-49dd-4702-934d-40458d6191bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409a434c-ce2d-41c5-aff5-d9433b027a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3009fdb-453e-4512-ad98-3fa09ea51a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb73b1f9-c7f0-4551-8821-fb4c82fb50ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e60361f-dca4-401c-8a23-ebb64e196306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4724a-28ca-4ef0-bd5e-9164d99bb23c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa668aa-2a5e-4f8f-8157-486bc9e4865c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae0e47c-8b18-412e-ad35-ba5fbfaf9d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17bf15a-c0f5-4d44-85c4-c4a1a3ed6d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99222bd0-b11b-4b5b-aacd-f10f696abd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f41535-5505-4638-a907-7ef4602aa7be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85dd789-9da3-4be1-adb3-7a5db42c7366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd2ab08-2988-448c-ae9e-756ff62bfa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3394b54f-d6eb-4e06-ad55-4362a420ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b962bd-66e1-457b-9720-408a9213532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ea2fe6-17b2-43c3-b4ba-6614671c02e3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25da4b8d-f13c-4117-992c-8200ad4d651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c5a98b-6bb0-4c90-bead-a7986ed105ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a99defd-c583-4271-9f7a-c6b613c3c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3715db90-2c22-48c7-a711-e9a037f249e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68adaec-a944-43c9-89b3-284bfb995e52",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b1163-21f6-4025-91fc-d79790eb731d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c0b73d-33c4-4647-8685-76557e4a1517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90703de-75a5-4c08-a495-486fd95d1220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b18c577-d03e-473e-a3f3-aafb8e05fb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cede616-543b-482a-846d-97eaf83543c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0290f483-04a5-4ac1-9b08-adc5ea6e383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097c2ceb-066b-491d-867c-bb98e3e2272c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c50366e-1fd9-4dec-b45d-1ba93b3a60d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436ad171-5af0-4c39-a4c1-ca1ebd68c693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49609ab8-610e-4d1d-b284-4fb3354dec6d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5951fd-835b-4cd5-af65-fd6ee89f8ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccffaa2-6fb9-4b04-988d-cae126481ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc99b1e9-b3b6-42d9-9bfb-001dd725ed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31b0ae4-27bb-4057-a61a-78dce6aed2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b303a22-18a3-4815-b304-572c953d1b1d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a517161-c9f4-4723-a2fe-9d3f637b3baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5047ac45-1955-4fcb-bd26-e274e226afab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d979092a-5187-49c6-9c90-f85a791b1107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9e1f65-38ef-4092-8911-8e9b937140c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e2baf3-7071-412f-9e29-ed26a387fa64",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b115728a-4dbd-49db-bc42-0ecf2a7cac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e206480f-cad5-461a-b961-2155ca0bb260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a1098e-9658-4e18-a42c-ac68f4833bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "defea0f7-f66b-4e1c-b85e-74952fb23073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e1fb98-b21b-47c5-824a-a288f665cedb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3475b6-10ca-439f-b26a-3c9ddeaef637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f13b99-d540-42e5-a4bd-b26b8af47a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37414d7a-7b4b-414a-bd83-b003760ba7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4fd22f-8a09-407c-869e-6f0b5393d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bdb697-1498-49a8-b970-18ef2206776e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e1f880-a063-4adf-81af-087ae5c15550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b3c69b-d34b-4caa-a7df-4832a9758026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f6b060-c30b-460b-a7d0-e9ef8b1d7c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e501d8-6c50-4049-ae15-ec8b44e90b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e0f860-c9e8-444e-b71f-5826e6709154",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902f668d-cc57-43fd-a975-a8da6fad9fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f878d89-ab23-46a2-901f-370f74be78a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7eca1a-44fd-4362-ba88-767dd4aabe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca741f9d-652e-4146-ab0f-59cf4e8a0229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b999b735-299b-46de-a1e7-37001ed400aa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4763cd-db82-4edb-b8c0-f63d6bfd97e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0ac4bc-4692-4657-b960-43e75ec1a0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e54567-d993-4fe8-9884-5d60d6fc1154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced19565-8b8b-4aa4-843f-907de0c3dda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb732c0b-c64e-43bb-bd2e-c8ee46fa1deb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f298a027-4270-43bc-871a-d3ebb6516ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e958d42e-0c58-4aa4-9e0c-7ee85fd516de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d206de39-b1be-4109-a5b4-e8206b2f63b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba058f2d-402d-4182-bc28-25015bf5d14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dace9db6-1f7e-4d2e-9a1d-c22e481c772f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb021119-d14e-442d-ada4-e61b3fe52e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d01eaa9-1e88-4c58-99e7-b6bf2ccf920f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef862ee6-94de-4c7e-8a1d-9d34f552c768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a847a521-c0e9-4cea-a8ba-f0a294d10245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddb444b-e9ab-49a6-8d0a-0c274d8cb45b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f72763-98f2-433d-9a00-6bdd005ff0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e91f8fc-dfff-4954-ba11-abc6f7d30781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b8225d-1d07-4d25-b288-1bfbe463d9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76d852a1-8f4a-417b-ab42-c3e9c696c74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ec55f7-8666-4b20-b922-59237ca32ecb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963c0016-f0ee-4a7d-a643-fc5aed581ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfe9be8-a4d2-4156-84db-872a8da4ba8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5ffd9c-626f-4354-b238-ccf386cf75a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6417d24-4343-40dc-b874-c1ae119366c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70454b1-cbcf-407f-8528-ec77d12f06d1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08fce42-9f76-4aad-8a72-5b6394fcab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2486f032-c6da-4c79-b470-1c2f30ad2460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a688c-901c-467b-a932-44cc0a1ac573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff3ec38-face-4930-92b3-0e4e51c4b667"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbbc8e46-414a-4aa9-a84d-470e69102a54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8c98c47-013b-4dfd-89d6-6d77fd68cf3f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3255fd8b-a2b4-4681-9f33-5b32e4b32bb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e13b673-2acc-408f-aee6-3e8e67b7f128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846ef667-3221-4c7c-85b2-ddd05669a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e554fb92-eef1-4395-9275-ba8bbf72f3d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70e5a6cd-b761-4650-8170-659d0e457a67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1557e820-b33e-4006-93ab-eba46e964b20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9423eed-3b28-4055-9070-fd07c0195790",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "111dab01-3ded-4ca2-acbe-755627570926"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ca86992-f4fe-482a-8b35-f0672c32fe6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c123ff7e-cac2-44cb-874c-fa2f5a4fb2e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4da67c89-df45-404d-9417-6b6bc6977375",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "718698ce-b8e6-404b-93da-1c5dae1e5de7"
            }
          }
        ]
      },
      {
        "id": "10e2e395-ea6e-43b3-bd53-10e3c15f45be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bfe76d3c-d926-4434-b585-9797acfe9a56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8befccb-bf9a-43cf-9a51-915f03073136",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0bc29fdc-4e49-4526-9dd0-eadf8d00e300",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b6fcc2-f771-4719-95c8-cc62ae68ca81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa23ec20-3d0e-44a2-a0ac-993f88c7cd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e234cf45-7707-4bcc-ab79-996a751fd917",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8d1fa7-c9b1-4655-afe9-4a254ab4c146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64e8e98-6e83-4004-90b0-d4ffb011ba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3f3e6f-e465-463d-9e0e-fc345a5d81d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d04237-2036-4c67-9d91-a3f17eb7b06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25ece7c-617d-4828-97a8-18e6fb78246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec1fe6-57ec-41c3-b41f-42884f7c266c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da2916a-cff4-4cf2-a110-1bf8d6f188a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303c8e53-8794-422f-b0e1-b24f7d7e34f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23183da-b53b-44d5-8238-f735d504e6dd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8e5d02-ca38-415c-a224-80b73215fc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c103b3e-249b-4162-94b8-9cbe492e656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0043b6e2-65dc-40d8-8ce7-9655a6f261d4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579803ea-3222-449b-ac4c-26aeca3ba456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df950fc-176c-4475-858d-e21866bbb89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8b24b-41f3-42f6-92a2-22b8a22fa1f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2026af2e-c850-4ce7-b3b2-4e41bc42227a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d532e6c-d22c-4985-954a-226d6b515459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2b2623-aaf6-40ff-a0e3-c62405fcef5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47311384-35ba-4099-87e0-30b29d4098a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eae66e8-a18f-4cd9-ae71-afd788cae22d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70feef6-28b7-410e-9def-ccd0ff883fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80cce0a1-8590-4389-8fc3-8ee47f59e84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817922fc-b1a7-425f-b620-6ae982ad11e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562065b1-e9ad-45ba-a989-c4cb33378ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e0c347-1fc8-493c-8bc5-c4a3cda628a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d82e03-1c0f-460d-8932-deea94bcdead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38f5fce-a343-49ea-822d-c47bbb696825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9876dee-b988-4478-9b64-d9b29bdeb601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3b30af-d7f7-4fda-939f-ad440d2c2b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075d6d86-1dab-4c7a-98bb-ddd053b745dd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0976dd7c-4f90-456b-bcc4-cdeb4f8a215c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bf8167-e14c-4aaf-94d6-dbda7229eccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2e8886-c35b-4611-ab89-66e7f95cfacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7353f4-7a18-40a3-9afc-e9a301ec2bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ce9bbc-339f-4be5-b594-31009cc535ba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7527b5-671e-409f-baa1-d0895a539c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6896cf2f-4c2c-42ef-9a61-f1e5e42ea71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef873a9-e689-4307-b760-72093fb92b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1262af-bfb9-4142-9b0d-8407f07029b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfa4fd2-b3ba-422f-85c0-0b23fdc35be5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac4cccf-99b0-47a9-8919-e6ff4dfad7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed621db3-0294-4945-93ea-793ded24a580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95250f2-a2b3-4748-b214-5432ac3edf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d8516c-22c8-4822-85f7-378494dae8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3b984c-4ade-42ec-af07-69163d70b2d3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cf8ed2-107d-4dce-897c-afc4dc9f651d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9bdc62-21d8-40ca-b310-1a54143c387b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d3e38e-14c6-4c20-9a84-5b3381665842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cae66d-b08c-488d-8a02-6214503a9ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b4d947-4802-4c4e-b8e9-28d1bf3f922e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7406a1fe-e190-4563-9c31-dd02ff334bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ebef8b-67b0-4c74-8529-4b538daa706d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800e43ae-8088-44ed-b83b-a6d79deb3786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e6867c-af39-4594-a1b5-781642585973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4cf8d9-4964-438c-8121-71f1cca14a49",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdef4712-2612-4a38-b93e-2a495e5f2839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee7c06b-df57-423d-a413-f5ed71cdbc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8461b4e-e738-4e48-9b84-8fd3fc74a34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8262a6a1-7bd5-4f4b-bdda-9f2d41ac088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d616d2-1af7-4072-96af-34300d7a3117",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304257fe-d475-414a-a703-631e05c42097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85468e8b-aa96-427e-9096-3238a573dbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90781f76-e9d3-4811-b0d0-93f7fce827a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776d20b1-e6ff-4bea-9dbf-ad8c3458f493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb78756a-739a-4a6b-b931-4d35985989c9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82553f7e-ecb8-4508-b2fb-e87019160baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae48dd50-c2f8-43f9-8649-850d1099e30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5dd841-910e-4ea4-9cfa-0c8c2851d67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5601ce9f-bdd4-42b7-bac6-07b680295237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203e2ec9-bd06-437f-9a1f-983d0d57af68",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb9e968-c92a-4f3f-bdc9-988fb70608af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2054ca7-6868-40db-81a9-c197541eaec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa62f56-2715-42b8-9752-f2f53a74b0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9830a25-0a5f-4082-8c50-5b9ace3faed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da31f47-e947-48b9-8eb1-3821624cbac0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7168f7-a13b-45d6-b2f7-ee1a03f2a010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd965c73-bb0d-4930-95a3-3ce1af0c336e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e37f527-0cf2-4c6f-9be3-dc10c24d4a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755070c4-8244-413a-8245-4e6e184bcd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff2ce60-8d09-4d3d-ba88-3557c77678f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158638c5-9a88-4fbe-9fef-0ea2a758d509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27075d6-22cd-4e9a-ab61-feaca2637efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0c3680-842f-4e02-bdab-a7e3b05e0175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444fd868-e54c-483a-98c7-bf26414e117c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195d3e13-cc70-4c8d-9fe3-2ab274a9ed90",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5a0c77-ed75-4893-8c43-1db32ed8a1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acabe73-4544-4131-aae6-91a55549dbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0485c3f0-9139-4cf6-9651-159014fec5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb34089-3c91-45fb-a1f9-4484290fdb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53aa90d1-ee2d-40ae-8830-abe3a6620178",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca64bf8d-cdc8-4479-94af-587f908d03e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f715dadc-0e14-4d62-b2d4-65c2017eb4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f6881c-8b46-4f46-804c-4550d6feb402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195f7d7e-e3a2-4c2f-9916-3eb60a65124b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c6a859-9c33-4dc1-94a9-2a3c58248d2f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fdcff8-2967-48bb-acd7-cab6346c833f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878d9e84-9b84-4cb5-962c-8c4b63420d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccabee7-c5ee-4ea3-a707-f3194db8d2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c084e8f8-34ef-4bef-ba89-e7b2f38cf5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a7d41b-4987-4552-b70a-806e50ba8dcb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615afa1a-3805-452b-a63c-610bb338a58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d2c5f0-0a4b-4b99-896d-ef7c4bcd033c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dda100-07e1-4d19-a710-80c13ff5b138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9e6d6d-0fc1-4e29-8309-85d4ad40e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4240fc4-d8a9-4f7b-860e-c0fd4d6d97e1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d799853-fab2-4e79-ab82-d69b76766824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547bf692-ec67-477a-8901-33657bd7c79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b268e0-2f37-41a4-a21e-2d33d7a40f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042aac42-3756-435c-94ff-16bac1c5a850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a555bb-99f1-485c-8445-6884659ebf78",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fec63dd-eac8-4e3a-819e-cb65364842b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f16e77c-6896-4478-a462-c945b418c4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c003091-5b54-422a-8c26-32775ba66598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c916886-9c0f-4898-820b-c150a644c889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4b2ac8-c0c8-4278-9730-c7c0027caeda",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9b5b4-d2de-4521-b34e-73d5603a627e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc1156e-da83-4619-be29-804b5056906b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da93fe8-5d84-484c-9283-c5cafb3d64c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc13989c-b249-4276-8c75-0ef4ac919d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992a7ebf-1256-4a80-8812-c35f343a9839",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f5d2ac-be22-40fe-9794-8bd3018bf1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409b84dd-8556-4e90-9a83-f0e33ae7475c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee2c763-83f8-4363-a1d5-352b213ea69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93f4ced-0aef-4a62-a1df-ced0fd3e5371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ef6fde-e948-4d42-ae38-c9e2c5b3b64e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ab8794-0163-4f64-a4a7-53962899384c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd25669-df7f-469e-8825-eb3d47442625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8442c952-0355-4bec-a10c-8444bdd24324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c1f776-c19a-485c-98f1-fa9a106c8a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179b993c-6c9f-46cf-a5e8-e4f4fad07f15",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e33a67e-f0d8-40a7-abc8-8cc1546f0a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe167899-90a6-4024-a95f-4dcd93fd9f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae19fed6-a1b1-4ab0-9370-dda833729d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e70be19-bdd7-4170-a9a4-48832427285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a2bc85-8ad4-468d-978a-1ac40d676bd0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb4c5c5-bc32-4fb8-ad11-d3298261e51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04630286-2e88-4023-a929-6f9b36f4e05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9007e477-8b73-40a2-9ac4-26590e6276f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a37b57d-d573-4ed5-ad98-8338a6015f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9f675a-8bab-433a-813b-a9dcc9c14755",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c2f435-0c2e-454c-9997-76b380725a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb5af30-bd0a-4d31-88a3-da24403e3751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee42487a-ffd9-4fc7-be56-f316d9929f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b6200f-2c8a-4bd1-b1b4-9d4df704b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de753d42-96f8-4c3b-84c4-b338f1785694",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d242bf-d78c-4e4e-88ed-b7808c9e9e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2b2e4b-486f-43d5-8890-6dfd793817d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fec5fe-ed12-4269-93ae-5204d901fca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d83d27-66e9-43b1-b051-6fdecfe7ffd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f04f7c-9426-45eb-b953-77e262d8c731",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2ef331-f138-4257-8f0c-15e55f333ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc5b62f-156d-4f05-951b-0a9116a1a9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acd294a-475e-4ba6-aeec-fba6cb8a2272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c176db-af3d-40d6-ac84-5f94a1d3ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2450e504-460c-46f0-af9f-9dbab9ff98c2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfe15d6-ac4b-4104-a0aa-56d92ae47cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263ca5db-8e06-43b9-bd4f-515dc7f1be53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8dcd2c-4068-4c06-bdda-af5e92c7e2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f24c2bc-1d3a-4cdf-bfee-3955927875d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b22f41-f6c4-43a7-9146-40997e867e2e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fd667a-2e7b-4692-9d5b-811599446505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025b13d-6a83-4a44-a7a1-26755f37d9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719eca85-5e5a-4e7b-86aa-28243fb7df02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026cb8a8-808f-4978-872e-1fb8c4c9415c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf075b7-1ec9-4d6b-b71f-907c71859fd4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7aaba9-9364-42a7-a633-2e630248cd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b74b703-e955-4369-8e8d-9bbc2c33411c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334c6acb-43ca-492a-80d9-08e932cd4b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8f7cff-ea60-479a-85ab-e4f6ceb27868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafb37a8-7dd7-4889-b90f-0ea6beb32c40",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e839706-f9d6-4c54-8712-9484a5c00320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a05e122-4cd6-43a5-8dee-65b0bd2de4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed55f40b-92f4-47c5-9015-2e4552aa6fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfe0946-d366-4542-88d7-992cca6ae1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa2947c-ecdf-476f-9d56-8e855d4d48a3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce6d5cd-1f37-448c-b0b1-f35d90f85096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c6b193-9069-44f9-b7f7-14f0010014f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993684a2-34d6-4243-9816-b894c97a91ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca24f5b-d894-4b5e-b524-7440e6a7c448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba700e2-8ca8-4824-a14b-7cab5305f21c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3863d119-202c-48f2-94e8-242bbd7f2451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d9c792-4143-405b-afac-7ac1034683a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2082a8bc-fb69-4b81-8d7d-c65a41f38c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febd3854-25e3-431b-abb7-11b97b0ec225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ce0076-c015-43c4-b334-087aec9b94de",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf8e547-34d0-421f-8b4e-ca16055d6ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dfe40f-9e9b-4459-a34b-08594812717c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b115a636-ed8b-4c7e-a71f-a5a7dff64873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982f0f77-bf79-474d-badc-82fc8c293ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9afb28-3657-41a1-8c2d-729860ce41f6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c186ee0-79aa-44fc-9cea-a48539d94d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2d4d33-4959-4164-a3ce-0f4cb6674cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84deca75-6385-46f4-a40a-676566982ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd88e6d7-fbe4-4999-be95-0c8cd078b957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe940f2b-65d3-4e6d-b97f-cce9e76d2c29",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbf62b2-df8f-4670-9067-8eb6630a8e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a6de30-aecd-4272-b7ab-56e67ff933db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee775865-4752-427a-9d8d-8c847c46bb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7996308a-0a9d-42ba-ad48-6f29ee43af75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a99673-b3a0-4c5c-b7a5-a54b621a539e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6ae488-28ad-4558-8865-341a8b00a113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71be4c8c-c0d7-43a5-af27-3191748cb0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbf0d28-9ea5-4769-acda-91385ff3eebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823c2041-65eb-431d-8812-68b14bc20655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a61771d-3121-4b8f-8321-34af5b48a3cd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bceb4bd9-5787-4de6-98ea-ef80a4d0fdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3730180c-0991-4e5a-934c-b146b91fc655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8614f3fe-4807-4a93-95b3-db60e6899ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e305926-aa0b-4691-ab0a-012031d7de85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa9f18-3d79-4178-92f1-6babe898e5d3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0ef6a8-026b-4369-81ad-c16396e64242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c723d6ff-8ef7-4136-b577-23cc708cb773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec2884-b23c-4b68-92b3-9aecbdc8454f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358703dd-584e-4392-8b97-f9885bad48a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea7de0-d7c6-4ea5-9dc8-700ea77dd3d3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802a7dbf-01c3-4518-8a54-d739b4e5618f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23198a10-669a-4405-a08c-a558afdc9ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca43bf1-b5f5-41bd-ad92-b81adbd680ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b21d22-08ea-4508-8d59-5e4c5073ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d1112d-81e6-4786-927a-c987118a97b7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64bde2-4db5-4f64-8e69-6e9cd06d3a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c204a1-cbc6-4c5a-8449-e069d02d5eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eababf8-8c15-4f4a-8c3b-1f8073292d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3421357-f3e1-4e8c-9fda-08df8beeb031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d99ca1-6ca2-4828-b666-e6f63020a3b5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa04587-76cc-4768-a99a-301137338868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0247d8d-ed98-4a98-b020-3d5c4f7b7701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35a76bc-52e7-455f-a3e7-651f42dd8469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d0606d-8147-4cf8-a204-969c2ae1457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77a78ae-c390-4112-96c6-3b82d0ab9275",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e660d4bf-036d-44e0-92da-52baa5bcbebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974dae91-c2cd-471c-a022-dd29864d5feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82b50d4-8408-459c-9784-16596335f601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdd3968-5ab6-4c57-9500-c0050d998ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6aecf4-7b2e-463a-b89a-908fe71d0806",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b670e96-02c1-4e98-865e-f478fce1483a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fc59ed-12d6-4567-9eac-af7be14bcd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d946c420-efc2-4b7a-b13d-0f01cb244298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ce6867-6001-4bba-bfa2-92331091b1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c852afc8-0d7c-4b97-be21-2a45b0e9f37a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583387d2-17fe-4474-be94-c13d528435c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b625925e-e454-44ad-baf0-b4eeadc3af38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677e489d-5b85-4ba0-8574-6e681696a3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185f0cb8-15e1-41de-b30c-fd7708ced8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a188b8-2c92-4b8a-83b7-5a8f0b554a9f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a48a65-9524-4ca4-9c08-4f62acd8c0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5563688e-1658-4f23-ab2b-13479daeae74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b98530-bfa5-41b1-8fa8-98872f57cbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4f60a3-c6f2-4f9f-9b9b-fe0d5fa6dec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb82da2d-0829-40b1-97c3-6430699b9b14",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d552d2-8636-467f-aedd-0282eb9b77a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bedcd4b-2731-4c34-873f-3013aba12281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cba021-a9d6-41a7-be68-7869b9eb818d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95243ab1-4c52-462f-a7a4-e8e8d823b21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83c84b6-f82f-437d-9697-9945774c8703",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e31d1e-098d-42d9-ba21-c7614b922591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f809eeb-bfc3-439e-995e-c525618fda5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b53ee48-8b0e-4da7-b00a-f11fcc4f57a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4ddcb0-2c23-4664-951e-3cf0cb892bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d361eb-75a2-4ca7-ab53-5fdaca6e4ae3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228cabd-8b1f-4a01-b008-3db6bcacaec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dd78e0-7686-4b17-a233-19d27c117049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8ccba1-80e0-4a43-96ca-e946a686c14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aedc0cc-2d56-485f-b73a-d4f9f060cf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def914ec-92c6-4f3e-84c3-d539966dadda",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4999c2ea-6f44-4c9c-a6f4-e9551ccaf167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bb601d-db99-4300-a833-a86a8790c3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d95a32-10e0-4e6d-a36d-723cfa957128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ce5ad4-0425-43ba-b9d2-f0bc79d203e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361d75d2-b672-49ff-b162-539d835ed147",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55480d7a-cc45-46fc-a055-37457a163e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5ec2eb-1cb7-4281-8163-7103de9ced94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07caf7ad-ba0a-479c-a970-c5d60eedf718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cf9129-2cca-49ab-87a8-ccb4bfd7a7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a28ab4d-878b-4766-bf65-85220fb83d4b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12ecb99-a242-4126-aafa-0ab2c6e67d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18520e8f-1f75-4e29-aabc-4842076c193f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c659f50-c9f4-471f-a75b-fee881be3455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3154e8-46db-4d34-8d28-6a63e2c40904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba6848e-88c0-4c26-b64c-b1fa2462c50a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc853503-d7ab-4aec-af83-61e2c408a707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72399c5-f1fb-4e92-a5fe-ac4362d43f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fb57f7-e1c0-4e4b-92ca-da6a18d2a5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29194c8e-8746-4ac0-8231-1dca244ac074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8430f6b4-2856-4724-832a-8a190978b6d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2e824f-a254-4cfd-b4f5-164da0fdb36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61754b4d-0f99-4637-9dfa-2cf77eeb443a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b1cce3-307f-47ed-8404-3e29e9b8102f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd25ce45-e857-4c2b-854d-52e5a4827601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a6e545-4763-4327-9788-9e9795f86f71",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0263f4-6b95-473f-bb6e-693f58793acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3107b8f-72ee-4c1c-9527-a08e795db01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4f06a4-ebb5-4c74-83e2-24f9548b206e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9b61e4-9af4-4781-aee3-47ae9c42a5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1f6d65-ea0d-4bd2-b60a-e76f8f6ea65a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8c883e-a720-4bf5-9d1f-ea298f9ef0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb75727-9e43-470b-9177-879e3285ef76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3daabee-eef5-4289-80f3-b5ebdec906c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f72d230-c8d8-4a26-8510-1b5e874adf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef418a21-bec3-42b5-bb58-c20c8f27201f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acde8797-de80-40b7-b770-177b15374165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03f937f-cb94-42f4-a1ca-74c14d828d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df723a7f-6bfb-4664-ad79-a52c3e4535a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd91758b-7ff5-4f74-9f2e-91afa19dff42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9e11f0-3386-48ec-a2fe-99e586e07f49",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c8e5b8-16a5-4ac9-b3d9-1d795e15a5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3dfe567-4e18-4075-bfc2-9a1d6adc8b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f9ae4f-ab20-4554-857d-e3afb47b2ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddd2456-6099-4904-a411-24142409c5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0262a6e7-c05b-4e50-b1e7-ce4f8d6802f7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b1508b-8241-4922-a61f-9e58255bd3ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d92ecda-1d7c-46dd-840e-7664d88b0f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2b563b-6f2e-47c0-940f-f21cc4169c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b62d5d7-444f-4ec7-9d3b-2656e5ff09e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb1293a-83a8-4286-9f4a-6e8bf6f21750",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ed72ab-4399-4c77-a39d-1a914377569a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7028cd2-2105-49c5-a431-58d902932e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83af1ef-7b42-44ab-bff1-f714654398dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95897b51-c4b5-4a19-8b39-6d02c30ae857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c72243c-4875-45fa-be1e-87ff4ef56b20",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd20643-1cf1-43fa-a790-13d1148d31c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a2867b-8eee-4c13-80b1-03ea8cbab610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b5d31-8ecb-43c0-86e4-e218527dca0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e45a56-5897-432f-93cc-b33b2b41d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b0f1e8-556c-499c-b8ae-2d4df41984f1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bf6e1e-13b4-4528-bfa4-6b9207c3595b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d86275-45a2-477b-8530-52bddaaa9770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a64eab-9157-4a00-a6bf-bd9bb7d94ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47f235e-af3e-4016-a51e-a5a320902ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3451a9f3-2fa6-4665-8f6e-74050ee4946b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7f5faa-9808-43ab-b37e-36344f26ab19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b507ade-0b89-4fff-a3bf-cdcf92aace08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba8dc7-dd3a-43b5-9472-b59237d5524c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2358f0cd-5fa9-4a7c-ad7d-bb7aa8d23444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c13ea47-63fa-4485-83f0-38137b8f6dd2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4887c32f-1bb6-4cc9-bbd8-cf3f7c69ef6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d95231-7ff0-40e2-a590-181f73a7e172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edca8385-a5a0-4ac7-937e-125c08dbda4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba68b0d-aa6e-49ea-adf2-48cb811c030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb7ea7c-ea29-4d40-a7e7-d4b0c048fc52",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015c3ddd-0137-4758-b02b-86bb08a9f01a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695d109e-585a-4e51-8fbc-70e82b93c576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb74a8af-0e29-49a7-94c4-27f259134194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df01cc1-ecb3-49c8-919b-4853454effda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87dede6-9425-45c8-93e5-8beceae4547d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fe4251-bd35-4451-ab62-514194cc1e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb2a255b-f158-46b0-95d7-1681b26fd936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540955bb-c3e7-4d0d-8622-8ad31752d224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f26db85-1adc-492e-81b3-e9c053e61999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3949ae-339a-4b69-9645-e3592d680c9a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67742d48-9caa-439a-8bfe-9f7511083c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e673c1e-e916-4b15-87e9-ee20dbb756d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b57d4c-ad60-4c43-b3b4-0ddcd1b9f54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88dc75e-9f88-4f97-9c1c-e9458aa26b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8f3b19-0a24-49c8-a35b-65048ae03b02",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9bd8f8-e66f-4756-ade4-2554f1587261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a05cf09-57e9-4d17-9366-895aa1663a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7617bdda-fa0e-45f0-85e4-1511a7ab335c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b607234-8da9-4b6c-b6cd-746d25d8f381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcc1c0f-b08a-4966-ad93-07bc34709717",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5584f816-f1de-4b91-b691-9d5c9826a92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00612cb8-2f87-4504-8df3-587122f639f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161a1892-bd7d-49e7-a6f0-a00c49b004ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b703008-e390-4c95-b084-c2f67a798124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1bc260-aa0a-4a45-bfd0-484a2765f9d8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bba98f2-4e20-402f-bed6-f84c788199df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3249562e-e916-4802-afbd-e00ba5b590ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc414e76-0c34-42a6-8450-af75f112a870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4370221-4c04-413f-ae10-bc533e890507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95abafb2-2192-41e3-9fa6-08e6c0985545",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ca809-18f2-4444-928d-8170b6af6489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c954a084-f62a-4c43-920a-9aed56a01d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376c52a6-5073-45c9-88c1-ae16d0ac3dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3256118-0dab-4884-b5fc-cc6ea562d903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0515aeeb-8930-452b-b70d-6326d0aa5529",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa533fc-8044-493a-abf8-57bc6df3fe04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c65408-c66c-4fda-9b29-e2ea7a42562c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6caaef-dfb1-47ce-b5d1-01fc6c0022fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850c92dd-3558-4c9b-8b6b-ebe6688d08d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3109060-176e-42b7-8636-bc1a415044a9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cafce2-f5a0-4d74-9f78-4f620a6b192b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03fac83-c229-443b-a4cf-f40fe0b2e5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc8a0f-607e-47b4-8747-518f43a13303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5b99e4-d2a8-49d7-810a-808fac088938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aec7c80-2c98-43fd-8f18-7fbabd1cc5a2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a4c4e-ece4-4192-92b5-7070b7cc6ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518fa4cf-3dd9-41d0-9fdf-16d4592d60ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9634ac3-0e55-4685-ab69-17a3794bfad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26543f48-213d-40b9-9602-9a0e5fb57e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb49ac37-1666-4212-ad27-ea924df07996",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87e6980-4ef2-419b-ae91-4e73d5d86d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2be01ad-f88d-4ae8-8d4a-ab57b4352492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52265fdf-21dd-4160-bfea-35f9f18bfbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3547fe14-8373-4ef9-ace3-e6cb8704a1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dafdd9-53e5-444c-af71-1cc0df2fe016",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be26e279-31d8-4bf9-85aa-cbfbc7e6b235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05069174-804b-407f-8b78-ffa1380eac3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c494c10-d681-4255-8f3e-f2152c02ed6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb655acc-7e5a-42ae-b4e8-5020bea9a59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae9bcab-f4cf-4034-bc65-6019a3f3a3f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c1a0bf-8b34-4208-8294-e7617b12b71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194ecc70-8d00-4dba-999b-e14e7400b7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b1e486-cf0a-495f-8b06-e7d1b597073b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0985f1-7265-4059-abef-5d30d99fdec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b5d2d9-6ba1-4c89-b128-b33c4d8c42d3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de8beb3-4daf-4138-b001-6866ac53e491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902ecc03-d303-441c-9973-a5755beb6bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af652480-127c-42f3-ba5e-5b8b0a0f79f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e39c99-fa71-4b6c-9287-2179f838c630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bef5de-e105-48bd-95e9-0c73b080d765",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5ef7e1-6be8-45a3-84c9-c6fe0addc178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e555f13-5117-4b07-aec4-46136f922466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975caca0-b79e-471a-abe2-3f77eba1d95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba206e89-8e28-4be4-8a00-6be1218dada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daeed839-c4c0-4ebe-a720-a18b150d29ae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc752c1f-c292-4e68-8528-c0db62acc301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6be3655-8338-47ef-806a-ac035e405a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54a753d-627d-4914-9907-0ca7c75bcb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c7be30-d418-4a29-90b6-25be9bc4162a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d8bf66-3802-4cc9-83de-13af6d70f3f5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5bccd0-7648-46d5-a3a0-7340a69bd94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892415ec-1987-458a-aec3-b6a3b8c7f186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef1a1cf-d1f1-48a1-bba0-6e8b4d7d9430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bed58e-c44d-4b0c-aac7-c647b760c870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247fd16f-c46e-4707-a4b7-ccb602aa6137",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1868b29-969b-4144-867b-70f46a3cff71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d62f159-1190-40e3-a022-ca51f116cd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c47149-ed3a-403a-872f-b5f79e8ffd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066aab4a-54ac-4b27-9bd4-fb9bcdf54f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f93f52-6988-4aad-b511-c9fd255aee92",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccb7da9-0983-4b83-89c8-c475487cabc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda6b807-1289-42fd-89eb-ac43e23f3056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b619470-5c90-4238-a3c8-c31c9bc3d39c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db321860-da32-4aff-ae45-5579caed6549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d74f5b2-1284-4a1a-8ba0-55a2ff0988dd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab48b7b-43bf-406b-8355-0ca6deff18f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2fdefa2-efd8-43ac-a063-185764d7d190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd65ba85-8cc1-4247-afee-178f783dfa72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bf77dd-1bd2-4328-a66e-133fb5f99da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bed8946-7eb2-4049-85bd-686f75422d3c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6a94d5-255f-4b93-8dc2-7260eca8e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9017d9d7-fbe1-4cea-8171-a80bc045619f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ffd568-278f-40e1-9303-c0a4aa1cd340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bc0b30-feb1-43be-99e0-118122425732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244809b0-3a05-4d84-8f51-c16defc26518",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac251301-6149-4bcf-b9a9-d7257097e825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c041f125-27f1-4ac6-9408-402d70f17c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77723c37-fcee-44c6-a4e9-c90fe4cd0177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd66f92b-580c-40b9-99f2-ffe635c78fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8a589d-2b8b-45da-8fcc-ce2825e4afa1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d7e920-ea66-4709-8031-c1b18b1cd3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bffbe8d-ee89-464f-aba6-be691c308455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10727cf1-6c30-4e3a-9b09-395f94bab289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028a9080-e1b3-424d-89c2-699d37bb2aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb69fd3-f74c-4619-b04e-f4d1efd660cd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3023b6-32eb-483d-9e8e-80dff1b39ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c364d9-baba-4c51-8e0d-2783fb36b437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6250155f-2ccb-4626-8ff5-a4aa7fec2d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e50720-7eb9-4a34-9155-fd93dce8db5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b2563d-5e58-4df0-8601-bedf34ee082f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3ce865-5386-4154-8432-53259a0c749e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8c9b02-f9e1-4e84-979a-da360c77f2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e5ce1e-0758-4eb0-bb01-e953a4f0218c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877477ea-21e9-4ec1-8d11-b8132c3a9768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b52dd87-6d45-4d8e-9e98-b96cec9f0c54",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27232018-f9b4-4f7a-86af-890cd3d460d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb545ae7-e8d1-4c33-9ff9-689d16ce325d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44453a17-dcba-40ea-9cb2-b22a50f88c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bc1561-b89d-4759-b301-2438608426db"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c29899e-9d16-49ec-a51a-da5f37d97c01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46e287fe-a1f9-4bbe-be4b-176ae47d692f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05fdac82-5221-4ca0-9b36-7fd3412fcebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ae47daa-7f37-4d97-85e8-570eb149a29e"
                    }
                  }
                ]
              },
              {
                "id": "319092e8-0891-4f5c-bb84-3ed7995db4dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c6bbe83-d04d-45e0-93a4-3f293ab13da2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4436b8-6924-43db-bab3-22832e2a72a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "96019a25-3f35-446a-91c0-a76141057c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799333fa-c695-4d80-ae9c-9212fda16762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25c0e385-e61a-448f-9e03-b03b9fadc452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "816faa90-af36-4920-8103-f595732d2630",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91c1e47c-f245-45d4-bfa3-53f095e3e387"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6115e5a9-aff5-4430-b2ec-9315dadb59bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ecdc212-5661-442e-8d71-f83fb07d20f3"
                    }
                  }
                ]
              },
              {
                "id": "b24dfb48-4027-46a6-b5bb-c799373c7727",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ba439903-f9d1-491e-88cc-ec5d7dd372e9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a66c43-b3e1-4bfa-a0ed-5b73a7ce3654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d8de8299-27cd-4779-bd2b-fdbde56f9749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31270dbd-cc12-498d-853f-7072c9fe675a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0382a2c-a26b-4672-a1c4-5bc687ae0f43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "61a1de57-231c-4c8f-94c6-82eb09658873",
            "name": "Positive Testing",
            "item": [
              {
                "id": "711cc039-201e-40e7-8316-23a8d2fb5878",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "449fbc52-a5f1-411e-adbf-d42c4257b91e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65e6cea5-1e65-4b2e-99f1-ad5f8c041b47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39ab99ad-c77a-4d6c-80ca-36ba440736c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "589b5d95-5803-46c2-ba5a-153d852781bc"
                    }
                  }
                ]
              },
              {
                "id": "2f1f1a1e-2c58-4903-ac2e-308525120526",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5179b0ce-1027-4da8-a872-a3328abb8ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a0836aac-3f17-450f-90f8-8b1261964c8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ee1b323-d9a9-48dd-af8f-5190f6a939bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31e87f66-4a28-45c4-9450-d3931d9926ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b3b5214-6119-4280-ae62-a04f39f53e71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "39df32fa-196d-4f8b-8aae-ac6075f75f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16c36ef6-1ed1-4f6a-b643-d64d6d4488c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aef5bf06-5050-451b-aca8-a291a343ea16"
            }
          }
        ]
      },
      {
        "id": "fa3fc529-2412-498c-82e8-baeb57652e32",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "deabd7e8-7c75-4ca3-bc18-8190c6d60d4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3eb6f1e-f146-49f6-9b20-2dc19705c3f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94fddcc5-0f05-41eb-ac85-7bd393ea0dd4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cb224c-9476-4111-b123-22c28c6d7219",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d53c4376-a98a-48b2-8719-50f26f46cd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5bc89d-02db-4ccc-b401-cf159941f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "687c5176-8a58-4cfb-91d5-4d018444f5c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90f92232-a333-4db4-b627-578e983b4837",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0092dc3b-088a-4b42-a2b3-d269488b2131"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56d2291-6d0b-46ce-9daa-39af7533de63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e0778b7-f242-45d9-bb4a-c530eed3e36a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88608038-9a72-491b-83b3-bf97c09aef95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4cd5de81-7c5b-4287-952a-6b2756ea8ee1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "502ff046-d6ce-4a99-82ba-65ce1a480d3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05d84dc5-398b-47bb-96c7-200486938ed7"
            }
          }
        ]
      },
      {
        "id": "a15da53d-4ede-4a1f-b76e-011863976520",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1c87d3a2-c915-4e68-8bf9-d55b01d4ea64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72edc227-5def-4802-80c9-143b320d0d38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38bbb8da-90da-4b92-a50d-9039073e4ed4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b0711-eb37-42cc-9da1-adea860442eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b837fe6-56b1-4036-a4b6-41e03ffe6258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1be4089-a49d-40ff-bae7-19f785842209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04316319-12b8-425d-955e-69c13f0f163a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f6048e9-aa8f-49ff-a5f8-2cab82bbf8f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54cbb8d8-b04d-4355-b8e9-438acb8e794a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a18bbe6d-10f9-4f5a-b752-a5d42c3957fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a62e2155-e4cb-4d35-800c-4380e28caba4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59dcc55b-c56c-4984-ac3e-f465bf8fdca4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ae97457-f470-4fe4-a3cf-8e79b57b74ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97d9ad1c-76e6-4a77-b92e-72c79c382cff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c34ad4f1-6ada-4075-888f-b5ff38e697a6"
            }
          }
        ]
      },
      {
        "id": "2d6e77d0-c85e-4d3a-a2dd-8f3fa31326d8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4d1a10bf-0ddf-484c-ad6e-ed3d83d9c057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f667f3cd-e1b9-4790-b519-ad9c0a691c33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "068e0149-69bd-460b-b39f-4b0afbf64006",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b51dd5f-4bb0-49c0-9f00-801c29128f58",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d7ea59-e3d9-4637-882a-cad3afbebe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11f1f5b-fb30-4d1e-aeec-54501016398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ff34295-e285-43e0-8f0f-d26a24940499"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4dd256d-af73-4deb-84bb-79e77faece01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83249753-af92-40ad-9f9f-59dbf0deb061"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8caa76d1-c610-489e-8e66-0e2d5bd56365",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83a89430-8fdb-4454-94d7-d05a078c80c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6649898-1017-40f8-b272-3891318d95a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e219c18-fcd7-4238-a09d-9f533e3f4991"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1089a44d-9551-40db-8a37-693ceb897a3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ab0a3e1-caf4-4a67-8657-211ec30f13e6"
            }
          }
        ]
      },
      {
        "id": "5ef1cbb9-d640-4928-98d9-fff50781471d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c493d003-83ff-452e-81f4-e4a00a5fa49f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "520dbc5c-175b-4ce9-8673-28cded776fbf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3c0fc1ee-c3b2-4d36-9326-c22650a9cb14",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3eae9c9-8d44-4987-a8b9-2fe3a61f931b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f76af92-9352-441b-8422-abca244e5a71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 317.4246031746033,
      "responseMin": 10,
      "responseMax": 7562,
      "responseSd": 1163.6886644663061,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718671130803,
      "completed": 1718671219239
    },
    "executions": [
      {
        "id": "0be29de1-6735-485f-b9fd-111c43f7c12d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6a1bbc1b-61f8-42af-8c70-bc6e7c420dde",
          "httpRequestId": "9a47be17-c324-4cc9-8eb0-c2af034d360a"
        },
        "item": {
          "id": "0be29de1-6735-485f-b9fd-111c43f7c12d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c1e994fc-bd9c-4403-8952-ee680dce040b",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "3c24e918-616d-41a2-93c2-1f550b073014",
        "cursor": {
          "ref": "ef79033e-bff2-4b81-bba3-51cf3ac4f1de",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1aec94cc-4301-475c-9364-22b6a3ef5894"
        },
        "item": {
          "id": "3c24e918-616d-41a2-93c2-1f550b073014",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0b47e8d4-34bc-4135-a7f1-f5c688af6db3",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2d3beaac-e431-42c4-9270-d347f56e1f42",
        "cursor": {
          "ref": "db7c39ec-d056-4085-b29b-803d42591b7c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4036f41e-ecc8-43b5-9f74-6ad5f5c020cd"
        },
        "item": {
          "id": "2d3beaac-e431-42c4-9270-d347f56e1f42",
          "name": "did_json"
        },
        "response": {
          "id": "2f424855-013a-4195-bcc7-b5ecabc8aca4",
          "status": "OK",
          "code": 200,
          "responseTime": 414,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f8756d-7817-48c0-87eb-df9111a8d034",
        "cursor": {
          "ref": "3283b5a5-bb1d-4bda-8fe7-56b90ca059cf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9abeb34-b383-4a3d-b33e-473ec05ce756"
        },
        "item": {
          "id": "35f8756d-7817-48c0-87eb-df9111a8d034",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7387f79-6d9d-4be6-9ba0-1448b607ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2333,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f8756d-7817-48c0-87eb-df9111a8d034",
        "cursor": {
          "ref": "3283b5a5-bb1d-4bda-8fe7-56b90ca059cf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9abeb34-b383-4a3d-b33e-473ec05ce756"
        },
        "item": {
          "id": "35f8756d-7817-48c0-87eb-df9111a8d034",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7387f79-6d9d-4be6-9ba0-1448b607ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2333,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995f3087-fe10-440e-81a9-e0b993c7fce0",
        "cursor": {
          "ref": "5e3ced1e-b077-4ee3-9042-61b9a23f1c32",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4d0c0abd-e171-4931-9eca-fa030a3e878d"
        },
        "item": {
          "id": "995f3087-fe10-440e-81a9-e0b993c7fce0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c2b86c2a-4c0f-448b-986d-84a11fb93230",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2715,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea8ab65-b35a-4713-b864-dbe23d053308",
        "cursor": {
          "ref": "f39a3841-035d-4e8c-abe3-68deca8b8da5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0adea780-3c6d-4e98-af88-d85a0a3716f0"
        },
        "item": {
          "id": "eea8ab65-b35a-4713-b864-dbe23d053308",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7a12e139-2214-4ab0-8004-be1d7355676d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2053,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8970b1-bcdc-4925-ab6e-cbb1d85d6d46",
        "cursor": {
          "ref": "46c22194-3a95-4015-973e-3b787c18dd0d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ce650753-5b99-4b67-9d3c-ee267f674d1c"
        },
        "item": {
          "id": "7f8970b1-bcdc-4925-ab6e-cbb1d85d6d46",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6b339500-6404-4973-89c2-1255fbe0549a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92601a64-989f-40f2-b743-66efdd3e91a3",
        "cursor": {
          "ref": "04ed77fd-cac9-4789-933e-d5801e0e52fc",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "31c02fe8-a3ac-41a7-a73e-673b41e0db02"
        },
        "item": {
          "id": "92601a64-989f-40f2-b743-66efdd3e91a3",
          "name": "identifiers"
        },
        "response": {
          "id": "a48196e3-ac1f-40a5-a85c-b14a8745240b",
          "status": "OK",
          "code": 200,
          "responseTime": 2175,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d074693f-26a7-413d-8329-891b9fc3a2a5",
        "cursor": {
          "ref": "77faa918-9ba3-466b-910b-50c78b91ae64",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "45f2354a-7677-4c51-a6ca-dccb6b49db8b"
        },
        "item": {
          "id": "d074693f-26a7-413d-8329-891b9fc3a2a5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "44702749-be38-4e50-af33-c60df08c25f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e345ce-4642-4af5-a9e6-55a49a8979a7",
        "cursor": {
          "ref": "032739bb-4298-4077-908f-02fea1d2fd20",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "966b0b9e-0b7a-4d66-8061-b834b25dda9f"
        },
        "item": {
          "id": "33e345ce-4642-4af5-a9e6-55a49a8979a7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "98cdced9-5b4b-4b60-8631-6d351120bf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc4e3e4-f871-4f76-bf56-5f0a2bc893a1",
        "cursor": {
          "ref": "ade90669-f1d9-4a6b-aa87-2a329f0fd7be",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e94a195f-9de3-41ee-b94f-b1a4112dba5f"
        },
        "item": {
          "id": "8cc4e3e4-f871-4f76-bf56-5f0a2bc893a1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "31aac309-c345-4ff0-91dd-1679939fb8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20046a40-3b4c-4862-94cb-f964227c138e",
        "cursor": {
          "ref": "9c927aa7-413c-49f2-baa0-628117502aa6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8c41a9c4-b169-4892-812e-6c573395f556"
        },
        "item": {
          "id": "20046a40-3b4c-4862-94cb-f964227c138e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5c2225f1-cf5d-40cb-94d3-b9e88f83d805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8192df-bc04-47cc-acf0-644f6ffbe491",
        "cursor": {
          "ref": "22f56339-d907-44d7-b587-9179e843259e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8363e4b0-e5c5-4af3-b222-8b6c8ce70dff"
        },
        "item": {
          "id": "bb8192df-bc04-47cc-acf0-644f6ffbe491",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "50d18eb0-3eb8-496a-b548-bbe02f4e2291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8728cde8-497f-4d24-a0d2-5fa854f22c5f",
        "cursor": {
          "ref": "e9811f9b-f629-4457-be82-26a77bc7c1bc",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f111df9f-7b1b-4930-8a5f-5adec5d0afd6"
        },
        "item": {
          "id": "8728cde8-497f-4d24-a0d2-5fa854f22c5f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "284f0f3e-965c-4327-9aa1-342dd64a5553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7417b6a-adc0-43d7-bfd4-eaf2ec69e697",
        "cursor": {
          "ref": "a2941789-2a10-42ed-aedc-1245f4fe1457",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39d7e23e-7803-42b6-8bc9-5f6a33f0e7e2"
        },
        "item": {
          "id": "a7417b6a-adc0-43d7-bfd4-eaf2ec69e697",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "036b62dc-454a-4c79-8086-2f505ee3e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149f4b6f-6276-4d0a-bac5-a602d7155500",
        "cursor": {
          "ref": "35b9fa8e-a87b-49c5-94e2-79c6a466c0a0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cba573bf-f787-4002-8fc1-0246453959ac"
        },
        "item": {
          "id": "149f4b6f-6276-4d0a-bac5-a602d7155500",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6a0fd72c-8c48-416a-9f1a-e81624fe9d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d524a8-a40a-4e70-a45a-7189d0c0a13c",
        "cursor": {
          "ref": "2befc9e7-ade6-4bbc-884d-06818cc0c03b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b366f943-2c93-4ede-aa17-72ae067f41aa"
        },
        "item": {
          "id": "a0d524a8-a40a-4e70-a45a-7189d0c0a13c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b4271841-6ea6-4956-8cc9-ebc21daaf32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90b5f21-6b86-48bb-9694-b029b500b9ed",
        "cursor": {
          "ref": "f6c7ec5f-1bcd-4b89-a421-469f1073a3f1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "63722b65-0487-4dce-88b6-f262248a8a0f"
        },
        "item": {
          "id": "a90b5f21-6b86-48bb-9694-b029b500b9ed",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "47c981e5-93e4-4ec8-91b6-3fd6df14959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b587b-319a-4f2d-ba2a-1f475224f24a",
        "cursor": {
          "ref": "a3cfd016-4b92-4501-aa7f-9d1efc9edfa1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fbe5c949-d2ae-4eb0-af1f-32a49e0d3089"
        },
        "item": {
          "id": "b38b587b-319a-4f2d-ba2a-1f475224f24a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "98e4f328-b421-4d1a-8e2b-b3e55e2c683c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6342d735-c635-43ff-b6f7-2e2e4c353095",
        "cursor": {
          "ref": "70894169-5455-42ed-a69c-3da89746d28c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "67168c2f-bc84-43c3-a16a-fda3ecc152f2"
        },
        "item": {
          "id": "6342d735-c635-43ff-b6f7-2e2e4c353095",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aace9cb8-3b9c-47ea-bea0-2ffe8bbdbcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7987a90f-5a03-4158-8f87-4497f030fc73",
        "cursor": {
          "ref": "4b8e2bee-de43-48f7-8afc-35560023c401",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2d78e67c-5cd7-4d2c-8120-9d99b461bb31"
        },
        "item": {
          "id": "7987a90f-5a03-4158-8f87-4497f030fc73",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4070935b-d4c2-443e-ba49-fb575644a2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecccb56-a825-41cc-ba2d-3680b95f9550",
        "cursor": {
          "ref": "98b8f1c3-b588-4a71-8c5c-43acfa002ffc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa84e606-f2f5-4b4f-b95b-1243632c4380"
        },
        "item": {
          "id": "7ecccb56-a825-41cc-ba2d-3680b95f9550",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b0ef7d7c-1a8a-493c-a769-e73abfe87ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afa6911-f348-4b16-9160-376c6274e86c",
        "cursor": {
          "ref": "0f00215f-1617-4aac-ad71-54e2fc833b5d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa3f22bc-fbd2-48f3-92bf-7fb2d40870dd"
        },
        "item": {
          "id": "4afa6911-f348-4b16-9160-376c6274e86c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c199e6d3-ecb9-4c64-95e6-d96719582da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6406f6d9-36bf-4a7e-9647-5b60fb846bf1",
        "cursor": {
          "ref": "7c039967-cbfe-4f2f-a4e6-ae85c569ef43",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "629ac905-3205-47ae-9727-5159c9b49ee0"
        },
        "item": {
          "id": "6406f6d9-36bf-4a7e-9647-5b60fb846bf1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90340f35-8f4c-4f3a-accb-d43a3bb4add3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079a8f77-823e-44a9-8f01-daf7c85947ac",
        "cursor": {
          "ref": "5704bf09-3af8-4c62-a6cc-a5571579b931",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "49c8969b-9e51-4188-9279-58f4e77422cf"
        },
        "item": {
          "id": "079a8f77-823e-44a9-8f01-daf7c85947ac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f2172a3-ee83-48ac-b669-d3e7739d4afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dca4634-2517-4d79-a810-1fb9d0999310",
        "cursor": {
          "ref": "db8defe4-2e3b-4dcc-bfe9-aa459256825e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "43b32be9-7d41-417d-84b0-7724cb258da6"
        },
        "item": {
          "id": "0dca4634-2517-4d79-a810-1fb9d0999310",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7a9d3c05-1d58-4618-9142-6419916746ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fac8279-44a0-4338-9e06-b1f180e4f6e7",
        "cursor": {
          "ref": "228bf7c7-82e0-4560-9c41-4e49c6bed6ca",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "02f87497-433d-4200-a095-d372ed280749"
        },
        "item": {
          "id": "7fac8279-44a0-4338-9e06-b1f180e4f6e7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "187a0203-769d-48e4-847e-386e4dd32ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eef85eb-8a48-4564-a4c4-a1c0313a0b8c",
        "cursor": {
          "ref": "9caf2feb-f560-42b8-bfd2-560422b87491",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "75eedc48-e7a0-42d0-96f2-d137785bd227"
        },
        "item": {
          "id": "4eef85eb-8a48-4564-a4c4-a1c0313a0b8c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c00ee303-a84f-45fe-ad3f-0dd73b083827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abc0a7b-14b8-493f-ab44-d8f56283bd70",
        "cursor": {
          "ref": "6eb869e6-411c-4806-835d-78efcb633c3a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4914c36c-8d9e-416e-8d89-f361f3c0deaa"
        },
        "item": {
          "id": "6abc0a7b-14b8-493f-ab44-d8f56283bd70",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dab1e850-982c-489d-9f04-a26da163d0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05876bbc-324d-4430-9e1c-0c200411be29",
        "cursor": {
          "ref": "0028bd8c-1046-4850-a06d-39ae33b4e7a0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2990c883-fbc6-4844-921d-1bff93c8017b"
        },
        "item": {
          "id": "05876bbc-324d-4430-9e1c-0c200411be29",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bd8e258c-9fac-47e0-862f-88d322a79477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d8df75-d883-4d5f-b303-911861b79c86",
        "cursor": {
          "ref": "60beffba-46ee-4c5a-ad58-de410f6c671e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "def1e7bf-d212-4777-ae66-43747b16c40f"
        },
        "item": {
          "id": "f5d8df75-d883-4d5f-b303-911861b79c86",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "489b243c-cacd-4b92-8094-db00d303ffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a857fb0a-313c-4519-b0c2-6d85df27adbf",
        "cursor": {
          "ref": "6d12f72d-68b9-4c8a-9b49-2b9750b6b94a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "23472410-2ace-4738-a386-2cb142695ef0"
        },
        "item": {
          "id": "a857fb0a-313c-4519-b0c2-6d85df27adbf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7faaa533-2ac8-4773-b508-b043551a0a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382e21cd-7bb7-404d-9fa0-ac8262d7690a",
        "cursor": {
          "ref": "d133cb27-7a60-4762-b239-4e8ad7578c08",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eaf897bc-b699-49aa-a642-17d67aa1748b"
        },
        "item": {
          "id": "382e21cd-7bb7-404d-9fa0-ac8262d7690a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "67d3e2d8-3d23-4b23-a265-e03e128e0c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8007e87c-4f8b-4246-834d-f996737de383",
        "cursor": {
          "ref": "ae26318d-0c5f-4773-835b-3454846feabe",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "196fbcce-51c3-470a-9d82-a14319f533d9"
        },
        "item": {
          "id": "8007e87c-4f8b-4246-834d-f996737de383",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9b41bb14-66df-466f-b83f-cf2219cad5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8256e495-1e43-4861-acad-0e82ac90ee80",
        "cursor": {
          "ref": "a4488240-3f4e-43b2-9d18-0d82a5e708e6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dc1c31e1-a0a0-4607-b319-ec0c336c84d5"
        },
        "item": {
          "id": "8256e495-1e43-4861-acad-0e82ac90ee80",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "984ce6a1-ff29-4419-a4c6-c961e8fb3237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d98df69-6a53-4ad7-a4b6-faa3fa9f909b",
        "cursor": {
          "ref": "adb6e6ec-a494-4181-bf24-b30bef425ec2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c509c02-0773-4630-8855-8c9afb874da2"
        },
        "item": {
          "id": "3d98df69-6a53-4ad7-a4b6-faa3fa9f909b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "46dfd3c1-335e-4dc2-a603-a845e5790a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84997c68-5aa0-4f9e-9d6a-7f92a0019ef2",
        "cursor": {
          "ref": "8887c1fa-7f20-41b9-9dfd-e04dcff59ae3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4637e200-27af-45dd-befd-04c25ea52d2c"
        },
        "item": {
          "id": "84997c68-5aa0-4f9e-9d6a-7f92a0019ef2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f5b94951-91dd-4880-9510-6ee8a27f5bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9487823a-e634-45a4-bbac-4c282fde8f91",
        "cursor": {
          "ref": "8e42e771-00d6-46ae-9adf-bb4178b5c78e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f93bc9ae-7278-427f-bd68-cc3b5fa5c574"
        },
        "item": {
          "id": "9487823a-e634-45a4-bbac-4c282fde8f91",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "17bdb652-3946-4c60-b1a6-3c8b1b9b74b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47d98d4-f659-4b25-81da-9bd95d9a07ad",
        "cursor": {
          "ref": "e12e6874-af21-424c-9ab8-bbad0a12eb68",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8d0b7fab-3017-4735-a954-3fc3a7863b06"
        },
        "item": {
          "id": "e47d98d4-f659-4b25-81da-9bd95d9a07ad",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f40317cf-e633-4a84-a1dd-b592ea8814ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b03fcd8-8ef4-4cb1-9b23-f65d0e3b587b",
        "cursor": {
          "ref": "c6fa58c0-e46f-4a68-9815-87ddc2998ca3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2715f040-65fb-4fd5-9af4-7420e4ef1cf8"
        },
        "item": {
          "id": "1b03fcd8-8ef4-4cb1-9b23-f65d0e3b587b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "faa28942-a049-4405-bdfe-146f077dd882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72931723-3284-4b02-8034-ca75d3b2bcc1",
        "cursor": {
          "ref": "b5bc2f5e-19eb-48a6-a317-bc2acea25131",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b8bf27e0-56a0-4d06-bb24-a25e201e4695"
        },
        "item": {
          "id": "72931723-3284-4b02-8034-ca75d3b2bcc1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e4f13e90-1e23-458b-a985-a045eae4bb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b17ea5c-eb83-4f55-a75b-d024de86a736",
        "cursor": {
          "ref": "b1b2a284-b958-46c6-a776-23b2f48c7cbd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "74999a3f-d7e8-4d6e-89cf-b51a6f50a936"
        },
        "item": {
          "id": "4b17ea5c-eb83-4f55-a75b-d024de86a736",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6477ed92-18cb-49b6-bc68-1cd017600515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4683adb-7048-4246-820e-4401b64bdce2",
        "cursor": {
          "ref": "d53d0a91-7773-4c10-85b2-754b64de85a8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7003ab75-e6ca-47f6-baa1-88d0b0acf43a"
        },
        "item": {
          "id": "f4683adb-7048-4246-820e-4401b64bdce2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6840b449-20d2-4f65-b112-e809f9c6aee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd3b01b-6dff-4912-b05d-e15f8a9a1148",
        "cursor": {
          "ref": "8507b429-bedc-4c9b-b605-e05070407e27",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fc0d6eea-4926-4502-b517-871b15dbc526"
        },
        "item": {
          "id": "2fd3b01b-6dff-4912-b05d-e15f8a9a1148",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1d070373-eeab-4ea6-88d8-5140c0d432fd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c230d36c-24c5-4eaf-bdbd-190605bcf8a2",
        "cursor": {
          "ref": "62c2d6c5-094d-46b5-b22f-007b6bb8db94",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a39b3115-fd98-491d-a803-3bd3516ab80d"
        },
        "item": {
          "id": "c230d36c-24c5-4eaf-bdbd-190605bcf8a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "39bbedc7-f888-4df5-bbc2-fe85f218af2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6772be99-ae34-4899-af0e-481b339be50c",
        "cursor": {
          "ref": "78d57662-2842-41f3-b1e5-6654102b131e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6c14fc38-0de8-4368-8dd5-182447906202"
        },
        "item": {
          "id": "6772be99-ae34-4899-af0e-481b339be50c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "87216904-0fa5-41b8-ac0a-2dde6ded861f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecd16ee-016c-44a6-aa82-efe279510cb1",
        "cursor": {
          "ref": "44c122b6-fd8b-43aa-976a-3cb04a70e2b2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4295dfa8-5b19-4e9e-b6f7-22225ecd38ad"
        },
        "item": {
          "id": "9ecd16ee-016c-44a6-aa82-efe279510cb1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f146cb23-10bd-4378-b6a2-ab4d5ebb7d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d87970-f0b4-4786-9c24-034ded6ca02a",
        "cursor": {
          "ref": "e4c59b5a-4e14-4475-9ba7-55e1a4fcf2d9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6f9881b3-8c45-4048-8761-989938a425ca"
        },
        "item": {
          "id": "81d87970-f0b4-4786-9c24-034ded6ca02a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ae39c0f9-b79d-466e-a84c-891c7b1c47bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791008f7-4c31-4c1b-8817-f34e31bd2ef7",
        "cursor": {
          "ref": "b560dac2-89e5-4c42-af60-e401d7050980",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7aa94dce-fc50-42d3-ba6a-3ab80ec9e34b"
        },
        "item": {
          "id": "791008f7-4c31-4c1b-8817-f34e31bd2ef7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a3a48a7d-80fb-4a18-8c60-8188201488d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc227903-aec6-4429-83f1-d762c3d3839d",
        "cursor": {
          "ref": "f023651e-ed80-469d-9104-b7d320b82047",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b33bcb2a-b7b5-47fd-a413-1e4ae3271b77"
        },
        "item": {
          "id": "dc227903-aec6-4429-83f1-d762c3d3839d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dab12ca1-e07a-4b2b-b891-8506c8a3cd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e8aaad-431e-43ee-b1e2-d49a164c1e72",
        "cursor": {
          "ref": "c382c1f9-e711-4bc5-933c-fb89336ff3ae",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9b49659a-2894-4af5-b44f-e5a88f259773"
        },
        "item": {
          "id": "71e8aaad-431e-43ee-b1e2-d49a164c1e72",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "22166280-f398-42fb-91c8-a71e17d2e64e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0807f531-370c-4352-88b9-cbe21c95fa00",
        "cursor": {
          "ref": "6a0f00aa-efea-45b1-bc79-6d0e8a73ca10",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4970ed6e-9539-4edb-8027-c3a4ad8b8da7"
        },
        "item": {
          "id": "0807f531-370c-4352-88b9-cbe21c95fa00",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fcbe74a1-f12a-4b81-be89-a0646929997e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94713a5-91ce-4643-9df9-d131da3039dc",
        "cursor": {
          "ref": "73ac7f40-9341-4340-9168-7d451f163784",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "47572c70-4598-46f2-a776-c5cb3890c1c8"
        },
        "item": {
          "id": "a94713a5-91ce-4643-9df9-d131da3039dc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "162808bf-77f5-4ee3-a95f-c13f9b4a3de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d541c-14c0-4667-82d9-d6fd09bbed7e",
        "cursor": {
          "ref": "433e85d1-6392-44a2-bef5-1af301f74554",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "429e6874-a9c4-4b09-9420-3b55403cfb22"
        },
        "item": {
          "id": "fa6d541c-14c0-4667-82d9-d6fd09bbed7e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2b26c900-253a-4868-acd3-a735d30e7a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb4b7f1-2361-486c-8f56-b3edf3788a87",
        "cursor": {
          "ref": "5c35da3a-f721-49bf-8529-15407da32e40",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "50c9379c-486d-482f-b0a1-67c0ff1e371a"
        },
        "item": {
          "id": "eeb4b7f1-2361-486c-8f56-b3edf3788a87",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fd9fd767-f038-4ce8-873e-bfe1211f9b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff57842-e9bf-403c-8685-2b379794f200",
        "cursor": {
          "ref": "4e2fa437-db3f-46af-a67e-e0aaba0b4e47",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c7ac69a8-6d37-458e-8bc6-71638a7b8572"
        },
        "item": {
          "id": "eff57842-e9bf-403c-8685-2b379794f200",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36575e9c-744e-4df6-b24c-f99971ecceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d404c1e-7303-40a9-8917-36fa8f8188a6",
        "cursor": {
          "ref": "ea8a20e7-7d90-4afc-8fc3-aeda828f7d1a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7bbf67d5-3322-4ce1-b7e2-fb090bd2922c"
        },
        "item": {
          "id": "2d404c1e-7303-40a9-8917-36fa8f8188a6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9fdbf929-9aff-42da-8248-d4f44939e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9db19a-be51-478a-bf64-66a4e126043c",
        "cursor": {
          "ref": "a7a74054-f754-496a-892a-8d5284586b02",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8e41aca1-83bf-4907-bd63-031bae945024"
        },
        "item": {
          "id": "7a9db19a-be51-478a-bf64-66a4e126043c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a46da1e4-eb84-415f-8cbd-a2caca8ff782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e36168-5f1a-40f7-bacb-c6edb885452b",
        "cursor": {
          "ref": "7063e153-e561-4e8c-9cb6-3edb665bd2d1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "864c7faf-9abf-4237-aaf4-8b784d094a73"
        },
        "item": {
          "id": "88e36168-5f1a-40f7-bacb-c6edb885452b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "16882df0-1503-44b5-a801-964197b6a263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a4404-47e0-4959-94e2-7dd98eb6f71b",
        "cursor": {
          "ref": "78036786-5c36-4773-ab68-ee22e2c87ee8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ec47a98f-0627-4992-8a46-c402028e0f6d"
        },
        "item": {
          "id": "4e1a4404-47e0-4959-94e2-7dd98eb6f71b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7db96c5d-9ac4-4715-90f6-9c24fe1a23e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d4616-7fe8-4db2-be8b-16f824631221",
        "cursor": {
          "ref": "cca66de2-ad01-4293-97f5-8e223f8d8e09",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b82849d8-14d9-4ab7-befc-8310a9fda3fd"
        },
        "item": {
          "id": "070d4616-7fe8-4db2-be8b-16f824631221",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9fcea548-46d8-4c17-8b8d-ba4516a44ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1eb593-b724-4af1-bcbb-d77b2d66a688",
        "cursor": {
          "ref": "052c75bf-ea79-492a-8a32-487a7a4ba778",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3095d5ca-ed65-490d-8dc3-7b30a07f78a8"
        },
        "item": {
          "id": "bb1eb593-b724-4af1-bcbb-d77b2d66a688",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1ed1e369-8d72-4a4a-90e7-4196450dca02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6215c5ca-ac27-43c7-afc5-aa02eba5860e",
        "cursor": {
          "ref": "3c79a4e1-ef21-4498-9d31-4a1c3d007b9a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e055f552-0abf-4d94-acc9-cfb15303861a"
        },
        "item": {
          "id": "6215c5ca-ac27-43c7-afc5-aa02eba5860e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f85331d-03a3-44e5-89a6-2301fc6e5dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b22d89-d78f-4258-940b-738ee85b687c",
        "cursor": {
          "ref": "85a3a2b2-5193-4fbb-94f8-c91f2e109dff",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9f537a24-8612-4267-9260-27c94fe6178b"
        },
        "item": {
          "id": "41b22d89-d78f-4258-940b-738ee85b687c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b1b0bf2b-31b5-4d0e-b47b-a9acf8234333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8353e84-56b0-43d1-b497-d691b5d0a99e",
        "cursor": {
          "ref": "e85747fc-3a87-4105-89d7-160f9559c155",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3e8d604-7d73-45b3-b8d5-fb446fed8a23"
        },
        "item": {
          "id": "e8353e84-56b0-43d1-b497-d691b5d0a99e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "91c777a8-403a-4fef-b09a-ea94b1c65d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145a172f-0bdb-4b3b-bff9-4d83d1d92ef3",
        "cursor": {
          "ref": "9a8dff44-e39b-4889-8821-44c0f289a277",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e6a51c28-c5fa-402d-a2dc-2847b0d2c1b4"
        },
        "item": {
          "id": "145a172f-0bdb-4b3b-bff9-4d83d1d92ef3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "801159cb-a0e5-45ec-abe9-e4c61dbf9bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372e5816-40e5-49f6-b80c-e7b733f5659b",
        "cursor": {
          "ref": "0da920c6-83c9-4175-8163-c76732392f7a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "53b13783-9459-4923-ae6b-7225e66a3c0c"
        },
        "item": {
          "id": "372e5816-40e5-49f6-b80c-e7b733f5659b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a54d294e-2eda-4e50-aa40-e3cb44cb1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7939cc9-b487-4ea1-b7e6-68a57c27f4d6",
        "cursor": {
          "ref": "9dc71d10-874d-418d-8517-5a65587919ad",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "37e55747-aef3-4882-82f3-5dd6cc3598f2"
        },
        "item": {
          "id": "c7939cc9-b487-4ea1-b7e6-68a57c27f4d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd177c0c-c6c1-4cc3-91cf-00d35321d722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d63624a-236b-4c65-8dbb-07f4fa7ab459",
        "cursor": {
          "ref": "3f4b5652-7cda-4ef7-b4fb-617ff27d9829",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d6ffdb44-30af-47bd-bf7d-efbd9a323d90"
        },
        "item": {
          "id": "8d63624a-236b-4c65-8dbb-07f4fa7ab459",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "664d812d-e4b6-4043-a5f1-e72b36457529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce66c47-f86e-4a54-81bd-9b9cb8bf34c0",
        "cursor": {
          "ref": "f26d3842-c181-4b73-921e-9e4119f535ac",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7a173ee9-e392-4ce5-a429-0b624b05d704"
        },
        "item": {
          "id": "fce66c47-f86e-4a54-81bd-9b9cb8bf34c0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5cfdbfc-cf20-4642-bcd3-66affcadfdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73406bba-433f-4157-a3cf-a654284b4c4d",
        "cursor": {
          "ref": "cc834b5b-1cd7-439c-9423-a3c870030b36",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d68348c6-ab0f-43ed-be7e-5c576a9b20d2"
        },
        "item": {
          "id": "73406bba-433f-4157-a3cf-a654284b4c4d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3629fa1d-6cd7-48b1-b3b2-4b6908741888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0f7e13-4117-4a05-92b2-66c98704534e",
        "cursor": {
          "ref": "5d2f3f9f-9a22-4778-a46e-e2dc844eec0a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d36f25b-0985-4488-8b48-60918bb4ee1d"
        },
        "item": {
          "id": "7f0f7e13-4117-4a05-92b2-66c98704534e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b0a6eed5-87ba-436a-9b89-ce168be0c1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e6ab99-2760-4a5c-8747-f49cc6bb3f96",
        "cursor": {
          "ref": "cedc609c-b4a1-471d-923c-1a3af47db45c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c2d04da-3677-42e3-b2f9-ba41513e8cfe"
        },
        "item": {
          "id": "28e6ab99-2760-4a5c-8747-f49cc6bb3f96",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ad505670-3c34-41bf-9bd8-f1cec22ec939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7904064f-e993-427d-b076-473661ad7e60",
        "cursor": {
          "ref": "f0900b77-e8ba-48e7-a967-fcb7bbc7690a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f34ec87c-fb50-45da-9080-d6a647908b00"
        },
        "item": {
          "id": "7904064f-e993-427d-b076-473661ad7e60",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "17d05f3d-aaa6-48d0-a2f1-2de405cf7ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbf160c-772b-4e64-a403-fcb312d1e0df",
        "cursor": {
          "ref": "ecaab033-2a6c-4f88-a30c-0751feb38c74",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4b4fa0c8-07dc-4bfa-8bea-8c31a3687ba1"
        },
        "item": {
          "id": "ebbf160c-772b-4e64-a403-fcb312d1e0df",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "28ec3130-ed79-40b8-9dcf-e2b9ae52f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013ec35-b6f5-44a5-a131-7ae19b0ad3f4",
        "cursor": {
          "ref": "c687b416-4ea8-4244-bbf9-7ffefbba9e99",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "310eaa5a-0c73-4951-a96e-1df40506ec7f"
        },
        "item": {
          "id": "3013ec35-b6f5-44a5-a131-7ae19b0ad3f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8beca190-87bb-4b40-984b-cafca9542953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f534e68c-cbe9-400b-bab2-3acc47f4fb6f",
        "cursor": {
          "ref": "db013084-9d95-42a4-87a1-9a976eebf66e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f8f95673-9450-4a78-ad8f-e89eedb9b655"
        },
        "item": {
          "id": "f534e68c-cbe9-400b-bab2-3acc47f4fb6f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9b4ce9b9-1df4-4369-8bab-df11186ed76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98402b7a-9804-4dea-a112-24bb5e371f99",
        "cursor": {
          "ref": "c9a51465-bb61-455b-b2f1-88095d0d39e0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6d317a88-978a-479a-822e-315fb47593a7"
        },
        "item": {
          "id": "98402b7a-9804-4dea-a112-24bb5e371f99",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ec74d86b-05f5-44fd-8a12-3c9903da9da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4954382b-3b98-4021-9361-bd93f4a42985",
        "cursor": {
          "ref": "d4b1879f-5768-4b24-8b9b-b29e557c14a6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cabc2d13-a616-4a26-8bc9-585c58a86cdf"
        },
        "item": {
          "id": "4954382b-3b98-4021-9361-bd93f4a42985",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e2c1a316-8946-4b45-a1e4-e835b87eb3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07115e2-23f6-410c-8464-557afd61d488",
        "cursor": {
          "ref": "b378060c-1e49-486d-a25b-5a7ea2dc00d9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f88e57d6-0632-4150-96c7-70773bee5d52"
        },
        "item": {
          "id": "d07115e2-23f6-410c-8464-557afd61d488",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1a2ef938-737a-48da-9276-767d4e2048b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee7678e-7170-4f7c-a211-f735fa50f0a3",
        "cursor": {
          "ref": "522fcb79-0867-463c-986f-6d2885e13991",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4e66cf31-57ea-46fe-af95-48493e306400"
        },
        "item": {
          "id": "4ee7678e-7170-4f7c-a211-f735fa50f0a3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0f5662f4-89d2-4f6a-b249-eefcd9def2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4671b50-84ef-49cf-aca6-d583fbd9931c",
        "cursor": {
          "ref": "5eee1afd-4d8d-4449-821c-69e14f649514",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "063784d5-306f-4f59-980e-f96087410bf6"
        },
        "item": {
          "id": "c4671b50-84ef-49cf-aca6-d583fbd9931c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2a784c0a-0fda-4f84-b329-a0354b1a4502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c276a4-ab67-4297-8336-133be5e10401",
        "cursor": {
          "ref": "98b1ec71-bbce-41b6-a00d-d4a5164d032f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3e0f353f-c712-4c4a-bec2-47b27bccb2ea"
        },
        "item": {
          "id": "48c276a4-ab67-4297-8336-133be5e10401",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b13ecd7c-ab41-4b7b-8449-6ac65c894793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c2a5f1-2480-48cf-93cd-e7c4b51e26e5",
        "cursor": {
          "ref": "0f02ac88-73c0-4d43-a62c-7f73beb330ba",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "15f67e4e-226a-4f78-98c0-e9f76b0ef110"
        },
        "item": {
          "id": "e0c2a5f1-2480-48cf-93cd-e7c4b51e26e5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "11c25e63-24db-4070-a9e5-84d459761c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da616f99-141b-4ec1-9e91-2ca1cbb680cc",
        "cursor": {
          "ref": "dfc91f9d-0f34-40bf-8dd8-e00e6e21113c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b6378422-7dd2-48a4-8c08-c46fb5d52e55"
        },
        "item": {
          "id": "da616f99-141b-4ec1-9e91-2ca1cbb680cc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b06e3499-89be-41f6-8c75-debf7452156e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706d8bdd-69c6-419f-b2ce-3d39577df500",
        "cursor": {
          "ref": "a66d5d03-b5d3-426c-abd1-97924b810528",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "264ba611-99f6-4ef9-97c8-3900e1a813b0"
        },
        "item": {
          "id": "706d8bdd-69c6-419f-b2ce-3d39577df500",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d1c81ddc-a98f-4e3f-af78-e35337251c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866d3bea-b0cb-4ce5-a077-d886f3bd9956",
        "cursor": {
          "ref": "78360823-83d9-45ca-85c8-e5231532262e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0439ccfd-816a-4571-aa4e-cff2594174b5"
        },
        "item": {
          "id": "866d3bea-b0cb-4ce5-a077-d886f3bd9956",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e835b556-bac9-4234-8d83-6bf644b6e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28435140-c056-4386-9b33-3235b9197031",
        "cursor": {
          "ref": "58514e53-5f5b-484c-a3dc-307419560a15",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8f74dd11-b430-4e84-8b40-34b74802ecd4"
        },
        "item": {
          "id": "28435140-c056-4386-9b33-3235b9197031",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "be0f1ed8-0626-481d-b69f-1903465ef471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f22b81-0203-4bea-b85d-c511e7899bc1",
        "cursor": {
          "ref": "ffd1a220-903e-4691-bdf7-089083a6626b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1e63226e-8360-4779-be3a-de82c288ddf9"
        },
        "item": {
          "id": "00f22b81-0203-4bea-b85d-c511e7899bc1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7b599c1-857f-4ffb-a057-7a8e23c822db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c49d5c-5f33-473a-9fde-15c98ef961f4",
        "cursor": {
          "ref": "9fc91b98-a55c-48c3-b513-3298b100e5ed",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9a164cd4-4b13-4ae1-9309-bfeb2b9eb21f"
        },
        "item": {
          "id": "27c49d5c-5f33-473a-9fde-15c98ef961f4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c97b0014-b39b-44ed-a871-1404dd0b3ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b4a4a-9079-4275-a79d-34ea462af205",
        "cursor": {
          "ref": "8df3ed7b-9c82-4a68-a7d4-edace354387a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a9b3b230-1165-4e75-bcdf-af12d40073da"
        },
        "item": {
          "id": "9e6b4a4a-9079-4275-a79d-34ea462af205",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f5f85e5e-636f-433e-bb13-1fcfe7529811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ffa0c5-46cc-4c5d-aeb4-51b8dbd47e15",
        "cursor": {
          "ref": "164c0327-2159-42ba-a931-56d993e46791",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b6b7125e-f29a-46cc-b433-cc7c68d8167e"
        },
        "item": {
          "id": "d6ffa0c5-46cc-4c5d-aeb4-51b8dbd47e15",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2e2de8de-bd7f-4905-832a-fd2f3c305ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ceae39-c41a-49e6-ba48-1e39725d01ac",
        "cursor": {
          "ref": "7f1e3877-91b9-4812-988e-c27c60139732",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "65e6eece-4f18-46fb-9829-7a9072ce6162"
        },
        "item": {
          "id": "79ceae39-c41a-49e6-ba48-1e39725d01ac",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e099b916-f187-4f4a-ac2d-4f2fe2de86dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586a9bb0-80b0-42d1-b0d5-d9f41c781c4f",
        "cursor": {
          "ref": "c84018d2-d5c3-4df5-96c6-ca663ee2427d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "46b22f20-523f-4c49-90ad-79ab8eed8318"
        },
        "item": {
          "id": "586a9bb0-80b0-42d1-b0d5-d9f41c781c4f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2a34be10-e554-4e13-ac0e-70b465181dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7589faa6-21e9-4286-bad4-eea0da87a660",
        "cursor": {
          "ref": "7a3875dc-9c62-4d02-b69a-5f1396f6603b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0b8ca5c6-295f-4c88-802c-55d56cb56a5c"
        },
        "item": {
          "id": "7589faa6-21e9-4286-bad4-eea0da87a660",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d59938cc-7f9c-4006-9a79-bbdc215b2381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fd707b-5897-410a-872f-6cc52a5768a3",
        "cursor": {
          "ref": "35c0a962-8861-48e3-9c68-758e8e8fbda5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "17d57c6a-ee88-440c-95f2-11e883dc3ff1"
        },
        "item": {
          "id": "a1fd707b-5897-410a-872f-6cc52a5768a3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dfea88e5-4d55-4ea2-acc6-75aa918b1aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c2955f-a38c-4ae4-90fd-97ca2979e22b",
        "cursor": {
          "ref": "6a268cf2-b527-4058-8513-a9c21281d4d3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5a591eed-7849-401c-bcb3-6c3f811ac31b"
        },
        "item": {
          "id": "99c2955f-a38c-4ae4-90fd-97ca2979e22b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3fd2443d-d25e-4fe0-842f-8ed0eb9e6739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc636940-1803-4e72-a385-0d7945ac8590",
        "cursor": {
          "ref": "7e6c4e7d-3589-448d-b7c9-a8d842fc82a4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d1d11926-6c74-466a-b734-3e3786cba2f6"
        },
        "item": {
          "id": "cc636940-1803-4e72-a385-0d7945ac8590",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0e94c64c-a09d-4af6-bec4-68cd7b2d4557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b123a706-377d-4010-8eaa-7bad67cebeb9",
        "cursor": {
          "ref": "4c8f09ec-361f-4c5f-8df3-08d10d72a40a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "509824eb-1904-403b-99e9-afb9d388d147"
        },
        "item": {
          "id": "b123a706-377d-4010-8eaa-7bad67cebeb9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d7fa516a-faa8-4774-a2db-3ca2ca973ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c046a0-ae2e-4c66-a133-46335d555882",
        "cursor": {
          "ref": "f7666bdd-69e9-41b4-9731-d1541efe8969",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "60ab0a8b-43b9-47c6-aef8-6ef941d1cc15"
        },
        "item": {
          "id": "74c046a0-ae2e-4c66-a133-46335d555882",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3ed781a6-7888-4841-9f14-a567940a30d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032fc7ac-073c-49ad-9c80-6fdaec66596f",
        "cursor": {
          "ref": "bc196471-18db-4688-86ed-b4c35b81620c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ba4a15b6-c646-4d54-b6b6-f58dc380bf7e"
        },
        "item": {
          "id": "032fc7ac-073c-49ad-9c80-6fdaec66596f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f2aaa8bc-8042-4200-ac0e-70bcac1d76ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c7220a-60e2-4e13-846a-e62b7febf826",
        "cursor": {
          "ref": "6302a6b1-f275-4f8f-a179-c9ae3f4780f2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "76bde775-d6b9-4e46-9983-b3ad95aab3bc"
        },
        "item": {
          "id": "81c7220a-60e2-4e13-846a-e62b7febf826",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f934393d-2a6f-4d51-aa63-81a859b3c43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ad29c175-5271-4857-8527-70be30991b11",
        "cursor": {
          "ref": "64d6cb77-1fc7-43cb-8574-6d215f6d4bdb",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e8006d9f-ff56-46a9-b925-3c7b6e518536"
        },
        "item": {
          "id": "ad29c175-5271-4857-8527-70be30991b11",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aebd56d1-95fd-4365-b37d-df729aad2708",
          "status": "Created",
          "code": 201,
          "responseTime": 7357,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c89c1e-89f3-4ccb-a178-640c05316b87",
        "cursor": {
          "ref": "3580d18f-a4a9-4bec-8c33-c38a875b0cf7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "702a1c62-ec0c-45fa-8f89-d814f678dc0a"
        },
        "item": {
          "id": "97c89c1e-89f3-4ccb-a178-640c05316b87",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ac49fa04-9970-4103-9cde-95115a2bdfa1",
          "status": "Created",
          "code": 201,
          "responseTime": 7274,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db7621-d3af-43d9-9125-e63251585e72",
        "cursor": {
          "ref": "7e2aacf4-a34e-4564-9eae-655f3c0e6bb7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "729fd149-e997-4898-9106-87462790cb83"
        },
        "item": {
          "id": "40db7621-d3af-43d9-9125-e63251585e72",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "224dd559-5519-4516-9619-a8b25275caa0",
          "status": "Created",
          "code": 201,
          "responseTime": 7562,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "16057850-896e-4331-a423-9eab2ec751af",
        "cursor": {
          "ref": "d3b959a1-4f93-4cf6-942b-b2fa65eb03d9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f25420f2-c312-4ad5-b925-02d7249ef1b9"
        },
        "item": {
          "id": "16057850-896e-4331-a423-9eab2ec751af",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8d595bf9-61c6-4daf-9eea-187ac331f082",
          "status": "Created",
          "code": 201,
          "responseTime": 7502,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2252e8ad-c784-4d7c-a9b5-37b7e82b263b",
        "cursor": {
          "ref": "2531eb65-63f3-412a-983b-fc56b8c03e1b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7121f003-74d1-44ce-8785-2ad6aec9e53e"
        },
        "item": {
          "id": "2252e8ad-c784-4d7c-a9b5-37b7e82b263b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e46b889d-4dcc-4a6f-9fff-1e639f777b1c",
          "status": "Created",
          "code": 201,
          "responseTime": 6972,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-18T00:39:48Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-18T00:39:48Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6ae1410e-10c1-4505-9900-6c2a14527445",
        "cursor": {
          "ref": "4db483c9-67d3-4c66-a048-c26c17aa5b81",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "306d5eaf-21f8-4521-a155-df6162bec865"
        },
        "item": {
          "id": "6ae1410e-10c1-4505-9900-6c2a14527445",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "489dc3b0-db38-437f-aba0-9cdfbb90e744",
          "status": "Created",
          "code": 201,
          "responseTime": 7335,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdec0119-04fc-4767-b413-a5a806357647",
        "cursor": {
          "ref": "cd035059-a46e-4c22-9d08-f7f297448ede",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5c29b7ee-1bf5-4753-bc99-37b9fbf9569b"
        },
        "item": {
          "id": "cdec0119-04fc-4767-b413-a5a806357647",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "86cd79e4-3861-4100-ac2b-038662b2ff7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bfe1aa-b1d4-4515-970c-a5f57adc64ce",
        "cursor": {
          "ref": "0edf6c12-0232-44ac-966a-b6dac1354332",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c34d38d-89f5-4035-ab9f-b05e4ba2d348"
        },
        "item": {
          "id": "23bfe1aa-b1d4-4515-970c-a5f57adc64ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d80db8e5-1561-4721-b0ec-987ba7c8ad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902c5ee5-a080-4e0c-8009-b78f512d5bcb",
        "cursor": {
          "ref": "af6a3c95-a426-4948-ad81-f316cab43f2e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c8f6a00-2882-4224-8715-39907cebc525"
        },
        "item": {
          "id": "902c5ee5-a080-4e0c-8009-b78f512d5bcb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "376b7642-0f97-40b2-a64e-9abf98d37a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aad1f1-7d06-49f3-96b5-06c4d88bcc4d",
        "cursor": {
          "ref": "e95b8165-7496-45ca-b125-d2268aaf7b08",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5acb3d6b-5575-4989-b43f-7255f3974aff"
        },
        "item": {
          "id": "68aad1f1-7d06-49f3-96b5-06c4d88bcc4d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "75a53280-049a-479d-a68a-50d346fbc1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4ac521-7aa2-46d2-b107-cd6ddc2114c1",
        "cursor": {
          "ref": "f4bfafaf-9c65-4986-9096-1cb3703d15be",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8676c943-3574-4c2f-ae1f-4a6f3eb0f2ee"
        },
        "item": {
          "id": "bb4ac521-7aa2-46d2-b107-cd6ddc2114c1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f31fc05d-7fd7-47f7-81d0-0c01776c8207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f70ed1a-2d43-4ed0-ad38-58deae6aeb72",
        "cursor": {
          "ref": "5a183201-b32f-4f4e-a0b3-773f385f4164",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "14390188-4539-4a3e-971b-f3f7fdbdc5bd"
        },
        "item": {
          "id": "7f70ed1a-2d43-4ed0-ad38-58deae6aeb72",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2717a508-3103-41c7-9791-69a68954222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2f659d-fa76-4d3a-939b-c9eba8f8ccfb",
        "cursor": {
          "ref": "a693741d-b6a3-490e-9e26-199891ae6671",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7727721a-f355-4b22-938d-63ccc995c7ba"
        },
        "item": {
          "id": "8d2f659d-fa76-4d3a-939b-c9eba8f8ccfb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2bcbeda3-66df-4ba5-96a5-c8a98dbae999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf2f631-e3c0-46f4-bf98-e41f6f289ee0",
        "cursor": {
          "ref": "f96f2c63-2bc2-4ec7-bd8d-1330d8c9e7f8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b1e0fa0c-1930-4574-8459-6f43ec775dc4"
        },
        "item": {
          "id": "ecf2f631-e3c0-46f4-bf98-e41f6f289ee0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e27fb3d7-92ed-43b3-9b14-ed582384eb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda8fae-18fc-4a4a-9b50-24b4a497a38d",
        "cursor": {
          "ref": "8f2605cf-ad77-4f02-8f4e-33b315a2dccf",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "170a5d73-54e4-45d0-8674-32334aa0438a"
        },
        "item": {
          "id": "7dda8fae-18fc-4a4a-9b50-24b4a497a38d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fef69256-007c-4c07-b46e-77a8330c3252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e319682f-9941-4fa7-bbf1-e39d3d9fed4a",
        "cursor": {
          "ref": "afb2f8c6-888a-46e6-83a4-69535722f9d5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d3471c51-e5d9-4f48-9a84-2a06e5712923"
        },
        "item": {
          "id": "e319682f-9941-4fa7-bbf1-e39d3d9fed4a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0cd567cf-3b97-432c-bae4-32c22c845b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd46179e-1954-404d-92df-4e908cccac99",
        "cursor": {
          "ref": "60504e61-3f73-4f49-b8ec-e25bce661f3c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8dfd44f2-bac5-4d81-8ebb-20f00eb18602"
        },
        "item": {
          "id": "bd46179e-1954-404d-92df-4e908cccac99",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c2124148-f0a6-45e4-ad2c-1815547a42b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4624844e-4f08-4325-8d64-4e50c041d5e9",
        "cursor": {
          "ref": "d1f1d9bd-50ed-48bf-a49a-f63195328491",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9b3493a6-ae2f-4d7c-b592-069d4fb909be"
        },
        "item": {
          "id": "4624844e-4f08-4325-8d64-4e50c041d5e9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b436daf3-6534-4909-9ffc-76c5021f1128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04789412-63b4-4161-98a5-a53ae7b12d4c",
        "cursor": {
          "ref": "c9c7baaf-6232-4e33-bad7-f712c3fe2a8f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "398cb730-3ab2-419f-8fcf-257eb4d8a570"
        },
        "item": {
          "id": "04789412-63b4-4161-98a5-a53ae7b12d4c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b4d7b485-1a43-4f19-a812-44c39a5b8dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdcc038-a783-4a60-9a7e-cc783456591f",
        "cursor": {
          "ref": "3dc68f25-a4d3-43da-8aba-10b31489d957",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "47d7bda0-0236-47db-a074-6d9cfeebcc62"
        },
        "item": {
          "id": "8bdcc038-a783-4a60-9a7e-cc783456591f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb3c921e-7b99-4070-9475-f6db0017beb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa94b7d-c6a0-4097-a5ef-a415e39d62c0",
        "cursor": {
          "ref": "964d2128-06d9-4855-807d-3038de53e1a7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fe951e28-ab80-4c1a-9d6d-30e12a196fb7"
        },
        "item": {
          "id": "9fa94b7d-c6a0-4097-a5ef-a415e39d62c0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd48627a-f9f7-4d18-b2ec-8002a46663b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03140e63-8f2f-4153-ac65-2025a0d213d3",
        "cursor": {
          "ref": "50f2e304-0d22-4ea7-9291-59a053e1d500",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5880d7c0-e7b3-4204-aaf6-a5a9ca6c86d6"
        },
        "item": {
          "id": "03140e63-8f2f-4153-ac65-2025a0d213d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ecaa2374-ee53-48d2-a90f-959cf927aae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf90e2a-5e3d-4717-9433-33eb5f7031ed",
        "cursor": {
          "ref": "0c15dad0-54e5-4b37-9f50-5e715b8d3cff",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e04a81f7-1009-490f-aed7-bd3317a954d4"
        },
        "item": {
          "id": "0cf90e2a-5e3d-4717-9433-33eb5f7031ed",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dd8e2e90-cc6d-4d30-945b-56e403701e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c48227-0f83-42b3-9745-bf47a6d28823",
        "cursor": {
          "ref": "5763e0b9-86ca-4f29-b5ef-b4385316e7b7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b3fe1dac-7b56-48a7-82a1-bbf025aa5e3b"
        },
        "item": {
          "id": "33c48227-0f83-42b3-9745-bf47a6d28823",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b4c9b2d-16e0-4fd9-a1fb-6d3d440b7fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06184ce-d573-42c5-acb8-f309ac2f6b6b",
        "cursor": {
          "ref": "b921e6eb-5a3b-49da-802e-60b0a867eb7b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ae8f7834-bd9f-4fae-9254-134d7c0586f6"
        },
        "item": {
          "id": "f06184ce-d573-42c5-acb8-f309ac2f6b6b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "727cea2a-8eb3-416a-83e7-37adae4f2c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6848c8-49dd-4702-934d-40458d6191bf",
        "cursor": {
          "ref": "e34c27f5-3bfb-4c1c-abbd-4b22410d5d01",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2f857d25-6614-4c3c-a5f5-d932ed7439ed"
        },
        "item": {
          "id": "fc6848c8-49dd-4702-934d-40458d6191bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d2eda03d-921c-4d7e-8a24-31c1e5f12058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4724a-28ca-4ef0-bd5e-9164d99bb23c",
        "cursor": {
          "ref": "d420173c-f679-4772-8535-10dbe4f74343",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8f4132dc-4525-428e-b5e5-19b63cd4ca84"
        },
        "item": {
          "id": "88d4724a-28ca-4ef0-bd5e-9164d99bb23c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "40321032-ba22-4891-a2c7-1ec0c4b08210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f41535-5505-4638-a907-7ef4602aa7be",
        "cursor": {
          "ref": "47ea41f9-5b0e-4e88-9f85-bff2c5ab63e1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2aeb20fa-23a0-4774-a286-f252f082b192"
        },
        "item": {
          "id": "a7f41535-5505-4638-a907-7ef4602aa7be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0acd5473-9562-4879-a4fa-04a5c9ba88ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ea2fe6-17b2-43c3-b4ba-6614671c02e3",
        "cursor": {
          "ref": "04ade0b6-7ddc-4e38-aa05-3cdc91e119a1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d33eabd-6cb7-4581-85b3-0e00249b281d"
        },
        "item": {
          "id": "f4ea2fe6-17b2-43c3-b4ba-6614671c02e3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "081f8505-22d8-4d1b-a52f-e739abce6b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68adaec-a944-43c9-89b3-284bfb995e52",
        "cursor": {
          "ref": "f41511b0-0a5f-4410-9bf9-9153d8d63046",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "71d036c3-69ee-4cc9-83c1-cea6af717162"
        },
        "item": {
          "id": "b68adaec-a944-43c9-89b3-284bfb995e52",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef630c4b-5a65-45a7-a51d-67ad7cbce3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cede616-543b-482a-846d-97eaf83543c4",
        "cursor": {
          "ref": "dad9679a-8ce1-4f42-a5c4-1a2d302ee409",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "308be945-ec44-44b9-a462-731b571b02ef"
        },
        "item": {
          "id": "5cede616-543b-482a-846d-97eaf83543c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c8015f7-9bd3-41ee-91b0-2a57cd22cf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49609ab8-610e-4d1d-b284-4fb3354dec6d",
        "cursor": {
          "ref": "e629fe6a-2297-4ee0-8d45-1e745ce2ae1f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "20f5683e-4521-4da1-b998-0d5742e02ef0"
        },
        "item": {
          "id": "49609ab8-610e-4d1d-b284-4fb3354dec6d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f9ea5498-de52-423c-98ac-43db40b51a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b303a22-18a3-4815-b304-572c953d1b1d",
        "cursor": {
          "ref": "37957b8c-cf0c-4c85-9f6d-6cac8df74cb4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "257c99df-61c1-4408-8930-ebe0b6c48a4b"
        },
        "item": {
          "id": "0b303a22-18a3-4815-b304-572c953d1b1d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b7480e10-bed4-44e3-b627-fcc5b4d62b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e2baf3-7071-412f-9e29-ed26a387fa64",
        "cursor": {
          "ref": "ec580ab5-8667-453f-8f10-766fd3e0a981",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bd45fe7e-2814-4dc6-a23c-8eef83813117"
        },
        "item": {
          "id": "b4e2baf3-7071-412f-9e29-ed26a387fa64",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ec982d8-52a0-47b8-942e-c96d9006167f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e1fb98-b21b-47c5-824a-a288f665cedb",
        "cursor": {
          "ref": "e3426d6e-0220-4eb3-a1bc-854b59fe2790",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "817cd134-95fe-46f8-97db-6dda9c974a44"
        },
        "item": {
          "id": "89e1fb98-b21b-47c5-824a-a288f665cedb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f75b265f-0f3c-4e90-8114-84155c45db08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bdb697-1498-49a8-b970-18ef2206776e",
        "cursor": {
          "ref": "233565d8-d9c1-4dc3-ae86-f9072c63f9b5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b1fef7c1-cf59-4462-9cde-7a9184c94af3"
        },
        "item": {
          "id": "89bdb697-1498-49a8-b970-18ef2206776e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4da8c967-8e6e-4ecd-8bd3-7201a19dd957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e0f860-c9e8-444e-b71f-5826e6709154",
        "cursor": {
          "ref": "4e737522-fa7e-4640-bd16-70a559ae2c2e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ef569f7a-5c6b-480b-a67f-c1ac31b70f10"
        },
        "item": {
          "id": "32e0f860-c9e8-444e-b71f-5826e6709154",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6f3db1d5-9821-4dac-9a18-5a80627d441f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b999b735-299b-46de-a1e7-37001ed400aa",
        "cursor": {
          "ref": "f612f072-db8c-4103-b7dd-e8b7559b5369",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b254b9ef-db20-4e02-b8b6-5530d7ea3003"
        },
        "item": {
          "id": "b999b735-299b-46de-a1e7-37001ed400aa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f5210445-3307-45a5-9191-4ac7685c7a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb732c0b-c64e-43bb-bd2e-c8ee46fa1deb",
        "cursor": {
          "ref": "8bac53c4-a22c-45d3-92d2-8b30cba909c9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4d4ad24b-a7d8-4d73-8929-9a63cc67bf8d"
        },
        "item": {
          "id": "bb732c0b-c64e-43bb-bd2e-c8ee46fa1deb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "518dbb79-44b9-4520-be33-77e4752f51f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dace9db6-1f7e-4d2e-9a1d-c22e481c772f",
        "cursor": {
          "ref": "dc6b116b-8b83-4f59-ba70-b99e53c3168c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2010a2ac-fb71-4eb7-abda-f4e876dab658"
        },
        "item": {
          "id": "dace9db6-1f7e-4d2e-9a1d-c22e481c772f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1ba4d187-8aac-46ee-b9fd-c7e097f2ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddb444b-e9ab-49a6-8d0a-0c274d8cb45b",
        "cursor": {
          "ref": "114e8fc5-99dc-4dce-8c18-48a0832398b7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ea005074-1775-4002-bcfc-e0dc03e272d0"
        },
        "item": {
          "id": "9ddb444b-e9ab-49a6-8d0a-0c274d8cb45b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5cb6300f-8014-48e7-bad7-0e51e48a380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ec55f7-8666-4b20-b922-59237ca32ecb",
        "cursor": {
          "ref": "a317baf9-00c0-4238-a454-0c9bbf28e007",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b4504c2c-6d31-4ccd-a742-e5ba4e19ef0c"
        },
        "item": {
          "id": "06ec55f7-8666-4b20-b922-59237ca32ecb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "09cf7dfd-8fe1-4e13-9f53-1e09b475fa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70454b1-cbcf-407f-8528-ec77d12f06d1",
        "cursor": {
          "ref": "e7acc600-b30d-4881-9bc3-620294ae48bc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4cd01b4c-3fb2-4572-aad4-2feea5588b6f"
        },
        "item": {
          "id": "d70454b1-cbcf-407f-8528-ec77d12f06d1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "91b5a340-acd9-4bee-9499-1dc5e8fd96b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c98c47-013b-4dfd-89d6-6d77fd68cf3f",
        "cursor": {
          "ref": "e3018b7f-cd20-43db-add7-18f0d7beaf75",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d49f9137-136f-4083-bca5-db78b29da862"
        },
        "item": {
          "id": "d8c98c47-013b-4dfd-89d6-6d77fd68cf3f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "468c9b49-eacf-4caa-99d3-c91f829a27ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc29fdc-4e49-4526-9dd0-eadf8d00e300",
        "cursor": {
          "ref": "dec33edf-f428-42ab-979f-65fb9b0ab06a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2cecde3c-2163-43c5-bab5-39c27635a926"
        },
        "item": {
          "id": "0bc29fdc-4e49-4526-9dd0-eadf8d00e300",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd3d8f08-7775-4fdf-8c76-13900fc9ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e234cf45-7707-4bcc-ab79-996a751fd917",
        "cursor": {
          "ref": "79c5e09c-a53b-45db-a72f-8608c67313bd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ffc4187c-a412-4f9e-94b1-621f1751826c"
        },
        "item": {
          "id": "e234cf45-7707-4bcc-ab79-996a751fd917",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a3cde6c2-dcaf-44e0-bff8-7cc7d32006a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3f3e6f-e465-463d-9e0e-fc345a5d81d5",
        "cursor": {
          "ref": "5cef6efc-8933-4104-9910-b407d00c548f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "844464dc-31ed-43f3-a189-5d31de5a71a4"
        },
        "item": {
          "id": "dd3f3e6f-e465-463d-9e0e-fc345a5d81d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bac6347d-c2c0-44a1-92ff-f723a112b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec1fe6-57ec-41c3-b41f-42884f7c266c",
        "cursor": {
          "ref": "0929f533-50a7-4a3e-963f-33ee64aa2e66",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "64f8aa4a-4bdf-4e3a-9039-04018d163bc5"
        },
        "item": {
          "id": "53ec1fe6-57ec-41c3-b41f-42884f7c266c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c613c8a-d123-4880-859c-938c69adf710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23183da-b53b-44d5-8238-f735d504e6dd",
        "cursor": {
          "ref": "57a9be7b-9501-4990-8a06-c9a30821235e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0c586a11-bbcd-4e3b-b7c3-656b9414b7c8"
        },
        "item": {
          "id": "d23183da-b53b-44d5-8238-f735d504e6dd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "849b1a4b-09ec-416a-a131-b85ea9fd6bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0043b6e2-65dc-40d8-8ce7-9655a6f261d4",
        "cursor": {
          "ref": "b9314755-80c8-4915-b3de-f965b108cad6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b4fe67f4-0aa8-438a-9f40-7e70afe261eb"
        },
        "item": {
          "id": "0043b6e2-65dc-40d8-8ce7-9655a6f261d4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "32844dbf-94d3-434d-af98-c4de887ed9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8b24b-41f3-42f6-92a2-22b8a22fa1f2",
        "cursor": {
          "ref": "96bac3e3-93ad-4eae-b4ee-6928ed0a8633",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d3af6ec5-7780-453e-b9b3-403218acdd32"
        },
        "item": {
          "id": "62a8b24b-41f3-42f6-92a2-22b8a22fa1f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8a360a74-cfaa-4a9d-8b0a-199c3c31ddf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eae66e8-a18f-4cd9-ae71-afd788cae22d",
        "cursor": {
          "ref": "ffdfb753-928f-491f-a0ec-a4d1a181df8f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b02a111-86f7-436e-ae6b-31311aa3a9d4"
        },
        "item": {
          "id": "9eae66e8-a18f-4cd9-ae71-afd788cae22d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "33115788-c245-459a-83ed-05bddb34ce8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e0c347-1fc8-493c-8bc5-c4a3cda628a2",
        "cursor": {
          "ref": "477cbd63-45f8-45bd-802b-fce8fbe076fe",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2aa4d1f5-6057-4f64-96c7-ca0636446a44"
        },
        "item": {
          "id": "91e0c347-1fc8-493c-8bc5-c4a3cda628a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c661e3cf-0891-4b6d-9b0a-3f8274268bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075d6d86-1dab-4c7a-98bb-ddd053b745dd",
        "cursor": {
          "ref": "3eb6725d-dfcf-4b89-8a7a-5fbc5d4a8fa1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ede06a37-9c12-4fb0-9d72-9b637b03edc1"
        },
        "item": {
          "id": "075d6d86-1dab-4c7a-98bb-ddd053b745dd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fb4aab53-9d2b-49fe-8d1c-f84c1e720f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ce9bbc-339f-4be5-b594-31009cc535ba",
        "cursor": {
          "ref": "d60a41f9-659d-433d-9dc3-ebc880418e32",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fe29c037-774c-46f5-8375-377802ebf4e2"
        },
        "item": {
          "id": "80ce9bbc-339f-4be5-b594-31009cc535ba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6816965d-c0cd-41c6-87e2-c7b6dcf6126b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfa4fd2-b3ba-422f-85c0-0b23fdc35be5",
        "cursor": {
          "ref": "27193138-d3fb-4597-9bee-5556caa1bc8f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9b5303e8-9b1e-4ed8-bf83-ecd25a6602cd"
        },
        "item": {
          "id": "3bfa4fd2-b3ba-422f-85c0-0b23fdc35be5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c781a131-e435-4958-9c0f-409efab90880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b984c-4ade-42ec-af07-69163d70b2d3",
        "cursor": {
          "ref": "da7b7a6e-caff-4f17-9e55-ccf8c59da517",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8f8448c9-ead6-45f2-ab6f-b4a36bf50f87"
        },
        "item": {
          "id": "5b3b984c-4ade-42ec-af07-69163d70b2d3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ffef10f3-de10-424a-b67b-fe462aa7d3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b4d947-4802-4c4e-b8e9-28d1bf3f922e",
        "cursor": {
          "ref": "121098bf-c47b-42d5-a9ea-7538a38e12c2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a18f9442-2bde-478e-99d1-9de2d56f7f5a"
        },
        "item": {
          "id": "c6b4d947-4802-4c4e-b8e9-28d1bf3f922e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fcbeda60-ee4b-4e07-92fe-17a56ef70aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4cf8d9-4964-438c-8121-71f1cca14a49",
        "cursor": {
          "ref": "f0ca9f19-e671-4331-a417-6ebd793664b1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87c9a2fa-9311-4445-b055-d05cc4306db5"
        },
        "item": {
          "id": "db4cf8d9-4964-438c-8121-71f1cca14a49",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "232893db-45ba-4964-b241-79e6fdf77009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d616d2-1af7-4072-96af-34300d7a3117",
        "cursor": {
          "ref": "d835005f-762b-4356-93e0-1070ae65ea66",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7534a9c3-12a2-4394-a68b-0ecd84de32e1"
        },
        "item": {
          "id": "39d616d2-1af7-4072-96af-34300d7a3117",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "321307ab-3709-4009-bde9-a95e58fad352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb78756a-739a-4a6b-b931-4d35985989c9",
        "cursor": {
          "ref": "76960bda-e15a-4388-ae2d-07b2014d3858",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5e94f0e9-e282-4983-a048-5246c859cacd"
        },
        "item": {
          "id": "cb78756a-739a-4a6b-b931-4d35985989c9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eae03791-9e64-44d9-9c89-acd3c3eecce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203e2ec9-bd06-437f-9a1f-983d0d57af68",
        "cursor": {
          "ref": "7990f1cb-3051-46a5-82af-48445b689d93",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f3ff3b6a-958a-424e-bb35-f54ecf84ef2a"
        },
        "item": {
          "id": "203e2ec9-bd06-437f-9a1f-983d0d57af68",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "23eb1c6a-eb04-40ea-a8bf-1972ed6e5619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da31f47-e947-48b9-8eb1-3821624cbac0",
        "cursor": {
          "ref": "ac7b0bd9-f990-4658-ae73-46a369e97d5a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d40f5303-cc02-496a-8377-9caf194d3f90"
        },
        "item": {
          "id": "8da31f47-e947-48b9-8eb1-3821624cbac0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d794492d-92b6-4281-adb2-93d7f69d8d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff2ce60-8d09-4d3d-ba88-3557c77678f6",
        "cursor": {
          "ref": "21ea0361-3847-4580-9665-4e5af4a55fe4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "348321ee-4dd7-49c4-9713-b6a8cb182c42"
        },
        "item": {
          "id": "0ff2ce60-8d09-4d3d-ba88-3557c77678f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68353e68-1d46-4f16-aa8b-00cc1b4beb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195d3e13-cc70-4c8d-9fe3-2ab274a9ed90",
        "cursor": {
          "ref": "bd2e7b9c-d0e6-47b2-a927-4ae5b235775b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f6e119b9-b531-43d0-b439-fb1c83356295"
        },
        "item": {
          "id": "195d3e13-cc70-4c8d-9fe3-2ab274a9ed90",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4858e717-3d42-4f62-9961-6431225a6bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53aa90d1-ee2d-40ae-8830-abe3a6620178",
        "cursor": {
          "ref": "00ebcf96-54c3-460e-a436-8178d1cffc04",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d49bcba-5409-4380-b3ac-b79e5abc3873"
        },
        "item": {
          "id": "53aa90d1-ee2d-40ae-8830-abe3a6620178",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e269d019-e893-4007-a4a4-6f930102d6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c6a859-9c33-4dc1-94a9-2a3c58248d2f",
        "cursor": {
          "ref": "aa711c44-ab8d-4504-b9ac-b91627c866bd",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b2840aa1-a09a-4f7e-abe0-721c49447bf0"
        },
        "item": {
          "id": "24c6a859-9c33-4dc1-94a9-2a3c58248d2f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f34bcc1b-4b98-45f6-b37d-12135aa1e706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a7d41b-4987-4552-b70a-806e50ba8dcb",
        "cursor": {
          "ref": "1f8fb784-4131-4ce5-94ce-32a3e02f4c3b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4bc6fbcf-94d3-4674-9da1-61d7d96e7608"
        },
        "item": {
          "id": "47a7d41b-4987-4552-b70a-806e50ba8dcb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c16a7dc5-6811-4251-af15-01560536e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4240fc4-d8a9-4f7b-860e-c0fd4d6d97e1",
        "cursor": {
          "ref": "6c7af110-6535-4191-82d8-abed111614b9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a572bcbf-2ba3-43fe-8cc6-b384a4ccfe5c"
        },
        "item": {
          "id": "d4240fc4-d8a9-4f7b-860e-c0fd4d6d97e1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "729c1f82-9e78-4ae6-8b8f-401b7d0f3151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a555bb-99f1-485c-8445-6884659ebf78",
        "cursor": {
          "ref": "aa72e37e-12cc-4270-bc09-5fb03c15e00f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c3ee2496-b1da-4e23-9789-8cc90ecb6e1b"
        },
        "item": {
          "id": "f8a555bb-99f1-485c-8445-6884659ebf78",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "892ab8f0-f78e-4415-ab5b-95e9af3d5de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4b2ac8-c0c8-4278-9730-c7c0027caeda",
        "cursor": {
          "ref": "ce5249ce-9439-416f-af21-3fe6f6b802df",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "206d36bd-64d7-4413-9c9c-c679e07a8a4f"
        },
        "item": {
          "id": "8b4b2ac8-c0c8-4278-9730-c7c0027caeda",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cfe437c2-0920-4b19-afcd-837c2a9c893d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992a7ebf-1256-4a80-8812-c35f343a9839",
        "cursor": {
          "ref": "d72dc0da-7167-4ef5-aa2b-e66542989d80",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1203680d-b645-4b14-80a4-c33d49d57a0c"
        },
        "item": {
          "id": "992a7ebf-1256-4a80-8812-c35f343a9839",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aaf18f1e-45c1-492a-93fb-998f3e2855eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ef6fde-e948-4d42-ae38-c9e2c5b3b64e",
        "cursor": {
          "ref": "be3dfc60-1115-4a07-b16a-bd0fbf6e0bdf",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "854519f8-8af0-4156-afe4-2922fa0670ba"
        },
        "item": {
          "id": "e8ef6fde-e948-4d42-ae38-c9e2c5b3b64e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4d4d2247-9f02-455d-aba3-b77aa38e9b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179b993c-6c9f-46cf-a5e8-e4f4fad07f15",
        "cursor": {
          "ref": "36825f46-a344-479d-94d3-e336b01d3a3b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "321bb503-c04b-408a-a0da-5a9022e3979a"
        },
        "item": {
          "id": "179b993c-6c9f-46cf-a5e8-e4f4fad07f15",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5129f4eb-aa07-4f9b-a83a-29976fbbcc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a2bc85-8ad4-468d-978a-1ac40d676bd0",
        "cursor": {
          "ref": "0666d843-20a4-4f53-a64b-cef774fd347d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ae368c24-e86a-4c4a-b87e-9655f3321a9b"
        },
        "item": {
          "id": "72a2bc85-8ad4-468d-978a-1ac40d676bd0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2c564a4a-a169-477a-9c53-dc5358d1c48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9f675a-8bab-433a-813b-a9dcc9c14755",
        "cursor": {
          "ref": "8faeb233-f4b9-4c64-ba28-ebd392269d1d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a100a8d1-51a8-4fd2-935f-3b9ddd356f5f"
        },
        "item": {
          "id": "0e9f675a-8bab-433a-813b-a9dcc9c14755",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7e489884-ce11-4cb5-a930-afdb6d844521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de753d42-96f8-4c3b-84c4-b338f1785694",
        "cursor": {
          "ref": "4c029f94-3de0-4bab-a0c4-f70960aa136b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cb7cae63-2651-428e-b8b3-d4a69a5f252f"
        },
        "item": {
          "id": "de753d42-96f8-4c3b-84c4-b338f1785694",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f9c30ea7-1823-4597-bd73-a0199bb69222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f04f7c-9426-45eb-b953-77e262d8c731",
        "cursor": {
          "ref": "730f8738-73c7-448b-b358-db802942feb5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e01edb92-8dee-46ec-8ef6-cedc8172ab8f"
        },
        "item": {
          "id": "d1f04f7c-9426-45eb-b953-77e262d8c731",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b2841beb-d2fd-427e-8e7b-7c55cee5615b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2450e504-460c-46f0-af9f-9dbab9ff98c2",
        "cursor": {
          "ref": "af4805a5-0f77-4623-9ceb-e43990738700",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5c1e74e2-3125-479e-b120-1fc5484b08b4"
        },
        "item": {
          "id": "2450e504-460c-46f0-af9f-9dbab9ff98c2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4f6a470c-671c-455d-bb55-00f787209627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b22f41-f6c4-43a7-9146-40997e867e2e",
        "cursor": {
          "ref": "aa40494e-d1eb-4494-9831-5c1b821e5b83",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b0c1e464-8b7b-4481-87c5-214d66dce880"
        },
        "item": {
          "id": "65b22f41-f6c4-43a7-9146-40997e867e2e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "92aa5437-590a-47c6-9eca-89eeab7a79fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf075b7-1ec9-4d6b-b71f-907c71859fd4",
        "cursor": {
          "ref": "fa8ae816-078c-46ee-9aab-28c01c29480e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e7a047bb-9e04-4920-9ef4-1dadbf6aea32"
        },
        "item": {
          "id": "2cf075b7-1ec9-4d6b-b71f-907c71859fd4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bf1eae07-a447-4f25-a960-f4162ecefef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafb37a8-7dd7-4889-b90f-0ea6beb32c40",
        "cursor": {
          "ref": "72bbfcf1-a355-4ba7-855b-98f11fee67e0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "09e13d31-2ff4-4bce-a5d7-ee37deb17309"
        },
        "item": {
          "id": "bafb37a8-7dd7-4889-b90f-0ea6beb32c40",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "369b3300-97a6-45df-b788-246755f8e92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa2947c-ecdf-476f-9d56-8e855d4d48a3",
        "cursor": {
          "ref": "0ca0c50e-d516-49c1-b606-3a4b7b3f49b6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dc6b7023-1a53-4d13-88fa-ed9e38ee5934"
        },
        "item": {
          "id": "cfa2947c-ecdf-476f-9d56-8e855d4d48a3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0f0c41ae-cd60-4b8a-be13-e17dacbc92cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba700e2-8ca8-4824-a14b-7cab5305f21c",
        "cursor": {
          "ref": "ef1e928f-fdbb-4514-99b6-e582b3a3c153",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ae8c5aed-efba-4609-95b6-64cca0d6442b"
        },
        "item": {
          "id": "cba700e2-8ca8-4824-a14b-7cab5305f21c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cd27677f-5638-4ec0-a614-660e013713ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ce0076-c015-43c4-b334-087aec9b94de",
        "cursor": {
          "ref": "1c01bdce-d373-4815-8749-90e80fe43cab",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d2042c9d-836f-4391-928a-9e6126c60790"
        },
        "item": {
          "id": "35ce0076-c015-43c4-b334-087aec9b94de",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "38a0239b-f155-4893-bd5b-36e49b522704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9afb28-3657-41a1-8c2d-729860ce41f6",
        "cursor": {
          "ref": "0793b549-964a-425b-b612-56cc18d49ffb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7ed8380d-19af-432d-bd3e-8fc8f7b5ba02"
        },
        "item": {
          "id": "9b9afb28-3657-41a1-8c2d-729860ce41f6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a530bf5f-2f06-44b2-8083-68d2d1f94987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe940f2b-65d3-4e6d-b97f-cce9e76d2c29",
        "cursor": {
          "ref": "11c35cd5-e3da-4262-96e4-cc3d4109f45f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5e901f03-3f69-4486-bf4c-a8d689748de2"
        },
        "item": {
          "id": "fe940f2b-65d3-4e6d-b97f-cce9e76d2c29",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b2cc42f9-d429-4645-8eec-a9bfadef252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a99673-b3a0-4c5c-b7a5-a54b621a539e",
        "cursor": {
          "ref": "32b4e62e-546e-4032-b862-eb98e57d9a47",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5f22fc17-87a2-4caa-879e-5b6731452b82"
        },
        "item": {
          "id": "e5a99673-b3a0-4c5c-b7a5-a54b621a539e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "95e869f7-5d12-4716-b571-dbb35039b8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a61771d-3121-4b8f-8321-34af5b48a3cd",
        "cursor": {
          "ref": "e32c992d-e279-46a8-88df-618a647e4299",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ce1753ee-48a4-432e-9ea7-c87865ceda33"
        },
        "item": {
          "id": "2a61771d-3121-4b8f-8321-34af5b48a3cd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6cbf4bd3-a5ed-4373-85fd-5a230d768c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa9f18-3d79-4178-92f1-6babe898e5d3",
        "cursor": {
          "ref": "8294a8c6-216a-4966-b08f-46b54f5efc44",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e66b0467-fe22-471f-996c-f86aeaeb8d41"
        },
        "item": {
          "id": "cdaa9f18-3d79-4178-92f1-6babe898e5d3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bc11bf76-ef93-4a09-9ace-b32f08dc8666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea7de0-d7c6-4ea5-9dc8-700ea77dd3d3",
        "cursor": {
          "ref": "9221065d-b728-4f5a-8e87-78ac4c30ec28",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "49ea5efb-9b44-4068-8a35-770a12431c64"
        },
        "item": {
          "id": "8bea7de0-d7c6-4ea5-9dc8-700ea77dd3d3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f0e2676-993f-4fc8-a1e2-f3f0cfa32c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d1112d-81e6-4786-927a-c987118a97b7",
        "cursor": {
          "ref": "e9ae08ae-a51b-46c9-89ed-6f48fe70846e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c086323e-1f07-4e10-9237-aa4d1eb670a7"
        },
        "item": {
          "id": "16d1112d-81e6-4786-927a-c987118a97b7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "081216a5-09cb-4966-92ad-f0fd9034a058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d99ca1-6ca2-4828-b666-e6f63020a3b5",
        "cursor": {
          "ref": "8ee8254e-136e-4221-8af0-51b2da9cb737",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ebe688b7-2e2d-4016-a9fb-c74dc42d331a"
        },
        "item": {
          "id": "b4d99ca1-6ca2-4828-b666-e6f63020a3b5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f43c2e3b-8545-4b1e-92bf-b5e6dee96a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77a78ae-c390-4112-96c6-3b82d0ab9275",
        "cursor": {
          "ref": "c6a5d97f-7702-4955-9e03-6f56e4f56432",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fe91fb39-1bbb-49d4-8aeb-88be0bf4def0"
        },
        "item": {
          "id": "b77a78ae-c390-4112-96c6-3b82d0ab9275",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3cc8782b-8950-4af0-964c-f6e8b3e404ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6aecf4-7b2e-463a-b89a-908fe71d0806",
        "cursor": {
          "ref": "167ced19-b8c4-4a78-b0b5-0648401b3ee9",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1a6e6482-652e-4e56-96be-4d515e08c2be"
        },
        "item": {
          "id": "ab6aecf4-7b2e-463a-b89a-908fe71d0806",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c28e0c00-6b18-4a3d-a7d0-90851ac2e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c852afc8-0d7c-4b97-be21-2a45b0e9f37a",
        "cursor": {
          "ref": "91235cd1-47ec-4917-b849-24b5ad848c50",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "29a763b1-df88-47ca-93da-4c5794a05980"
        },
        "item": {
          "id": "c852afc8-0d7c-4b97-be21-2a45b0e9f37a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ea89a91b-bb3a-4ee2-bc55-2b53cabb6182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a188b8-2c92-4b8a-83b7-5a8f0b554a9f",
        "cursor": {
          "ref": "b4d96598-f83e-460f-9488-3f577783c4d2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "002ffadc-1023-499b-a34a-33ca2248636f"
        },
        "item": {
          "id": "65a188b8-2c92-4b8a-83b7-5a8f0b554a9f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1247e4c6-b709-41b7-b961-19555ebaff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb82da2d-0829-40b1-97c3-6430699b9b14",
        "cursor": {
          "ref": "9e20a9e2-c95d-41eb-8dbc-e6fdd1e59d73",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f04dac97-1c5f-4e41-9ab8-f04e7c05fc93"
        },
        "item": {
          "id": "cb82da2d-0829-40b1-97c3-6430699b9b14",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0e23b099-2c9f-4899-aca4-720b6a766207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83c84b6-f82f-437d-9697-9945774c8703",
        "cursor": {
          "ref": "96f65cb4-dcae-46eb-b6b2-b9843c8461fb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d332476d-acdb-4631-81cb-6ab1f047a710"
        },
        "item": {
          "id": "c83c84b6-f82f-437d-9697-9945774c8703",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "332b55b0-e73b-4d32-b64d-bc22b2a1a9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d361eb-75a2-4ca7-ab53-5fdaca6e4ae3",
        "cursor": {
          "ref": "e5a32d29-4b95-4f9b-82ca-4846fad1f745",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0c385a19-264f-43c1-b2f9-fb9107c5e7d5"
        },
        "item": {
          "id": "c4d361eb-75a2-4ca7-ab53-5fdaca6e4ae3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "338142c2-f0a9-485a-b449-0b12af58d816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def914ec-92c6-4f3e-84c3-d539966dadda",
        "cursor": {
          "ref": "2cde1554-5d23-4032-90a7-12e03e42ee46",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4bf5f7f6-81e3-4cab-9425-5f41a291f91a"
        },
        "item": {
          "id": "def914ec-92c6-4f3e-84c3-d539966dadda",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3ff82dbb-d513-48e8-b669-4ad05093dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361d75d2-b672-49ff-b162-539d835ed147",
        "cursor": {
          "ref": "c4dda216-5e3c-4829-b019-7d8ce1cf15f8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "85392349-1a7b-4910-b157-2f5c6f0a6822"
        },
        "item": {
          "id": "361d75d2-b672-49ff-b162-539d835ed147",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "45ba13a9-302a-4c00-84be-fcfb2c39c4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a28ab4d-878b-4766-bf65-85220fb83d4b",
        "cursor": {
          "ref": "e49a2e0b-d8c8-46f9-859a-e83dd4bd9200",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cbfe7733-4aba-4237-a2b2-01c98bf95267"
        },
        "item": {
          "id": "5a28ab4d-878b-4766-bf65-85220fb83d4b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32305879-1903-4fc9-8331-3ebdb268a6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba6848e-88c0-4c26-b64c-b1fa2462c50a",
        "cursor": {
          "ref": "15900b8f-e52c-4e29-b7df-7efbff01b7fe",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e30c001a-fabb-4a61-a446-d3bd3ae5cb3a"
        },
        "item": {
          "id": "bba6848e-88c0-4c26-b64c-b1fa2462c50a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "578fcc25-ca39-49a1-80d9-e58d7df64690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8430f6b4-2856-4724-832a-8a190978b6d2",
        "cursor": {
          "ref": "4e9f20bb-3044-4cac-bad6-7e0cc2549449",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2e92be16-5186-4b0a-bf25-e0206a26f838"
        },
        "item": {
          "id": "8430f6b4-2856-4724-832a-8a190978b6d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "041354f5-6ebc-4274-a207-156beb52e4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a6e545-4763-4327-9788-9e9795f86f71",
        "cursor": {
          "ref": "cf798b81-d53b-4e6a-bfb2-5e6f2dbeb6e7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c9b0d164-3c6a-411d-a279-374014f917e8"
        },
        "item": {
          "id": "f0a6e545-4763-4327-9788-9e9795f86f71",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ba51fb35-b229-499a-8168-9c8452f0b404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1f6d65-ea0d-4bd2-b60a-e76f8f6ea65a",
        "cursor": {
          "ref": "15413a01-1ace-4f7d-89bd-4845ce09ccd0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "359a3dad-54fa-448f-ba52-67bd7c8cec7c"
        },
        "item": {
          "id": "0f1f6d65-ea0d-4bd2-b60a-e76f8f6ea65a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2d0b673e-9489-4a12-94bf-a59521b69001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef418a21-bec3-42b5-bb58-c20c8f27201f",
        "cursor": {
          "ref": "faa364d0-240f-4486-a318-e5f658885544",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "24dea299-4ab1-4aad-8ae1-77d324e3aae5"
        },
        "item": {
          "id": "ef418a21-bec3-42b5-bb58-c20c8f27201f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b3ff4beb-2152-49a4-ba08-d851af7c507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9e11f0-3386-48ec-a2fe-99e586e07f49",
        "cursor": {
          "ref": "ef628087-b7b0-4e5c-9d5f-23ec41fbd08a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1ebf45f6-e242-43f7-a5b5-4b7863daa46b"
        },
        "item": {
          "id": "9c9e11f0-3386-48ec-a2fe-99e586e07f49",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "71832b0e-5466-40f9-8cb4-8f10bae63f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0262a6e7-c05b-4e50-b1e7-ce4f8d6802f7",
        "cursor": {
          "ref": "acd52816-39c4-4900-a8f3-a61df7064614",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "910ed119-b7bf-47fe-9e60-f1fdde669cf3"
        },
        "item": {
          "id": "0262a6e7-c05b-4e50-b1e7-ce4f8d6802f7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d7cf91eb-04e0-484a-91da-8bbe65a95b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb1293a-83a8-4286-9f4a-6e8bf6f21750",
        "cursor": {
          "ref": "79e0f406-cb61-43f9-9536-91d260af3d8f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5fef9d26-f514-4ce6-a829-06dfd4c66b19"
        },
        "item": {
          "id": "bbb1293a-83a8-4286-9f4a-6e8bf6f21750",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac9a5e06-238f-4b04-aa21-483d61d927d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c72243c-4875-45fa-be1e-87ff4ef56b20",
        "cursor": {
          "ref": "449daa13-35ab-43e6-9d82-637280353ecb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "375c3bcc-c805-4135-bde2-2b6575878d24"
        },
        "item": {
          "id": "5c72243c-4875-45fa-be1e-87ff4ef56b20",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "06b18820-eb1e-4d82-bce7-be7546603e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b0f1e8-556c-499c-b8ae-2d4df41984f1",
        "cursor": {
          "ref": "10b8c288-ad0b-40e3-ab92-cc2c141c943e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "73efd565-b3ae-4634-918a-892644099df1"
        },
        "item": {
          "id": "a6b0f1e8-556c-499c-b8ae-2d4df41984f1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1dede8a6-c2da-4499-a22d-a4b8a9d209bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3451a9f3-2fa6-4665-8f6e-74050ee4946b",
        "cursor": {
          "ref": "0ccac798-d7d1-4a39-a514-2975ab036793",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02e1b737-45b2-4de3-ba1e-543c43ffc1b5"
        },
        "item": {
          "id": "3451a9f3-2fa6-4665-8f6e-74050ee4946b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "abc20202-29ea-4ce7-86c5-236c56b8c4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c13ea47-63fa-4485-83f0-38137b8f6dd2",
        "cursor": {
          "ref": "38f64295-697e-4a86-b4ae-f8a70ba3162a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4976e3f6-110d-4435-a08b-ac1695ee1a14"
        },
        "item": {
          "id": "2c13ea47-63fa-4485-83f0-38137b8f6dd2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2d2d100a-f413-4f78-a951-0bf6e5d4a7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb7ea7c-ea29-4d40-a7e7-d4b0c048fc52",
        "cursor": {
          "ref": "feb06da0-6a7e-4e5c-9a3f-c54f5a8a528d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e59d7d71-81c1-41ee-80ca-27d46116a5f1"
        },
        "item": {
          "id": "1bb7ea7c-ea29-4d40-a7e7-d4b0c048fc52",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2b792820-c554-44f1-90b9-d47ec7fd6bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87dede6-9425-45c8-93e5-8beceae4547d",
        "cursor": {
          "ref": "87c26092-67db-4f27-906e-1fa059a7eace",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5ab9529e-c3d5-40a4-8634-463009f118fb"
        },
        "item": {
          "id": "d87dede6-9425-45c8-93e5-8beceae4547d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "880d18e4-8c4e-44da-b18a-55557f2e1d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3949ae-339a-4b69-9645-e3592d680c9a",
        "cursor": {
          "ref": "d73b421f-9795-4d88-beec-ed379f5094fc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7c8fab6b-86e0-4bd5-891c-5d424d204533"
        },
        "item": {
          "id": "cf3949ae-339a-4b69-9645-e3592d680c9a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f90a4fae-8c20-41aa-9cba-86b35ba8b735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8f3b19-0a24-49c8-a35b-65048ae03b02",
        "cursor": {
          "ref": "ed7b9ae5-164a-406a-9677-8e9d3dc523b6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f84f9091-1672-4cb9-bfe0-e8c3e8929886"
        },
        "item": {
          "id": "3a8f3b19-0a24-49c8-a35b-65048ae03b02",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "28da6419-64b3-4ca0-8538-941878e3fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcc1c0f-b08a-4966-ad93-07bc34709717",
        "cursor": {
          "ref": "96cd7e78-5aca-41a3-9bba-1f8d29a5c193",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f24607d8-65e6-4404-a8ad-bda703bc4ca1"
        },
        "item": {
          "id": "edcc1c0f-b08a-4966-ad93-07bc34709717",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "781177bb-7ddf-47f5-a841-64861626d755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1bc260-aa0a-4a45-bfd0-484a2765f9d8",
        "cursor": {
          "ref": "f9559f42-b0d8-4aeb-b879-38305535a421",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3dfe8ced-baf3-4cdc-ad42-394ebc305b15"
        },
        "item": {
          "id": "2a1bc260-aa0a-4a45-bfd0-484a2765f9d8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7107828-a903-49c5-b7b6-908b35321fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95abafb2-2192-41e3-9fa6-08e6c0985545",
        "cursor": {
          "ref": "96fd6231-df5b-4e42-a2bc-b37824272dd2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b81f68a3-dc99-41b8-9a10-713f4a3692b6"
        },
        "item": {
          "id": "95abafb2-2192-41e3-9fa6-08e6c0985545",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b08d12ee-c107-41ad-aee3-a8dd6dbdb0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0515aeeb-8930-452b-b70d-6326d0aa5529",
        "cursor": {
          "ref": "c148f1be-b59a-4462-9589-0e6f0ac88e01",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "481f2322-1725-4e8d-9c76-49ce123a6eca"
        },
        "item": {
          "id": "0515aeeb-8930-452b-b70d-6326d0aa5529",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a135b79-3a17-40d3-ae66-a019a4833243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3109060-176e-42b7-8636-bc1a415044a9",
        "cursor": {
          "ref": "f20062f2-1fb7-4a79-87b4-8968ae76d82b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eb2cd810-dc89-4453-90bc-dc696a99c23e"
        },
        "item": {
          "id": "c3109060-176e-42b7-8636-bc1a415044a9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "77378762-54dc-4fb4-bdb0-5ce0e8888fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aec7c80-2c98-43fd-8f18-7fbabd1cc5a2",
        "cursor": {
          "ref": "87c4da44-64ef-4790-b67d-1dbcea9974cd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c25722ff-6e93-4bf1-96ae-52ec9b2a2e41"
        },
        "item": {
          "id": "0aec7c80-2c98-43fd-8f18-7fbabd1cc5a2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9412ac2b-80dc-4698-b5b5-9f0f1bed6156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb49ac37-1666-4212-ad27-ea924df07996",
        "cursor": {
          "ref": "684fb53a-9ea6-4da5-bb6e-a24069752b9d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e909d70-01b1-4b33-b685-7ac184735abe"
        },
        "item": {
          "id": "cb49ac37-1666-4212-ad27-ea924df07996",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c9d85548-c454-4bda-955e-cf05ceb2a828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dafdd9-53e5-444c-af71-1cc0df2fe016",
        "cursor": {
          "ref": "c24b4852-eb5f-44d7-9c05-dea7c1035320",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d411e50a-1965-4c7d-a6f1-581759c99e3d"
        },
        "item": {
          "id": "86dafdd9-53e5-444c-af71-1cc0df2fe016",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "32f948ed-5712-4819-a852-8b92dc50adda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae9bcab-f4cf-4034-bc65-6019a3f3a3f6",
        "cursor": {
          "ref": "34a6701a-44f5-49d2-8066-7766053b77a0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9c9e3d19-922a-4a05-95dd-fc9b0883ea68"
        },
        "item": {
          "id": "5ae9bcab-f4cf-4034-bc65-6019a3f3a3f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e2c3e873-f3e2-4086-95f4-5910ead7089c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b5d2d9-6ba1-4c89-b128-b33c4d8c42d3",
        "cursor": {
          "ref": "06ad9c4e-2f91-4fcd-b00a-8101f052d158",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fe720ea6-995c-44a2-be78-d4261d6fb1cf"
        },
        "item": {
          "id": "c2b5d2d9-6ba1-4c89-b128-b33c4d8c42d3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0d2ecbc1-a406-44ef-b36e-1a784cdd55b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bef5de-e105-48bd-95e9-0c73b080d765",
        "cursor": {
          "ref": "c3f0ed95-5ea3-41d2-b70f-305e611a28d5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fb1b9899-11d3-474b-9d96-6dece021cde7"
        },
        "item": {
          "id": "42bef5de-e105-48bd-95e9-0c73b080d765",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "405bf556-bb94-4f66-b0ed-50c533665c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daeed839-c4c0-4ebe-a720-a18b150d29ae",
        "cursor": {
          "ref": "41fd01b9-338b-49d3-9c3a-9999095c59d0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f61f3816-f364-4a8d-9462-0ef5c10792fd"
        },
        "item": {
          "id": "daeed839-c4c0-4ebe-a720-a18b150d29ae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c01747f9-bde8-438f-ae65-1aff846b0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d8bf66-3802-4cc9-83de-13af6d70f3f5",
        "cursor": {
          "ref": "01fdfc11-9666-43ed-9c27-cd1068bc8d1a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1059a05f-af09-4072-affe-1bce849d53f3"
        },
        "item": {
          "id": "87d8bf66-3802-4cc9-83de-13af6d70f3f5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5430149b-ad26-4647-aa4c-ab8ece6f51ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247fd16f-c46e-4707-a4b7-ccb602aa6137",
        "cursor": {
          "ref": "6383e974-f8d7-4aac-aebe-e770922058b2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fe8b5e84-65e2-4d7a-a18f-d0ab90863a5b"
        },
        "item": {
          "id": "247fd16f-c46e-4707-a4b7-ccb602aa6137",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6a76ba9a-498c-45fa-8065-6b5da5702bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f93f52-6988-4aad-b511-c9fd255aee92",
        "cursor": {
          "ref": "8ec3c367-3462-4f73-a412-5e137185ada1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7b34543b-92ea-4241-a43c-44a7ed0c181a"
        },
        "item": {
          "id": "58f93f52-6988-4aad-b511-c9fd255aee92",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c1c3e2e2-09bc-48fa-bd4e-a5b618d7e8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d74f5b2-1284-4a1a-8ba0-55a2ff0988dd",
        "cursor": {
          "ref": "775d6248-1fee-47d6-8cbe-437f0e5bda7c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "47f9a784-3e2c-478c-aa2c-6416e8a66246"
        },
        "item": {
          "id": "6d74f5b2-1284-4a1a-8ba0-55a2ff0988dd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "023af5cd-6a00-498a-9279-4f68764982fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bed8946-7eb2-4049-85bd-686f75422d3c",
        "cursor": {
          "ref": "dd05a200-2b33-4599-8d25-33d305381b06",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c7dddca7-ba9e-4cc6-92e9-89ff30e415e5"
        },
        "item": {
          "id": "8bed8946-7eb2-4049-85bd-686f75422d3c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d35d876e-945d-487b-b87a-79d9f9f04ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244809b0-3a05-4d84-8f51-c16defc26518",
        "cursor": {
          "ref": "c00609cc-1862-43b1-b3e9-530c1d1550f6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0e16f135-59d1-49bc-8833-136da740f9c1"
        },
        "item": {
          "id": "244809b0-3a05-4d84-8f51-c16defc26518",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8a447a2d-e2c6-4d4f-8e84-27db3cd084ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8a589d-2b8b-45da-8fcc-ce2825e4afa1",
        "cursor": {
          "ref": "95299e3b-5228-4797-bfb6-2b7ac6723673",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "426fc05b-5bba-434b-a61a-d535d2fa85b2"
        },
        "item": {
          "id": "7f8a589d-2b8b-45da-8fcc-ce2825e4afa1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "35b6a765-5af6-41ef-aa83-49d044862e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb69fd3-f74c-4619-b04e-f4d1efd660cd",
        "cursor": {
          "ref": "2ca89fc8-d996-4e30-b542-5d32f1d20d38",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0cdbbe9f-ece2-4994-87db-bd81d45137bc"
        },
        "item": {
          "id": "2cb69fd3-f74c-4619-b04e-f4d1efd660cd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2b245632-8a7b-4f58-8966-129dff38380e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b2563d-5e58-4df0-8601-bedf34ee082f",
        "cursor": {
          "ref": "b4877a11-8a6a-44a3-83cc-148e215f6672",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0d0eff33-30c3-4487-b677-651a92d341d3"
        },
        "item": {
          "id": "f0b2563d-5e58-4df0-8601-bedf34ee082f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cd6dd6f0-24b1-4e01-8fde-9a83e4015b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b52dd87-6d45-4d8e-9e98-b96cec9f0c54",
        "cursor": {
          "ref": "b6d64d1c-7868-435a-a5e4-9079a0b6f7b4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fb7db38d-0ad5-4e2f-8684-816e7222becb"
        },
        "item": {
          "id": "2b52dd87-6d45-4d8e-9e98-b96cec9f0c54",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ff70c0c9-257a-4c72-bb51-c5937070cfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6bbe83-d04d-45e0-93a4-3f293ab13da2",
        "cursor": {
          "ref": "eba9e6eb-ad66-415f-9216-e483873b4b78",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "73a620c1-63d5-43c4-83df-471956189ff9"
        },
        "item": {
          "id": "0c6bbe83-d04d-45e0-93a4-3f293ab13da2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "38a32e4b-8005-4d85-946c-acd147cbc319",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba439903-f9d1-491e-88cc-ec5d7dd372e9",
        "cursor": {
          "ref": "61a97621-bd42-4e80-8a98-c5a11285c3e1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f295b06f-8b4d-4125-ab63-c443976ef05a"
        },
        "item": {
          "id": "ba439903-f9d1-491e-88cc-ec5d7dd372e9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ea15af89-ebf8-4bb9-a563-fdfec0400378",
          "status": "OK",
          "code": 200,
          "responseTime": 2269,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "711cc039-201e-40e7-8316-23a8d2fb5878",
        "cursor": {
          "ref": "74a775ac-e3d4-4585-8a9c-0b9c439bd1ba",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "afcc9c60-c9eb-432f-b7bb-127799ec99f0"
        },
        "item": {
          "id": "711cc039-201e-40e7-8316-23a8d2fb5878",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f6482d7a-669a-4719-9b8b-187b477efc60",
          "status": "OK",
          "code": 200,
          "responseTime": 2917,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1f1a1e-2c58-4903-ac2e-308525120526",
        "cursor": {
          "ref": "695f75db-9aee-40c7-9361-94babc740a9a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "605040d6-0c36-4f0b-bb05-b460c6141219"
        },
        "item": {
          "id": "2f1f1a1e-2c58-4903-ac2e-308525120526",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "79a24de7-8792-46fd-8b0e-28bcd7e74b03",
          "status": "OK",
          "code": 200,
          "responseTime": 2581,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fddcc5-0f05-41eb-ac85-7bd393ea0dd4",
        "cursor": {
          "ref": "025ddfe8-f4ce-4661-89b3-b8b90a7f7348",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "59eeee91-603d-4c73-b78e-ee308f48dc2c"
        },
        "item": {
          "id": "94fddcc5-0f05-41eb-ac85-7bd393ea0dd4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fab16f92-c187-41a4-a817-9ac75ce1e2c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fddcc5-0f05-41eb-ac85-7bd393ea0dd4",
        "cursor": {
          "ref": "025ddfe8-f4ce-4661-89b3-b8b90a7f7348",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "59eeee91-603d-4c73-b78e-ee308f48dc2c"
        },
        "item": {
          "id": "94fddcc5-0f05-41eb-ac85-7bd393ea0dd4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fab16f92-c187-41a4-a817-9ac75ce1e2c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bbb8da-90da-4b92-a50d-9039073e4ed4",
        "cursor": {
          "ref": "e815babf-9b19-4218-8202-15f6cff2e0f2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1e3db250-4d51-4e99-9386-3e149d2cb63e"
        },
        "item": {
          "id": "38bbb8da-90da-4b92-a50d-9039073e4ed4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4fd04296-c98f-470f-a95c-1499c54ab067",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068e0149-69bd-460b-b39f-4b0afbf64006",
        "cursor": {
          "ref": "24ee8623-42df-4c51-8829-cd382af15bd6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "abe34a16-dac7-44a8-8de2-30d7454c48c2"
        },
        "item": {
          "id": "068e0149-69bd-460b-b39f-4b0afbf64006",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7ce7d324-8653-4c54-89cf-89a97b00f1ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}