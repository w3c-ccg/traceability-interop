{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7df85d6b-4f7b-43e5-aad2-bdb6d81f1598",
        "name": "Clear Cache",
        "item": [
          {
            "id": "11640b83-c8dd-49aa-a1c7-77892a4c56ea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86ab7297-7929-44ff-bd22-ef3ecd1b1854",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40d9d25b-e97d-4cce-af21-cf1da0634858"
                }
              }
            ]
          },
          {
            "id": "34fa3bd2-06cc-490a-becf-07038880df9c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1fd0aca0-3635-4f8c-a131-12b9fee073e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee91d7d4-4039-4fa4-9cc0-6b1266ee026a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47e82e60-8b74-42b6-ae22-bc0257716683",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0f2d062b-1f00-455d-a177-6c82fa1ed62e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2116dad3-98b5-4523-9c91-c84865308e2e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3547f63-9d99-4f5f-bc40-cf576a05db27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5af2f65-90bf-4ff2-ab7f-513441373c18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb9fe845-6ce1-4d2e-b460-ad22fc5f7b4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "865c7438-b372-4a04-ac85-164ec3ba9064"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ab25578-2a27-433c-90a4-fda3e45b9185",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1a916be-b362-448f-bab3-f33ff6964502"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86204194-8735-40e0-9e0a-063ab30dfe87",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "142e06bf-f8ec-4eae-85ce-a4e5a8a1aa18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89083328-f674-4140-a9d6-d449eae3a34b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b593a533-ec0f-4771-a8cd-a37c796e0823"
            }
          }
        ]
      },
      {
        "id": "537d1d53-78a5-44e7-94c3-1e1822790970",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5ccdc27b-34b2-4739-b4a7-61454508e756",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8d9fa92-e530-4a58-aa00-10a15e912726",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43c8030a-ed09-455d-97e7-c69f36da2fde",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9762e1-4b79-467a-9124-d7cd26994bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b447016b-a3ff-41f5-add1-832fbf80730b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5219ea88-16b5-47b7-86e3-24e3b0691c7b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf221ce-053d-45cd-a1f3-943f697d9647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11e4b6fc-852c-4c58-a182-1f7547a1a46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dc8f82-e83f-4f17-ac0c-e724dfcc846f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db95835-26af-41d9-9319-d5f840e4f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05c2ff03-b066-4dcd-9ba7-466cb7956ac4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8500611f-0e15-49c0-bf66-5a297e3c4dee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "005dc0ad-8f78-473f-bb80-fc8ca1819d8e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816b217d-fad2-4b6e-8a81-b88ad73c2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd74cd63-bfdc-4f7f-a5b7-a6d42fc0028f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998d5709-f297-4335-bafb-b7fe8f474ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa5655a-d1eb-479b-8c08-61823a8ef178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5fee2d-13bd-43a2-b4cd-d17eb3cfa551",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ee3600-3381-41ff-b600-9f23b839a8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38f0a96b-fb1c-4252-9cdb-863fd2155497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac30145f-c0ae-402c-9fe9-feff6bb3e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "96382147-38ac-4938-8e1d-1b22447a3425"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ffe370f-b25e-486b-b59c-c9dd0254f836",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bab746c-bf60-438e-aa0f-4922facc79e3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5917ea1-2282-466e-b61e-035501b13a41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a352e5d0-cd05-442d-a295-ccdd892c1865"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "029f0331-7fa4-42fb-95a2-e49602f794d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9861890b-5c56-468d-970c-9e7cb991e3aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e6bd9a6-ec73-43d3-bc75-a91ace7b4095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "016aabb0-861a-49d6-a1b8-267ab179776a"
            }
          }
        ]
      },
      {
        "id": "81183d7a-9650-4db1-aabd-5b9ed22a3b35",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74309132-827a-4b6d-b656-68b440ecb977",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f8fc397-2d82-46d0-abd5-b18fbcadcbba",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "24a748cd-c5e7-418a-bbc8-2664dbe125c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4059e4-73e5-4bd6-bd55-632f4f3fbab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c72f441-c7ec-44fe-8693-2901b72a5acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0044903-ed94-48c1-8f1e-fdcddd360896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d8d5f43-b108-457c-b6ec-83d63553e238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2847fc-3961-4068-991b-3d164d3b20f3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250675b2-2d49-4232-8fdc-455269670632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd67cd0-5106-4929-88a0-bbcf8b7bb5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0afb00-2c7d-4c80-ae79-e56ab74a2f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08a948af-f8c0-48f0-9d99-9a714a794574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10c468c-c2bc-463b-be96-0f5806bfcce4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b2a161-a082-4e3f-8719-e1ee180a463f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc660d96-bc1c-4fc6-ad5b-05977691c570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7efcdf7-f8e6-4b3f-94cb-65ab9c82563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be4ba388-eaa8-4f9c-a58c-f1a6facb6dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95182556-f9ae-4464-ba99-e292f2250674",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33103b00-ce43-4ecb-8dda-c166f793cdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec1be37-3547-4e68-8bb8-0097a4b574cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18d537f-200b-4e88-be26-9b2110c14e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3d668e-3937-4d41-88b5-ed0a5bf28e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b964079-1c18-432c-8ec9-beae8454c740",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b73b8fc-eb48-4853-922e-167b61766944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6171651f-14f7-4c7d-a450-65947c8e3e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772b90d8-1174-4bb6-a1dc-eac53d42aaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2f0f44a-da24-4c93-8599-846f651671a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b675c391-cc58-4fc9-96c9-e279d9afcd73",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19f285b-0b46-4ea0-8435-27c1593a5943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd39521-e139-412b-8a75-fed303cb8289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a63ef7a-696e-4e42-a6a8-870cd1bf7aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "241a70bf-70d9-4be4-ad4e-926ec4069f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5770b56b-d3ef-4fe4-8bd4-bb1edd63c262",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f749bb0d-539e-481f-a6a6-8290d2540d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0ba9ec-3639-40ca-ae33-1c6f94ad6dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b97631-08d0-4c36-849c-2f9a8b1a04c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0db66079-5c01-4739-8dda-d93043943a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e3fbc8-c1aa-4830-b327-c462329d6c43",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c35357-c658-4a8d-931b-7fb99365c219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e4618d-77b4-4a38-b2d6-49e2deae83d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c90f035-1754-41f6-8092-11f8b633189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07ae0d37-26d8-47af-8581-c20063ccc57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163540eb-8840-4ce0-a90b-5396876870d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bff71b-4e4e-4b88-8da5-d40bafec8e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4446eca-99ee-41ce-a30a-ee31919f9fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c15697-6cf6-48af-8803-99f4f1af9710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d624677a-7a7b-4cd9-8916-f92b89d5bb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d817fa6-d04d-4a81-93d6-1b43f4180163",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4156a110-3607-44f0-9b42-85048be10f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024c0c0b-02e7-420f-ae67-96fb556cba76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff57eb4-c0ea-48ac-9747-87c04e75e435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac97ead5-4c85-4ee8-b4ca-e19c36ce3b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9338b21-8c53-4851-adf3-122e6fbf79f0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd3f0d8-ed32-4b3b-841b-524a02e08433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a58de4-9b0d-42c6-a577-a150dfb2c552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b8562-dbf2-4e78-8f7b-54bab3e6de60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3839fd2-acef-4e8f-9411-5b66f8d23edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a633326c-9504-441f-bd7b-dc2401c1af01",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac53965-66a5-4cc2-8e08-32ad5b9a01d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de4d0fd-7f87-4cb4-b4b0-c5bc4a65d630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42731135-a80c-485d-a7d0-fdfd37d9c867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "495add0d-14eb-4d65-a5a8-65d60ff0d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1dd8a1-8dfb-494e-874a-d912dedcd44a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccb435f-1b22-4786-b54d-f8f3b85a3132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f10fc9-f739-4630-bf3a-87375ee49c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6833d468-0d2e-46e0-ad46-62ad94b4d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fca7a553-8431-4d6e-9dd2-dbd7d0fa0f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae102e0-a18b-413e-a8c1-13f13167e040",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e001c283-665f-4c9e-bc97-b9f1f7af3488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cf3247-d955-4f86-b19e-8dd0720e329c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab56d150-6e5a-4a98-aeed-19b81c4cafb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7442c58-a778-420a-9186-341e7ab5aa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527214b3-9bc9-444b-87f9-aec63778677c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6bde75-e0d3-4dd9-9343-9424284d3dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb135fbf-5c8f-4ee2-b9e9-c3baded02fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5b9ff6-80f3-4609-bbb4-d86a092e5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8750237-9c6e-4851-a257-3137460081ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cebb5ed-07ad-442d-a9c3-7cb3654bc2f0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9217ac2-9e98-4767-b1ec-3a6f9139e64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96078ed0-4c62-4f3a-8321-1e3358a292e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ac0057-c0bc-4b87-977f-5ee4364e00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c05e8ac-ab67-4a1f-9684-8e7f74f66a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84a0882-dbed-4063-81fa-377510bd01b9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96d24b6-2a42-4ede-83b5-94e30c98de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5833c6b6-5333-46ce-9c2e-e99227721292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f5d1c4-a9a5-4344-8f76-1589e7b1ef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83e91fd4-012a-4e56-b233-d0b4ea2d0269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f9096-0d87-419b-ac21-cd73ccfc29aa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1be93e-0866-4b9b-a94a-28aa479447e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc4853a-2e69-432d-9a9a-9286f2b391ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be83d49-48dd-43a2-9d6a-57afeede880a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42edc93-d26d-436a-8994-cb97cd15c665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effd37ac-9834-4c44-b03f-21951db4a5b2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2586c0-58cf-4e93-97e8-7975bd348554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d531b1-2275-4857-ae93-7ea535c7d54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c18514-b19f-4e54-a183-affc7a571d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f218e41-6f53-427d-8d5a-5e16820f194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0da671-634c-481f-8b5f-f84b3abcf874",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc752f-a315-4d8a-bae8-6503fd8e66be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40048413-d748-4cb7-aab4-47bb346ea1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d2890a-e708-48c8-86cf-1201192f3821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23fe1392-dc89-4481-9f78-ba926be4e0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b007aa4-093d-48eb-8078-7154a22090ec",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa1bc80-4149-4da6-9662-8fb84232fc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a582ccb-83db-47a3-b021-656503830131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ded9d7a-d188-46fa-b554-d7b4de01216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb474df-ad21-42c6-8295-4d286c3764f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df9ce46-c5b1-4767-8c08-e9e7af1a2ad8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68964290-eae4-4be7-9e0f-7cb55b856e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f54a7a-e2e4-4f49-b76b-1a08ad03524d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd8cdc0-b6b9-4ec8-ba86-b2dc01dc3f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e13cf3-a71a-4888-8c20-fcf918ec44d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f335b8cc-1413-4f0d-b4b9-cd222c41bdfa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d1dd80-1b0e-448d-a1fb-eddbb9d42b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ea1560-303c-4662-9933-0112d0b90ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb288117-5e24-43af-bba5-ad851b7a5db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8402f5-60f2-423b-babc-9b1e543e9577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34477dc6-96d7-481d-8a03-623715129295",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d6eb6a-2c92-45a1-a743-202344b85bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca38a4a6-2434-46fa-8388-6564171a21f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fca55a-5bcb-495d-b015-6e060891d47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c8dca7-ae5d-4f36-a0b8-d092f68a6084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7304eec-85f1-4d59-a38d-161059a00f20",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07dfecc-ace7-40b0-bbf2-af7b7838f1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae8d097-238b-4694-8fe9-30a2bd765c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3888ca31-0a9e-4ef9-a71a-7f5ee834b798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "362aef89-0cfb-4679-a3df-e1b91a241262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d394509c-78fa-4507-a6fc-25e6f8a01f87",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96300774-418a-4780-9c2f-6f8b894a785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b3f69b-e3f4-4349-86f9-082e599c7ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9632475d-4399-4e30-a34d-eafc086b2378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "024a37f3-32c7-427d-8ef2-188bb7914f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e5f5d9-41f6-4eae-bffa-053aac31c77e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebeff4b-e276-441a-8e5a-65128a6dd789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ef4432-472d-497e-823c-e424a3712885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691fc540-6876-4af6-9768-d1b9d7615eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "295fb763-52fb-443f-96ff-bf81e8c24bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cd3944-4519-4524-ac0e-e50b63f41f51",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74d0c82-f386-4dce-95f7-38dbdf8a8103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71363eab-3cdb-43bf-a1a1-46b76c12a1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12b3825-76ab-44bd-993d-e1a2be05c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc3d8de-ab79-4b23-991a-5976e7727070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a88b3f-5d37-47fa-868f-37deda7e3cb2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924194fe-5cde-4ed1-ba48-e69e764e3837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567e8373-6452-4db1-a0ff-d84f8554892b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c40c759-a61b-4270-bca2-3113ea387674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a097f96-2178-4e88-9d00-b5e80e6b5789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1692c168-0396-4f69-a5e6-b459b90309da",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f7d4b-1675-4d72-8707-033849b6f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8799eec-edd0-43f4-8027-d85dac7a0f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1795642-e2a3-4131-99aa-2524739fed1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "be054072-59e0-4ce2-bba3-2bbca93d1d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28295ea-4596-466e-8656-82a25303064a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30afce0-ec6c-4ff1-90f9-bd1ad39b24ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aeccb90-bb7a-483b-a764-f674c6cc6ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0844ce20-fa38-4deb-bbf6-8b81efdf9747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6a8a4a-0e8b-4836-a514-3840df6bf9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1567985-83d3-4c84-ac32-3eb77c54db3b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908ea466-9f8c-4b9d-8ddc-ec50463ade11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5a2d35-7b50-41e3-a0b6-75e5fb6693e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa3105f-1cfe-4f4b-9de3-9dab4fc9515a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a601f5d-f622-4640-9609-f83fd4e0c40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37569389-b8b2-4cd3-a38e-eec993c8221d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd08e360-d259-4b97-a62e-0cf05d5fb667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20b0d8f-bab3-462d-912e-daeccaf739cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb05c6bf-e3b0-4082-b322-00a3e7b912dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd456ce-f2e1-46ef-93fd-a436ffe82cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adde8e4-9356-4f45-a4c4-dcc36b6e9fb6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccf5c77-b6da-41c1-ad0c-e5dc1fc2f010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e63611-2482-47ca-974c-cf780beb3069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb2dd98-91a6-4386-ade6-27b5488185cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "870f8a19-7b48-4b4c-8762-aac2738d31cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7831ecc9-2254-4da7-9f42-1e9282b841bc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b55cb57-bf83-45ef-8335-3ce19a96b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e65b24-b71c-401a-aaaa-27bb6446d994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67ebd31-6058-4749-a154-c4bc471acbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cb42a7-a6f2-4b9a-843d-410012ac01b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176485d2-7a9e-417f-8227-8833c77e32a8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203b17d1-ebaa-48a3-9584-c3124f8eae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5129dbe7-4b27-4fb4-a240-ed247bfee88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e5a4a-a949-4b0b-ba6e-161ce181c6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6420bd3-e0bf-44f6-bc64-cafe843a7933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5cccf7-163c-4e21-8584-f1753d2699bd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15050472-e533-47b3-b7bf-a60355e6c8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b01da8-a0a2-4a3f-b0c8-fa150b889619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4fe597-87d6-4207-b3df-18086fb5d971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f577a685-f43f-4ae8-a848-e22bc36aa5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a8d1c7-5099-4c2d-b757-6eea07187a6e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64821362-54cf-4b92-8100-68c8bb9ad656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28a26de-e97b-4bcc-a8db-46c746104022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36420dd-9422-4bc2-b617-358c707c422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc243425-778e-46b6-b944-faf506d67dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d48c53-52da-4f38-ac7c-7421368617d1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb1e404-9baf-4a4e-9f71-df62269334ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebaadc0-4b4b-4a0e-b6d4-5f75c10fc631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05854dc6-776b-4f5b-857f-87b9530f719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e78bf3b1-f4b8-49ee-9d93-1ec7efdaf092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aff5878-ce84-48af-825f-059584df3ac7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f402d9ff-d53f-44ba-a4e2-653bdab80799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25ea52e-7b22-498f-a309-a0abb3b82639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e55d672-6e12-453b-ad06-a96a761277aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26408849-f872-4b26-995b-70b47dbd6bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba817c0a-6094-40ca-ba68-e03576b70c45",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baecb22-4f7c-4d5f-97a8-446780ededd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d387cd29-490a-4954-bd51-888a009c9418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02047272-f8fd-42c6-8996-d81c17b05f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9de5d2db-7507-4ae9-8518-3d5508580ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfb491b-c914-4b13-96ee-0f04224ef83b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c10acb-c896-4aa9-bc68-36466e62ed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e6e985-6d57-42a0-b5d0-d2f638f35017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747f6c6-7a15-4197-84b7-8278de545ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8afb5266-4293-4607-8eb1-f4e09e547ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2770cede-0acc-49ef-957d-072a0df24d53",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d062a45e-c7c8-49fb-b263-a0775ef7f3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713c5e95-c73d-4c0a-8d29-32df983fd98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31b5850-2947-48a8-bd61-a6c395b0ee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26a7512c-b7d9-484e-bb1b-8a417198b1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8154dbdc-26bd-4763-871f-5a14b3e1f334",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ffe108-0eef-4ec1-be81-b374e274f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7615214-e50d-44f2-b65f-7603a3b6a30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4c3a69-a414-45e2-8ecc-5f39f76ce8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9a97f8-dd7b-49a2-90a8-f55a7549e39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72892c2f-b3a0-4df4-aee2-27e6e8459787",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c509198d-0136-457f-b22e-87c184502873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d1de49-4cdb-454e-ad45-edf99ce88e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935af89d-6038-4052-82ab-f14a7e8737da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c4f8a9-d62b-4c91-a514-85be7a0e1fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cd166a-8b46-4e0b-ad88-a91126dfa062",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d206a12e-11cb-455a-9e7f-0470e56a7a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ff2687-f4fc-4bd5-b4b4-afc794fd3bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8901fd6f-3f02-4ef6-a998-ac08c106104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3354a9d-88e0-48b6-a08a-2965f0cf73b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de34b5-2af5-4a69-a1dd-93fc5547f82c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f6e339-2607-43fa-8679-187273cabba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9418773-0fe7-4847-843c-1d3334e38967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c2df2a-4b9b-4365-ae2f-53575bb7104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b29b06-6bbb-4a0e-846b-5746bf5e8e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdff6df-48fd-4613-bc44-638fbf0b5287",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09ce027-1f1e-44f1-9070-e9555242397c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f8f477-0df8-4ec7-ab3b-2f4a98b3e31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71269fb-1a82-425a-8060-fcf8a3a6977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f620a9-7b7c-42a2-8399-bbdd3ef8155c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2826c04c-4a3c-4eff-a15d-20293f074d9a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d50b906-9028-47b4-8ee2-5ebbb2121ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911973d0-3c71-42b3-98f6-c08080eb77c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf06187-2479-4242-b525-4f43498042f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3daa05f8-93e7-432f-9d68-9ec047d27e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d51554-0b1e-44ed-be1e-82cb925f090d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5cffd6-4173-4578-8edb-b041b720f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e760288b-aba1-4fd6-b5fe-79f4497f1a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426b32e2-30f4-47d0-8dd0-a99502e937fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32a9a7bc-b16e-4034-ac6a-12bf7d558967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e770d835-dfb7-4ca9-b550-d6df6d088b2c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d6e5e4-6cc6-4d27-a138-9870a60cb67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3546e2b4-0fb0-4e82-873d-db5fb3f82b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb859a8b-fe2d-48b1-9590-c3d31786a816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e94654-af0a-4a8c-9746-474a5c822ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f70231-6b5f-4392-8adc-b0acc6d41017",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee4ef2e-e707-44b9-b777-41eba1774053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bb8ff2-23e6-4b5b-b4bd-ebf1203b61cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02112d2-10e1-4356-beb1-a46fb875ba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a0528f-082e-47fe-8785-a5ce26c60506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad64d91-d3b0-4b7b-b77b-4411b9d179a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ff7508-7bfe-4e93-b4e8-e24c66c1dbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9d2cb2-341e-421e-977e-4e20bd588e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94309675-c5b8-4f2f-8b72-55369567df7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a8d8ae-6afd-46ae-b17e-336dca2e51c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6061d62-a4c7-422c-b4da-b0d054c701f3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccaf14b-c674-45a2-a9bc-3f90e2f64ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd44ba8-8ef9-4460-bd55-84b3de5c41d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d8c022-923f-42c6-82df-a28b7db201b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72346e80-9209-465e-ab96-a53c8122b6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9df36f-79a0-4ba1-83d7-7ba7828e1f62",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aaca3f-8bb3-4fb3-af13-1327eece619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08196ead-1d4b-4b4d-8fce-a67ea38718d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230bc266-a182-48f6-8773-e5eab96f56ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d19c502-01a8-49a9-9486-db742ecb1343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a4dee0-aefe-4e2d-aeb6-6584c283ba41",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf3ed5-9a56-4a35-b10e-e5e48b38b5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ae15fe-0a2c-4e11-997b-d01e983aa636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c92e0ca-a153-4530-a503-97356a56587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d1262071-d958-4d15-96a8-0a27c2d3324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f630390-1a45-4171-a19b-fbf3bea65569",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d4c686-325c-40ab-b76b-9ccb728c48ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754e4d3f-6773-4216-97a7-841bce1d3fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c252510-001b-4684-bf52-da9083c9f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9795af-a537-4437-875f-502e3edac210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8c0cf9-e168-463d-a863-7092de458dca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8518874-b97e-40a5-90a8-07055c11ae5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1bd1af-9d13-4d1b-b07b-fb95ab3094bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d762bd89-f9a3-4d9a-9c3f-59f759416770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d482f581-74dc-44af-8b2c-aaa687d86442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440b83e0-3d17-43d3-ba8e-40d59f12f876",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fdeb42-1ea4-45f3-9ecc-2f0b84f66631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684609cc-b18e-49ae-b68d-63ef4bfaf027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d62bac-79e7-4c61-bada-63c2dfe5ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "682a7abf-a89f-4478-806f-0044bee58307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f48057-787e-4e13-a5c2-0e40691b9d76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ad0d11-a91e-46d5-ad03-9aae3fad3075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da6f4f4-80a9-4c04-9db6-9ed7d29fb399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2f29b0-1d3b-447e-a26e-521c2f5e0b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c166b2-15e0-49fb-80bc-e1c4829d215b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a1faca-4928-477f-84ea-2b362e8b99a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d6738-c844-4269-80b5-d5e3c0be575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e7a21e-87b5-418b-897c-1bb9346da641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922f77b0-dbb6-4d39-bf5a-7a16728c6431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac84727-db6e-4101-ac37-7757c4abf8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f46196-a5ad-418b-b477-a5a32e091108",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b3f81-4c44-4dbf-a8d9-5e586b5d3ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404e032c-e105-436a-a61b-75f0f47b9f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90de0407-8224-447f-8475-7d3e2011fb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "51741761-2be3-4a07-9df1-0d23facc36b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1ac071-bf3d-4623-8033-35da2d0f0252",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fc88b3-8506-4b9c-87b4-ebee1e3d741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171ecced-a7d5-4d2f-b6bb-472a426a2139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb388180-17e2-4852-967b-f98cfbffb297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ade372-57dd-4996-90b7-29032ae0c0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93d8e69-7fd9-48fd-9d91-8ba1ef840fe8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f0be82-f3fc-4939-ae0a-7c5e7a2d9120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb514db-5677-4e7d-a49f-1446596e86a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1ee3f7-a9cd-4b90-b123-32ca76557837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bb7bea-789c-4343-a30b-e8bb6be73b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feff022a-e9e4-4c01-b567-f1a1c83a31b6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b084e180-c3eb-440b-9f69-215b02262eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def2a711-9f3d-40be-b18c-24dc8deff54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5db6b0-cfc9-4641-901e-e13d6a709404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a14118-00da-418a-a17f-15214dc7d396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c119f3-5736-4873-8c11-415bf661a90f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fba26a7-42e5-426a-9044-964ff5311bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bbf50e-4d5e-4e09-8f60-ea045b8ec7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c7f003-9bcd-4495-ad07-ae7e837370dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c9cea2-6afe-491e-a162-05bbb8c7adce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b077ea-ee3b-45ef-8d21-167df5f30f4b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385602a9-ca77-4e57-91b0-9687fb54961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda6451f-346d-4f2a-8405-9e54b72d74ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31de9d87-cefc-4293-8419-1eb3047ca70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1e6c85-51f3-4f4a-9d4a-6562ba39fc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96425cec-a9bf-4af9-9e18-2f4ad8f94fb5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f927786c-e1da-4fb4-85ce-b2e39ee6e26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5da556-6479-4fe4-963d-2a742ce21a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da13706-8696-49c5-aaf7-98c9c4cbd8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97b72b75-8888-4142-8dc0-b298f2ec54ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afd7648-cf23-4f70-afa6-daeb0f7504d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3985d434-4e36-46b1-bc63-0c452259d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06295f15-2721-4ed2-8160-d88236d73d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286f9056-f589-4978-95ad-00d9a12e62f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c810a07a-3334-4ee0-98cc-295af844a95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d5ecf3-4161-4894-ad09-e5158ed763ad",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349ad5e2-c246-4c5e-8008-b5bc4b98c6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885d0210-593a-4cf3-a195-7908b69dfe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fa4bbd-cd2c-4850-a8e8-70dc361e2ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2af136a-b187-4665-a3e0-5752658b65ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c64be7a-186f-4240-9798-2cee288abf4d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6d9722-96f8-4565-9f1d-fecbbd317ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cc0c0b-8e34-4bb9-a555-638b3faa7392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05467898-ffb0-4db4-9582-c6025d291cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02756f3d-3b90-4430-8b5c-4cc34de5767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1598265-76eb-45b8-9746-3e2cf51f047d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e502d0d5-eccb-4364-9f1d-76dc75268841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e8cef-496a-4de2-ad95-299f78d23f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68bb367-b06f-45a2-b9e5-a8783857552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c55e866-bd60-42ca-9f46-65e46a385cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639ecb4b-0af5-4e89-85ee-08b5097101a6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e65c982-443e-4810-9a90-d54956787370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f32ad91-0357-479f-9085-642094495e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7fcbc6-f333-4be5-8baf-2409fc10abe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39cf699b-e112-4e4b-bcde-4750e34be3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be695c4-f13f-4056-a5b2-f44a3724c7a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee45008f-12e1-4792-a3ca-336b28eba85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8005e08-4008-4c7e-9f72-5064d6366b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819dd15e-fe0a-4860-a120-03d7c6722527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72f4f95f-736d-4a8f-8e87-baf0b8782109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde27377-0526-4df7-8664-fec7bb97a918",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47063b70-fd0f-499c-99fb-bbe12162351d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e04df57-dd4b-4fa2-be6f-382718d1948c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418cded5-486f-4913-98e8-887499387f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb07c2c-a275-4383-8791-d065dada9ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a248f57-dd2d-4b01-9b25-22a63500a675",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cbe4b2-6911-4212-9a8f-d1a96550d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436fa79f-de47-4680-80c4-1dd55fbf2a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c9b566-e619-4c30-994e-957fea4c687b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b8973c-3456-4ec9-b38e-3c473e21f12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4296b9cf-96f3-47b8-82c7-2a79119157b9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee2d354-62c6-4a77-abe8-76d8e8026dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d1279a-6f0a-4191-b54b-c3daa8f675d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a5c1b9-1ada-42ca-b12f-5bc648328c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d16cda-20c8-4d12-a3b9-db511b2168b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e4ea2e-f379-4f84-b831-f2f1f5be55f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec67cd9-d82d-4755-bda0-242a55bb7f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f986cc31-6dd3-492f-8c39-9ec74afbe9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6598d330-ff8b-43d7-aa7b-1d24e653ec8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcee57f4-81fb-4d74-b56d-1f2173f938cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d84021b-2e6c-4075-995b-cb5eb6363783",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1c8159-62e6-407f-81fa-3701a6350c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbe3d18-929a-4163-9227-84288d7f6b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeec26df-0ecf-4388-9666-9d597078834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb93d533-7ae8-42f5-a537-f91ab9150e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60842610-89d6-4586-8bdc-0cca7d77de62",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed195fc-5177-4b4b-8a04-98b88a6d6672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba26f2-0ead-45c2-aaa8-f9be32332021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98ac53a-3a1a-40e1-8fbf-bb4614ab36a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd77436a-2582-4cbc-840f-bec12a539b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987c32b5-4d05-4ed8-9e46-d2e0270c4105",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4cd42b-0dd3-4112-8b0d-797301355f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98677b89-95ac-47f2-aa25-c2d0a6ba65ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4e9440-4355-4cdb-8101-3379c8cc6e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2c51b1-523c-417f-a890-14e50ae45ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4d6295-a557-4192-9389-dd7dfae1043d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e7094-a1a9-452f-9760-8dd37215c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497dfd88-a2fc-4207-bee1-d3f3f2b16afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ee6433-48e5-429e-aa15-f9c172c9b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d165596-c062-4375-aaad-e94ede28d474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9976d127-472d-47d2-9294-2a51796b7a19",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f225c228-f50c-4708-8454-fae1010bfe74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c38a2a-96fb-4b8a-a434-7e0ded6c8f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5a2123-a2ca-4bb7-9960-ca0cfd2b093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b193ef-1906-447f-9c79-2aeec1d49483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59428f0-c92d-419c-aad2-c5c89473c205",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e0cec3-ec3d-466d-8705-3d06bdb3b33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f113e97f-1e39-4f92-89ea-e61dd85c370e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c597e-fff4-44b3-9fd8-80a17d12370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24dd8c56-c004-426e-9ec1-e5354dfff80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538dea6b-5129-43a2-b4e7-c8ff82085851",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf562fd2-6149-40c6-ae3b-8bdf2f620c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bf423a-6c53-41c0-b113-dafce6e473ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e662873-e964-466f-8eec-35a3000cb9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f92381e5-5ced-4d3b-8196-d78c866e41ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a593e097-4b9b-4094-8d66-542d0eed25b9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7773524d-bb44-4dba-9b95-d4396dcbc073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d879e20e-c857-4918-a4e9-a9fd268f3eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676497c2-ec28-448b-9fbb-195f96c652c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2ac778-5cf1-4e06-a189-d07b598f9162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935643ca-f168-4858-9ece-bf9d9f916d89",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c6bbf5-7f8b-4912-b88e-463a3633e4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895e253f-5233-4ec6-b87f-d6b0f06fad87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8325b3-6d63-4592-8669-0e6b8874516c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6672d954-b674-4860-852d-457ddbc8d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71863336-e56b-4019-b0e1-b929edd2996b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fe9a3c-4f8b-46b5-bf32-3a44a9e60f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e0c3ff-768f-4f78-b115-b80da1294b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b935fa-1f74-4f7e-a97a-7a49a40a4bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c59e383b-c186-4356-ade6-234060beaaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dff3aa-ecf5-4803-b778-7794bc990027",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250ba3f2-f8da-410b-b94f-03b0a86a5729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173976b3-17d4-45f0-9474-51e57ac86101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca26ade-2945-4c96-b574-e9b6d4ae1edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc65fc5-f619-466b-9aca-64d912e3bceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e471358a-ec41-43ee-86fc-b903815c3d9d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e0aa2a-696f-4efc-a729-f91213736a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca13ebf-4f61-4df2-ae96-6d9d389ca6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0bc719-a6e2-4c1e-8ade-8a55af941298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68848ee7-f432-4a2f-ae92-117580020fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc4cd63-acdf-4fb2-83b0-861f18c76421",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508e3a52-7fdb-42c7-9743-6a1997121b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1438d9-bf52-4264-a78a-ccbbe69b8e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca23711-0b16-4f76-8550-e0b1bb6610e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d015b5f-bb40-4c8a-8b92-604c1dab18c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c885cd-03f6-4c06-9eb7-53fbfded3bdd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2afe14-ce74-45d2-86c8-ab4301bc83dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "babe7b18-2745-4887-aa5d-39475d08c288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13571066-21b5-4e14-9089-9b89a8a5d7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e4bc7e-7a0c-45d9-bb96-6f0dc5f4fd47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5929c5e8-a195-4deb-ab74-2855932b38f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6077132-4181-4b62-a7bd-c4d8b59d95a8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611a6aca-f5c7-4c26-bc6e-af8978dfac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de65df56-9844-4a0b-86de-3e6e1eb9ae54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d7a458-7b68-405e-84d9-480c07e5d708",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e78dbe2f-8da4-4cfe-a836-273d9f48c3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bc3282-b2e4-4002-8fb5-7514a3891f75",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc537480-4425-4e16-bfbf-9be0b2811747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e121f9d-2e35-40a1-aff3-550cf71605c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d9d787-b148-4530-b344-095eb21389af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904758ed-e75a-4ada-8efb-135c9af27de8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12954803-7de0-41a6-bbdb-345d35c40a12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40df9927-1a76-42ec-9991-4946a0421234"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1d5dbcf-3573-44b8-99a3-2a6f5d37d0f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eafce713-ee38-4d00-966e-933df8c22997"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af60ceb4-ffa2-4a0e-b495-235ca1e44b63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9faf2a4d-dff4-4486-a3a5-c37005711e64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14040b57-7200-45c6-99e4-6d621a043b6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0363cd5-fcbe-4e8e-877a-20e06c4ef72b"
                }
              }
            ]
          },
          {
            "id": "81889f43-0017-4a0a-b1b3-a0bf1c686b13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5536a659-9f73-4d3f-a0d8-6ac4ef07ce7c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7274b05-7a61-485b-9249-a71fb1f67c39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72365f13-e113-4520-8624-b568e708a770"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77829007-d0e5-4592-8899-503fa56f1e9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35383070-5cda-4b7d-891f-c15654de110a"
                    }
                  }
                ]
              },
              {
                "id": "a8bd087e-e195-4cf6-97d5-1b46bc173517",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c76b751f-e502-4d80-b8cf-0b27f5adbecf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3a36b8b-eb78-44cd-b49b-2024557b4785"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cf73b70-770b-4d5a-960d-67e1ffb98b6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f911c2b7-832b-407e-8c69-94de30baeb83"
                    }
                  }
                ]
              },
              {
                "id": "780f406e-f16e-40ac-be5a-5cd51c4e6e4e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89f1dcae-dcbe-4bfb-9cdf-4fd5d35e1db5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c4932fd-5485-49ed-a91c-7637244f06d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5ccd41b-d4d6-4c76-9879-c09b693ca93f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "351b49b0-044d-48d9-baba-ddd7ceb5eb3c"
                    }
                  }
                ]
              },
              {
                "id": "44702198-9dc6-4b9d-8dd0-08cd92d29d7c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85233918-6c5d-4388-989c-1a0a7e2873be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1a337dd-32a9-476a-a81c-6a9679615ef9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bf7706d-e7c0-48cc-b8d4-06642fea6502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6c71bcbf-fc3d-4d94-8eac-c8cc2525430e"
                    }
                  }
                ]
              },
              {
                "id": "17dda01c-93fa-4f7f-b513-50aa4e3c8ed7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a2a80f-08a5-497e-8551-cc67a91944db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cd25ed4-454c-46fb-9848-b8984bdc8848"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96bd2d9d-f21a-4e9f-bb1a-f7e02b353a42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66df085b-22f4-4a27-a208-53eb27ed3621"
                    }
                  }
                ]
              },
              {
                "id": "a56f2435-1fe3-4cd6-8338-5aac70ef419a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a1c8fa0-b1f0-4bdf-bea9-c1e312320b88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c396cf88-af2a-46c3-9699-2688a9b91aec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36812b56-983d-4cd6-b108-a0c28173a723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4addc29-e0af-4f43-8a84-9ba9fb833f8b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c5976c7-a7fc-4e81-b18c-45c02a85d9a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29b9522e-9b59-4507-bec6-cea74f488a88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1156e775-0b31-4e8c-a777-401b2860c159",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d9a3398-a97f-4fcf-a1aa-296a068cfb02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30bf13a4-0f9b-4565-9edf-74daa7736c1d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b97c29de-8c17-4e2b-8a05-8f7329a086cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e401236-ce43-4796-90a5-a981867c6c95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3baa415a-1ece-40db-863c-40385197f2d3"
            }
          }
        ]
      },
      {
        "id": "96ace079-4795-4456-b384-c259fc0abd52",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b72101b7-d5c5-4053-a9d1-d325dd4f904a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "108ec03f-59e0-4902-aa03-9b618c8c6bf6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab94411b-4bb0-4756-a7dc-f56ec35d0b8c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137e25aa-c225-427a-8fa3-1a324a36cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdea6d6-ee2f-4bbb-92ef-c9c2316ecc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385e4049-aece-484f-bb4b-07bf187b9b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e5bc8b-7c96-4a73-b0f4-d5fac174daa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877bd37e-acea-4000-93d4-fb91af5500c4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d156e0-ddd3-4732-8093-094dfe812f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1508c85b-287e-4cc2-bbad-62da4f4b6daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd02585b-9196-42de-93c9-ed4282f453f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98464a4-9f6b-418f-b685-2426be40ad0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a00d8-2161-47b0-a46c-4e3ebedbd47a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d62fabc-c683-4bc9-97d8-bc017f6d3613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254f7951-0e9e-4438-8df5-f2da9b4286f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a1c6de-ef70-4c82-963b-2bcfeee75c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2a46c1-429e-4c86-832d-f44f0622075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db800a46-a868-407b-9279-5cfe3b1b2575",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d36fae9-0d61-44ba-9e60-fb3e5ee3f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccebaf4-b725-469e-94a4-86aee8c9d4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a4d355-9a5d-44be-9a96-6c80fe18244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caad72ec-8b8f-4d98-b043-856dcccc6d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3f4594-7f3d-493b-83b4-568ada11993f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a772f7-844b-41bf-963a-43b199940dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73db0819-6fd1-475a-a7d9-0f1eeb77d007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b4935-1b25-478a-848b-619eca83f479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae73807e-d1dd-47f1-a849-e2cf6c69ba48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b26fcbc-b54f-41ed-892e-00bf08f8ddb2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3650d1b4-c019-451f-b76d-0ccacc7be32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a650e2a0-6c72-4704-90de-d1a1243cd46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebdb438-4677-49d3-ae3b-b96f65cf389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f08e2f74-725b-4b4d-b705-4ba1dc433a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec11e40c-2fec-41fb-8ce2-9f5d0881eb36",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0989c-4226-48e2-ba72-7feb1348b0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814f350d-3900-47bb-aa52-ae2f8c3a3e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666fdd5-63b5-430c-ae8d-21d4c659af23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b1a2a3-368d-4223-9d28-a266bd73e4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1834ad0c-4094-4113-86de-37f7df764b94",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86727035-c8f6-4531-a179-e60ccef896b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89749cd5-2252-4357-b516-55e76df8c72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd30871-aeed-48ec-b7de-c71c3b15a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b768fca-c8a2-4f51-91f0-70719284bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a90cc35-ce77-4eb8-af14-933dabb16fdb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b26533-73cf-4e18-a2f4-ef3ee641d89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168c93f1-822d-475e-b04f-103c8915fddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b39f53-2c42-4930-8b5b-82c1be076306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae6c7df-1735-4209-8e09-41d4070d96c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d62e2c1-9340-4b1a-af76-57b3380b98a0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edaf537-b9f5-4109-bead-459e4a7645ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb924c2-7c44-4602-ae5e-e12bcd9ef047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648aca02-022a-4849-bc36-05e4663beb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e73b2d28-fad3-4aed-bb0b-7bc9b17402f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dd7123-aae0-48c7-833c-3addbf54f0be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be7bb00-242a-45e1-bf56-8355100debba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11316317-a701-4af3-a37e-69384124aff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83652336-a213-444b-970a-fec7f1803889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7bee87-dde8-42b6-a064-470577dccb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30c4ddd-15f5-4981-a59d-39b112a31efc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5031446b-eb12-4222-ae26-667f9fda5cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb90ee8-b47f-4ec5-9ab2-aee3d80183d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17532fef-7ad8-495c-b3f9-2a6b46cb5d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79f33cf7-82fd-4153-85cd-531ce22085f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9c33c1-6686-4822-878d-90afa258e990",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c67c95-1921-4235-bd52-d219b3026d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812e0bd9-b7cb-4415-9193-e739c19af48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc7fdd-83b5-4fa8-8d9e-c2a05c7d1e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "669ccc9f-760d-4400-8ba9-f247c03d5fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3472509e-9a37-40c9-ad8b-1ddc31af2e20",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb23bf2c-cf22-4f61-a0e4-7ed8a3c7ca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47d5f37-69fd-4408-bf76-e0d3d457b0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d809b10c-b07a-48b0-8ca2-18490c1420af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "454c636c-166a-4787-902d-87caa61f364c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20b4ca3-c2cf-4a67-82ec-8dd4d0d9cbf9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69606a7b-7cf8-4210-bd99-71b4980cf33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f5d7de-7b1f-489f-9c91-1bf52d89cc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b14c21-738e-49a9-9322-a324ec532c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8de13249-5e29-462b-888f-3b0b7ddcad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b5292d-673a-44a4-a833-5a9cc8dbd5b2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac63f68-cbfd-4337-9d25-2ef384582a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f6f993-6576-4cf8-92d7-671a3ef24840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4cf43-23ad-4b97-9bf2-f09a070ed9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d096ea-9037-4314-996c-bb8bbcb50fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d8d7ad-ec4d-424f-a1db-3c78c4593e60",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d8bd14-440c-40a1-8838-d51d8b8536ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2270c2e0-e6d7-41af-9001-b2e390a54577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af0da50-c8fd-47fb-a6c1-04b3f37b67ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04570fd8-aedf-4163-af97-ddcd2d8cb654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45160a08-0916-4454-b439-30c2c5460768",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f1847c-c582-4c3d-9124-9d5139e0d9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db47b7c-36d4-442a-9b07-ef32ffdbb4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde51c07-39f3-4291-b649-1178a4b86c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c243a182-d0f5-4abb-9a0e-e8107045c270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619a8842-6fed-4281-981e-2dc2d91ec8fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba99314d-fa14-4a4b-b3aa-e719bfbc4e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cda35b-7ad0-4883-a9dc-050b8b495689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b78d1-a41f-4a0a-bd31-28f6c51f6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b79dc7c-2067-4e1a-815b-48fe9bedf0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2a9fbb-c4f6-4da5-8042-5f62f7f246cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6e0617-4bf9-4a62-a292-6bbe3c2e01d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6627b7f4-48a9-48b8-8fa7-6252433ef21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9595f3ef-774b-4cfe-b9bf-ac05251ce75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad91676-e428-4715-aec2-ecc717d86ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515eca99-e6c5-4d18-87b1-18174b62536c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e100ca2b-9b9d-4cfb-91ac-75faf5131164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05239775-afde-4fd2-879f-65c58a981302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac775bd-4bf3-4c0b-b9a4-8dda5b260456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a6857f-49a1-49db-95c7-1bf2d1d44933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b099f60-a5fe-4081-affc-1d29ab6646a9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51575772-caa1-45e3-92f2-f18d2e6a0aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacf2adf-8995-4f9d-87cc-9201bc64503d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c841880e-fd30-4ba3-af84-fcfa5f13ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85915d01-0ad2-46c2-b77b-673bdbebb628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b54f497-9c44-4ebe-85f8-3d478637b24a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce75e2-b3d5-42f1-b7e2-99e18c7dfda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd980c9f-f291-4fe1-9016-d2b35aa73b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daeec98-f72a-44b4-a324-047c3ba80f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d89f019-f8f0-4bc7-acca-01f80581d0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5b07c2-ee0a-4168-b113-7044694ceab7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b586db62-e8b3-4234-ad59-b6b65cc9e36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14757343-3373-40d2-88f8-2f3966969774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c323961-0c58-4899-a462-f9f1ce0581e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f04303f-2d93-46d4-ab84-9c6a18a52c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12e3185-9896-4c89-8bfa-7a1e80501fe9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cff1acd-ad43-4af0-bb85-e5d31d85b5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2ebb38-c51d-4762-b487-c64f6d96e9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62152737-3e59-4f5e-8e02-41ab3bde9f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44233516-5204-41a9-87a3-3554430bdddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a57e01-5ce6-41b9-9be7-6cceab17cfcb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c446e5d4-0383-4f8d-a5a3-7a000d226ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02574008-df47-42e3-bc4e-18740151acd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ade22-de29-48f1-be4e-1d73990a645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a579822-3734-48c3-bcff-215dc81207aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ba1fb-392e-4523-8d6c-8097986b36cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad61f43a-d31c-4dad-a5eb-955954de7fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070e6450-6b5f-4735-9d76-d78bc0e28f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a0a557-a636-43c5-94e7-0312f3a27045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b38a33-ac8a-43eb-b693-de7a9b5d202f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a751301d-dbcc-46aa-9c80-0eab0cd50f30",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8762be32-c2f5-4af7-ae62-996cda3ffe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c121ed-fb01-49f9-9ada-5c1336de15d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7a746a-9845-4c45-9bfa-1ce5124e2ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1798ee1f-dd8a-4f20-8dc9-d3333e6b9f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0310ff-4940-42c4-a22e-c01a4c84c5fb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c5a8e4-cca9-4990-b52c-c6657b5f9b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc8929b-2d41-47fc-86aa-943b5f76fc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8676877-d099-407f-ac5c-6d648007f244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31546cfa-a744-4c22-bd4a-6f0b099f928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77cf40a-afa3-45b9-ab08-48e366aa0fe8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7eb6c-e57a-4d2d-bb58-126d53c844df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b19e11-222d-452b-ab05-5499acac70e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1485c46-4f88-4928-8afb-15646093dd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "123b43d3-2495-48fb-a844-47b399a7aef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad648592-a637-4baa-93f0-251658a7999e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a75687f-eccd-4407-99a0-adcf39ee440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62090f1a-cd02-4274-a564-d27e37ade2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4137e2-8b95-40b2-a5c5-de1a3e509b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb18723-bb31-4136-889e-ec530cf807b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c535c7-dea9-4d36-b3b8-583287ce9795",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331620f9-b643-4148-9c18-07a853044588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a53ed1c-3fb0-452b-ad30-0835d724cf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02f4f35-2ca8-44f7-aeb0-323abe237c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee0e9ae-1908-46b9-9ed4-9395bbdf2bad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c8caa8a-494d-41da-87e5-bc0cccdac96c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc52d90c-0945-4b17-b682-7e578931cb88",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89504b52-a3fd-4f82-838b-03471d7f4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1efb6ba8-ab2d-44f3-8382-f3bbae31b9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b91fd9-5ac8-49c4-9e76-8ece0d11140c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eff4bd76-e7da-46d6-a03f-59f35fb29d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022ff4bd-359e-4674-8958-2e4d8d4cbfcc",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6b9654-9cd9-4c1b-a07f-4111f6efcdd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aba157c2-c67a-4140-a698-a550629fb4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706746e3-d563-4207-903f-e031958d9a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfddc502-726a-4877-8257-95f61fbbe05e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbee6e77-34db-4c1d-8f1f-51071a50f00d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27a34f22-ab5c-4bfa-b511-39baaaf5d13f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a2dd2d8-c335-47ce-babf-0aa4e76b56e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da1cb9a5-5e1c-4504-bd96-c7fcc7b64aea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25822c45-a16f-4ea8-8566-569ca8c8e522",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5de24c1-8bbf-43b5-a156-c01c48b8a18e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daa13b61-6f19-49b8-997d-b50d4a08b8fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ab48450-5e07-4272-8f07-f60400d8def4"
            }
          }
        ]
      },
      {
        "id": "53c50a2b-02d8-4ccc-b95a-6f04bcdd9c91",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4b363ceb-ca05-4c05-bf3a-d701d054da7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c051e185-03c4-40ea-8824-d3a4652164df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17cc4335-bb69-4ce9-8e48-34db3bc1a72a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c997bbd6-a39e-42fd-a8b8-d1aba54d9382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f9f855-ed7c-4907-969c-e11b8affc08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ab4e7b-e7f3-4519-aa00-17c5e13967df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d340da-8cb8-4f1b-8b57-0bc22c2dfb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffccc5e8-fe40-4ec7-bf11-b445e2bcb37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27176448-79bc-4d68-9aaf-2357035a4be2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31a8c94-1846-4da0-bdde-802e1b797d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0f5f92-41e9-4091-9b29-6944fba46f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d34ff2-02b1-4cdc-96a7-b240758e533e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a711cc8c-7c06-4a7b-91ee-58e4ab704417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b04aa0c-5685-4bc6-a7d4-e95b17542ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658a12a0-dd08-4c86-9a1b-0eb5f66eb6a7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6cfef-3135-4da5-a49e-77475512ad0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01def23-fbdf-407b-a2a2-11459a9df8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7e939c-976d-4c86-94bd-3984ddccea0b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d21c802-f2b2-48ef-95c9-259471af6c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527a5911-9884-4d8e-a6c6-70f894e49de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9112bef7-1265-44d4-b6c5-d231864cb20c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5d42a2-1b79-498e-9cae-5edda79bb491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054d107a-b2e5-40c9-b30f-e83804133784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f3e85e-0ed2-4812-9c6d-a542256bc854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e0ae08-1a2f-4e41-aeec-5fe53f1d34bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d5b95c-02a6-4790-bd5c-6f82b22137f2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36868035-9507-4b87-9558-ad5827d9fecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cc9890-94cd-4eb3-8226-a51ae9d1783c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed02783-0bb1-4127-9a39-2ce461147bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4101202b-5bef-478b-9a6c-85c50cff852e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712838aa-aeba-4c74-839c-03e30ef84476",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645afeca-161d-4339-8179-120faeaace9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170e68b6-182f-4a90-973b-326954b87d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24614bbe-c73c-4702-862f-3599439b6a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09605a8-d3c5-420a-8b3b-4a37dae2a142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342753df-2ade-428d-8489-412061f8d695",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377a4690-4740-47f2-aa6e-516407062520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aac113e-32d5-4e43-a5e6-fc71b672e199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6836f05-4a8b-4817-b38e-21df232b38fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d32cc5a-8f2a-4617-b426-5ba96307a89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f971b3f3-9686-421e-9e8b-460e016cec68",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a26a239-5e08-4533-89e0-82ef9c7490be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaf0d88-8f1c-4aa6-9901-46ab53bb11af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fa0f4a-784f-4516-b135-9a34849ce809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc267d0f-a27a-40ec-aa8a-5981190251b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b54db5-21d6-401d-ba3a-3300aee40024",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbed28cd-7387-4ff5-91c7-c093d98c8027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cc283f-f93c-43b0-9e4b-06d1ff32e370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b3929-9eea-4189-894d-f00f04e105db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3519ec-ceae-49ed-a3f0-0021b8c49e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ba9e2f-f0af-43c1-bdf3-d189aa6b3db6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812723e0-1972-483c-b25e-15ada1a44e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be45837-3eaa-43a5-b60f-bd85e5a0c349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a338762c-0c63-4d35-b452-220423c03d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4eb090-cde4-4699-8bad-412179f87850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade728a8-047c-4eea-becf-2de8b0b2d56b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c7ce0d-8542-447a-b5bb-f2fd8b6a826b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68781a63-d543-4220-a23d-63d222a6920b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176301c-9ef6-4a19-949a-88091370a111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7717fbb6-e56d-4188-99dd-287ae176c257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ad614d-f407-4299-abee-b3c8b3161d10",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c811ead8-d8d0-4052-a144-17f1a2265bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e9d191-ebea-40db-9376-5ac031a8ffd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d0beef-12dd-4887-9030-c60b7a817a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b749cbf-b8ad-4ff5-a4cd-345718e90132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1ab05f-6385-46ce-93f0-e878b072028d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5e08ef-de9d-4f2f-82bf-a2dd8884410d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8488971d-0392-45e0-b529-9764293859fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c05c24d-e1fb-4a94-8f9a-dd1e14023568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a30d98-ddac-4509-af7a-276cc5a5fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f75105f-c8e5-41c7-aad2-b537ed5e250a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9062a575-be70-4141-9785-5eb824d45690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d27c94-d790-4233-a6f6-314fe692d52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcdf89e-bd4e-45f2-bfa6-0a5dcaff7217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a9dc4f-d613-471e-8ba5-c33d35e6390b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be06c65-a264-4fcc-a376-3152d0fe0e3f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0ec66d-cd80-4749-a3e4-517664c16cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2222fc7-c165-4c6e-8167-b611c42bba09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4437c10-c9d0-4a36-8cd3-1fb475bc70ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d031916-d936-4753-b280-4ef84146f470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2014f80a-26ee-49fc-a826-1a7d6494a379",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac6b31f-584d-4dfe-8fb9-95ccc8e344af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13efd41c-ee52-4462-8248-f57af8c6ce0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e2de9f-c00a-4f0d-bc92-c76f619aa785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc897caf-17f2-47e3-b16c-7c1e26c09fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d68f02-0420-4189-a707-70e4e06d333a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee391424-6a0e-4722-932c-8ccc2e0ff82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c82d213-e2c1-49bc-ae67-9e6bb9d4d8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fb4f68-40a6-4e9d-8550-a3ad58c4cf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce4a230-e2af-4147-8d05-09cdb9ebf910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac78a243-d133-4b62-bf76-b04faea91253",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f6ec57-4261-4c38-a22d-c995e4646de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630edb79-a653-4926-a7b1-acc3e28c0153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caaebb0-93df-46dd-a54f-9566fb4b6abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20190631-ecbd-4f28-9f59-86dfba3d4086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60063513-dd67-48f9-bb02-2e6166f70d8d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24217dc-6c63-49d4-886d-c43dbe818d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eeb7486-ac65-4033-a9b9-d3a9f3acc4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2849749-7669-499b-8e26-c84d7e79d2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4af337-6672-43cd-885d-9101bf506583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556669a0-7995-438d-a48a-e40c577b03b1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b0fb36-edb8-4fe1-af5d-f16637766ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aae6c2b-10fd-42bc-9c35-7c64ea49b4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d97e9bb-7f3b-48a6-9751-aa40b6ab6051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132c3f10-ff10-48e6-a06d-daf54503ef15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eacf378-bb76-416f-8699-29856b698492",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c198a0-3ef2-40ad-a31c-990386af732b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d22737-8b16-4f16-887b-da4bff43e365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78372430-a8d0-4ef3-97f0-62ce763ff400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d47e32-85fa-496c-99ea-36aed49e6df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b8bd0f-80a9-44a5-b9c8-b2550fc2c321",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e629465a-01a6-477f-8999-138ee7506776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984b2b8e-5038-490a-9290-c8fbb1b38736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1c42cc-101d-4586-8394-6e3fc9d4274f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fe6f11-db2c-42d9-9180-1e63312b27d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839a63e3-ee24-43c6-bfd8-3516de06d3a6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56a175b-410f-4851-a4ff-2060a78df47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2fca31-238b-4a66-aee8-be8519c1d3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7229fe9f-3e85-4f23-8a00-94272a36493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88410970-6557-4111-ba9c-63c7c694c746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3f49c3-c9e2-4c87-88da-17899288c262",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496a19f6-21c8-4a12-a6e0-a9b67c0bdf0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc84ae5-d9cc-4ae6-aeea-eda181889846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c62afea-0303-4297-b324-028593f14919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8af760-6e03-4b11-8a59-3daf79827998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878c746d-7b42-4f36-8f66-a9d12951eb49",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d63fcb9-6a34-4fb5-80e4-739bec158e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed41be0-c6ed-4686-8d7d-614a4993ac3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9fea8a-863b-4627-8bcb-e5b5861ad042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c5a0de-9961-45d3-83b1-bf0335b87789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d50741-6e8b-4306-a54e-860bb4f8cf2d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00327ad-5a6a-45ce-9fd5-0032214e7ff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f6cd90-a8e5-4515-b178-1b3e2fbf2a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587ad267-7b95-42ec-a499-c4e44e06c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8cfb59-5edc-4580-8ca5-7d568d29d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e7ea83-b18b-4b20-b128-511b3e8d9fd1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33581179-ed02-4b97-811c-fd5e6b340a31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e86b9b-f78d-41b6-8e5a-d8f38bab1c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfb0eff-f075-424d-8b27-697fd2ed8b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852a8617-c9e2-4f41-bb36-1954bc1124bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164fa1e5-c46f-42b6-8097-ba6c01bdfe5f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27ace2a-70d9-4e60-802e-940289fa06c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2458139-63c0-4ec2-85e7-9b85cb8fcb31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59eb67c4-62f2-4cd6-8695-f27a9e19a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc87e189-5ce5-4b2d-805d-84ba2d0d6f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b38041-c4dc-4e98-864f-f45b4f49ce93",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808e7699-b61e-46b3-838e-f9415b9690c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c156f2d-d0bf-48e4-99af-41bd99d3da8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666729f6-b5fd-4070-ba2b-ad6e3986f975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7baa53-e385-4851-9223-c27bce89a9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee13fd0-e8c4-4d45-ab52-13b9d01a65d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7e68fc-dc30-4acc-900c-43f48fee7b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995f0f7b-11cf-4589-bbc1-e092ccc31226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8393cae-d8b7-4614-ad9b-428215c89eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a455068f-434e-425d-974f-b5f30ee28bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acdacf4-3661-4083-b771-91e1fcce85a6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263d1aed-fd97-44e0-8346-5397acce7d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba78d997-76ff-4d77-9fe2-a9e04c3c31b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d80b102-5111-4dd3-9d8c-e7c44a1f6a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51d8ae9-7e9b-4038-b58b-086342380a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be79eb-4b62-48b1-9850-65384520bf3b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8386872e-53b7-4dce-b1dd-c9617d45ec28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95131cf3-d562-4ad6-b65b-d27768422510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6f753c-b1df-46f9-aeea-ead409c7177c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b493be-7cb5-4336-a2d2-a237753ebdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf1b2ba-166d-4f8b-936e-3b973c6a0505",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b4b34-7e34-49f6-8c1c-37d9bfae1d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc0195b-26c6-4905-8de8-73a52252988d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddfe506-aa9c-44c7-b887-60f2b7a0fb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c551dd-e1a2-4975-a1e4-ad5ce9651037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9025a44a-8941-40db-beae-43334208529f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591c0ff-f487-4d6b-b5f3-1dcccd41d85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09833c05-d42c-406e-9111-39621fe8393e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d84bd8-363f-4b65-abec-8e0a69d48232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489bcfba-13f6-499b-9fda-910c9b0d3ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a28baf-2ab5-4832-bb49-38d6b9c3fbdc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37cb161-f74d-44c4-855e-246f6268494e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694f4ffe-108e-4549-a267-1808bead4f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce27685-c6fc-4ebd-b7fa-77a44760fffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc45fc6-0420-4372-819a-f15afb9117c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992e68f9-7170-4c29-b11c-c486463135ee",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a5e0ba-c210-457b-a758-e8f4d664f731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6701a8-b15d-4664-bddd-ff3db2dd2fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb586d84-6387-429e-8e2b-839c5fe0574b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b91019d-8c9b-42d6-94e6-cb6b50ffc47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daa8393-d7ee-4a9a-8bee-71d52a5eab8f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ad2187-7b96-4983-a91a-456f804b0189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ddc12c-7f30-4a8d-989e-c0196b6958d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a6e1ba-1ac8-46f7-b7a0-edcca511296d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81603b44-e6ad-4000-a209-1b444a5cf2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141cb357-b6a8-4369-81d2-feeeeda19a65",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2837ec0-3f0d-49ac-b0dc-6d39d37055eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a561f3-0df0-4ab1-9fc7-897663ac57a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f34940f-7a68-4494-a267-ab5b46799f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84820614-01e9-45fc-aab6-462119ba4f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13448960-b144-4372-b128-0c35821eb266",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4c5a32-9078-4482-8b22-266e558a58dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0cdcc8-e988-423a-85f0-8695725906f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cb2da5-4547-491d-bd97-57107e356b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a751d09-dea3-4fca-93b3-8991399dc54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f43bcc4-0985-409f-aefd-9d9ec0c7fea2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37799cf5-aeec-4248-a7b6-ea5cfc478708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522f803c-9153-4532-b331-8403606cf60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e82ebf-e630-4356-9011-12930ea872ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3e72ff-92f8-41de-ba15-12f90b33c019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fae71c4-721e-437c-a946-3295e1015248",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40be9bbe-250e-490d-9ba4-aaf14448e3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3752ee70-5923-40be-a650-5d9e48cfa5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20318e85-1b76-449c-9e60-12549170e689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5334b96b-3f97-4fa5-8917-346ca0753dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3175daa-c7f8-490c-8a9a-4ddfc8a1fbae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ae2203-3552-42bf-95f2-ffb3569adfd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988064c4-bbf3-4c9e-aa2e-d197b0b2592b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26372cb0-e1c9-4e62-af56-a60fc4a2404f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b483c15-3882-4d6a-a421-b16ad0d88c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8a5bd9-0d50-4212-b51e-f2a690677201",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2312b2-145a-4739-985d-57c1866f6129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8636754-8dcb-458b-8243-b0c65892afa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6fbe6d-444d-4ddf-bd90-1401ef117ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89db69c5-c044-4fcb-be72-aa7cb17c14f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa8d630-3631-493a-97b2-7452a627142e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11fd125-7718-47e3-b17d-28ada2429817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2493579-0cb3-45a7-8d60-5b2bd4d4e6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cf9987-e7e5-49d1-8f13-a453bd79efc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac28ebf-5375-47a9-8542-6ebe18079077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380381e8-c46e-443c-9174-07516d1f13ab",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ad3934-5646-4b94-8bda-9a3ff7c9d035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcda4a4-9db7-47f2-9530-2261fc8add17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5ebfb2-2bf9-4282-bbbe-c1de76cd9498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca19fc00-827f-4956-823a-c9b24b74ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9a0418-0dc3-4aa9-8810-dff8f0cd0dd5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e85e8b8-da60-4c65-ace7-1454052f0818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235aafd4-fd16-4450-9c5d-abae43797738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f25b40-2f64-4e7b-818d-57cc58a95e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8c49d2-a5c7-4d31-8025-ed1ea5135ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7bb97a-8d4f-40ad-b309-464e1f2942a4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4444d2-5d97-4866-bca1-1f8391dc59bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8a3a8f-e9dc-4db7-847c-44a0c58d4a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4701ac09-8926-4b3a-8094-9dcd4c59ab3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5936d8-5c71-4414-90f4-f3f6bf22fdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfabde14-bd7d-4de7-8b4f-6fdb6a5bdfa5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1420b559-e4b1-4a0a-b9e8-bfb1c0deb72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98457398-7e9d-44b6-99f8-0cf5de23b190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9bdee2-579b-4808-843c-1b499d9ef581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e5ee41-5219-4689-81db-d2cc9016a094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4840e4b-7635-484e-94af-1281109f170f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8080d95d-7620-460e-8abc-83bcca46553e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34000192-6313-45cb-afe3-c960bdc924d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6a18b1-7043-475e-a85b-f2f795ed71d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1575b9b2-5c56-4992-898e-5192806403dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7092d92b-0d5e-4069-9354-b29991dbe534",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768d72bc-cabf-41d2-8a2b-165ea2f937ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa920be2-8ce2-42ec-8631-eee6fc1d4bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab59643-f1c9-4be4-a7ae-577187868778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940a088a-2e39-4ff4-8b36-aec802b10ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4066fe6-a94e-4de3-aa8b-acefb5cbb060",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e9a14b-ef25-4bf4-acfb-fa95514c95c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530a4bf6-451e-4ee4-aac2-f9e56b2b45fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0574ffca-ca3d-4574-a362-68fd38b8c1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6097e8-e32c-4c71-b810-1f55d9b42eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad18daa9-6757-4439-9334-128f384f92aa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39384d59-79ff-401c-9d7d-60e304b0beab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ff3cc5-0b96-4cec-9412-f0f3e23a52aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4795cbf-b578-4142-9865-b8e390d5eaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7298e2d8-e6d6-4cd0-b8be-c40f516125e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2733b859-1fc2-43fd-9628-e65320a93350",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e751cf-8998-4204-98c4-34b879ca0fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae78c9e-8431-4806-bc35-011ec3267588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352dd349-4698-4ba5-9470-160b42b1818c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd71600-e85e-40f7-b4e3-19ca75250421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae09cda-0290-494f-a72b-abbdaba02c5d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32684c0-0bb8-4ccd-8cbf-4bf091dd3577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacfe4c4-8de1-43f7-a617-f1f2946941fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d58e386-59c1-4e15-842e-c4f9dfe4ba32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c8d291-4495-4a38-9754-f7c3026a5deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a873d5c-0bef-41aa-9941-4eb616e18cef",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64210ce-9003-4270-8d3a-eb9493b5be33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec83d67-7423-4350-8933-bad47950ea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da086579-c766-45f4-88a4-4f87defe03a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb541bb-a662-40d0-9562-f07521d910d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c335a58-5066-4130-947a-331cebd98986",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f139264-2775-4e6b-8a10-441405aee043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368b7d29-9c31-4f7c-9277-51ba85139bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c11a635-5923-4b71-bd67-933b1e975738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa89d78-24b6-4708-80f7-a75001d94bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03fccaa-f98b-47c9-bca1-13b3350329c8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cb9141-568b-47a6-8837-56b6f9e93bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c0479d-4cb8-4b63-a4c5-a2e1165a725f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9873e40b-aa6f-4da3-89d9-f91628747d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b7d524-03ff-44dd-8efd-4f6644428edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f93ce8-2e64-4510-80fa-a7c9b8e635d1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe52c525-fd1f-486b-93ee-5c889eb8091f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20cbd71-49d3-42fd-90ea-ae15169daae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e8c14b-0364-4dcc-8812-afd2f58568f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1557c9-b980-4e82-a610-743cc7847f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4582b1f9-7991-4572-b2c2-e829366409e9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4597c518-1ed6-4e4b-8483-8e06f3c3ab2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b590be20-add5-488f-b653-ba25236b5546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48937c28-3b70-43ee-a65f-29f60b5983d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbd23a2-3d5a-41e7-ade9-685b9e881096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae68df-c046-450e-bcb8-f5e32a933798",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f16c691-1988-47fb-a43a-4c7b2f793960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e148e978-035e-4340-b0ae-93b214b608b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f7f70b-455c-418a-8c56-45b082009a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7bd968-859c-4912-9d4f-ad09f5bcc56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9150ca3c-c737-4e7c-a41e-4d8c5751d80e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be9dc4a-ede1-43bb-a8cb-5cdc47ea6e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e3d48f-e0e3-4d9a-8a25-a7b60533a57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dab8bf-343e-4f1d-81b5-40886f7666eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27b42f2-5b77-4f69-ae15-a5f530fd1c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b35755-8907-44d1-ad11-c46813419f2a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de92422d-79a4-4fc2-bbed-ef3e5c11cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc4aed2-ba2d-43fb-ae37-49c469309a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed86fe81-b929-4a62-99b3-9f8416682dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5350c055-32e6-443b-9afe-c3d6f48eb7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa1191-2824-437e-a1a7-5b947ae2fac2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c29d3a7-f944-4604-b4c2-606da7e27fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c4e29f-ab09-4cc1-bbd0-c199bb0c7db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db51969-99aa-4597-8b69-d0f056bc5157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f52fc-10bf-4b96-b5aa-ce1fd7169e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c35f4e6-222f-441c-ade6-e8fc8c7806c3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74709a63-3c3b-44d8-a93b-55b20fbcfce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772af66a-61d8-4df6-9f75-7073f268d211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db799aa3-844d-41a7-9b76-f775f70ad0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9f0ea7-aa1a-4a3a-bfe9-d50edbe4add8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4403b9-1281-4dd9-9e4f-3d067965d3cb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8634a45-4b77-4d05-99ef-fa7955d1c17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb809b63-debf-4052-a779-ea93bbbc25ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38578eb0-1d7e-47fa-bf05-cb5db8d51aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec0a2f1-f09e-4a9a-8869-a8f1ae5fbeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d22534-bb1a-4cde-b465-9f6ec1743921",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16bdd41-e2f0-4e3d-909e-d3554a3c82f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f3b06f-f645-443e-acf4-74ae683f45b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421b246a-646d-4c1b-8057-a3ed71280693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d29b69-ec96-44f9-a3a7-091d236e0a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41be78fb-154e-4c7a-9508-de0f33b5e0e7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76df723b-a52e-4f37-b1f5-503345fc10e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7d34c7-94ac-4a1d-8472-116b6ae231fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bed1891-1089-4921-881f-1c86d932386c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a08333a-7747-4339-8306-5101e92a686b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255ed65c-d467-4f46-8c9c-96037cb8d338",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a8c356-8573-45ff-98c0-0b6f2b856cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c490411-b1a0-4383-96d2-2120bfdf4610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5306cfb-d02b-434e-aea6-568aad58a9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f9e432-b1be-4a9f-84f8-16eb98d22f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea3e1c-1f28-43a9-b8d8-d1de4597d41a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1251f5e9-8d32-4d26-8a74-873ce6fb45a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee7da3f-4b74-4a52-a4b1-db2f01ed8909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7865dd68-63d2-48b5-9930-dfcc64609627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f840d9f9-189a-4661-a973-dcea044b5a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec5d748-dfb0-4f28-bd43-650d61e419dd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9546f6-d5d7-4254-987a-4804747e706c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9658f45-344f-4d1c-acea-8901841112c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2427fe6-5a97-4cb0-b2a7-caf52c94c677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e8e5ef-056c-4f76-a61e-8c53901f9665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f92e30-dae1-45a4-a122-d0175406d83f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16cabeb-719d-4e51-879a-64e07b069019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6f687d-c89e-480c-8f63-f76a770686db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb7adb-76fa-40bc-96b7-ee0d4f52fe51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9ddcde-4276-40b3-9193-b6f72d2cc20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79f5b3f-a789-4cbc-9cef-9a0db639a5ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e97fdff-653f-4135-a265-d2af0d72daf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d28d1b-10bb-4be4-a61f-aa778e188234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f832848-16b7-47de-933c-94e63fd73589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415d4bc1-c501-4d78-8b7f-7cff9f675be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f704963-c96e-442a-aded-c0ae99231502",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10ceb7a-4060-4095-9d78-1722d51dc274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f3e152-b51d-445e-bd6d-9104ca1fc203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c61664-07b2-4782-8cfa-87ce1ba034fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87901464-fc29-40a3-b859-f4222fcbae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4d0aeb-072b-4be1-907e-020cda98162f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38ab6ee-9872-49b8-bdf3-be74eb3475fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c8be62-f5f3-4a53-9fdd-c3b304d6f7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac486c25-0880-4805-bedd-da975ba31855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b215642-99b0-407f-ba50-f9e85a6d74d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4ff112-37f5-4012-9488-234587ed4b5a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c52dc55-f525-4c31-bbb6-0d6c60c1fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bed3b4e-4e19-462f-8bf5-2e1a3f1097ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96df633-5292-4cda-b406-abb661559936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1871327-b2c1-46f9-84e9-3dde2ec7ff27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa4323-fdfe-4072-81d0-7d4a2d35a794",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d91b3-fba8-44c4-a967-1a63f1acfb82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a98f5f-92cb-4735-a7a5-6d3aa385b4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcfcb04-4b00-4e07-8691-708425346ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745b754e-90e8-447f-b51d-6e1bc21cd583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce538935-6fa7-4e5a-86d1-a1a1b9367f3b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22effcc-e940-4e73-95a1-a8c625fa1c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf533c5-471f-40dc-9db2-84fa0a7ac072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a051c0-e097-4bef-ad7c-31cd01aa1d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108da2ba-af2e-43dc-a4b5-4af6b48c766f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc74e00-b5f8-4c86-a7be-734e50a316d0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa86447b-acb3-4436-a4d3-2e4cf5f1009a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487d1d3d-203b-4940-99da-5dc1b45701dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2d375c-c449-4251-87a9-819930ae50b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ad6a3f-2bfd-4b88-89f3-0f4289b39879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813fdd2d-99b9-4d81-a093-ed5e8226e962",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca9cded-ad5d-40e7-bc15-dbf6cde9142a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa036d3d-1f11-4d70-acf6-69acfba7b72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74926d74-a22e-47b2-9b3e-a463c14c5401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e65786-111f-47db-995d-4a8d65708ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d406e6cd-546c-47b9-bc5a-69b243cb0d0e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa281e55-9755-4cae-9da8-3a13e33f8e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c8d630-cacf-49d6-9fc2-797f11127e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b46229-b727-4a49-a60f-fb045ea3856c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51d79d7-d0a6-4c01-a431-31797e3ca826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a8d128-c041-46ed-b7de-818f6c384aa1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321a5c37-0ba5-4730-b055-d1fab34827fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e336188-9456-4023-ac3d-074fed97acb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f11948-6693-409f-a99c-da209259f3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1ef347-1687-4207-be1c-776418b26cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21173562-e9fe-49ed-b657-cb7ac7b0968c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e140947-62aa-458d-baee-ebe588370431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4a3efe-0553-4ac9-a4a8-f631cc0a6e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12929ba5-1f59-4390-b3a5-5fde96be55a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c85b746-39d1-4b58-a0e1-da16aa4af994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd80e77-c6f6-4e90-b615-e57da84a06c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dff4832-5ce7-4866-93f5-a53b4daffa68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3a9456-938b-4d79-9c20-262cd6cc491a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6970a01-2d60-4dfe-bcb2-ce569dbc1751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1bb05e-8720-4cc6-b51c-a2186d34a37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2196b02-7db9-4e7e-bacf-af394f10926d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168f96a2-35c3-4eaf-804d-41bacef9759c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80f8323-cc3c-4975-b2b3-37b5edf266f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fae233-7f0c-446b-aadc-5a57399aafb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bf4bfb-4ec8-478a-8fa9-7a434eb9c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e763d25d-e7d2-4d37-8c0f-46189bac37cd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b09c4c6-8ae9-45d9-b320-cd8a777bbf7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96efee3b-740f-4549-9340-79433e7a05b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0e3eca-6387-4bc4-89ec-34677f3c94dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267a507d-af7d-45ad-a383-a2dbe29184c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a83ae3-5d26-4c8e-8266-77cc3d3b62c4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524145f6-3666-4ee9-9601-61df68302d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24933ec0-972a-40e9-b400-6b622bacc66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1e00db-1c66-4648-94a1-68d3bfbb841b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6001efe-19da-4650-bee0-f94cc8887daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2726d35c-480d-4802-8433-682ad720172c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea327751-663b-48bc-9e1a-a675771ca33a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ad28c1-e7a6-4428-b753-c7329245b481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3fbda6-9c08-435e-aecd-77c0343057d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded90ac2-f372-4bdc-91cd-859c904f2cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418fc26f-6c37-4fa7-82dc-90223ec8e7a4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41467f32-3489-4fe4-91fa-eaccec136058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b813bb29-9fea-45af-ad72-88c08c0dae7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919b350f-5525-4fcd-922f-bd7a1f20808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21507354-17cc-4238-bd68-808460436a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4920ff-370c-4272-9a26-80d425a57cbd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96434d7d-6011-44da-aead-34fdcba748e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec10d027-bc47-4c1b-b812-e69cf5b5971a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d91b928-f11a-4e82-9b85-6ed1e89bab2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07edbe00-3efe-4e40-805f-5f41ae59b3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aad46b8-ed4f-41ba-b14e-4b9e576098cc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df67d15-01ca-45d0-8157-ab5fe1037234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84698e93-6948-400b-9463-3a2873c2271e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800b57e1-4abe-4869-b523-340bf6c16b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71560303-4273-4344-81a9-c81307feca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049bf20c-7680-48ce-9832-f98720b2c7a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7211960-593a-45e2-ae82-612dfb728754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc01b81-1c6a-4e6b-9cf8-8fa08be1bdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af523e24-43b5-49bc-a726-58e6295ffed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bdab1b-74be-4e36-b228-eac8ef280a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c50f6-35ef-4597-84a7-f0e291bdea8c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10ccde6-497f-4f80-acdd-24cb86f145b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1b1e5e-c37d-4966-b8d6-0e1bebad45c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc6f8d-849e-4e4b-aa95-7c52033bc078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490669a9-89a8-4360-ab03-47ebaf4f19e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bc3cb2-cb0f-400c-add7-68e63dce5448",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16888a85-2fdb-476c-a665-849c30535979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f9a59a-89ee-4b68-9bf6-b725e1d726b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c05c5d-f8ac-4182-ad1f-d88158180b8f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475b9acc-3860-4277-a0c5-0431e81de5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab7f34b-bd4e-4568-a266-45f6a4782141",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de881cc-dbf2-4ca1-963f-c6a408bbb95c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edee71c9-e533-4787-b22e-afc6c0e00afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a767756e-6f22-4a69-a87c-7b42d911d754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86bb84c-bcfa-4f8f-9b3e-4779866abb48"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f17b6850-9347-4670-afe8-454c469d8efb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96d577a1-15d6-4c52-8a31-39bf53b89e95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30b6537c-7009-4962-bd89-9f630b1bbf16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b131279-eb34-4f0b-854a-0ba56a159fe4"
                    }
                  }
                ]
              },
              {
                "id": "ff0a29b8-2bf4-4f02-b568-8b5fc32bb460",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8b56a3f-fa76-4a66-9ed7-6adf1433ab57",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43b5f43-105c-4739-9f63-22cf03044040",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cfc59766-32a7-4503-8647-bc28257eb019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747096d0-c562-4c73-a14c-8f20a2054873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6bf1aac-0682-46f7-9696-d1cafd5eef17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b786278d-bb34-45d0-8faa-6c1b61ac6923",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dd182e-8896-4d11-9bc8-d47909ba7e62",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "63a8d0d8-3854-420c-b40e-190ca3fb0eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c72a1e3-b10e-492a-bd30-106d0f7cd978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a64111f-59ec-4ae3-af83-53688e1e1623"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30f8a0cc-6461-40af-96e2-71fb81828f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a286389f-60d3-42a5-9007-2efea18030bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91843c0b-d9e9-4861-bb7f-23f5181a3610",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f3802dd-b05e-4026-81d9-09263a3ef294"
                    }
                  }
                ]
              },
              {
                "id": "7e5ae9f4-6605-475b-8e37-56e92a7dfa84",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f76189e7-1c70-4512-b265-c2f8c86ca479",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ae77a3-1719-4925-b3a1-b20f032bb735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7add1039-0af0-411c-83bf-e34d36e9b9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2521196b-5622-4104-a5bb-6acb7187e911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa98cd9-c91e-4509-9855-7ae3540977a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d8652676-8294-4bc8-97ae-51d4577fcc80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa606300-e25c-4abe-b10c-84d2c3d8ce1a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c245c5b6-15c3-4ce9-b353-8ebd944ae71b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ca05af7b-7b6e-4e63-9796-a6eb372c9864"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a6bad62-c532-4e37-b964-6cf29ecd36b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f111dae5-3307-4935-916f-3bae1cf70029"
                    }
                  }
                ]
              },
              {
                "id": "b1181585-2777-43be-8548-f11945490774",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10ff181c-407e-474d-b9a7-55beb4fb524d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b64207ce-d0fb-4f58-b8d6-c8ad9fd5ffd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c4bb257-15f6-44f1-a293-e3d217bae6b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f08595f-7930-4698-a317-6b9da9dbb7b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "952b3bdf-1e84-41a4-864f-eb59ef31e5af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "82fbf8d3-b957-43be-9ca2-12850f869e8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "605b0297-7b18-4373-bdaf-14aa6edda79f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5af5b4e-1d69-448e-b4f7-7f2641f43903"
            }
          }
        ]
      },
      {
        "id": "7b3adc43-45c5-4be8-a92a-fcf912be2e3e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f207973e-e977-4c13-bdf4-77d3cbee2a9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "123806b2-0ff1-4b05-894f-6b83364a0443",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03eca500-2b4f-4cc9-80c2-b447d88281b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0bf5c0a-f1a9-4c11-a11d-f7e81c7fe7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3a7076-1c5d-4668-8b9f-c978728b2d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20183f69-8596-472e-af27-0471d27302f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d5427-4932-4225-a0f7-b55b4b1ee356",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6296378-0ad7-46cb-9357-5c82aa0e3dd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2079886d-3b9e-4ab7-9dae-f345b286cc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbf8940-fff3-4a9e-a331-4c134182cbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09776ea4-2428-4697-8e00-f147dd33e107"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c764575-3ef8-40c3-8a6a-e2fec8e10d77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bcc4f9d-13d1-4c2f-9593-87aff1e6b050"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f3068c3-6bb0-464f-8260-a1481f32470d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec9e5919-8232-4403-b1fa-4a8812af4539"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9298dc58-b3e2-47bd-ae21-79772f834c03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "32f555fb-561b-488b-88ea-5dbaa2648521"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00b84c53-a7b7-45a1-ae01-309c24a0be0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f90005d-1610-47fe-86e4-99fff382e96f"
            }
          }
        ]
      },
      {
        "id": "e83cbdff-54eb-4ce5-8428-5696a6e3ac68",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b24f1ebb-65e8-4f1a-811a-0567c29717c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c68d5af9-c78f-4afb-8bd9-b784136d9394",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d045f246-e519-4400-ac8e-c816fbaa3098",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69e1644-9fbc-4504-9653-e23ad7e44d3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c248d23c-c1a2-413c-8053-41f7e598fd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51513af-7535-4850-84b9-a4d269bb1904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85f12203-ddec-44a5-a440-cb471bd0a55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718e2b27-9dc0-4301-a790-2850cfccd085",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ad995a-a4e5-4d6b-9be4-386c7b21e82b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2f2b2b-fc44-4b85-a114-8ec77e6d5f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd81b0f-9fe1-4fd7-976f-bbb10c925928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02c5ac6c-50c5-4629-9288-897ba8f518c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b80f4ec-8c16-415c-9a4c-d486b30cf615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02e0e4b6-c30a-4b06-9496-9c74e89c3eeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "023e1bf2-9ad1-43b6-aa75-90919ff73a68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8276932-b6d0-48bd-b095-bca7cf2fe457"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4dc2fcd-bec6-4878-82a7-dc79b8de0e01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99fb1b7b-2e2e-4759-a422-038d4fe26c4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17b844d1-82bc-4443-a2a2-fdf4469d6c9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e2e6799-4e3c-4677-aea5-a5197a3728b9"
            }
          }
        ]
      },
      {
        "id": "06c47374-bb60-46a3-af06-92afa9bbbb70",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "22d2cb30-1667-415d-b08c-e2dd61958205",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbd7cf0d-6aed-4a4a-a86d-491d6cff4a58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e789ccc7-12b0-4a94-8e5c-ac29146ffab2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5ffa1f-55e6-43b3-8e00-67b6f127c33e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c1c8719-ce36-42f9-9d6a-6c0d9eecda48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b613adbf-05ce-4f2c-9147-5a599d14a9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3a111ba-cbb4-449c-9106-b52111d43cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99396ab-0986-42bd-90bf-c450227fa01e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce049a32-4dbf-4198-9cfd-a626898caab2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aea1199b-5d98-4d06-936d-5e6722b2a3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56419dac-7f4b-4170-9aaf-f1a6c9549322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf8c646-02a2-44ce-bfd9-11f4ebb47027"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e066e90-13d8-4d72-88ca-07f3f3192dc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bac8ee8c-7533-4697-aa5d-552332b9ab2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62e18565-90e4-45e4-9d22-ad340dd30f9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44006d4f-72a2-45ee-b217-0ff7512b5fa8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "411d7597-3ef0-4563-98f0-bb94705bef7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c21589e-3c7a-43ab-9038-57835a551cbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a92dfb0d-1a56-4a7c-b059-e5cf427e6415",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74136215-41af-491f-b823-f5517a749e30"
            }
          }
        ]
      },
      {
        "id": "3d8d2453-98ac-40a8-beed-047818569909",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d9c0794-ed19-4042-8dda-bb5d9e49a995",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4941e6f-aa12-42e3-8991-449bb52b955c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b77112d3-db66-44a0-8b8c-55daa57ccabd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb8b6ae-9750-4e80-aa3d-b20c2ea6f7de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c97aea80-b661-458e-a02d-d00ca4b76882",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 850.8423076923077,
      "responseMin": 12,
      "responseMax": 10169,
      "responseSd": 1043.3890131803391,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680741337505,
      "completed": 1680741572753
    },
    "executions": [
      {
        "id": "11640b83-c8dd-49aa-a1c7-77892a4c56ea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "404a4211-3461-4361-860a-628d5d85cddf",
          "httpRequestId": "b75a6be0-31b3-404d-a079-89cf0f278d36"
        },
        "item": {
          "id": "11640b83-c8dd-49aa-a1c7-77892a4c56ea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "93aa6eb3-ab5a-4569-b39a-336633f589bf",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "34fa3bd2-06cc-490a-becf-07038880df9c",
        "cursor": {
          "ref": "2779c7cd-8742-402f-b2d6-f9a778ae28e2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ee9f6006-59fb-4578-aaea-b7520fce6d84"
        },
        "item": {
          "id": "34fa3bd2-06cc-490a-becf-07038880df9c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "89e936ca-5c49-471c-b51a-a0f931c382c5",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "2116dad3-98b5-4523-9c91-c84865308e2e",
        "cursor": {
          "ref": "75351c00-b5f8-480c-9ffb-1909900a2e4e",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ac8d6d44-c738-477b-959b-402f6bc0cf8f"
        },
        "item": {
          "id": "2116dad3-98b5-4523-9c91-c84865308e2e",
          "name": "did_json"
        },
        "response": {
          "id": "6d6800c0-9ffc-422d-b951-a8899fb6558a",
          "status": "OK",
          "code": 200,
          "responseTime": 1114,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c8030a-ed09-455d-97e7-c69f36da2fde",
        "cursor": {
          "ref": "b7346924-a10b-41d1-8214-e9b3ee0cf4fb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a4c31be1-e3a1-4e25-9be6-d27844ec3485"
        },
        "item": {
          "id": "43c8030a-ed09-455d-97e7-c69f36da2fde",
          "name": "did:invalid"
        },
        "response": {
          "id": "be60a614-6f0a-4021-9cea-87a0b2bfa074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c8030a-ed09-455d-97e7-c69f36da2fde",
        "cursor": {
          "ref": "b7346924-a10b-41d1-8214-e9b3ee0cf4fb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a4c31be1-e3a1-4e25-9be6-d27844ec3485"
        },
        "item": {
          "id": "43c8030a-ed09-455d-97e7-c69f36da2fde",
          "name": "did:invalid"
        },
        "response": {
          "id": "be60a614-6f0a-4021-9cea-87a0b2bfa074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5219ea88-16b5-47b7-86e3-24e3b0691c7b",
        "cursor": {
          "ref": "e483810a-8179-48eb-954b-ad63c55067a7",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b1724bcb-f225-4a7f-ae37-a22fba0ec82f"
        },
        "item": {
          "id": "5219ea88-16b5-47b7-86e3-24e3b0691c7b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b4dba85a-ac44-41ea-8d12-2e605c5cab25",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1073,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dc8f82-e83f-4f17-ac0c-e724dfcc846f",
        "cursor": {
          "ref": "c49d44b0-83f4-4a41-b88d-505b8a987747",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d5091b5c-05c8-449b-81e6-eaf64d773357"
        },
        "item": {
          "id": "21dc8f82-e83f-4f17-ac0c-e724dfcc846f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f4bde89f-4fe8-45cd-a428-bf6714904f81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 682,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005dc0ad-8f78-473f-bb80-fc8ca1819d8e",
        "cursor": {
          "ref": "9c267e72-76f3-4978-bb04-bc99bad80f73",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0fd38cb1-c5b0-4f5d-92ec-08ae092a08ad"
        },
        "item": {
          "id": "005dc0ad-8f78-473f-bb80-fc8ca1819d8e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "56c3ea21-e54c-4dd5-9bc7-e335e1506303",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5fee2d-13bd-43a2-b4cd-d17eb3cfa551",
        "cursor": {
          "ref": "ab867a56-ef4d-4481-af50-136625bc549f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f7f6819c-1957-4c06-828e-a66f3f5fa184"
        },
        "item": {
          "id": "fb5fee2d-13bd-43a2-b4cd-d17eb3cfa551",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4d0abdc8-0071-47c6-96f6-0e5acdbdb707",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 651,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5fee2d-13bd-43a2-b4cd-d17eb3cfa551",
        "cursor": {
          "ref": "ab867a56-ef4d-4481-af50-136625bc549f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f7f6819c-1957-4c06-828e-a66f3f5fa184"
        },
        "item": {
          "id": "fb5fee2d-13bd-43a2-b4cd-d17eb3cfa551",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4d0abdc8-0071-47c6-96f6-0e5acdbdb707",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 651,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab746c-bf60-438e-aa0f-4922facc79e3",
        "cursor": {
          "ref": "268fd532-0456-4f5a-af4e-c211ed4de5c3",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "72495e84-1e66-426f-819d-22ab4a96da80"
        },
        "item": {
          "id": "6bab746c-bf60-438e-aa0f-4922facc79e3",
          "name": "identifiers"
        },
        "response": {
          "id": "fa019866-9f5d-4cf2-8326-e5fdb7206a6f",
          "status": "OK",
          "code": 200,
          "responseTime": 2127,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a748cd-c5e7-418a-bbc8-2664dbe125c4",
        "cursor": {
          "ref": "d19cc5b4-eb35-4694-ae1e-ccb61778f6c4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e7a533dc-7f20-461a-a857-0c3b6ecad31f"
        },
        "item": {
          "id": "24a748cd-c5e7-418a-bbc8-2664dbe125c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8aca9ff-8489-4a31-a253-1fea06dc02fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1211,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a748cd-c5e7-418a-bbc8-2664dbe125c4",
        "cursor": {
          "ref": "d19cc5b4-eb35-4694-ae1e-ccb61778f6c4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e7a533dc-7f20-461a-a857-0c3b6ecad31f"
        },
        "item": {
          "id": "24a748cd-c5e7-418a-bbc8-2664dbe125c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8aca9ff-8489-4a31-a253-1fea06dc02fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1211,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2847fc-3961-4068-991b-3d164d3b20f3",
        "cursor": {
          "ref": "f7dd6279-83f9-4e7d-aad7-1504c7f5bd09",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99ffb687-4994-4c9e-ba6e-cb71985a7eba"
        },
        "item": {
          "id": "bd2847fc-3961-4068-991b-3d164d3b20f3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3ef1d033-6667-4dd0-a6e4-54d3e6fda36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10c468c-c2bc-463b-be96-0f5806bfcce4",
        "cursor": {
          "ref": "610d11bd-7857-4792-8bea-00bd4072e206",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "29dbd272-730c-4e02-bcf5-3aabb6e1ed5d"
        },
        "item": {
          "id": "d10c468c-c2bc-463b-be96-0f5806bfcce4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4be653ab-3ae1-4c94-86f2-2759e0bff104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95182556-f9ae-4464-ba99-e292f2250674",
        "cursor": {
          "ref": "06b9de7e-c540-41eb-82bd-5aeabf539484",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9fbd3e1d-175d-48b9-9b52-8103cc914694"
        },
        "item": {
          "id": "95182556-f9ae-4464-ba99-e292f2250674",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3be3a6a9-bdb5-4c09-86ab-868b961f2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b964079-1c18-432c-8ec9-beae8454c740",
        "cursor": {
          "ref": "bf0cb0e0-f452-44c6-a4ce-d6fab4d622dc",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9f7f6807-eaa9-49ea-9354-39d02a99751c"
        },
        "item": {
          "id": "3b964079-1c18-432c-8ec9-beae8454c740",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "84c2eae2-b4f7-4742-9458-aa3704f642aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b675c391-cc58-4fc9-96c9-e279d9afcd73",
        "cursor": {
          "ref": "6ed15135-e7ec-41aa-a68b-19af5013bcc7",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ddee9024-6254-46f0-b877-8aad755ec60b"
        },
        "item": {
          "id": "b675c391-cc58-4fc9-96c9-e279d9afcd73",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ebd1d4f0-68c4-460a-8808-e6b35e2f9834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5770b56b-d3ef-4fe4-8bd4-bb1edd63c262",
        "cursor": {
          "ref": "06666fa8-13e9-43d5-9932-da01cc8bd4ad",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e064fc99-0557-440b-9efd-cf8ffbcac018"
        },
        "item": {
          "id": "5770b56b-d3ef-4fe4-8bd4-bb1edd63c262",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e7e88239-2635-4fe9-9428-c6aeb7bec414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e3fbc8-c1aa-4830-b327-c462329d6c43",
        "cursor": {
          "ref": "ce7be688-e58e-4c6a-913e-8a57d1b09e34",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95c431f0-2475-472b-8ab5-131937e61aa4"
        },
        "item": {
          "id": "a0e3fbc8-c1aa-4830-b327-c462329d6c43",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "824771fd-3742-4426-a08f-71d1fce79dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163540eb-8840-4ce0-a90b-5396876870d5",
        "cursor": {
          "ref": "1bb4c1d3-0ee2-4b03-b38f-2a85d3d08581",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cdc60df5-85ce-4267-98ef-824a04a7fb97"
        },
        "item": {
          "id": "163540eb-8840-4ce0-a90b-5396876870d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4b32a9d1-1355-4227-8931-9e481458ce79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d817fa6-d04d-4a81-93d6-1b43f4180163",
        "cursor": {
          "ref": "eb3331c7-9d01-4c1f-b9d4-48a27c8e2b19",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7be5d021-0b3a-4792-b04a-6866ddea488f"
        },
        "item": {
          "id": "4d817fa6-d04d-4a81-93d6-1b43f4180163",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "23d69f81-edbd-4932-b9b7-96e150c9729b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9338b21-8c53-4851-adf3-122e6fbf79f0",
        "cursor": {
          "ref": "40e12076-12cf-4db8-9e62-22e6264b909d",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7bb80e3-99c2-4675-9219-feeb0f2bbd1d"
        },
        "item": {
          "id": "e9338b21-8c53-4851-adf3-122e6fbf79f0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "96a3a402-e03a-4c1b-8bc2-25a52f2a5a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a633326c-9504-441f-bd7b-dc2401c1af01",
        "cursor": {
          "ref": "9d38de06-2e60-47c8-9276-ba3214acc8b3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "29cdb5c8-22db-4b93-a3ab-b87354dac31c"
        },
        "item": {
          "id": "a633326c-9504-441f-bd7b-dc2401c1af01",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0a9583e2-1df4-4a39-bb20-c82396e72c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1dd8a1-8dfb-494e-874a-d912dedcd44a",
        "cursor": {
          "ref": "5e3848c4-0b43-4d90-81c3-cfb0bedb16e6",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1163fac-530e-4c52-9670-11488b354979"
        },
        "item": {
          "id": "1b1dd8a1-8dfb-494e-874a-d912dedcd44a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "67af7335-42f4-4b64-a6c3-c71b96ddb268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae102e0-a18b-413e-a8c1-13f13167e040",
        "cursor": {
          "ref": "81b6346c-2d29-402e-9d35-7c8dd4677b50",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "65ea36e7-dec2-4484-a027-c241176c515f"
        },
        "item": {
          "id": "6ae102e0-a18b-413e-a8c1-13f13167e040",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b9cc9131-7f75-40b6-804d-1d0e0d7028e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527214b3-9bc9-444b-87f9-aec63778677c",
        "cursor": {
          "ref": "52174dfd-d2ee-4688-bca4-f8d741580ab9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a0e4eabe-a79a-479a-9d50-439581e9fb6f"
        },
        "item": {
          "id": "527214b3-9bc9-444b-87f9-aec63778677c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ecc91693-e2c0-42c1-b1e5-541def6cf7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cebb5ed-07ad-442d-a9c3-7cb3654bc2f0",
        "cursor": {
          "ref": "ddc135a6-26a5-4d48-9441-ebc4df2efa8c",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4ca01032-3fe5-45e8-a246-bd1c13c02b99"
        },
        "item": {
          "id": "5cebb5ed-07ad-442d-a9c3-7cb3654bc2f0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "65780cc6-1a35-4772-9925-472512cddcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84a0882-dbed-4063-81fa-377510bd01b9",
        "cursor": {
          "ref": "f6db0c68-4976-46a8-a1f8-4dda93697e74",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9096ac6e-900c-480c-86c8-7fec71961e6c"
        },
        "item": {
          "id": "f84a0882-dbed-4063-81fa-377510bd01b9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bf27372a-ba55-42dc-aac9-2fc93160adf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f9096-0d87-419b-ac21-cd73ccfc29aa",
        "cursor": {
          "ref": "28401b64-e78d-4b8c-899c-81ca9a12faec",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cae076b1-bf04-4ca4-907b-d324913f2d1c"
        },
        "item": {
          "id": "790f9096-0d87-419b-ac21-cd73ccfc29aa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "90657791-0f1a-43bd-981c-d4a21956fd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effd37ac-9834-4c44-b03f-21951db4a5b2",
        "cursor": {
          "ref": "cba5a6a7-2f27-4997-9bb3-20670b712c9f",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3851f2b0-bf62-4e63-9656-8d420b87e7b8"
        },
        "item": {
          "id": "effd37ac-9834-4c44-b03f-21951db4a5b2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e0042e81-eb80-468e-8aed-dc7f2b6fdb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0da671-634c-481f-8b5f-f84b3abcf874",
        "cursor": {
          "ref": "92e0f437-a7e4-4f95-b841-77dfc229ce50",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "42805134-0a94-4918-b843-8b862f5b6c22"
        },
        "item": {
          "id": "9b0da671-634c-481f-8b5f-f84b3abcf874",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "67af6a2a-1511-4469-8fc1-091926cabd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b007aa4-093d-48eb-8078-7154a22090ec",
        "cursor": {
          "ref": "00f90440-5078-4560-99d8-5d4b6869c6f4",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e1db6a58-f9dd-4306-9222-5ccc35d1c279"
        },
        "item": {
          "id": "0b007aa4-093d-48eb-8078-7154a22090ec",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1e327f5-ad1a-44b5-9926-92aaa75517d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df9ce46-c5b1-4767-8c08-e9e7af1a2ad8",
        "cursor": {
          "ref": "cc3923f5-d832-4463-8c90-63723256f3d4",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2cb89b36-4a9b-435d-8659-044b8fc19953"
        },
        "item": {
          "id": "7df9ce46-c5b1-4767-8c08-e9e7af1a2ad8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cde70221-bafa-4ed4-846f-96dcbfc9c7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f335b8cc-1413-4f0d-b4b9-cd222c41bdfa",
        "cursor": {
          "ref": "9c52fd9a-68cb-40c6-b260-646bcd07b2fe",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ebf8b820-d0c9-498c-967b-326e857f4ceb"
        },
        "item": {
          "id": "f335b8cc-1413-4f0d-b4b9-cd222c41bdfa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a50e5aa8-f506-4527-98b0-84c3e7a2c758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34477dc6-96d7-481d-8a03-623715129295",
        "cursor": {
          "ref": "0290de48-6df4-4856-8cb9-7a234febbfde",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e92f6cff-8fc9-4aa1-a409-d26078535a72"
        },
        "item": {
          "id": "34477dc6-96d7-481d-8a03-623715129295",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b0301852-9a5b-467f-8467-9524e4afbcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7304eec-85f1-4d59-a38d-161059a00f20",
        "cursor": {
          "ref": "f58bc9e1-9a77-49cc-b456-d96784a81495",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b83f5db-656c-49ee-b56d-d5f1c4c9a44e"
        },
        "item": {
          "id": "b7304eec-85f1-4d59-a38d-161059a00f20",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bf91239f-ff2c-4730-baf9-5b335c21e067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d394509c-78fa-4507-a6fc-25e6f8a01f87",
        "cursor": {
          "ref": "0dd0670a-38db-4892-b8fb-6b738b224b73",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5c1db91-7c3a-4e32-a5df-d157df764335"
        },
        "item": {
          "id": "d394509c-78fa-4507-a6fc-25e6f8a01f87",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7dcdcc1a-2ff0-4b7e-b9e3-0173145a7056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e5f5d9-41f6-4eae-bffa-053aac31c77e",
        "cursor": {
          "ref": "683d1486-7da7-4a8d-988b-726881b60534",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c7d30bda-f4fb-4a13-9a96-4515275110d0"
        },
        "item": {
          "id": "42e5f5d9-41f6-4eae-bffa-053aac31c77e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d2b845af-1f83-45a0-ae85-ea5db326ec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cd3944-4519-4524-ac0e-e50b63f41f51",
        "cursor": {
          "ref": "4ee60441-25d3-4807-96ad-2185167c5c57",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5714f06d-e136-45e4-b62e-75b8ad78921e"
        },
        "item": {
          "id": "25cd3944-4519-4524-ac0e-e50b63f41f51",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cb813065-9a77-4d7a-8575-7a3f69c93b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a88b3f-5d37-47fa-868f-37deda7e3cb2",
        "cursor": {
          "ref": "05e3d3b6-216d-4a0a-a578-e7b7094f0655",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fa116152-af47-4238-946b-5232785fa63d"
        },
        "item": {
          "id": "37a88b3f-5d37-47fa-868f-37deda7e3cb2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "464f7edc-9a8b-4c01-ae42-92c99f371399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1692c168-0396-4f69-a5e6-b459b90309da",
        "cursor": {
          "ref": "ddfbc543-6645-4622-b5ed-8b68417a85f4",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5031fc99-f4bd-41fd-92f8-cccfe92c9575"
        },
        "item": {
          "id": "1692c168-0396-4f69-a5e6-b459b90309da",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "59c93986-b97b-4550-954d-dce391617e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28295ea-4596-466e-8656-82a25303064a",
        "cursor": {
          "ref": "968e1b4e-a9f4-42e3-abaa-e5fa2bc41433",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a73d6e6c-e1a7-497a-8c30-7223c23359a3"
        },
        "item": {
          "id": "c28295ea-4596-466e-8656-82a25303064a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "609d0cd1-8e0b-48d9-b9cd-c37a1725a25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1567985-83d3-4c84-ac32-3eb77c54db3b",
        "cursor": {
          "ref": "01c78e17-a21d-43b7-86fc-d6cd283f72cd",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "42302236-1026-49aa-9d59-bca18a84e9fa"
        },
        "item": {
          "id": "f1567985-83d3-4c84-ac32-3eb77c54db3b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "794284a2-5dd1-4fa4-beea-3031a067d1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37569389-b8b2-4cd3-a38e-eec993c8221d",
        "cursor": {
          "ref": "d9aa47a3-5fc3-43e7-a501-cd850c336c2d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a8032d35-e0e5-4a78-b162-277c998b5280"
        },
        "item": {
          "id": "37569389-b8b2-4cd3-a38e-eec993c8221d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3fd0a0ce-c06a-4b26-bd11-66e81a3b768f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adde8e4-9356-4f45-a4c4-dcc36b6e9fb6",
        "cursor": {
          "ref": "986cb1bf-5ebf-4666-ba14-bf2044402749",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "90791d06-a5e2-4ce9-a006-eff45ace8270"
        },
        "item": {
          "id": "9adde8e4-9356-4f45-a4c4-dcc36b6e9fb6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb095ecf-3566-4e7e-a196-7f1094101f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7831ecc9-2254-4da7-9f42-1e9282b841bc",
        "cursor": {
          "ref": "5a2e3944-31d9-4815-aa07-468d696e4033",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1634129c-2d73-45b8-9e65-9736880c44ae"
        },
        "item": {
          "id": "7831ecc9-2254-4da7-9f42-1e9282b841bc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0a3e3376-7f4f-484b-8a20-347c34b581cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176485d2-7a9e-417f-8227-8833c77e32a8",
        "cursor": {
          "ref": "cdae283f-3c49-4921-af2a-5521eb696532",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bcdeeb77-db2b-42aa-a8d8-cc15baae8685"
        },
        "item": {
          "id": "176485d2-7a9e-417f-8227-8833c77e32a8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "77b0a770-59bf-48be-839e-cea637293820",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 852,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5cccf7-163c-4e21-8584-f1753d2699bd",
        "cursor": {
          "ref": "ed74c357-820d-43f3-a7ed-0fca75a0fbf1",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8c84eb5a-8ed6-4944-ad52-abf3279c63f6"
        },
        "item": {
          "id": "aa5cccf7-163c-4e21-8584-f1753d2699bd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f1b9f813-c0d7-4ec4-90d9-7d9e21aa7c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a8d1c7-5099-4c2d-b757-6eea07187a6e",
        "cursor": {
          "ref": "dc208a08-6956-41ab-90b3-3bb971bd6b61",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4cf89d2e-4439-4300-85ad-a07dbb96fb20"
        },
        "item": {
          "id": "06a8d1c7-5099-4c2d-b757-6eea07187a6e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6fe4cc2f-7fed-4e3e-b01d-3b36d13ab1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d48c53-52da-4f38-ac7c-7421368617d1",
        "cursor": {
          "ref": "dbb36421-a94d-4cdc-b953-d3a9dca0c6d1",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "98007371-219a-40a1-9343-23776d95d9eb"
        },
        "item": {
          "id": "b1d48c53-52da-4f38-ac7c-7421368617d1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "408ab1c2-3b96-45e8-8192-8f1df0dd99f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aff5878-ce84-48af-825f-059584df3ac7",
        "cursor": {
          "ref": "b74fa69a-a7af-4f9f-a478-10227be9f0f1",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "23044470-4bb7-43d5-91b3-cb9b2761f755"
        },
        "item": {
          "id": "3aff5878-ce84-48af-825f-059584df3ac7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "02e62be4-24df-4e3e-9819-83c1f61f043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba817c0a-6094-40ca-ba68-e03576b70c45",
        "cursor": {
          "ref": "493c4dc8-3899-4950-bddf-e05660016250",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "45c42b0f-7c87-4e68-a420-c642b2ce7d91"
        },
        "item": {
          "id": "ba817c0a-6094-40ca-ba68-e03576b70c45",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b152b03-4234-4cf5-8083-cc6f1b683858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfb491b-c914-4b13-96ee-0f04224ef83b",
        "cursor": {
          "ref": "666f06b5-8058-4460-a5a8-9ccfa98bcd52",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "17a14817-32b2-4004-841d-67b105dfc323"
        },
        "item": {
          "id": "bcfb491b-c914-4b13-96ee-0f04224ef83b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "201cb205-217b-441a-91b9-f85e93967eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2770cede-0acc-49ef-957d-072a0df24d53",
        "cursor": {
          "ref": "d437eac7-f1e0-4bc4-bbc5-efe10c6aad78",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "426bb722-b665-4242-8880-3e6ea160ab4d"
        },
        "item": {
          "id": "2770cede-0acc-49ef-957d-072a0df24d53",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ba01dd93-2b0a-4dc0-be66-bbf626a3abad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 761,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8154dbdc-26bd-4763-871f-5a14b3e1f334",
        "cursor": {
          "ref": "97ae5457-70d5-4155-b4cc-c2347eed5f26",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "81a46efe-4d6b-45a3-a050-e2819274e250"
        },
        "item": {
          "id": "8154dbdc-26bd-4763-871f-5a14b3e1f334",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d9bb712-e7b0-4854-a91f-a0a8204ec0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1119,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72892c2f-b3a0-4df4-aee2-27e6e8459787",
        "cursor": {
          "ref": "b082ecc8-dd40-4751-9848-8ce44f74ccf9",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9a3ef5b7-f487-4ea6-8ac8-3eeb5987857a"
        },
        "item": {
          "id": "72892c2f-b3a0-4df4-aee2-27e6e8459787",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "872dcd7b-1305-4d77-adbc-88d2e4b107be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cd166a-8b46-4e0b-ad88-a91126dfa062",
        "cursor": {
          "ref": "ce06a22c-7299-40e8-8eff-83514f11c6d4",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0cdb6ea4-2081-4032-8cb3-78854b530237"
        },
        "item": {
          "id": "a1cd166a-8b46-4e0b-ad88-a91126dfa062",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ca0ce83b-a3ba-49cc-bfa1-a146df98422b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1364,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de34b5-2af5-4a69-a1dd-93fc5547f82c",
        "cursor": {
          "ref": "3a4a3754-1bde-498a-bea8-b6d6bee8627d",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7fe49324-e93f-4b2f-824b-9154670bd156"
        },
        "item": {
          "id": "39de34b5-2af5-4a69-a1dd-93fc5547f82c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "021aec1f-14bc-43c6-b841-c94f26e548b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdff6df-48fd-4613-bc44-638fbf0b5287",
        "cursor": {
          "ref": "fbd941bb-e9d4-430e-85c6-fe8fc84debc3",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "68de81ca-7dcc-4ed0-af4b-a48db4d57cc7"
        },
        "item": {
          "id": "3fdff6df-48fd-4613-bc44-638fbf0b5287",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "243f8d2b-8e7f-4cd1-8602-e8626fb0f3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2826c04c-4a3c-4eff-a15d-20293f074d9a",
        "cursor": {
          "ref": "73bf68cf-3a1a-4a33-b2f7-e7792686c26e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f7b9b6fb-ecc0-4a59-bdfe-82b3aa0eeeae"
        },
        "item": {
          "id": "2826c04c-4a3c-4eff-a15d-20293f074d9a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1bcb27b4-6c96-4190-83a1-17cf1c8fc661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d51554-0b1e-44ed-be1e-82cb925f090d",
        "cursor": {
          "ref": "ebff7a8b-d614-42d1-a38d-e6c30a1e33c5",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1549141e-2b31-4516-a114-2e2cbb19448f"
        },
        "item": {
          "id": "d2d51554-0b1e-44ed-be1e-82cb925f090d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "76a26e74-1ea4-4a05-bb0f-e62cb58b9f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e770d835-dfb7-4ca9-b550-d6df6d088b2c",
        "cursor": {
          "ref": "918a2018-0070-4659-aebd-fb884c47ac00",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3c824c40-6223-41d0-9b92-ac65c311551c"
        },
        "item": {
          "id": "e770d835-dfb7-4ca9-b550-d6df6d088b2c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "417061cb-0056-4af0-9130-0827b0ae01c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f70231-6b5f-4392-8adc-b0acc6d41017",
        "cursor": {
          "ref": "263596e1-2b83-4116-958f-d27042ca6118",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ff63a65b-5ae9-448d-9e6a-0901aadefd6f"
        },
        "item": {
          "id": "e4f70231-6b5f-4392-8adc-b0acc6d41017",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8249266f-9cfc-4d20-8b68-7c2502800b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad64d91-d3b0-4b7b-b77b-4411b9d179a1",
        "cursor": {
          "ref": "6965a86f-aede-4bfc-9a4f-63523e736a9c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1eb569bd-2413-45c5-b55d-00562451cb2e"
        },
        "item": {
          "id": "0ad64d91-d3b0-4b7b-b77b-4411b9d179a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b132811e-35b6-4890-b4dd-321f1e0317f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6061d62-a4c7-422c-b4da-b0d054c701f3",
        "cursor": {
          "ref": "228bd3fc-d351-4c64-8e19-fba306920bb3",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "04808593-c67c-497b-9869-ed30b79cb17e"
        },
        "item": {
          "id": "c6061d62-a4c7-422c-b4da-b0d054c701f3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "24ea3ea2-d663-4744-948d-f03d3eeb246d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9df36f-79a0-4ba1-83d7-7ba7828e1f62",
        "cursor": {
          "ref": "7f6319fb-66d2-4e09-8c49-f9dd8d6bc612",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5660db76-a28c-4175-bc3f-32bb3aae8791"
        },
        "item": {
          "id": "4a9df36f-79a0-4ba1-83d7-7ba7828e1f62",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26bf718f-bbd6-49b8-aeed-eec2b983cbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a4dee0-aefe-4e2d-aeb6-6584c283ba41",
        "cursor": {
          "ref": "0f722df1-d7c2-4f74-b9b5-69e0007a350b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ed9af2ca-ef75-401c-8b3c-cedb2b1fb4e9"
        },
        "item": {
          "id": "e5a4dee0-aefe-4e2d-aeb6-6584c283ba41",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5e8fd257-af21-4a36-adc8-72b45b5f3391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f630390-1a45-4171-a19b-fbf3bea65569",
        "cursor": {
          "ref": "f106774c-9eb7-4aa3-a9df-06343c0448f7",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bf34f856-0ef8-4db2-b6b7-00df4530e195"
        },
        "item": {
          "id": "0f630390-1a45-4171-a19b-fbf3bea65569",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "21a7028b-0e98-4426-a273-28459349a3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8c0cf9-e168-463d-a863-7092de458dca",
        "cursor": {
          "ref": "bab97133-0c71-40ec-9659-792860d98855",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "db68e747-5049-4acc-8827-9e78cb129a77"
        },
        "item": {
          "id": "9e8c0cf9-e168-463d-a863-7092de458dca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8d3ab7bb-6299-4bc2-99f8-88bde0add65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440b83e0-3d17-43d3-ba8e-40d59f12f876",
        "cursor": {
          "ref": "cac37c97-c4ae-4d3a-b0de-97e6d19a5f31",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "72b4f603-72aa-4fa1-bf66-274b8f8b6b84"
        },
        "item": {
          "id": "440b83e0-3d17-43d3-ba8e-40d59f12f876",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f1024bb-bd7a-4bdc-84a6-479db7708ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f48057-787e-4e13-a5c2-0e40691b9d76",
        "cursor": {
          "ref": "1426546d-7c54-467c-9d9b-9707f9f77e87",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "534f8e7c-b333-44f3-b194-20a205c5ae48"
        },
        "item": {
          "id": "28f48057-787e-4e13-a5c2-0e40691b9d76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bf75771d-8c19-4d07-81b7-281a9c69639f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a1faca-4928-477f-84ea-2b362e8b99a5",
        "cursor": {
          "ref": "4fbbba33-0098-4224-ac59-3eb1572749f2",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "030103c6-b19e-4b91-9e66-ea504d7b0e9e"
        },
        "item": {
          "id": "98a1faca-4928-477f-84ea-2b362e8b99a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e4bd8f4e-e775-415f-89b6-9547ebdfe7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f46196-a5ad-418b-b477-a5a32e091108",
        "cursor": {
          "ref": "16cee944-4b14-4e30-9370-07a72cef3678",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5d48317d-f459-4aa1-b525-314f6c968979"
        },
        "item": {
          "id": "c8f46196-a5ad-418b-b477-a5a32e091108",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "111c7d29-a81c-4760-9e95-e0f8283e7ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1ac071-bf3d-4623-8033-35da2d0f0252",
        "cursor": {
          "ref": "f7489d0a-0df3-47f2-b7dd-76e11278a6bc",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fe026a6b-227d-4866-acd6-1c327702db07"
        },
        "item": {
          "id": "0c1ac071-bf3d-4623-8033-35da2d0f0252",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9cab44be-7a4c-4e82-be83-a833cc1ba33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d8e69-7fd9-48fd-9d91-8ba1ef840fe8",
        "cursor": {
          "ref": "c9046f44-023a-49dc-a02d-abba16191e2b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "89582f3a-406d-498f-ade8-a8f66dff6a22"
        },
        "item": {
          "id": "e93d8e69-7fd9-48fd-9d91-8ba1ef840fe8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e34c0280-58c4-4918-ad69-8bedbf47c1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feff022a-e9e4-4c01-b567-f1a1c83a31b6",
        "cursor": {
          "ref": "72234d62-fa4d-4f2a-b1fe-e12e9670b647",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4b86cb5f-a456-4d75-9b58-559de1f34a91"
        },
        "item": {
          "id": "feff022a-e9e4-4c01-b567-f1a1c83a31b6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6c7c2df4-4e13-49ae-9416-986674dbfae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c119f3-5736-4873-8c11-415bf661a90f",
        "cursor": {
          "ref": "6aca2ee4-d271-41d0-8146-67674aa60877",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6f90cd4f-23ae-4eda-8999-9ff51315e461"
        },
        "item": {
          "id": "b3c119f3-5736-4873-8c11-415bf661a90f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e5ad73db-4870-4707-b9b6-bb821a1f3b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b077ea-ee3b-45ef-8d21-167df5f30f4b",
        "cursor": {
          "ref": "b0dffdea-a24c-4f39-a243-53c42919df70",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2131b224-72d0-487c-bff1-ff6bba0eda97"
        },
        "item": {
          "id": "b8b077ea-ee3b-45ef-8d21-167df5f30f4b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b522c74d-269d-45a7-ade4-808ee2e1d46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96425cec-a9bf-4af9-9e18-2f4ad8f94fb5",
        "cursor": {
          "ref": "bd75fda9-75d7-4460-9f02-d7d9791533d7",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "14a7be3e-52c1-4c9c-9695-d4c6cdcf8315"
        },
        "item": {
          "id": "96425cec-a9bf-4af9-9e18-2f4ad8f94fb5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b5c42fc3-b5dd-459e-a81c-da8dd56f079e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afd7648-cf23-4f70-afa6-daeb0f7504d0",
        "cursor": {
          "ref": "06ae9fd3-655a-4c22-b036-4896a1fdf923",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3e96b06-ac48-410d-af60-7d2ee686c1df"
        },
        "item": {
          "id": "9afd7648-cf23-4f70-afa6-daeb0f7504d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38cff491-e0ae-41e2-9350-f5d82afddbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d5ecf3-4161-4894-ad09-e5158ed763ad",
        "cursor": {
          "ref": "4f0532b7-40db-4dab-a40f-927a02839fe9",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc48d729-81e7-4aff-8328-0ffb930f2d04"
        },
        "item": {
          "id": "21d5ecf3-4161-4894-ad09-e5158ed763ad",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f03fc959-9972-4ade-b7f5-948633c7923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c64be7a-186f-4240-9798-2cee288abf4d",
        "cursor": {
          "ref": "49cba9d9-9e1e-45f3-b2b3-1088a0974c73",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2dae58e8-aea0-4eb6-bc4c-9b2ba4ea6404"
        },
        "item": {
          "id": "8c64be7a-186f-4240-9798-2cee288abf4d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8e2456e1-5754-49ba-a447-ab24a4a3b693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1598265-76eb-45b8-9746-3e2cf51f047d",
        "cursor": {
          "ref": "78baa55d-aafd-48ca-a0e2-66cc833304bc",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "274b14c2-002f-449a-a282-b1e283997f3c"
        },
        "item": {
          "id": "e1598265-76eb-45b8-9746-3e2cf51f047d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e5248cd7-b0a0-4f6a-bdf2-f9ecc65fcae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639ecb4b-0af5-4e89-85ee-08b5097101a6",
        "cursor": {
          "ref": "a12eb5c6-8e3e-43c4-a674-d5333e97f3bd",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "62126585-90f9-4def-acd4-007c9ea1471a"
        },
        "item": {
          "id": "639ecb4b-0af5-4e89-85ee-08b5097101a6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6e35b8af-fe33-4d96-8a26-5e797506adb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be695c4-f13f-4056-a5b2-f44a3724c7a7",
        "cursor": {
          "ref": "b46d3af5-8f6d-4a8a-988f-edc01c5db8ac",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d1f3b6d-09b7-42c2-827d-e5140645eebc"
        },
        "item": {
          "id": "0be695c4-f13f-4056-a5b2-f44a3724c7a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d9f99dbe-d042-475d-9a66-0d04164a401c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde27377-0526-4df7-8664-fec7bb97a918",
        "cursor": {
          "ref": "7a55b57a-f5b9-41e1-be8d-e21bfc94bb2a",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "95fd54a2-a0a5-4be4-94e4-a88c034d97f9"
        },
        "item": {
          "id": "dde27377-0526-4df7-8664-fec7bb97a918",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a041e634-5ce8-4faf-bc81-b5d1d7405c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a248f57-dd2d-4b01-9b25-22a63500a675",
        "cursor": {
          "ref": "8c24cb43-0dbe-4323-96a9-53ba0cbbe2a0",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6cf2946f-1c2e-4650-beb9-20e6c324db3a"
        },
        "item": {
          "id": "8a248f57-dd2d-4b01-9b25-22a63500a675",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b21b2675-4ae6-4707-83af-71bcdfa5e6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4296b9cf-96f3-47b8-82c7-2a79119157b9",
        "cursor": {
          "ref": "6a142434-6b15-4f73-9fc7-27f1f7b255cf",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bc7892b7-7875-41ea-986c-53a6b5dda48f"
        },
        "item": {
          "id": "4296b9cf-96f3-47b8-82c7-2a79119157b9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db692709-7522-48db-b330-8a901a0076bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e4ea2e-f379-4f84-b831-f2f1f5be55f9",
        "cursor": {
          "ref": "c126803d-1d62-4edb-9f4a-744a40b01edc",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "01fbb791-f6e0-4170-bea7-f297f7c9face"
        },
        "item": {
          "id": "32e4ea2e-f379-4f84-b831-f2f1f5be55f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1c63083b-67d6-438d-bd4d-cf03135da7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d84021b-2e6c-4075-995b-cb5eb6363783",
        "cursor": {
          "ref": "c18392c4-1fc5-4750-92ce-9e9ef51c5db1",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9f8d3cf8-b14b-4b90-b7b3-b45d8d74f1f3"
        },
        "item": {
          "id": "1d84021b-2e6c-4075-995b-cb5eb6363783",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "286712a9-91b9-49f7-b569-aa4f8631edc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60842610-89d6-4586-8bdc-0cca7d77de62",
        "cursor": {
          "ref": "30e76796-e43b-4601-ad2f-02d0c143366a",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a04ddb96-ba6c-4e0e-9b40-41fe729a0688"
        },
        "item": {
          "id": "60842610-89d6-4586-8bdc-0cca7d77de62",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a52cc6db-bcc4-4042-83f2-4375890f06db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987c32b5-4d05-4ed8-9e46-d2e0270c4105",
        "cursor": {
          "ref": "ce76d2b0-f9fc-4657-b09f-66c08675400d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "10ae1f64-5213-4b9a-8a16-504205b1c437"
        },
        "item": {
          "id": "987c32b5-4d05-4ed8-9e46-d2e0270c4105",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "60788a4f-5925-4969-81e6-951e93a17d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4d6295-a557-4192-9389-dd7dfae1043d",
        "cursor": {
          "ref": "c3f75627-fa6a-41da-9130-81e6e3e0481d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9757501e-08ca-4756-a6f2-5d5d03973026"
        },
        "item": {
          "id": "ae4d6295-a557-4192-9389-dd7dfae1043d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f2f91abd-4eac-4b4b-8078-19dfb6becf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9976d127-472d-47d2-9294-2a51796b7a19",
        "cursor": {
          "ref": "e1a98e57-e001-4a36-9b60-cd67acecc6e0",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0e422981-875d-43c7-b8f2-e199f784e1d9"
        },
        "item": {
          "id": "9976d127-472d-47d2-9294-2a51796b7a19",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "16001fd4-c53c-435c-822b-0c6ce33882ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1046,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59428f0-c92d-419c-aad2-c5c89473c205",
        "cursor": {
          "ref": "283fe7b5-b2b3-458c-b25c-ae726c4639e9",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "57a589ce-9671-4629-8e68-e9279c9ca5d4"
        },
        "item": {
          "id": "a59428f0-c92d-419c-aad2-c5c89473c205",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1027f9da-b118-48f2-a4c9-e51f2af1fc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1121,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538dea6b-5129-43a2-b4e7-c8ff82085851",
        "cursor": {
          "ref": "0fb4b912-d671-4501-ae67-3b042f9e17f0",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0cde479-53e9-40a8-97b5-8660ad6395bd"
        },
        "item": {
          "id": "538dea6b-5129-43a2-b4e7-c8ff82085851",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ba6883d5-121f-478d-9fae-5fd6f5689816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a593e097-4b9b-4094-8d66-542d0eed25b9",
        "cursor": {
          "ref": "3971c4fc-86ca-43ee-bd93-54e115a2f7a7",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1084d4d2-b642-4080-9e14-35899d194423"
        },
        "item": {
          "id": "a593e097-4b9b-4094-8d66-542d0eed25b9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "62598595-8a9e-49c6-ba23-ce6a4962e45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935643ca-f168-4858-9ece-bf9d9f916d89",
        "cursor": {
          "ref": "64d90c2f-e654-48bf-93ae-13a2fa1d795f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "800311b9-78ab-4c47-8b1d-9ae615f792b3"
        },
        "item": {
          "id": "935643ca-f168-4858-9ece-bf9d9f916d89",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "97cef701-9f67-43c6-967f-2fd2f3829949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71863336-e56b-4019-b0e1-b929edd2996b",
        "cursor": {
          "ref": "893de82e-f00e-4f62-b8b9-afae55c08cb6",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c97e3c4c-6276-4c6b-bebd-355526f56eb7"
        },
        "item": {
          "id": "71863336-e56b-4019-b0e1-b929edd2996b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a492ba83-04f9-461a-ba61-53c50c02d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1243,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dff3aa-ecf5-4803-b778-7794bc990027",
        "cursor": {
          "ref": "bcbe338d-21e9-47eb-a75b-6e06b6e8291e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "775ff653-0bfa-41a1-9655-2f0c44f1d2c5"
        },
        "item": {
          "id": "12dff3aa-ecf5-4803-b778-7794bc990027",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "61822821-50cf-461d-bb55-af1bf5546f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e471358a-ec41-43ee-86fc-b903815c3d9d",
        "cursor": {
          "ref": "f8edb52d-5778-4764-ac4a-e35d48dcfd4e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cd248607-33b0-44b6-ae2c-ccd8251bc1a6"
        },
        "item": {
          "id": "e471358a-ec41-43ee-86fc-b903815c3d9d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "632b4cdc-3c7f-4602-8a0b-a51a69bdd863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc4cd63-acdf-4fb2-83b0-861f18c76421",
        "cursor": {
          "ref": "c75af472-e7ce-41bf-9a63-a06abc9c3d98",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "63ebe322-60f5-4199-afd1-2058e64eb02e"
        },
        "item": {
          "id": "3bc4cd63-acdf-4fb2-83b0-861f18c76421",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4b3a8136-7f7a-41d3-84f4-5278a0614ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c885cd-03f6-4c06-9eb7-53fbfded3bdd",
        "cursor": {
          "ref": "3fe4e081-2595-4d5f-9f53-7d36fb308592",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6ae988bd-6ba4-4e68-b982-600a0c825676"
        },
        "item": {
          "id": "e9c885cd-03f6-4c06-9eb7-53fbfded3bdd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c5f5b826-34c1-49e9-aa1c-0080b6e5bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6077132-4181-4b62-a7bd-c4d8b59d95a8",
        "cursor": {
          "ref": "344a26e5-dc19-4e50-b19d-61c38e61c376",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "807ce17b-125c-40a9-9ab9-0f2882208623"
        },
        "item": {
          "id": "d6077132-4181-4b62-a7bd-c4d8b59d95a8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "07d05a55-a3ca-414c-889c-cfe71721bbfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bc3282-b2e4-4002-8fb5-7514a3891f75",
        "cursor": {
          "ref": "501dc9b8-4e5f-4e34-91b5-ab8bca9d7888",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e1fbc702-4b95-448d-93c0-6b2c57f6f371"
        },
        "item": {
          "id": "62bc3282-b2e4-4002-8fb5-7514a3891f75",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5d2e34d7-6340-4fd1-9bf6-ff1c51ca2b6e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 668,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5536a659-9f73-4d3f-a0d8-6ac4ef07ce7c",
        "cursor": {
          "ref": "0e08b707-545e-4e6d-9aca-d27a04e970ed",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e828a4ad-bcfb-4b89-a031-40c244023bc3"
        },
        "item": {
          "id": "5536a659-9f73-4d3f-a0d8-6ac4ef07ce7c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "56466b56-f6a5-4894-aaa7-3c66a94d29cb",
          "status": "Created",
          "code": 201,
          "responseTime": 10169,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bd087e-e195-4cf6-97d5-1b46bc173517",
        "cursor": {
          "ref": "4fea9fef-a1f6-4786-89c0-f877de3a6867",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ef0dd6ec-9229-443f-a52d-9495a8a5ad00"
        },
        "item": {
          "id": "a8bd087e-e195-4cf6-97d5-1b46bc173517",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a478cc9-44ab-404e-a44d-1f7e9859717b",
          "status": "Created",
          "code": 201,
          "responseTime": 6079,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f406e-f16e-40ac-be5a-5cd51c4e6e4e",
        "cursor": {
          "ref": "6a290b86-d977-40a0-be3a-84395065bebc",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a46e3e20-7bd1-4c02-a0a1-515773ffa888"
        },
        "item": {
          "id": "780f406e-f16e-40ac-be5a-5cd51c4e6e4e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bd3cecf3-fa7e-4c85-84d9-232faa58a2fc",
          "status": "Created",
          "code": 201,
          "responseTime": 5668,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "44702198-9dc6-4b9d-8dd0-08cd92d29d7c",
        "cursor": {
          "ref": "d6114fe0-88ba-4f8e-9d34-406886e57690",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "43dd602f-d9e0-419f-a0f9-c808e83202dc"
        },
        "item": {
          "id": "44702198-9dc6-4b9d-8dd0-08cd92d29d7c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ad5be7d6-4f3d-4677-adf3-9a37bb1a66ae",
          "status": "Created",
          "code": 201,
          "responseTime": 5680,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dda01c-93fa-4f7f-b513-50aa4e3c8ed7",
        "cursor": {
          "ref": "ab640b1f-c992-48c8-b171-2fe594665acf",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "358487e5-eacf-4338-8e8a-c26ebd586c30"
        },
        "item": {
          "id": "17dda01c-93fa-4f7f-b513-50aa4e3c8ed7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8b718a73-93d7-4581-9b1d-f2627bf56917",
          "status": "Created",
          "code": 201,
          "responseTime": 7242,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56f2435-1fe3-4cd6-8338-5aac70ef419a",
        "cursor": {
          "ref": "c3123928-135d-4a49-8196-583d57be44ee",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c772110c-07c5-4350-a8d6-c70fac4c4bfe"
        },
        "item": {
          "id": "a56f2435-1fe3-4cd6-8338-5aac70ef419a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c3e9aded-d127-4259-96d9-cd27e835d050",
          "status": "Created",
          "code": 201,
          "responseTime": 8066,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab94411b-4bb0-4756-a7dc-f56ec35d0b8c",
        "cursor": {
          "ref": "6d063b9e-2b3a-49b3-b83e-042b8a6b7b3a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02aa24c7-dfa3-4e01-8e1e-615cd5b15aab"
        },
        "item": {
          "id": "ab94411b-4bb0-4756-a7dc-f56ec35d0b8c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "470e64de-1517-4943-abb2-5de78c2b66fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab94411b-4bb0-4756-a7dc-f56ec35d0b8c",
        "cursor": {
          "ref": "6d063b9e-2b3a-49b3-b83e-042b8a6b7b3a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02aa24c7-dfa3-4e01-8e1e-615cd5b15aab"
        },
        "item": {
          "id": "ab94411b-4bb0-4756-a7dc-f56ec35d0b8c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "470e64de-1517-4943-abb2-5de78c2b66fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877bd37e-acea-4000-93d4-fb91af5500c4",
        "cursor": {
          "ref": "3ca06db4-c768-4f08-8b09-fbf116d18cd0",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59176be1-5924-4672-8878-72aa920c4afa"
        },
        "item": {
          "id": "877bd37e-acea-4000-93d4-fb91af5500c4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c82e28fd-9a6a-4575-bee5-0249f2dded0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a00d8-2161-47b0-a46c-4e3ebedbd47a",
        "cursor": {
          "ref": "dea7f97b-df99-4266-b72f-58f814af280a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aff413b5-d32f-40e2-8917-24969431ef21"
        },
        "item": {
          "id": "8c8a00d8-2161-47b0-a46c-4e3ebedbd47a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9da95b4a-0a08-495f-aaf0-90d83b43add8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db800a46-a868-407b-9279-5cfe3b1b2575",
        "cursor": {
          "ref": "4ce1cd29-533c-464c-b320-4f1204338b78",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3104d59f-03a4-4fcc-a5ea-0de5445cb7a0"
        },
        "item": {
          "id": "db800a46-a868-407b-9279-5cfe3b1b2575",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af823654-8e68-474c-a702-9b6954139469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3f4594-7f3d-493b-83b4-568ada11993f",
        "cursor": {
          "ref": "ea524591-1611-404d-b266-eb5fd45a3306",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5aeef46-e0f4-40d3-bf6f-f5039bf5c5ad"
        },
        "item": {
          "id": "dd3f4594-7f3d-493b-83b4-568ada11993f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dfa2dda5-35ff-45f6-aa6e-f3c6e8a70f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b26fcbc-b54f-41ed-892e-00bf08f8ddb2",
        "cursor": {
          "ref": "eded4b2e-692c-44e1-8105-07d851654eff",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e76ea5c9-9dca-4d41-846d-857f389fcb5c"
        },
        "item": {
          "id": "8b26fcbc-b54f-41ed-892e-00bf08f8ddb2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f0d5e735-e3e7-4521-9784-bd41286f9d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec11e40c-2fec-41fb-8ce2-9f5d0881eb36",
        "cursor": {
          "ref": "05e489f6-bfaa-4268-9b57-29ca51c98c74",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fb5bece6-7b08-4e35-8a30-3fbd184cf30f"
        },
        "item": {
          "id": "ec11e40c-2fec-41fb-8ce2-9f5d0881eb36",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a21366e3-8794-4a43-bfba-9eb46b18a80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1834ad0c-4094-4113-86de-37f7df764b94",
        "cursor": {
          "ref": "e4e25558-6a05-4ed0-97f0-2246fabc19bd",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9f3dd25c-8a72-4108-8b2b-b32c9b517af4"
        },
        "item": {
          "id": "1834ad0c-4094-4113-86de-37f7df764b94",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "58fefead-3a13-4531-9a72-5abf1e38d77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a90cc35-ce77-4eb8-af14-933dabb16fdb",
        "cursor": {
          "ref": "4c197f8a-71ca-402b-9e62-9efc96b5702b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d7b7e127-c78c-4f20-aa2a-15f2072001c1"
        },
        "item": {
          "id": "5a90cc35-ce77-4eb8-af14-933dabb16fdb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "05168281-0270-4e3a-b4eb-afbc7e754911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d62e2c1-9340-4b1a-af76-57b3380b98a0",
        "cursor": {
          "ref": "7405da8c-e99f-4488-bb4e-7174b051fc6b",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1bc787a5-0f25-4990-86f4-7170117099e2"
        },
        "item": {
          "id": "7d62e2c1-9340-4b1a-af76-57b3380b98a0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "13a62589-5b20-4151-846b-1594fc5f7e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dd7123-aae0-48c7-833c-3addbf54f0be",
        "cursor": {
          "ref": "17a15b39-3ca7-4b03-9c3a-2ddacaaab77b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "560c6d51-51ce-45ca-891f-c941f681c6f3"
        },
        "item": {
          "id": "23dd7123-aae0-48c7-833c-3addbf54f0be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "161b5ae1-4a34-45d0-b165-c12943db6549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c4ddd-15f5-4981-a59d-39b112a31efc",
        "cursor": {
          "ref": "2c619a7f-84b5-438e-b560-52b37cc42f8a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8bca64a6-3eef-414d-a121-f7acd4710ebc"
        },
        "item": {
          "id": "e30c4ddd-15f5-4981-a59d-39b112a31efc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f1baa607-e1b5-433f-b27b-6c0f2adf492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9c33c1-6686-4822-878d-90afa258e990",
        "cursor": {
          "ref": "eaea4af0-f242-4e40-a6cd-599ad0231b01",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37a1f25c-64aa-424c-93f0-567e0e6a7de2"
        },
        "item": {
          "id": "0b9c33c1-6686-4822-878d-90afa258e990",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "24355cfd-1e81-4b6f-ae33-68fae85344b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3472509e-9a37-40c9-ad8b-1ddc31af2e20",
        "cursor": {
          "ref": "019e52d8-548a-4933-8d42-67e52b11f5db",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2ae8972e-4830-4994-af40-a9bd234bd853"
        },
        "item": {
          "id": "3472509e-9a37-40c9-ad8b-1ddc31af2e20",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "110add84-1e24-47c8-bcb2-b74f7e77a1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20b4ca3-c2cf-4a67-82ec-8dd4d0d9cbf9",
        "cursor": {
          "ref": "4e92f77f-7905-42b3-8f16-2cce1e4738ce",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d5e0fd63-61fe-4993-90f1-ed5a375b1ab9"
        },
        "item": {
          "id": "b20b4ca3-c2cf-4a67-82ec-8dd4d0d9cbf9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61b8edca-8204-4890-b739-ef223e05b37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b5292d-673a-44a4-a833-5a9cc8dbd5b2",
        "cursor": {
          "ref": "c34c8bcf-73c8-466f-b77e-cdb229316b57",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "49c7cdf4-966e-4c7e-9be6-926cabe57351"
        },
        "item": {
          "id": "18b5292d-673a-44a4-a833-5a9cc8dbd5b2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8168bf8a-4949-491f-9c4f-f760f2035955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d8d7ad-ec4d-424f-a1db-3c78c4593e60",
        "cursor": {
          "ref": "d4cc9ce3-c5af-4217-a218-fc0b655f4504",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a87c2564-0d79-4d4c-9a04-050c7468f211"
        },
        "item": {
          "id": "27d8d7ad-ec4d-424f-a1db-3c78c4593e60",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "247d428f-72c6-41bd-bdd6-8d2ebd3d5748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45160a08-0916-4454-b439-30c2c5460768",
        "cursor": {
          "ref": "fce60722-367e-4b89-b6d6-f24159d234e9",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c30d6f5a-778f-43cf-b2c4-a8f452ae55a3"
        },
        "item": {
          "id": "45160a08-0916-4454-b439-30c2c5460768",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b30ba48-58de-4546-bc35-74b9ad2f6a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619a8842-6fed-4281-981e-2dc2d91ec8fc",
        "cursor": {
          "ref": "dfcbcbe5-5f17-45c2-bd7a-e730f618f5d4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2033a937-5c7b-4af4-ab15-5f2a047a0fc3"
        },
        "item": {
          "id": "619a8842-6fed-4281-981e-2dc2d91ec8fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "35f87090-507a-4ecf-954b-65a048f563d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2a9fbb-c4f6-4da5-8042-5f62f7f246cb",
        "cursor": {
          "ref": "dddf1401-f011-40fc-83c8-9b965ec25fb7",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "84169d81-4d1c-47c2-b147-16baeac0d298"
        },
        "item": {
          "id": "6d2a9fbb-c4f6-4da5-8042-5f62f7f246cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "796bf577-7300-467e-ab2e-5cda7e0ef4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515eca99-e6c5-4d18-87b1-18174b62536c",
        "cursor": {
          "ref": "a216d42b-2fea-4928-8afa-405c67a84d3c",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "723a5094-9d36-4eb6-8aab-de94a7a1abfd"
        },
        "item": {
          "id": "515eca99-e6c5-4d18-87b1-18174b62536c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0363d31f-ca6a-4bf5-92ce-4610fb1d9b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b099f60-a5fe-4081-affc-1d29ab6646a9",
        "cursor": {
          "ref": "c35759c2-8356-483a-b529-1e983936191e",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "969bc71a-96e6-4492-bf1a-6d3e68db1f5b"
        },
        "item": {
          "id": "7b099f60-a5fe-4081-affc-1d29ab6646a9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "89d82a8c-f311-4b5a-b5cc-65018384e903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b54f497-9c44-4ebe-85f8-3d478637b24a",
        "cursor": {
          "ref": "cb843791-93fd-4814-b96e-5ae36e5bb21d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "95d7f218-0725-43c5-a1b7-5fcf63cce12b"
        },
        "item": {
          "id": "7b54f497-9c44-4ebe-85f8-3d478637b24a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b8201cfb-4cd4-4c5e-a67a-2176289aefaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5b07c2-ee0a-4168-b113-7044694ceab7",
        "cursor": {
          "ref": "b580d2a7-7685-47b5-a20a-907a546c02a7",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f0e2121b-62ff-4372-b29a-20535195f5d9"
        },
        "item": {
          "id": "fd5b07c2-ee0a-4168-b113-7044694ceab7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "46bf56ea-7c92-4b68-bf31-a6311e855ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12e3185-9896-4c89-8bfa-7a1e80501fe9",
        "cursor": {
          "ref": "36aa9d1c-e254-41e1-9f69-169cd71e3b1a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "86a13ab5-de9f-4204-99c7-bdd3469e1dbc"
        },
        "item": {
          "id": "e12e3185-9896-4c89-8bfa-7a1e80501fe9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8bce6b60-bfd3-47c3-a0be-7ce832591039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a57e01-5ce6-41b9-9be7-6cceab17cfcb",
        "cursor": {
          "ref": "1cf710f6-2a19-4a02-8012-c2a1b1626139",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e40b554f-424c-4033-a4ea-e411e00c88c8"
        },
        "item": {
          "id": "45a57e01-5ce6-41b9-9be7-6cceab17cfcb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7d5ef6e1-873e-44af-9d86-91e31170becc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ba1fb-392e-4523-8d6c-8097986b36cb",
        "cursor": {
          "ref": "6a9d1b92-b36f-43ad-b4a8-c8168d68a474",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c7cde7fc-82be-4651-8b96-a0b2ffff968c"
        },
        "item": {
          "id": "729ba1fb-392e-4523-8d6c-8097986b36cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b5be3ca-9591-4ba7-b8b0-823741bfc912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1872,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a751301d-dbcc-46aa-9c80-0eab0cd50f30",
        "cursor": {
          "ref": "e540f260-070f-4c87-9e46-f2fee33a14ff",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "96d47f4f-cdc3-43e4-ab6e-70165d0ab7f7"
        },
        "item": {
          "id": "a751301d-dbcc-46aa-9c80-0eab0cd50f30",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b23ab8d9-c1ee-4199-8ede-cdeb01e03e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1752,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0310ff-4940-42c4-a22e-c01a4c84c5fb",
        "cursor": {
          "ref": "3b2389ef-4e11-42f5-b10a-a46f453f5313",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9ee6828e-8d82-4244-852f-bb69a902a3d8"
        },
        "item": {
          "id": "8d0310ff-4940-42c4-a22e-c01a4c84c5fb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bd7636f1-78ad-4ecd-86f8-89142c097e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1895,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77cf40a-afa3-45b9-ab08-48e366aa0fe8",
        "cursor": {
          "ref": "9831b488-a66d-4b39-b2d3-17a7fb6e1171",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e3054d73-1679-454c-a5d5-dfb0e4c00dbb"
        },
        "item": {
          "id": "f77cf40a-afa3-45b9-ab08-48e366aa0fe8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "34d49000-68bb-4eaf-acb4-c276c48895f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad648592-a637-4baa-93f0-251658a7999e",
        "cursor": {
          "ref": "4ea288e4-a228-45e3-986f-171fff503075",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d893b38f-7c71-4a9b-b5c8-121c84cac949"
        },
        "item": {
          "id": "ad648592-a637-4baa-93f0-251658a7999e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "95595560-e26e-4904-a65b-5820fe8bc7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c535c7-dea9-4d36-b3b8-583287ce9795",
        "cursor": {
          "ref": "b5c51212-9585-4ab0-b9d1-889982c04702",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5c60a164-2ced-464e-bb79-042c9ba9d7c1"
        },
        "item": {
          "id": "b2c535c7-dea9-4d36-b3b8-583287ce9795",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4336f54f-a6bf-43c1-a1d9-7ff9636d076e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc52d90c-0945-4b17-b682-7e578931cb88",
        "cursor": {
          "ref": "57aef85f-cc1a-4c20-8942-33508560a512",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "db5b4fdd-bc63-4802-bd66-b6840ab30637"
        },
        "item": {
          "id": "dc52d90c-0945-4b17-b682-7e578931cb88",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c487890b-b92b-4adb-907f-67cdbcfd8996",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022ff4bd-359e-4674-8958-2e4d8d4cbfcc",
        "cursor": {
          "ref": "c1dcd42f-fb9a-48e9-bd20-d7bb4148e933",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7e8fab0f-1198-47f3-861c-f605f1abe885"
        },
        "item": {
          "id": "022ff4bd-359e-4674-8958-2e4d8d4cbfcc",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "59eb2b6e-2f36-467c-a8e5-d4751243c863",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 767,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cc4335-bb69-4ce9-8e48-34db3bc1a72a",
        "cursor": {
          "ref": "5ef34ee5-65dd-432d-8700-379fb2fa4c15",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bf98081b-b47a-4ff1-b997-7b55ba29f0d2"
        },
        "item": {
          "id": "17cc4335-bb69-4ce9-8e48-34db3bc1a72a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c47c62b5-3a00-46d1-bb6c-b99399848ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cc4335-bb69-4ce9-8e48-34db3bc1a72a",
        "cursor": {
          "ref": "5ef34ee5-65dd-432d-8700-379fb2fa4c15",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bf98081b-b47a-4ff1-b997-7b55ba29f0d2"
        },
        "item": {
          "id": "17cc4335-bb69-4ce9-8e48-34db3bc1a72a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c47c62b5-3a00-46d1-bb6c-b99399848ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ab4e7b-e7f3-4519-aa00-17c5e13967df",
        "cursor": {
          "ref": "e05d7fd7-b0d4-4d36-a2e2-6a373cc46439",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c793f7f-7082-48b0-836f-d4e1e408fb3c"
        },
        "item": {
          "id": "03ab4e7b-e7f3-4519-aa00-17c5e13967df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd0bc955-fad2-40ae-b83a-cffcc68cf0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27176448-79bc-4d68-9aaf-2357035a4be2",
        "cursor": {
          "ref": "d90ac1bc-6a05-4a7e-ba29-7266e633f0bb",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bf3216b6-360c-45c0-8bca-f50483908821"
        },
        "item": {
          "id": "27176448-79bc-4d68-9aaf-2357035a4be2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4a5d56ca-20b5-4fdc-a6e9-4f61051895c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d34ff2-02b1-4cdc-96a7-b240758e533e",
        "cursor": {
          "ref": "a89aa21a-8f38-416c-aedd-4c26fe29b6cf",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d9edc674-3e00-4c82-86dd-9741eba5712e"
        },
        "item": {
          "id": "00d34ff2-02b1-4cdc-96a7-b240758e533e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3234db25-a137-4111-9efb-28a8d20e4b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658a12a0-dd08-4c86-9a1b-0eb5f66eb6a7",
        "cursor": {
          "ref": "2fba9156-bf68-4618-9aa6-642b08362771",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "134c4fb1-cf40-493c-9d58-9eee6d690d10"
        },
        "item": {
          "id": "658a12a0-dd08-4c86-9a1b-0eb5f66eb6a7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "61544bb3-4de3-4cee-be2d-a460b4afad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7e939c-976d-4c86-94bd-3984ddccea0b",
        "cursor": {
          "ref": "c697c4ad-6c2f-4da2-b467-1cd349b8b881",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9820600e-0720-42a5-ba4b-c3d0dc998c8c"
        },
        "item": {
          "id": "fa7e939c-976d-4c86-94bd-3984ddccea0b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d1a998ab-0809-43f2-95b8-790cb4c896d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9112bef7-1265-44d4-b6c5-d231864cb20c",
        "cursor": {
          "ref": "b47722eb-46bb-4e9c-8064-33bb2952d083",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "77115704-1dec-4772-82fe-ec7c851ef989"
        },
        "item": {
          "id": "9112bef7-1265-44d4-b6c5-d231864cb20c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2d36084c-e7aa-400b-954e-83f6dfe6f7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d5b95c-02a6-4790-bd5c-6f82b22137f2",
        "cursor": {
          "ref": "6c989c8d-a1c3-4f67-8146-9c96896cc45a",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1de0f573-e775-4d8d-9452-8f9929468bd2"
        },
        "item": {
          "id": "f2d5b95c-02a6-4790-bd5c-6f82b22137f2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "16c228e3-cae9-485d-8492-85c5dbc2ffcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712838aa-aeba-4c74-839c-03e30ef84476",
        "cursor": {
          "ref": "418e03ec-60ad-418d-a6df-13a9b56f5adc",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "354cbdf1-80c6-454b-b90d-11ea5d3c848a"
        },
        "item": {
          "id": "712838aa-aeba-4c74-839c-03e30ef84476",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6121f264-858f-4b02-bac1-1999d599e3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342753df-2ade-428d-8489-412061f8d695",
        "cursor": {
          "ref": "13e7b873-a67c-40e7-8812-a64f1e333c58",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fac8bbfd-bb68-4aba-8ac5-dc1079ed0a34"
        },
        "item": {
          "id": "342753df-2ade-428d-8489-412061f8d695",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6429235d-44cf-4905-9700-7af84f76df78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f971b3f3-9686-421e-9e8b-460e016cec68",
        "cursor": {
          "ref": "2eeeb00b-f8fa-447b-b5de-97373b3730f8",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3b23b08-acc4-4c2c-b0d6-41e3e965b7c9"
        },
        "item": {
          "id": "f971b3f3-9686-421e-9e8b-460e016cec68",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2cc4545a-0e10-47dd-b130-4115e244005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b54db5-21d6-401d-ba3a-3300aee40024",
        "cursor": {
          "ref": "14c68aec-1e67-4f78-a1bd-c1924f36deba",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8f355f92-3575-496d-a0d8-31651ae29219"
        },
        "item": {
          "id": "36b54db5-21d6-401d-ba3a-3300aee40024",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9ebdda44-b11f-47be-9c84-9a6681c3cab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ba9e2f-f0af-43c1-bdf3-d189aa6b3db6",
        "cursor": {
          "ref": "47cdd3f1-aba3-4201-96b8-4fe6d838435c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11e895ef-ea1e-4778-b1ba-cdf9f1ce580a"
        },
        "item": {
          "id": "02ba9e2f-f0af-43c1-bdf3-d189aa6b3db6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b501b5b7-bf8c-4efa-b85e-bb6dd5c9cbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade728a8-047c-4eea-becf-2de8b0b2d56b",
        "cursor": {
          "ref": "29b12023-f707-44af-a7e4-b0190402f242",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "67c38b8d-abfb-4966-a95e-bbc649dd6e9b"
        },
        "item": {
          "id": "ade728a8-047c-4eea-becf-2de8b0b2d56b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a73b9eea-57d8-47ca-a87d-7ae46127339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad614d-f407-4299-abee-b3c8b3161d10",
        "cursor": {
          "ref": "44089793-046e-4353-bb21-448e774280d6",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6700d9e2-4819-4a7c-9f45-6773827327f2"
        },
        "item": {
          "id": "56ad614d-f407-4299-abee-b3c8b3161d10",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d739c82a-b81c-4318-b63c-baf70e6d8384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1ab05f-6385-46ce-93f0-e878b072028d",
        "cursor": {
          "ref": "8e3f55fb-f8f0-4dd5-8455-c86330244d31",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2a8bdd74-4a77-420b-b1c2-f25b8d4f32a0"
        },
        "item": {
          "id": "fd1ab05f-6385-46ce-93f0-e878b072028d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "52f594fe-5c64-4088-bb5d-4d4adc503562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f75105f-c8e5-41c7-aad2-b537ed5e250a",
        "cursor": {
          "ref": "e343d0d3-f8c8-4ded-ad13-58af4076a2bc",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eb0e6a0b-464f-4190-a3bc-18fbffd5111d"
        },
        "item": {
          "id": "6f75105f-c8e5-41c7-aad2-b537ed5e250a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f16efa17-3224-40d3-b005-6bac20da2471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be06c65-a264-4fcc-a376-3152d0fe0e3f",
        "cursor": {
          "ref": "4882fe41-fec8-48f7-91a5-d32657c9603e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2eb0656a-317a-4d41-acd8-9229912be8a1"
        },
        "item": {
          "id": "4be06c65-a264-4fcc-a376-3152d0fe0e3f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "09a11755-11ad-4092-bd4a-2f88095d07f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2014f80a-26ee-49fc-a826-1a7d6494a379",
        "cursor": {
          "ref": "e0d0637f-9105-4255-a064-ae5e98a32a17",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "669019f2-d75a-4d05-8760-6274af970552"
        },
        "item": {
          "id": "2014f80a-26ee-49fc-a826-1a7d6494a379",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "68fac3c1-33f0-45b4-beb8-ec93cc3629d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d68f02-0420-4189-a707-70e4e06d333a",
        "cursor": {
          "ref": "c2a619c3-a225-4fe2-865e-4b2fc4efe8d1",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fe997200-b7d2-4495-8683-6b405891ae68"
        },
        "item": {
          "id": "b4d68f02-0420-4189-a707-70e4e06d333a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "27fab294-c984-4772-8338-8cb69d76ae84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac78a243-d133-4b62-bf76-b04faea91253",
        "cursor": {
          "ref": "288a8690-3571-42e1-ae97-ea896cc733f2",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9124aa37-d872-4f10-8fc4-9c467c042fca"
        },
        "item": {
          "id": "ac78a243-d133-4b62-bf76-b04faea91253",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "efd5f82a-152d-4e1e-8b7a-f0acc05f191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60063513-dd67-48f9-bb02-2e6166f70d8d",
        "cursor": {
          "ref": "6a47911e-81ce-4a32-929a-c46d4b60f539",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f19b784f-8799-4201-9c72-4ebb11961c28"
        },
        "item": {
          "id": "60063513-dd67-48f9-bb02-2e6166f70d8d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "198ca121-7798-41c7-963d-b4540de33269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556669a0-7995-438d-a48a-e40c577b03b1",
        "cursor": {
          "ref": "1b2ea9b9-7003-421e-9d62-260d1cd80bd2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "10792054-ab12-4e67-97cb-75709ec3c80e"
        },
        "item": {
          "id": "556669a0-7995-438d-a48a-e40c577b03b1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5c9af1a6-f84f-4d8c-aa10-c1a9fef86eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eacf378-bb76-416f-8699-29856b698492",
        "cursor": {
          "ref": "452525e8-f3aa-479d-9169-e6bac79ce043",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5fe1f292-c211-41af-ac94-a5fd9938990d"
        },
        "item": {
          "id": "3eacf378-bb76-416f-8699-29856b698492",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "04de7c33-b5b6-4930-af0f-2a966ed10914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b8bd0f-80a9-44a5-b9c8-b2550fc2c321",
        "cursor": {
          "ref": "34c03bda-62a2-4988-9281-c7a00febe880",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "261cf078-4af4-4ba8-9c05-a67c8ee1719f"
        },
        "item": {
          "id": "65b8bd0f-80a9-44a5-b9c8-b2550fc2c321",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bdc869d3-9f1e-45b2-8ec7-9afe814ce050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839a63e3-ee24-43c6-bfd8-3516de06d3a6",
        "cursor": {
          "ref": "dcb01598-86a4-4650-8a41-1dc18b85a2ab",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4021c1c0-1183-4a24-8635-d361ff5dd32e"
        },
        "item": {
          "id": "839a63e3-ee24-43c6-bfd8-3516de06d3a6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57733418-99dc-4557-aee6-ab243ae3ae2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3f49c3-c9e2-4c87-88da-17899288c262",
        "cursor": {
          "ref": "81ca5939-eacd-4a9b-9388-0cbdde403183",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a5e36d6d-8ad1-4d54-89eb-bef6838af898"
        },
        "item": {
          "id": "0e3f49c3-c9e2-4c87-88da-17899288c262",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cf5180dd-7a56-4711-8a12-a84131e59074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878c746d-7b42-4f36-8f66-a9d12951eb49",
        "cursor": {
          "ref": "c7962092-ec42-42ca-84f4-161c352780e1",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a96075e5-9366-4a98-bbe3-dacd77175c38"
        },
        "item": {
          "id": "878c746d-7b42-4f36-8f66-a9d12951eb49",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c16f6e00-f846-4ee0-8c0d-151af50b9508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d50741-6e8b-4306-a54e-860bb4f8cf2d",
        "cursor": {
          "ref": "37785d7d-afd4-4cd9-b7ad-35f3725a51bf",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "16d801e0-9b00-465e-aa24-1298ea0c7f93"
        },
        "item": {
          "id": "b1d50741-6e8b-4306-a54e-860bb4f8cf2d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a98047a8-05bc-468b-86b3-7bc43c98f8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e7ea83-b18b-4b20-b128-511b3e8d9fd1",
        "cursor": {
          "ref": "7b8f8df6-505d-4cb3-bc29-eddfbf4a2d20",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ce1edad6-c59a-44d1-bec4-16441bc9ab62"
        },
        "item": {
          "id": "e6e7ea83-b18b-4b20-b128-511b3e8d9fd1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c7f105d1-6ab7-4c2e-bee7-b68fad1ff621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164fa1e5-c46f-42b6-8097-ba6c01bdfe5f",
        "cursor": {
          "ref": "215271be-c05f-4b80-ba69-fe019b3df1f4",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ade6c38e-1fbb-41f9-af20-7d613c86284b"
        },
        "item": {
          "id": "164fa1e5-c46f-42b6-8097-ba6c01bdfe5f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "df08e017-2c16-423c-9667-3f9dfe76979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b38041-c4dc-4e98-864f-f45b4f49ce93",
        "cursor": {
          "ref": "fdcd6c23-04d9-4fec-aaf7-653f65bd82f1",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c6ac9c7-2754-4d01-ae01-75c229f47b0c"
        },
        "item": {
          "id": "10b38041-c4dc-4e98-864f-f45b4f49ce93",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "126d9edf-cdc4-4a33-8b6a-402474dc6712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee13fd0-e8c4-4d45-ab52-13b9d01a65d4",
        "cursor": {
          "ref": "978ea054-571f-46a0-a6c0-fa9dbf42834d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "73bcf280-692f-471c-baab-20b1ff7ebecb"
        },
        "item": {
          "id": "4ee13fd0-e8c4-4d45-ab52-13b9d01a65d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "97ff0707-f2ea-41c2-9230-8777be75d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acdacf4-3661-4083-b771-91e1fcce85a6",
        "cursor": {
          "ref": "c658d173-0750-4711-90ac-2c3083e1088a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "329d9c47-9648-446d-8a32-44432987c8c2"
        },
        "item": {
          "id": "9acdacf4-3661-4083-b771-91e1fcce85a6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ccf2916a-19af-4d0e-8676-e74383f2f1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be79eb-4b62-48b1-9850-65384520bf3b",
        "cursor": {
          "ref": "1bc05e8e-7e51-419f-b677-892afa99821c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1050d027-5255-48cd-b9fc-e595c0c774a7"
        },
        "item": {
          "id": "49be79eb-4b62-48b1-9850-65384520bf3b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f7d5d7e5-e584-4f9e-8e75-e6e0a0334635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf1b2ba-166d-4f8b-936e-3b973c6a0505",
        "cursor": {
          "ref": "50912384-52c4-45f6-a052-4a64c3f8484a",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "53ed4cf5-c85b-4319-8f0b-5a0229a8a294"
        },
        "item": {
          "id": "fdf1b2ba-166d-4f8b-936e-3b973c6a0505",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1b437455-2dba-4d02-9244-7978410a88e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9025a44a-8941-40db-beae-43334208529f",
        "cursor": {
          "ref": "ec94e017-f91e-44ce-8405-ce17d018fa93",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1289fc27-c3fc-462c-a978-1085c95df151"
        },
        "item": {
          "id": "9025a44a-8941-40db-beae-43334208529f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2a124741-6c37-4c4e-8208-56e08c445d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a28baf-2ab5-4832-bb49-38d6b9c3fbdc",
        "cursor": {
          "ref": "beadffda-475d-4a16-b62b-b1210830ea9c",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "38483db3-8673-4b2e-a2ca-681a12a27994"
        },
        "item": {
          "id": "18a28baf-2ab5-4832-bb49-38d6b9c3fbdc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f613eb1b-51c4-4c94-9b95-0f0b29f4a7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992e68f9-7170-4c29-b11c-c486463135ee",
        "cursor": {
          "ref": "4c40349d-bbfa-4956-9536-a7f856a47458",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b708e917-759a-4133-8d06-4d5bb68f1267"
        },
        "item": {
          "id": "992e68f9-7170-4c29-b11c-c486463135ee",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5c6ea635-e4e4-40e8-bf6c-1fca32ac5524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daa8393-d7ee-4a9a-8bee-71d52a5eab8f",
        "cursor": {
          "ref": "dbdbc20f-0bc4-46bd-91dd-de671c2ffdff",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6a0c82cb-1dd7-4374-accc-d055d6b84e93"
        },
        "item": {
          "id": "3daa8393-d7ee-4a9a-8bee-71d52a5eab8f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b1ca6a7-869e-4bd1-a12b-e440cf9bd760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141cb357-b6a8-4369-81d2-feeeeda19a65",
        "cursor": {
          "ref": "177033ee-ca6c-4de5-b23d-bd7ebd620ce7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7ca199db-e2b4-431b-ab94-cf990c6837ee"
        },
        "item": {
          "id": "141cb357-b6a8-4369-81d2-feeeeda19a65",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d311cbb7-8c9c-4156-82eb-c659f261e54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13448960-b144-4372-b128-0c35821eb266",
        "cursor": {
          "ref": "724fb469-a199-4f4f-9d27-cc4e262b3f6b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6e84e1f7-e599-4b81-b076-e30841220782"
        },
        "item": {
          "id": "13448960-b144-4372-b128-0c35821eb266",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "101c95af-497e-437d-b315-7adc0769c069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f43bcc4-0985-409f-aefd-9d9ec0c7fea2",
        "cursor": {
          "ref": "7dc1edde-0a06-4259-8257-6af33868df92",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "118da172-58b3-47e3-9fb9-a5822c0e07b9"
        },
        "item": {
          "id": "3f43bcc4-0985-409f-aefd-9d9ec0c7fea2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9832a01a-87a9-4063-ac79-8e2f50b1fb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fae71c4-721e-437c-a946-3295e1015248",
        "cursor": {
          "ref": "90d58ed3-87e4-48f0-ad69-240f3924dbcf",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3699ecb3-9273-414e-86c9-34fdda7f2d44"
        },
        "item": {
          "id": "4fae71c4-721e-437c-a946-3295e1015248",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a49ff9b8-16d4-44ee-9fa1-e43afbb899d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3175daa-c7f8-490c-8a9a-4ddfc8a1fbae",
        "cursor": {
          "ref": "fe14aa40-9098-439f-a7fe-ec17a872b15d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7bca6298-8b05-42f1-8be9-a50a3c2c07b6"
        },
        "item": {
          "id": "f3175daa-c7f8-490c-8a9a-4ddfc8a1fbae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9ea3096e-6236-452f-bbc0-b853d3d02d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8a5bd9-0d50-4212-b51e-f2a690677201",
        "cursor": {
          "ref": "2f1d6e2e-c8d6-4de4-9211-14de24e6e5ee",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c3f5cac-bc78-46ab-a22b-cfcb92f37128"
        },
        "item": {
          "id": "bb8a5bd9-0d50-4212-b51e-f2a690677201",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ff2dc5d7-ab51-4636-92e4-eba9c63f20f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa8d630-3631-493a-97b2-7452a627142e",
        "cursor": {
          "ref": "894654bf-b16b-4f81-82d9-842a60a26dcd",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6dc2c50f-0ac3-4e7c-8acc-020bfd7d16cf"
        },
        "item": {
          "id": "4fa8d630-3631-493a-97b2-7452a627142e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b4eb059d-24ae-4405-85f5-0b4dc7fb3b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380381e8-c46e-443c-9174-07516d1f13ab",
        "cursor": {
          "ref": "84f307de-92c6-4947-9e6e-8ef984fc585e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e5064121-e6f0-492a-ae22-75fb68d4069b"
        },
        "item": {
          "id": "380381e8-c46e-443c-9174-07516d1f13ab",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66a0d00e-1b02-4fd5-a3fd-cad74afe3865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9a0418-0dc3-4aa9-8810-dff8f0cd0dd5",
        "cursor": {
          "ref": "dbee69cb-8102-48eb-9d19-d91e1ae72bff",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ce66f5e8-14cd-4abb-9898-2adb2d0696e2"
        },
        "item": {
          "id": "0a9a0418-0dc3-4aa9-8810-dff8f0cd0dd5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d7aa2872-ca1e-408a-8087-433c98334243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7bb97a-8d4f-40ad-b309-464e1f2942a4",
        "cursor": {
          "ref": "c10ed450-b2c7-457f-8b96-8dd7d542a9b3",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "302ca68c-0899-44ab-b01b-e7552fc5b594"
        },
        "item": {
          "id": "3e7bb97a-8d4f-40ad-b309-464e1f2942a4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e19c4bf1-8dd9-418c-be89-2ca033ae1613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfabde14-bd7d-4de7-8b4f-6fdb6a5bdfa5",
        "cursor": {
          "ref": "506237bf-8cf7-413a-b18d-117fb246f5db",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4bd8aa71-2bbb-4fdc-855f-f1f07069feeb"
        },
        "item": {
          "id": "cfabde14-bd7d-4de7-8b4f-6fdb6a5bdfa5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1efbcede-d373-4b0c-8a76-2cefdacf6be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4840e4b-7635-484e-94af-1281109f170f",
        "cursor": {
          "ref": "08ff58ff-4493-406f-89df-fb9fdf8e4040",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "403097fc-c14d-4cdb-abce-783fab13b5ec"
        },
        "item": {
          "id": "b4840e4b-7635-484e-94af-1281109f170f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "febb42d6-e065-4867-952b-588e9d936a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7092d92b-0d5e-4069-9354-b29991dbe534",
        "cursor": {
          "ref": "e30d4cbd-a99c-4ab7-a9b7-cf6ea5b43fe3",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ccf3a15e-1d94-4d12-b500-336186cb03f1"
        },
        "item": {
          "id": "7092d92b-0d5e-4069-9354-b29991dbe534",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb2a88e6-b487-439d-8d96-40ae61899407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1021,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4066fe6-a94e-4de3-aa8b-acefb5cbb060",
        "cursor": {
          "ref": "b32c12bd-c68b-4aa4-b500-e0d762c51b62",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "387b3df4-6def-4c5b-a404-35e0415d6f1b"
        },
        "item": {
          "id": "c4066fe6-a94e-4de3-aa8b-acefb5cbb060",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b5f61b50-a213-4a98-9790-2772b376d15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad18daa9-6757-4439-9334-128f384f92aa",
        "cursor": {
          "ref": "8c35a6e2-d531-4572-bb66-8352a1d0dda7",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fac5706c-6ecc-4532-8b50-032edd7286c6"
        },
        "item": {
          "id": "ad18daa9-6757-4439-9334-128f384f92aa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "06e1d2de-31d8-4853-a512-4e57a3532494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2733b859-1fc2-43fd-9628-e65320a93350",
        "cursor": {
          "ref": "58a7dc6a-17e9-473f-8ccd-c8516cacc979",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "19897c5e-4e92-49fb-936b-5362a6afd778"
        },
        "item": {
          "id": "2733b859-1fc2-43fd-9628-e65320a93350",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3770c8e1-85fe-426b-b43a-977ce910454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae09cda-0290-494f-a72b-abbdaba02c5d",
        "cursor": {
          "ref": "60a38698-775e-4727-8334-85aa2f7b8151",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1c19e2de-6fd6-4c58-8399-dc72633891e6"
        },
        "item": {
          "id": "3ae09cda-0290-494f-a72b-abbdaba02c5d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "83720b0a-b023-4afc-9087-c2b17d150dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a873d5c-0bef-41aa-9941-4eb616e18cef",
        "cursor": {
          "ref": "7be3828d-7132-4084-ba35-8e70e0aea27e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b4c8ae7e-1363-43de-a6a7-8476157105f6"
        },
        "item": {
          "id": "2a873d5c-0bef-41aa-9941-4eb616e18cef",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3d5a35e5-6e94-431e-94a1-318784fcf9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c335a58-5066-4130-947a-331cebd98986",
        "cursor": {
          "ref": "5c97af8f-b6ba-49c5-ac07-814d0a9a81c5",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4d3e86b5-fc17-4e42-a85f-fb7423ad87e6"
        },
        "item": {
          "id": "0c335a58-5066-4130-947a-331cebd98986",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "59789434-d4d6-497f-8c33-dd2023c2ad86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03fccaa-f98b-47c9-bca1-13b3350329c8",
        "cursor": {
          "ref": "1487da4f-874d-4e08-aac7-068347cbaa91",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "56da1744-3633-4f83-b97c-5660d6d23e86"
        },
        "item": {
          "id": "c03fccaa-f98b-47c9-bca1-13b3350329c8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "64b5187e-052b-4f5b-8edc-ac7f5412438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f93ce8-2e64-4510-80fa-a7c9b8e635d1",
        "cursor": {
          "ref": "f7e73e5f-c523-4c3c-a57f-8e4ba3f238fb",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "90a07187-ff58-45d1-8b31-bbf6e53f974b"
        },
        "item": {
          "id": "56f93ce8-2e64-4510-80fa-a7c9b8e635d1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9d7d76a0-3dad-402a-aaa4-99a3685c85d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4582b1f9-7991-4572-b2c2-e829366409e9",
        "cursor": {
          "ref": "5ae998f7-11d0-4596-beb8-d3b2b892798d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "473f499a-7d69-483e-a7e4-15c8ddf6c101"
        },
        "item": {
          "id": "4582b1f9-7991-4572-b2c2-e829366409e9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "246de796-7ddd-41a0-9c72-506592a68485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae68df-c046-450e-bcb8-f5e32a933798",
        "cursor": {
          "ref": "f4879cf8-6207-41c5-add1-1012609bd5ff",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c972278-cac5-4ef6-9d28-17bdc81d7dee"
        },
        "item": {
          "id": "38ae68df-c046-450e-bcb8-f5e32a933798",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6ce4861-490b-487a-a26c-e376da3023d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9150ca3c-c737-4e7c-a41e-4d8c5751d80e",
        "cursor": {
          "ref": "e9d21f98-004a-4751-8f04-5b1ff090a611",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "53e69b18-490a-4a5c-ae5b-fe127a4aebd6"
        },
        "item": {
          "id": "9150ca3c-c737-4e7c-a41e-4d8c5751d80e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aaea8d3f-9e92-4252-a2d8-8ae0f6aa1405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b35755-8907-44d1-ad11-c46813419f2a",
        "cursor": {
          "ref": "af6fae6c-b41d-4a65-9de8-1a9ccd061bcc",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2b1d054b-b2e8-4282-a06c-253bd7d4f985"
        },
        "item": {
          "id": "18b35755-8907-44d1-ad11-c46813419f2a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2b120600-c7bf-46a2-a244-ee187f1adf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa1191-2824-437e-a1a7-5b947ae2fac2",
        "cursor": {
          "ref": "3ec4c7a8-1fb2-4814-8e3d-cec9475fc63c",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "40dc3623-94d2-4fae-9112-77fe27309535"
        },
        "item": {
          "id": "73fa1191-2824-437e-a1a7-5b947ae2fac2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6b0e39c2-ee5f-44f9-b95b-06920c5d6602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c35f4e6-222f-441c-ade6-e8fc8c7806c3",
        "cursor": {
          "ref": "8e54d130-d63c-4788-bffb-e7cd646ab47e",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3170186e-5e8c-4b42-9901-faa283c571a7"
        },
        "item": {
          "id": "4c35f4e6-222f-441c-ade6-e8fc8c7806c3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "34e73dac-574b-4552-9ef9-7fdbf6e314d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4403b9-1281-4dd9-9e4f-3d067965d3cb",
        "cursor": {
          "ref": "cff4d057-5cb6-40a7-8ab1-418d1e9293c3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9e2a7e2b-ee81-4895-83a5-1fd95eeddb0b"
        },
        "item": {
          "id": "ce4403b9-1281-4dd9-9e4f-3d067965d3cb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7f9dcc32-2da9-4ec0-8243-ed572dbca3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d22534-bb1a-4cde-b465-9f6ec1743921",
        "cursor": {
          "ref": "1722d1b8-90c3-4cf4-9670-a0cd4fdc4865",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7ad9ac00-47f0-4552-a5e8-aa6f17ec1e73"
        },
        "item": {
          "id": "90d22534-bb1a-4cde-b465-9f6ec1743921",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4593c4da-18d7-4137-be86-9fce80208681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41be78fb-154e-4c7a-9508-de0f33b5e0e7",
        "cursor": {
          "ref": "77c7ef36-6038-497d-a16c-93b37e9319e2",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed6405da-9d2b-46f4-bbe8-2f1bb605963f"
        },
        "item": {
          "id": "41be78fb-154e-4c7a-9508-de0f33b5e0e7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b7f9f433-05b8-4d00-9cf9-f04edf5cb1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255ed65c-d467-4f46-8c9c-96037cb8d338",
        "cursor": {
          "ref": "6f3b588b-a9ec-4f00-998e-706eb5aaeae4",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "90df06cf-cf3a-4358-b4ad-6b4c51077be9"
        },
        "item": {
          "id": "255ed65c-d467-4f46-8c9c-96037cb8d338",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "51d66d76-ada4-41e7-b9ce-6197efdfa851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea3e1c-1f28-43a9-b8d8-d1de4597d41a",
        "cursor": {
          "ref": "95a36a5e-2e88-43c1-8c5e-86bc502ba7e3",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f0de144b-93c4-4ab0-85bb-7ff24408b527"
        },
        "item": {
          "id": "9fea3e1c-1f28-43a9-b8d8-d1de4597d41a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a63ce932-f55f-42af-b10f-d0032cd5ee7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec5d748-dfb0-4f28-bd43-650d61e419dd",
        "cursor": {
          "ref": "ca8517a8-728a-421c-8c5a-a0476cdf5d0c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1592264a-7aa2-4f26-9b3e-1520e93cf1c3"
        },
        "item": {
          "id": "6ec5d748-dfb0-4f28-bd43-650d61e419dd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2b1245be-327f-47cd-ac8d-e6cc84eaafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f92e30-dae1-45a4-a122-d0175406d83f",
        "cursor": {
          "ref": "34e2c571-dd43-41c2-a113-0b0cd2c62b4e",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4de83cfe-85b2-4974-a9e7-13de6dd02625"
        },
        "item": {
          "id": "91f92e30-dae1-45a4-a122-d0175406d83f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "669cee46-2850-4207-ae1c-e257f0563fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79f5b3f-a789-4cbc-9cef-9a0db639a5ed",
        "cursor": {
          "ref": "3ef36f94-2909-4a83-af7f-6f60b1661252",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4db3ba58-570d-44ab-9133-945f2c7aae69"
        },
        "item": {
          "id": "d79f5b3f-a789-4cbc-9cef-9a0db639a5ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e2b36bdf-7c22-485c-8d3a-a83cac4876fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1128,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f704963-c96e-442a-aded-c0ae99231502",
        "cursor": {
          "ref": "d34c4fd4-7318-4057-8a07-191f0eda418b",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a48efc58-85d4-484a-8439-be7975c77259"
        },
        "item": {
          "id": "9f704963-c96e-442a-aded-c0ae99231502",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a46e39a3-676b-4b4c-ae3f-09056f005fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4d0aeb-072b-4be1-907e-020cda98162f",
        "cursor": {
          "ref": "85d165e7-8482-40c2-8ab7-8ec416c072be",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa41e379-4a04-44fd-8a9b-a936e4716240"
        },
        "item": {
          "id": "ac4d0aeb-072b-4be1-907e-020cda98162f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "89feb561-30e5-402b-a1c0-7cb0b560467d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4ff112-37f5-4012-9488-234587ed4b5a",
        "cursor": {
          "ref": "1ffa1dd0-19c7-4535-8335-82ba0f08746c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "be37cc54-984b-462a-8782-36742ec384af"
        },
        "item": {
          "id": "4c4ff112-37f5-4012-9488-234587ed4b5a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0eea84f3-bff6-4656-82c3-62c0c7632d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1078,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa4323-fdfe-4072-81d0-7d4a2d35a794",
        "cursor": {
          "ref": "2aab2621-cdc8-41dc-839b-852e4e8faf87",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4e4501bd-7f66-47c9-b59a-b31a4904a655"
        },
        "item": {
          "id": "44aa4323-fdfe-4072-81d0-7d4a2d35a794",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "86dfc85c-83cc-4a35-8efd-244a971102e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce538935-6fa7-4e5a-86d1-a1a1b9367f3b",
        "cursor": {
          "ref": "65c902e4-a4c3-4b7a-a78a-823ea6cae08a",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7cdd9616-cdfb-4bca-95ef-4db211dd4a98"
        },
        "item": {
          "id": "ce538935-6fa7-4e5a-86d1-a1a1b9367f3b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5c6061af-2a63-4b95-bfd0-ef1d2eb597c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1293,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc74e00-b5f8-4c86-a7be-734e50a316d0",
        "cursor": {
          "ref": "3d4a49c1-8ed5-49f0-9f63-218b57ef7d5e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4ec3b8f8-3be9-4d1a-87a5-3f8158a398fa"
        },
        "item": {
          "id": "9dc74e00-b5f8-4c86-a7be-734e50a316d0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "29ee8623-52d1-408b-8e56-73ed27b9ab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813fdd2d-99b9-4d81-a093-ed5e8226e962",
        "cursor": {
          "ref": "e9e0ab6f-cd31-421d-9c68-59dbb5545bcc",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "24820eb4-f435-4a1e-a5dd-5b149ef50999"
        },
        "item": {
          "id": "813fdd2d-99b9-4d81-a093-ed5e8226e962",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a96304fd-8be4-4542-a60f-3e0b7d80aba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d406e6cd-546c-47b9-bc5a-69b243cb0d0e",
        "cursor": {
          "ref": "afb62687-20ea-4464-90ab-2d11f84db19d",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de80bb78-711a-4660-bd20-60b3833d0ecd"
        },
        "item": {
          "id": "d406e6cd-546c-47b9-bc5a-69b243cb0d0e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8a189cf5-b1e9-4f03-822e-d38dc433fca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a8d128-c041-46ed-b7de-818f6c384aa1",
        "cursor": {
          "ref": "1f07f376-68fe-447a-9ce3-4d12a91f1dfe",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "28ebedfe-701d-4f19-9642-3a1178184d08"
        },
        "item": {
          "id": "99a8d128-c041-46ed-b7de-818f6c384aa1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c2a325e-2bf5-49fc-9e21-575de7071980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21173562-e9fe-49ed-b657-cb7ac7b0968c",
        "cursor": {
          "ref": "b349b272-95dd-45b6-b6a7-be830f8e6352",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1dbc449d-f0bd-46af-a1c8-5c9096a71204"
        },
        "item": {
          "id": "21173562-e9fe-49ed-b657-cb7ac7b0968c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8c554dee-6a71-4f7b-b75c-70375590af0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd80e77-c6f6-4e90-b615-e57da84a06c9",
        "cursor": {
          "ref": "2ecde4eb-d67b-422d-9e49-fe868c668f85",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3f1dd0f9-eb37-4d4c-95c9-b6fd6d92686f"
        },
        "item": {
          "id": "8dd80e77-c6f6-4e90-b615-e57da84a06c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "233d9ff3-4a16-4b93-8688-e5cbe8cb6d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2196b02-7db9-4e7e-bacf-af394f10926d",
        "cursor": {
          "ref": "b8696a14-692e-4497-88e5-64b36e57f0bb",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3eb90372-704b-440d-a2bd-a88edd7f576a"
        },
        "item": {
          "id": "c2196b02-7db9-4e7e-bacf-af394f10926d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "048fdbf1-882a-448b-b649-2cfb4c7a0e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e763d25d-e7d2-4d37-8c0f-46189bac37cd",
        "cursor": {
          "ref": "7b6d4e3d-8457-47c5-b868-67fad7bc3af4",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0b169ad0-2956-485e-83a9-834506f5c62f"
        },
        "item": {
          "id": "e763d25d-e7d2-4d37-8c0f-46189bac37cd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "484f715b-2130-4644-b81a-23cd0df92d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a83ae3-5d26-4c8e-8266-77cc3d3b62c4",
        "cursor": {
          "ref": "70b39a73-8e33-442d-81f6-363296e39357",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "437f5a7f-41be-4366-8e4a-041d35cf8d23"
        },
        "item": {
          "id": "37a83ae3-5d26-4c8e-8266-77cc3d3b62c4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2d3693f7-65ff-4477-bbe0-45b098da0562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2726d35c-480d-4802-8433-682ad720172c",
        "cursor": {
          "ref": "85fa5686-7c92-4f60-9a60-5fe3f6c13d04",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e9d02070-19cf-4ab9-9a19-b5b34769b231"
        },
        "item": {
          "id": "2726d35c-480d-4802-8433-682ad720172c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9ea0a5bf-35e6-430b-aa54-733161901d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418fc26f-6c37-4fa7-82dc-90223ec8e7a4",
        "cursor": {
          "ref": "b61e8750-a351-4ec9-af5a-df7b5579584d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0ef241a5-d0e4-4c6e-89d1-6d22ff70bf6a"
        },
        "item": {
          "id": "418fc26f-6c37-4fa7-82dc-90223ec8e7a4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e99db318-debe-4b67-bc30-026cd9086317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4920ff-370c-4272-9a26-80d425a57cbd",
        "cursor": {
          "ref": "fd7171f9-ff7c-4605-ad65-942470b71ec4",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "253aa4dc-d6b0-4673-8de7-4301d0280e98"
        },
        "item": {
          "id": "ff4920ff-370c-4272-9a26-80d425a57cbd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "708580c5-b4b6-4c96-b516-df40abf05b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aad46b8-ed4f-41ba-b14e-4b9e576098cc",
        "cursor": {
          "ref": "ce8ff291-391f-4493-9cd7-1edf2573f2c8",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8dc94eec-60c6-45c9-bf96-7ff8a7e3817f"
        },
        "item": {
          "id": "3aad46b8-ed4f-41ba-b14e-4b9e576098cc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b3654fa8-788a-4344-9f62-f5434155569b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1038,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049bf20c-7680-48ce-9832-f98720b2c7a2",
        "cursor": {
          "ref": "16a4bf0b-51ad-47b1-b65e-9ebe5af2dd3b",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8e54c692-1305-4c5e-b2d9-d4f1b7d1a31f"
        },
        "item": {
          "id": "049bf20c-7680-48ce-9832-f98720b2c7a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4b8b30f9-ed15-46f5-8f2e-cf9d5bf12841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c50f6-35ef-4597-84a7-f0e291bdea8c",
        "cursor": {
          "ref": "7110fbf6-343c-4b88-9435-6e8053644c2d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c8e0aa58-713e-4610-aa26-92dc7939fe5d"
        },
        "item": {
          "id": "d78c50f6-35ef-4597-84a7-f0e291bdea8c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9021d4fe-5be0-4bee-bebc-a2506b7255f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bc3cb2-cb0f-400c-add7-68e63dce5448",
        "cursor": {
          "ref": "471f9301-8677-43a1-bd88-f463969265ec",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3f2716e1-88fb-4b4b-b520-025f1bdbc295"
        },
        "item": {
          "id": "40bc3cb2-cb0f-400c-add7-68e63dce5448",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9699269a-f818-4ba1-8fe5-3e4ea78b25fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab7f34b-bd4e-4568-a266-45f6a4782141",
        "cursor": {
          "ref": "b509462b-e022-4a6b-8ae4-7c8d8f8fb2db",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ffb7c142-d34d-4fa0-a625-376dbcc3d857"
        },
        "item": {
          "id": "9ab7f34b-bd4e-4568-a266-45f6a4782141",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b7a31c73-b2fd-4d35-9634-bdee28cceede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b56a3f-fa76-4a66-9ed7-6adf1433ab57",
        "cursor": {
          "ref": "c5e64cd7-3598-4c21-b3fb-2d9fa5150f9b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "66bb9eee-7d3b-43b1-a6da-4ad36ff48ffa"
        },
        "item": {
          "id": "f8b56a3f-fa76-4a66-9ed7-6adf1433ab57",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a1db9991-f839-4164-be32-a34492f361b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b786278d-bb34-45d0-8faa-6c1b61ac6923",
        "cursor": {
          "ref": "d2fbbf56-3d92-42fe-b250-84cfb9db08af",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7fe6bda2-1476-420d-981b-7285768f2490"
        },
        "item": {
          "id": "b786278d-bb34-45d0-8faa-6c1b61ac6923",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "151aa452-4146-4993-8524-d1774f7799a9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1018,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76189e7-1c70-4512-b265-c2f8c86ca479",
        "cursor": {
          "ref": "81dbaf5a-cf4c-4d71-91e3-e35c231b6e07",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c0e64f98-4065-41b3-a3c3-0defbaccfacb"
        },
        "item": {
          "id": "f76189e7-1c70-4512-b265-c2f8c86ca479",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b08e80f3-c4b4-44db-9faf-09936c899fcf",
          "status": "OK",
          "code": 200,
          "responseTime": 1068,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa606300-e25c-4abe-b10c-84d2c3d8ce1a",
        "cursor": {
          "ref": "cb176e88-de23-4696-8c66-26c956979923",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "40f54022-4369-4c0f-90d7-86bc676e19ab"
        },
        "item": {
          "id": "aa606300-e25c-4abe-b10c-84d2c3d8ce1a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "25b8d46d-2e3d-4131-a9ec-663b37e7f04b",
          "status": "OK",
          "code": 200,
          "responseTime": 2500,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1181585-2777-43be-8548-f11945490774",
        "cursor": {
          "ref": "94aab09e-92f1-4e21-8d2f-aa44842ca60a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "794833a7-83c1-4370-b14d-7f71ce5ba183"
        },
        "item": {
          "id": "b1181585-2777-43be-8548-f11945490774",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "19fb9a0f-0de0-424f-83f4-4c3922416167",
          "status": "OK",
          "code": 200,
          "responseTime": 1848,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
        "cursor": {
          "ref": "542a1cdf-8572-4af8-b6da-fcd641193170",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c81361a9-2012-46d4-9c55-6fd42be489db"
        },
        "item": {
          "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b0c2cc9-d5f6-4778-8b9f-c247f98c97f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
        "cursor": {
          "ref": "542a1cdf-8572-4af8-b6da-fcd641193170",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c81361a9-2012-46d4-9c55-6fd42be489db"
        },
        "item": {
          "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b0c2cc9-d5f6-4778-8b9f-c247f98c97f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
        "cursor": {
          "ref": "542a1cdf-8572-4af8-b6da-fcd641193170",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c81361a9-2012-46d4-9c55-6fd42be489db"
        },
        "item": {
          "id": "e0ab273f-f934-4965-9cc4-bba587173a26",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b0c2cc9-d5f6-4778-8b9f-c247f98c97f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d5427-4932-4225-a0f7-b55b4b1ee356",
        "cursor": {
          "ref": "9dcf1fe2-2e3e-4e69-8ecc-27a56b8f739d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "51b26891-4ec7-4a6a-9bc6-05e926096f7b"
        },
        "item": {
          "id": "725d5427-4932-4225-a0f7-b55b4b1ee356",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a4017e9b-ad68-437d-8900-35b473ea2dd4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 534,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d045f246-e519-4400-ac8e-c816fbaa3098",
        "cursor": {
          "ref": "8fa98276-f692-4dc3-a395-0bba0d15e175",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12b6929b-5ec0-4a3e-bc6e-d5f059444baf"
        },
        "item": {
          "id": "d045f246-e519-4400-ac8e-c816fbaa3098",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "524d0a61-b67f-47d1-b3ff-554d5385431c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d045f246-e519-4400-ac8e-c816fbaa3098",
        "cursor": {
          "ref": "8fa98276-f692-4dc3-a395-0bba0d15e175",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12b6929b-5ec0-4a3e-bc6e-d5f059444baf"
        },
        "item": {
          "id": "d045f246-e519-4400-ac8e-c816fbaa3098",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "524d0a61-b67f-47d1-b3ff-554d5385431c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718e2b27-9dc0-4301-a790-2850cfccd085",
        "cursor": {
          "ref": "3442007b-a5dc-48dc-a0e9-c7e716fce419",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "60b7ae36-c9e5-48bc-a73d-494b61ba8456"
        },
        "item": {
          "id": "718e2b27-9dc0-4301-a790-2850cfccd085",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3c46289d-0e53-46fd-bc94-e3f7862649ec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789ccc7-12b0-4a94-8e5c-ac29146ffab2",
        "cursor": {
          "ref": "36eb9c4b-c16c-47c1-9582-6e16feceaf79",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "331f034e-9327-4e83-a5c5-e34d259f3974"
        },
        "item": {
          "id": "e789ccc7-12b0-4a94-8e5c-ac29146ffab2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c85f3ff0-01cb-42ac-baf3-332f7722c9b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789ccc7-12b0-4a94-8e5c-ac29146ffab2",
        "cursor": {
          "ref": "36eb9c4b-c16c-47c1-9582-6e16feceaf79",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "331f034e-9327-4e83-a5c5-e34d259f3974"
        },
        "item": {
          "id": "e789ccc7-12b0-4a94-8e5c-ac29146ffab2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c85f3ff0-01cb-42ac-baf3-332f7722c9b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99396ab-0986-42bd-90bf-c450227fa01e",
        "cursor": {
          "ref": "05c6d482-185f-4f31-bbea-75579ecb4ce3",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e1fe1aa1-4eb0-4963-8c5e-0eb50179b136"
        },
        "item": {
          "id": "b99396ab-0986-42bd-90bf-c450227fa01e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4c03151c-578a-4f77-a8e0-569289d39219",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 707,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}