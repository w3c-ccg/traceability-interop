{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "32e77d46-e5bf-4b97-895f-a9ab9957bd56",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fed9e363-c726-4847-8c3f-fdf6c419231d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4264aa80-f38a-4f96-8f72-6d78fac81930",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7c8308f3-17cd-4dfb-a411-0810f74a1b77"
                }
              }
            ]
          },
          {
            "id": "eb9f55d8-554a-4052-a0d0-28a83da080b6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba0d6a5c-d4e5-4762-8e3a-498ac248848a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e9e6b4ef-7e50-44cd-b7cc-f0f46feddc19"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6e660993-ac15-4a73-a0f6-78932b3cb9db",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e4040025-419e-437a-9d86-a7a19bd0a901",
            "name": "Positive Testing",
            "item": [
              {
                "id": "276e16d9-e77e-4612-a08f-e0f565814b80",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d24616f5-d473-4cd6-b8ed-10b48f75f064",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "285a4df9-2150-4000-8757-267e3d49960c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13c30c15-1169-485b-944c-79e0aaf5c723",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6c8bd1e-8cbb-4897-848f-179dc5dd28cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "015734fc-078b-4bff-9518-27a000f6edcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b535ef14-cda4-428d-9dc4-8518c0181567"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40bd8cdf-be97-41b1-a988-d8fb5f0173da",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3df0102e-8aba-4c7f-90aa-de440c6e5f06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "294fc19e-c0ee-4624-bd9c-b1692a6e4d5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e7a7b58-4de3-4bb1-829f-c87c103d952b"
            }
          }
        ]
      },
      {
        "id": "02f26e32-1f92-4309-9912-86394953370c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e2bf7323-5e57-4ab7-b17a-eae71348d505",
            "name": "Negative Testing",
            "item": [
              {
                "id": "439ba9af-3dae-4da9-b39d-a5e8b85c185e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "452f862d-8221-43ef-b160-3436d1c4aed6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6715e7c-1d41-4f1e-8a16-b4a9bdb9a63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd916aa7-d324-4e53-aaa0-3d0dab005f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c200c1-74f4-48f1-97ce-943305477d85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37225e3-aa0e-4b4f-880c-72bfeaaf0702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1c58a17-86b2-4df4-8790-ea76e8a2ad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63346100-4426-41b4-a17d-2b08b5a5da0d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f77f04-7013-41b5-b04e-853bf670e53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb7b0ebe-4d9e-46ce-8a6a-aae5162ec9b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77c16474-dd8e-407d-856c-a1b1d3f4c081",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6368f3cc-5091-45bc-b297-881f50bbb342",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4ca7cc-e94b-4670-bf7f-e96d92f65940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a898af26-778e-49d1-8911-3c558382440f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10150c2-f4a7-425e-b2ec-84dd9b48a2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eec74a1-7648-46ce-b07e-39d608342cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c91593c-c819-46f7-9b40-02796a2171eb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c00fe83-24c3-4963-a0a0-71e0554ecf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f70d320f-5693-4103-95c8-78ed307ea189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6a54d7-88d7-4f92-9e6a-21567a0086f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "84d141e8-0d91-4477-9a09-df5ad4edb64d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6602041f-47e7-4320-a73e-5287d67c9823",
            "name": "Positive Testing",
            "item": [
              {
                "id": "060643da-1a32-4ee9-815d-a84c95e7b8cd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9bedc94-fb06-45f3-891a-5f198dcd28b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e73e402d-3263-45f2-a74f-fb4d963a479a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0e39f1f-7820-45a1-b326-b87c81792731",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "680533db-d862-4ec7-a2a1-f5df2870270d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53e8a3ea-9a16-4d9f-8076-9c4244c2062a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33999561-af0e-45b2-ae0f-fca895d1a575"
            }
          }
        ]
      },
      {
        "id": "fac3d053-1f07-4a01-aa4b-dd7608dcf936",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "599c1695-f290-4f23-8e4b-234e3d88fd82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "325e122c-e84a-46e2-b772-9b1acb2aa469",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f8f4671e-f66d-4141-9e32-19d4c3d5278f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f95e8f-f918-4d67-8263-2c5a9ada48d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b76cb4-4c97-4d2f-8b1e-268b5827be99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d2e0dd-7418-4863-91cb-ffdc576255d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0370ba7d-0f6c-46d6-b4d5-40a5b0a7fea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc143c7-fd87-460c-915e-5c39776b709c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afd5567-da54-41ea-b089-71eea8c5e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5d7683-c287-48b6-98b0-6d9aa6bdabf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda89790-58f1-41dd-a8ab-1638e87dc7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "244ca1f3-a3da-4156-bf7e-44e8a32cba7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a14026-ca61-4025-b5cc-1a7dba5c267b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9152eed-67d5-4a88-886d-1cb4db69d7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2957258-af7f-451a-9ea6-7caa1fb38b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b579673-83bc-4faa-bc89-6d8f1432fd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "294d4f16-dbb6-4c00-9afe-6ac2773a9306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b487cfee-8704-48ac-810e-e5ba81c02bad",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c94ee53-5b8a-461a-985b-aa9e36abc36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff6e71e-938b-4908-96c4-207ada7a668c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a05110-e168-44f2-92ea-a292fc829e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96964dfc-1172-4650-a6d8-7f8b422b3e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e48345-8fee-441b-b48d-3818e68b7d1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427df583-af27-4396-8e5d-cd29c19f844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e880c29-ce42-4008-9ca3-f6f3b3e567a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0797aa08-fa30-4d64-9f11-bea2235e004c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87da156a-3ea9-494d-baa8-918fe2a01706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250399e1-1905-4ab1-a3a1-acd7d1021e3f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995c3eb2-1b1a-45ec-98f2-1941992d0342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee7bac1-c524-40de-921c-bf16542c1128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8383072d-d069-45da-8dea-5dd08e2b9288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d44e974-ec82-4847-b925-91cc2e42b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdce4c7-7f42-4f17-988a-6d782a6a8792",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f763708d-a134-4e66-8e30-0c817192e34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c14476-1eca-48f2-ab6e-856bd2c0e57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cf3994-29b8-4927-9e40-576277bb631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4eb86d8-29df-495a-bafb-8c2abd3c3d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ff9a90-f26b-41e1-a1a5-e923ae5920cc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed304a6-9dbe-407a-b241-3451fd8b1fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315e6885-31fe-4c1e-833a-f6ef0a5a1dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7668cbb1-8c71-4b4f-b94c-c1561cca1055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cb11681-c4af-45d0-94c3-3ec642ae3eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a7d369-d8ca-43ba-ba7d-61e5315ef09e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db412c-795d-4b63-81fa-d26c1df37ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e22910-08a3-4b9f-a163-1eb11b22d7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ac0231-1175-4c02-bfb8-7c888a38e974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14310d0e-83b0-4965-bc0b-483da0559607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c886ddd0-b2f5-4505-906d-9082db6ec1c3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c94b4-3084-4481-9bc9-c85d67893136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbaa3de-34ac-43ec-a0b3-df87c1d50787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2df5e5-81e7-468e-acef-070326cdd172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cb47395-db15-487e-bb26-eb98c6c79f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c9d88d-b5d4-4da5-803b-d635cd6dc0e3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f5957d-15fe-4ae7-bca7-0e6fdb0ddc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37e7b97-3f78-46ca-8046-3ff2d342dc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd47c4a-d39f-47bd-bffb-c342f628b553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "872cdbc7-1477-42db-99bb-663978b037b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7714db-8e67-4e91-905c-f1f2be5a8014",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7d87d-df1a-44f5-b88c-caa59cb5fe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e140297f-6951-495b-946f-c6ff1f368ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020f136a-1d9f-473d-9f73-e99bffb1f694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a81d10-91fe-4de9-b433-d3c8244b8530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adb5383-2c8f-4685-b869-560577fc80c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c14e45-3c0d-49f7-a9a0-6ee1ee3e8eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91c397e-aeb4-4fac-9328-f9b802b9b674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeaf1ff-ac94-4455-b711-2c8946c0f93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c44fef18-a201-4f3f-841b-3d5afd9e174a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783808d4-98ad-401c-be9a-0c6e2d216148",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9721a07-6759-47e9-ba79-1cab2b7076a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b709afb2-e0af-40b7-8b7e-fbdb1326576c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec6a7c8-8cee-4fa7-9e3b-0ed59acdfff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6188dc32-ab92-44d0-9412-41f7777ff8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fb3020-ce53-4568-94b2-3057e0f22307",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7192a27-bb39-4418-b3a9-a78f2520833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d11157-abf1-4681-b687-12d564f2fe32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4af4d4-7291-45c1-9cb6-c5c2ccbf2589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9b6a41b-1066-42da-84a3-9167a599d41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e1369d-6d9a-402a-9a11-4dc9a3b59478",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f30dc7-55b1-4d1f-99ba-c53236542ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85932bf6-9448-4d88-ad9e-252a98e8dd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31e794f-e04c-4e5a-bd22-73c9364c6e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4c0afa0-d87e-4629-a320-c4fca4592402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfec989-9f3b-44d8-8982-611029dfc644",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2abaf52-405c-430b-a52e-82269ac350fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96985234-5c9b-4a51-aeca-bccbbc4da146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ab725a-63a2-4e85-a4ed-6ca38103d61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1230e82-6a82-4465-afe3-66086b4b77d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af8271-5837-455b-b436-838053cda39e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760a3f1e-d05c-44b3-9d99-4a8533ad3dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e702402f-89f2-4d4c-a1c3-6ff22143cabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53662d4c-90a0-4625-a75c-4f018a2c00c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "799ebb12-30de-4285-a3d9-19761bbd9f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda925bf-9b78-41b6-85ea-723b929eea93",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d16659-30e1-45ee-a47a-0fe572942160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1257fcb5-b0e8-40c5-86d5-146bf9192725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94039cf2-dfa9-472d-885e-6b1fb90be400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ee0674-d3fa-433c-a0d4-b267a828c163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e402a-69c7-453d-a034-d050f3b245e3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0974e50-c13c-421b-b715-45d53ea76a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934c3800-6a6a-4d7c-80c9-381a7ff1fa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c875379-4ded-4234-ac9e-2f827886a3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10e6747-5f9b-4d5f-a71b-53d91e1aede0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c084d7-2cf9-485f-be18-85441485a0bd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8eb625-dcc8-4e68-a154-8db494682084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5d6cea-1c52-4436-9f0f-066b70254353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97da7a85-663e-4b78-beb1-0dc8416409fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1192a17e-3552-45d1-a57d-4bd6e4d56664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12f876f-f475-4766-b051-834b0b4a99dc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4f8913-fc13-4473-8db0-738dfa81e16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af48988-2872-46f6-afc3-289117c2d5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4c49d3-3db5-4ef8-8dbb-f694f6f1f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c25b198c-5d40-4c77-8b17-c3663af126ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413cc04b-c307-483e-b06d-3a7acb7a059f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b28d92-af51-41df-8b07-107d70ee5638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6a0c61-04c2-408c-b75c-5886360cd74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcc4d14-a9eb-4468-a53d-d72011690f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c09888a0-8854-4f31-84b3-01d8f28c4f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f18a59a-eb00-431b-9a03-45a52b44c611",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179778c2-be1a-4e68-8990-2ca8284ba736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd2b5b4-686b-4111-a4e2-26aef541c5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0274c65d-63f0-4cea-89a6-43665d50ea7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "19141264-fb8e-4144-a4c0-f57ba3fd3cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a93b85-dc4c-4186-98f7-5a01cc6326fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc723d-c13c-4aed-a3ce-9734c2a408ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1237fc18-a6e8-43a3-9702-0911eed46b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb1c7d2-8a91-414b-8a8e-d6786db84f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83631fa9-8a9c-400e-a11d-5f6587804c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cb7dfb-904c-4e6d-ab20-f9684e01e8d8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75f4795-f1d7-49f3-bc8d-fb334b077c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a354956-eb9e-49c3-b30d-96c282e5f06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fbc5b8-44d8-4fad-ba1c-ff56d4afec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb60c9b-9aa1-4f87-949b-1a7c5c9bc88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873024ed-364a-4d58-b4e2-dacc0ac0ca37",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d776f-43c9-4962-95cb-2593cb775773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f0521d-480e-4102-8454-502f03b1b5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf0f68d-1f0a-4665-831b-c05d1fe2db59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4a0c8f-98bd-4f3e-acc8-0662efea4ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b0304e-0e2a-4601-aaa4-eda2d93d3ffe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71118e9-7ade-4e87-b81e-2fbfcdf6ebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b062dfb7-30d3-4454-afb0-5874df846341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c02ffa-fc2f-45f0-ace9-e5f48ce42ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c6c339-af63-4360-9585-f79302848dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdd955d-fef5-4267-9bf7-db9b5099301a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d175864-8c48-4a3f-8358-6fd189a0066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f577653-b1fa-429f-96f2-c20dffedaed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510b7857-25a0-4e5b-a3c2-4c8c0b712e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7f4218-ffb9-4040-ad5a-adafc9f360a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408c2ea5-70a3-4d32-88fe-60cc3551fdee",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5969f0-f3b3-468c-bc76-a4a77a242b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069855e3-5df1-4a82-91b0-cf9f8ce6614f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01bd8c9-edfa-47c5-8d7c-eae1bc4425d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d836e02-2014-4554-aad6-e910258b7fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237203ea-887e-4551-9529-82dbaf7297bc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df84830-417a-4d5b-9522-e36536b1f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9279d5c8-a1d4-401b-b512-60b2c90767f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c04672-16b3-4157-91df-d251e2f67fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a1301c-6612-489e-b1b5-77750c69f61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c471379-01f8-40ce-8fcf-fdd3bd9d5241",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d862fdf-8975-45ea-a3e3-6864c0abe9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f90113-bde8-4f0f-9632-f8a7b768b32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d74c91-006e-44f9-b5d6-fd98559c15fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cbac66-bf59-49cc-9593-0d31ad6ef8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41275a2-2f69-4bc0-ac74-b5c9a1319048",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26040b89-656c-41f0-b2d8-ebe4172567c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e176c8f9-e433-41b3-9c28-e0a6bb821e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bd0ddd-78c1-4d75-9217-05103411c126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c1c98e-b7b5-4982-90e2-5e33b2883052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3f5853-b448-4ecf-ab63-231b2fcd9258",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7639ae7c-fe65-416c-ae7e-8aa4a7422d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4f59b2-f7ff-44b8-b35a-1b2d3e258e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e00d40-0fda-4d5b-a045-bb5884e16ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35366358-5695-4044-b729-c4c512f54720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a200bc4-1e0c-47f9-969a-3596651b212d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebb33e0-6d4d-40a3-83e8-7013a8ba1745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa750de-1408-4c54-9671-85dceceb48df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4d6934-6f69-4e26-be38-6a889e2778e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5ac5a9-f996-4203-a2d5-b887c275bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a25c209-0a54-4c72-bb75-399cf93056e9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44923aa7-9d1d-4d97-93e5-ede677694c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38e175d6-9a9c-4bc3-be01-13772b8715f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c66d56-9e1b-4c7c-a1c8-d63a0c971629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab94ced2-bcfc-4992-9fa9-c066baf6ca03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce37d3c-c9ea-4a5b-93ca-e4ebf34d9160",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487de246-2146-4468-99f0-b3e221e1b48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583ceb74-c3fb-404e-bc74-48150a77be63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806e6ef2-6c4b-4340-bb19-047842ad2da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc200d3-8b9e-430e-a1c8-846216cfde67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a81105-cd98-472f-8769-317018883e00",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa23e323-3db3-4fb9-afde-fdda32fc2364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c795d6f-c105-4d93-9c13-eb294e60447b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eca9b28-127b-4cc2-a4f7-5c27263a21f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e1d366-2761-45b3-a7d7-68fc55fa5274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea6aec5-cd79-4311-8833-d5162e782c53",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a976a2d-a7fa-43ae-85ba-fd343afd8106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aa7804-c9f2-4ffd-9149-e93be9cc644d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22335720-7ff1-4c8a-b933-af6fad14afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f3d44f-3752-47d8-b24b-2d42915f6d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa839d7b-81e6-4681-85ef-176fcfde6014",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add80576-1741-4ef0-9221-68dc669287da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70c8daa-bf75-4696-8de1-5248248e4625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0be8790-0595-4fdb-9c42-41d9721c8661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef488940-4be3-47b2-adc8-bbd7ecd7095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbdcf58-b32a-4d92-993c-dfa3abcce94f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5621d12b-ea9d-48dd-8df8-1c69967d7537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde11426-3c22-48ca-a8ec-95cffe72e4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7c3da3-c4c0-40ec-9427-830afe1c145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5beb61d1-35bf-4a38-9e87-018069af39f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cee3d1-eb86-4fc0-9ebd-a83fa98adb8e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd040647-d73b-4e6a-a156-c6c14e18b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa77159-efc9-4a19-bf76-cdba6d8b6786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b73b08b-4a4b-4360-9fb5-b09245b0a1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "07f3871c-36d1-48bd-b60b-2fef9bb29897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8526c27d-aa56-458e-8640-1718d22a6585",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9250104f-0185-40cb-b555-1f34b966acdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eddd85-8026-4faf-a03e-233ad897c2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4003468d-d1c8-44b8-9b55-5f988925c350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c04243b-5f09-4c3b-9e35-f5aaea28d61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e4858-69b6-44b9-a7d6-0503d7a7dcd4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36649f7e-8218-41a3-8b5b-f384a02ac28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9376181-b6cd-41ef-872a-f001c3d8c1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8d3bb9-01a4-4a36-9fd6-2c62404dd426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f3ebd0-799d-4824-9d0d-b314daf589a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79de6d-1fb2-4c6d-8cfa-57943ce6c64d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48464e8b-9d3a-478a-97d9-d8c9a5138a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c02746-c246-42ca-936c-29d49f71903c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd377977-6f6c-4f04-8b79-0296609036c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "597db015-0680-44e7-9604-b9c92bb0e3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dcbf1a-3eb3-497e-bb9f-7fce22137a68",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85a961e-c189-4ba5-bb06-bd20bd5e7e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2914b461-5b5e-4ede-9722-104434fed26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542e0afc-1ff6-4f66-a8a6-a38904eaff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5554bfd1-dca2-49ab-a3d1-5a902a2108c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbb9700-e59e-425a-acb7-c0f29a848401",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e180fd44-c0ae-4e20-9e2e-de7ab00a0187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da3014a-98c6-4d5f-8167-d0880d30ad5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d48ea2-7998-4543-a437-18aa70a04be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9061164a-f687-4b03-876b-53895f8718f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82eb35-594d-42c1-94e7-5fb557f00c3b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a22ee0f-3e48-4cc1-a55e-a4e0ca8aca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac166017-84b3-4a2c-9aa3-c2b0c58db22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385bd3e-7e4d-4b83-8f0d-db77b29ad2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0ca63a-4171-4efd-a4c3-02ec1414ec5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333f79f2-1af2-4179-be77-26a377930729",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9461aa-c3cc-4cea-9f75-feb3cf663193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adb397e-0f0a-48a2-9797-9a35bffda067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e101d86-0403-4a85-8be2-2cfe7c115bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e72175f-8b03-468a-93c2-8551128b9111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2a8773-3d2e-4803-8f6f-0cbff44d1408",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfb41a6-6756-422d-a5ce-0c8bfdb3d1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d545353-13d2-4876-939f-23c75fc64f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832ae331-e718-4913-a7e8-7760c33cafe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84849916-fd7d-4102-a00f-e0bf28316ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d21689-20d5-4064-b148-62faebddd7d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae1c746-1624-42e8-afb2-fcdee47f9dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca19e60-0fb6-4a01-83ae-4b9da3d307ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928174b9-527d-47a8-8658-086a51c30f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "923f0c04-b603-4e69-8807-8cde76edf599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c992f02f-a467-426e-b9a0-2460d1574926",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e68dfc5-664a-41fc-ae0e-e848c67d9996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d04a22-21c5-4166-a74b-7cd39c40d018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd30470-21e3-42bf-9848-c4ba3df82e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "546a6bd0-8413-4f91-9652-073f333536d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcd3901-f9e4-4c53-b212-487a39d3dc18",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04433fa6-d37d-4b19-8328-209e718eb8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f34c4c-fe0f-4cb7-98f4-1b4481770cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ebf719-2cc1-41d0-a891-a25e553a295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0160ec-1ad5-4898-bd0b-7de5538c95a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4216d282-c5b1-4a20-be79-9631a9e13f00",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98111a2f-84be-4cb4-b430-0814420e8ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89dde94a-40b6-4a03-96a1-39fb8b9cb312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abb1ba7-0058-4f4e-8e02-d47fea7d3313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0871fa73-651b-478d-84fb-8817ec77cb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601fc485-da07-49e5-8c74-2a38882ae599",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e1bf58-00d7-481a-94f6-b4485b867aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1b15f7-12d6-4a7e-bece-e4178f28d80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fedf2ba-27a3-4737-96c1-c3ff98a95781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e420e8-79f6-4d6b-a12d-e80f2e0c0f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1564d93-ba08-4583-ab5d-68a46f7f0dc5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d389c85-0cbc-4062-baca-a0c74bf5ed6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae28de43-822d-4381-bed0-fefed1305420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932600f1-eb3f-4b99-aea4-90a1c7b549d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccabe3e-3c16-43c2-b2b8-053472edf8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf224701-c06a-4204-ba6f-ff61bb3b21a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce9fbe6-42e2-4488-802d-f6a043424f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5f330a-c367-48bb-b6f7-9a252d5b2f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1146d03c-292d-4a28-83bb-002d2d42174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0c07af-3691-496e-9381-8f9262602464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26f5977-d089-4af1-919d-9a042304f600",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813e1671-323f-4043-be1b-ef9afc8a145c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc66cfd2-1efc-4a51-b343-6da5d1afef3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8929eaeb-ce34-400c-8c35-175d2693e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f56748-00a1-4c81-919c-a144afc991f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3afa6a-39e9-4cc7-88b4-70c0c579329a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba10489-2256-4476-b626-f7dfac5acbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa1fb0c-2c52-4d5f-bf59-46b4484b5fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c56eec2-5915-4f35-bfe3-6ec932f56846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b29d876-c5c5-4d71-8e71-329b469f64de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130dc9f1-d72b-4b07-a25e-39e5e6129178",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8b4b07-f3da-4253-8cea-1d1fdffb5b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf77716-1902-4218-9a54-2647aebf3d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e1cc27-1f89-4742-8708-13d790e840d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ef9b84-d46c-4277-8d83-35ae97977052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a899fe-0bc9-43a7-9f1b-9df35b5b40ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273be064-5608-45f6-9877-ec98f44bdece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b5253e-0cf0-4015-958c-a1a1bccc48c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea49caea-f1e5-4ff9-b89b-1e4ab3122a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9adc45c-d731-4624-aefe-2e7e63a02fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2d6d08-fafd-4d18-87d6-2282c6926bc5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d55034d-c771-4d99-8c28-79338ac5c271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214a1c59-f587-4c79-b06b-eb6cd84360a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d50e8bd-fe1a-4ca1-a37f-c4ff6c5a123a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "96167821-a4d1-40d3-ba71-1ddb2e624af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7a925f-395b-4a77-bf0a-d5f70e8b9039",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d33d295-ac70-4478-9dbf-849c17b616f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b893a96b-1c7d-464a-af42-c89da87c01a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41044b51-4af0-4907-8799-13b7a9344816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "27bc608c-e802-4833-a107-14c95c22245f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625e0810-7d56-4888-93dd-d7bb369a68ec",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc94c971-0c17-4c79-af09-bfe29cbf0255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c23b5d-0918-4804-add8-6d34108c3201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b5882e-740e-4d4f-8d3c-69c7b2333069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac456d9c-6f5f-44aa-8b33-de6a31a82fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d429ee88-6f15-4a0e-a466-b3678df0799c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa69f98-59e6-44d2-a52e-4cde411c6462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c843bf5a-cb66-48f1-b3bd-be862a46e6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d428062-ac2d-481a-bdab-6a0da3192870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e456444-fdf6-4aa5-955f-ae150884fb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8032cc-3766-4052-8080-49d43098d1b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7a3a1-7d25-4338-9fa4-55395bfd4c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57c5aad-d41d-41f4-a78e-a0db29a58437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4018d6d-de26-4d24-9774-7898ce8f3e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76547620-9bef-4a93-a116-a3476c90642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c622310f-9709-4f81-8ade-21dc2275d680",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a03b813-4c0b-417a-a40a-b86784cf5da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3a655d-ee4a-4e92-8afe-77f863fad1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ef9772-4fa1-471b-8209-bddf69609306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e06e2a7e-00f4-452a-bcbe-5fac33d53105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cee37d5-34f6-49ee-a5aa-25e994a39c57",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fd1a6e-817f-4da6-bbdd-dfd4a8cb0765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14dd9e0-225c-4c40-8e07-b7f45ff2fdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624984af-0cf6-42cb-9633-2214074e9122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1788538a-70ea-421f-a2aa-522f1629be7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06073cf9-4d7b-4e26-9ed7-cad43aa579f7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad890ee2-9477-4ea8-ab15-f18ce0bee4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b1a22b-fe06-4d70-acd9-e27cf339a362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633d765d-1b72-4322-9746-40ea1360fb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9c7971-31fe-42da-ab84-2a464001d234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69741fd-87a8-48cf-a36d-19ee18139613",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fc59be-6001-41c7-bc56-3a1eb3d665f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e608045d-29fd-4e78-a7a7-9ab1889650bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e00072-0958-44d4-898b-17d7d0422486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9829a7e2-5853-4d91-b38a-f008ed3919d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c0de50-5f40-4277-8af1-85c73bda215a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e47fe3-d5fd-429c-9363-73e6385232c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e48c2b8-bfc7-4f1a-aa91-465822c887a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad4f70-1da5-4ec6-942e-3b4bcc10f544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "719e9512-1c35-4bab-8b97-771c0847b0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce38cfda-203d-4b46-b444-108f98bb4ebc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0d2064-b292-4d1f-a89e-4ac0aa529d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda1b8a1-2f02-4271-a3cf-e66fd1026e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94655ea7-3881-48f1-9ec5-4681c010fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e16e8d-34cd-4a3c-923d-44e2ae850249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb310754-951b-42c3-a351-2cfcc2cd47ac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d944dfa8-c06f-4357-8f1b-296f5f9f1d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7d3034-790b-41ef-a3f1-b9da6fc7af34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b42322-1b56-45f4-b619-33b150f6d580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b183c880-3740-4ce1-a33f-dee267cff46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed535de1-5de5-4740-b7b5-ba57d01f7f41",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc36d9c3-127d-44d1-8a30-032342e25bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954302ce-688e-47f0-afb7-0f49281ee309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b998d77-e84b-4237-a1c6-d6503909499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "630bc757-d60a-4a0d-a562-f93407edb41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a4d786-df55-48ba-ad61-e4ef110ff1fc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c6a927-3d3f-4625-9759-56894626523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cb0326-fbd0-4b5d-9bd6-e1615543fc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7476a6-2e5f-4242-9607-ea9e64a8febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90713b6-12b8-4535-a949-37fc71045b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff51b8bc-e6c3-4963-9d78-fc93f09dd71c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71252f7a-694a-4efb-84f9-d47018b98ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead95807-ee22-4562-b0a1-f66e32084844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8b39cf-f949-48e9-a74b-a42f4f0980a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e331ea93-431c-471d-9137-0591fc3e0ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfddf9e-9651-46a9-83b1-109c9600b658",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2445d989-3507-4097-a8d7-95dd65bdfd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e088dd36-18cb-4bb2-afc8-68bf3910d130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c796e89c-7811-4654-b214-43a0dad9eb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db8c0f1-7d74-4404-a8bb-1800c56b6836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d17915-4414-4d4d-a433-91d48f3516f8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894c424d-6191-4acf-8f42-38d1c1a3bd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba1e511-d758-4e47-af2e-0b700b0924b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b042791-0851-4375-aeb6-b98cbd274423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ef8a13-f2d9-4022-b1de-c2b7b6483e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10b7d81-a127-4a17-b2ff-4e7ff582a3eb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063e0780-5490-4a5d-b58e-5c4d36d2abcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262f2001-c5be-44c2-833a-2ce3fa382d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dc4e38-8b9d-4938-bc51-e0ecf5c08b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f6dbb6-1f79-4c0d-a36e-b757302de2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc46a68c-352c-4a58-ac52-7a59bf1f5abd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f58dc0-0a36-48d5-8047-36832985dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e1193f-6993-4477-9f13-dea412228a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ed2300-1180-430d-88f9-4b51a993b6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb03461-2bf2-43e4-b1e1-b28ea9727a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c1304a-1291-410f-89b9-aadccc33a851",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8efb22-9eea-4b9b-b43c-13ec959f8285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff87c89-3b03-42ed-8946-4f0c76eb9a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5b71c6-8480-48d8-8838-934fac4da3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d263891-ef8f-419b-833c-9589cd877cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efca4970-8ee8-446c-ad83-792c07cf5d96",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66ce4cb-e0dc-407a-8eeb-56d840ee6f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5707182-1497-4a42-8de7-d1fe5e7d21ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ddf989-cfe2-4b2f-b50a-8669bd0290c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e6e421-8caf-4673-a1d0-764cccb384f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c3fa5b-ad64-4001-8612-9a359d12a277",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b864d5-099b-4aae-92e3-d147cbbf5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29f4179-c67d-42dc-be6c-14b9b04f4547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f3de49-47c7-44bb-b6b6-702746ec5956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "943d9131-b2cf-4377-b22b-98d244a2758d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92153940-1514-478e-905f-e33fd80e9993",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279ae79b-0d44-4b57-8905-c6200f60f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3136f1e-ee05-407d-a029-afa6d04366aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57781786-9a71-42db-b318-51bd4cb87eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b925f2-dc7b-45ad-a73f-9ca41ffddc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc2917b-f318-4f87-bb2e-bc24daf61409",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcca813-915a-4496-9c5a-7f58c22a3f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235a707d-52c2-40ba-b419-7b144790ce60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d67ffd-9aaf-4a77-97db-2310bb9e5a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bad6477-7fbc-4e85-a1eb-9459569b398d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abab14b-196a-41af-abd5-5f0667c332c1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c534f4-3787-4fe2-a2d5-4298343a1951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d7adfc-847d-4fd4-a820-c1e79b440594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee7d8f2-0b26-4613-8463-ee0d601c7825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "565acd8b-161e-43af-b8a5-c915435c50c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c14aa8-6e51-4d2d-9f81-e31e424b4e52",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55237c5-fc91-463c-a400-bdc3759c4a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30096e4e-5eba-429d-be6d-b8d7ccb2c390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4986397-d707-4431-b308-0262b3164ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "17da567d-ec1e-464c-babb-c319b0bc6d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437bf303-e474-41f2-b20b-72155330096b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b961cb8-0476-44f8-a078-1ba0dd7b7a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02c9793-91a0-47b8-9033-92dcb82accd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adc6b00-7bde-4d78-8f03-0d7a19f25ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d24917-1677-49c3-b835-e59d8c909a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f71f5fc-6741-494f-9250-554af153671b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92424fe-42b7-4556-b0e6-272d8d978b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddba7bee-d61c-42fe-9a0b-ee27323fee15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c66de20-25b4-43b2-b416-493107d7efeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26c35dfa-465d-4e60-a5b0-914e9b060b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4756836e-6d78-4bdc-ba11-f85eb437a8cb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2daeef-d4ff-4dfc-8efc-1c4bcdced8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5288ef2c-5198-4cd8-a76a-bf3c8c72fa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2329e8-fdf2-45e6-9629-69e55003b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5464b57-6b39-453b-9061-1119e7e154af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a05491-7725-42bf-9e46-a005a140bf96",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6854ffcf-2399-4fb3-95d7-8257b7756095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a978d9a0-62a0-4f16-bd30-ebad1998cfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e920a5ec-11d2-4132-828c-cdb35ba48061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d791189c-c74b-45c8-ad92-6dd01e801f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2f4538-cb3c-405c-a12f-71d20c90f1d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30231dda-5ec8-4e09-a7b0-238204ff5719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2478f1ca-4dff-40b3-8e32-9220713d74f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753eaac1-fad0-4005-8249-e53a66f49b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbd07e9-aed6-4756-b638-a5eda97d5170"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a37ea55-0b3f-49b9-a5c5-e11807fbc049",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e119747c-9029-43a2-b688-c0e2d238c26e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074dd1cc-60eb-472e-ac4d-46cfd39949eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1c41278-e5aa-4774-abb2-2ce7e064b9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3993062-625b-495e-9d36-3f8a30bcbc24",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4800ee29-2453-4f5e-a0eb-2d086db58b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1289a08b-683d-497a-907b-db9aca2e94b3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37085c9-7100-465b-8d13-a08ed19ec852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0719d740-9c14-49e7-9ffe-2be1c79b6fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5eaf027-a7be-4d1e-a524-01ab8dc669a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aba57e66-8031-40a8-8f2b-a4ba62dfe5f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4b695ef-ff61-4559-9a98-c19e86b06d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e87f30b3-f904-4b78-a747-6e75c8f27d53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1962c2c-13a2-4fb6-842a-9c065a4495f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98bb518e-e502-4c30-8c44-cb36a30dc8b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "512bd460-45b4-4984-a091-f0dcc3c04591",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bef659ae-5991-4da3-a5dc-2e915ca7f85f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "acb1235b-0258-4c03-b116-28e8aa38944e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "764b103c-e649-475d-a400-34e9718f90b8"
                }
              }
            ]
          },
          {
            "id": "9d13006c-ee36-4661-b438-844ef6e5049a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42ebf9ca-a064-4bec-a853-6622d6f819c6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cec112b-507b-4b65-8207-1b28ca5bd7c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dc74554-1b9e-4855-b0e0-c5c507e124bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5fe5f4e-af94-493e-81c7-659b030fecd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "588463c8-4c7c-43e4-a26e-f2d054026b22"
                    }
                  }
                ]
              },
              {
                "id": "913cb342-eeeb-42fd-a493-a5f3dfea7538",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7240fcda-600e-46a9-9b09-e103b1dc62ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b607cbdc-be6a-412a-83cd-0e4aff6489cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f1348d0-c699-4d03-a9bc-3f4886f67592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae51c981-1869-49b6-940c-034e54cfeab5"
                    }
                  }
                ]
              },
              {
                "id": "f6c997e0-7312-4e16-be79-b6603b0c1f0e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e2556ea-6d44-4afe-8aa0-6298c312a369",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31a7df9e-3a7e-4da3-ab2f-ef0da57aacf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15c1421b-89e8-4757-b253-d8bd1472cae4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b20fb46-19d9-488d-b90d-801e2fcbd61c"
                    }
                  }
                ]
              },
              {
                "id": "70644148-8d9f-44e5-864b-5d5e0e170c86",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e270c3e5-6c3b-4b1b-a383-6ab0950b2dd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc01c8d3-a215-4b1f-8181-8836ba64ec88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84658012-4bfb-4fa1-bab4-5f72d6898579",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8fed013e-b170-4aaf-97a5-7cca3ef4fce2"
                    }
                  }
                ]
              },
              {
                "id": "5b50dd19-2370-4cca-b3f5-c8ae851ad948",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15f5e2fe-609f-4f45-8392-deef186672ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5339e8d-90bd-4133-ac05-3f6da08617cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c470628-87a5-4663-bca7-85a6e2f4cce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29967e97-0d96-4cb8-8ec9-ca1732768f78"
                    }
                  }
                ]
              },
              {
                "id": "20e62791-1950-4f87-ab0c-bb91c9803e38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "624fb476-a8d9-4b36-8139-2d8020701ebc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f988a0d-2079-4a0d-ae6b-6fb3137b6013"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf63c105-2099-431e-857d-bf4b31cd7289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95867b08-bd35-4f66-a909-036fbbc98c33"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa21c428-3040-4fa7-a9b4-3d0df1b924cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02d152ed-d189-4294-ac9d-49378dba5491"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c8fad27-719b-41c7-9473-c8489438eb39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ea43b90-88f9-4e7b-9b8d-3519fe672d73"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1203bd66-cbd2-4667-8182-4698b04dd097",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f1e8ef36-e715-48a9-a4d7-357892ec8718"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3628db73-9481-4339-a53c-6453eeea5e39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ae71c6d-c7cd-4e21-81fe-c4784aca84a9"
            }
          }
        ]
      },
      {
        "id": "162ca144-d621-4b89-977c-68d955ed9dd0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9040c70e-3cce-4277-89e3-7ada0934100c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab34d7a6-e55e-4367-935f-f5e5d9f4efd0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d64ab42-6bbb-40a9-9fb2-103b133d24c3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b454ff2-25dd-45b2-acf7-f992186a7440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f044703-7d5c-40dd-a276-567ba23012c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7159c3c-a6db-49a9-bcc4-c9b5ad5d8062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6377153c-7771-483d-b2c8-7060bfbbe3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd7856a-4c3c-4939-9995-7c96513fb34b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d24f18a-a613-4756-a119-2dd6fa352fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2a31bb-d318-4a2b-851d-e30bbfb806c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaa7978-9d19-4408-993a-037ecd66b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fa3182-fa5c-4000-bacc-ae4b40d29a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b18841c-3267-45d8-89f1-a2df38e48832",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e59fa55-b541-46c8-bbe3-80554589299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef029b40-f4b1-454f-b59b-165df61415da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347a2fbc-bd60-4971-bf55-7582ff1a1f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c831c8-503c-4b95-900d-36559fc52add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398c71a2-123b-4cf8-86ac-833d6f6444af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4c5155-71ac-470c-a3a2-4f8d1304d119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9ad199-6a4e-4a58-87ff-09769bb75a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ee1c77-e2fd-497d-8777-7efcb437baec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e7992e-a235-49f2-8402-1e455bb2e627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abfed2e-06d8-4230-99ad-a2596705100b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b873836-5bb7-4556-9652-227b520234e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42425d01-4997-4161-9b41-37228e48cf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802f3e0f-273b-47dc-8034-df269bfcd1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa7c79c-c3e9-4c74-b651-61b53c4babbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f195d357-2d6f-4d81-8398-294a33e0c735",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85488a9-4eaf-41a4-9dd3-bf5e450246e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44b1298-a6b0-4abb-a5a6-a463a650870b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b7c543-b0e8-470c-bf83-8f403becfc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cecf471-9cc6-461b-9c3d-40e2bb5ed765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ca28c5-2b89-42bc-bd0a-b36c71384cd9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbfcea9-fde8-4864-ac48-4be6edb1ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0043ea2-711d-4809-aa6d-1a1d0aa3e39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1075331-f1fa-431c-aa2a-f12d08d48fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c7b5f5-df17-4d60-a858-2625b525c961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2e6ded-bf2a-43c8-b486-89e265986592",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54706f3a-2326-444a-a942-2103fc243d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52da25dd-06d2-43aa-b49a-141bec3ee086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3206035-02d2-4647-84e7-dee76e689a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7151707a-9c18-49c3-bf68-2aea9290122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3794eb39-c2ab-4220-b667-36b4b57250c8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a582629-1235-444d-8368-58aaa127de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5ed076-99f5-4b67-bb7d-5fb38030d3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c845ff5-7e14-4db5-bddf-0f7c925193f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad60a89-0be7-45f9-ad2b-05604726d328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf539e5-3df6-444e-ac94-fdfa70711e5c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823ee0c-2635-450b-905d-2882790ed5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b829b119-ec94-4d36-8ad9-abec3f7f85ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5db0a1-5802-458b-80e4-03411f9398a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f651deb-574c-479e-b5eb-801fdc11d0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca333c5-01db-4727-b24b-3292216f1565",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c069c-5d0b-4385-9b3c-ef92d7c0f909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebdfaae-9368-4191-8b6e-5f5c97f9871b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221ff2e2-37be-4a44-a277-3740f0dd1c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7b9152-de83-40aa-a105-c860198d3900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1d255e-9685-4f78-ae82-98628a433656",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecdb22b-868b-47c8-afe9-943d3f4564d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ba2062-ccc9-48e5-aac1-85fd5db8a0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f894b9-0510-4d6f-8785-d61da1d6d53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "021e34d8-725e-4ac2-9310-b7a5b5e45bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6311b7cb-80b6-4d23-a6a7-f6e90ab48056",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2c0994-5f57-4e55-bcf7-7bfbe5c341b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40db3f96-a864-4b5a-8883-c85c8c14c25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9962b20f-8393-4ad2-acff-da0141e59397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "349c7377-9bec-43fd-bad2-b078f3658de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d5043f-484d-4527-bb85-16e9f6a8130d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0449b-d579-406c-a294-b377ddf553b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894eeeef-b6a4-4cdd-b5c5-c8538a1c042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d59ff2c-ca41-4102-bef6-02e4870bec12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3edad2a9-7a20-4778-8aae-5e8095e8e429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca28ce8-75a8-406c-ac7b-b2f313a30c2f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc4a6b-ea29-43c8-b43e-49ba66f27eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216ab67a-23ff-498c-8c25-bbd033a72d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67a176f-7ebb-4ed0-8dbe-7e575b944bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddc3c57-d4af-4613-8c22-e6493cb4c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3656e687-2971-441d-945a-dad059d31e83",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23ba183-5657-4358-bea5-33b9e852b208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29343f84-2546-4d6d-a0d2-a528416cc1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626df67c-e923-446a-9186-357dc6099348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9882a11-53aa-46f1-bbf7-fb0b13281034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12d598d-b919-469a-8131-818585a9804a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c80cd5e-96ba-4f0b-9baf-12bd47007dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a610062-d8b1-4780-a6f6-d81183ce3424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf6ce98-896c-4999-af11-043afb01b0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6726f48-2d16-4aa0-b6e0-13115e9a53f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7744321c-d37b-4c5e-9c7a-bef24f7051aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373925de-ac10-4a78-91ed-5c08d41b2638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3eac273-600c-4d68-a624-dccd98f4a035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599389a4-71bc-4457-b0bf-a5f23ff57a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7339a4e0-8447-4dfa-8878-613584e9a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a46044-5c04-486d-b87e-a1054df9df9b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09894d9b-c89b-4153-bbba-212e0c2226f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c542a8-1fe2-46d9-acbb-8f2997cac303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca8e058-484f-4177-a8cc-342c915660f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e010ff9-849f-4cd2-94b1-6daa3f5341d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fd8fc3-4c3b-4a3d-a098-29695c3c81b4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733eb741-e9b9-45f0-b6ac-f3b39f365a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67de1bf-201f-4d49-ab70-ed73ee777226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2763f66-6cae-4583-8acb-0d27ce4567a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1be45b-dbef-4333-9ea2-3b891b8d074f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce5848f-6dd0-4127-89ac-ec663bbdc00e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02138fcb-5434-487b-bb04-3fbce0d70b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73692da3-9d66-4403-bc64-19c2a217eb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c16a0b-9f8c-4c21-8091-5336788dc3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d49fca-ea42-43a6-95c9-b1906a70dea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7c45d1-abf2-4b45-930d-9e2371d84aa1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60751ecf-f1a9-4e2e-96d9-ee2c68f70f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9827ba8b-c7d4-4fb0-9126-03fa7c5084dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaebcb9-5758-413c-a8c7-16e10af8debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223e601a-ea3e-41dc-947f-70fc28527a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db83b8e-a6fc-4e89-ab69-04b55d30b554",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d504fd-c5bd-43aa-9218-8180621961ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf686cda-bf95-4a1f-80a8-2bfb830e1873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab64acd6-7ba5-40da-9f2a-d596f8fcf5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c99faa-5524-4166-b539-60ed7bdbe040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfcd6b4-7571-490a-938b-044bc097634d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00fa2e9-424d-4d3b-aaa5-85ad411b8e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41cc012-bbc0-40a5-95c3-0108109fb45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec748dfd-85bd-40c8-b25f-c2824df84e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb3a331-6fc4-44b8-98dc-7217cb9adf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01948feb-16d5-4c89-8364-4ce4b95c2f4f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1286d999-69cf-41a1-bb9f-9cfb40910829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eea5dd6-7883-44b6-9741-fe8c6a5a70ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa83998-db30-4995-ae60-d855d53314c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "192f9494-f3d4-4ee8-838b-f44d9e455cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b2f5b6-c351-46bc-9d5d-b8b3e5b89383",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3dbf7f-efd7-4501-a2c0-b091cfc5e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9a24d0-a7bd-47fd-af17-cbc3dd82b796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73aa7e1a-a8a3-4d5c-80c5-0456080fb8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23f9196d-7505-488f-9fa8-c281c082e5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f62b8d7-3157-4c84-a16e-a6ca3403ecbf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75df7d41-eb61-4210-b33e-823fad24bfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ef773d-2674-4030-ac7b-676467e9b192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c35006-ffe1-41ef-bbf3-a3426b94dd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124e8e9b-b3d3-4eae-8ce4-8881971effea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4549404d-45f2-4db3-b0ea-b1001caef3fe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a6b3e4-6ccc-4f28-bac5-53807641f8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa825a0-2a6b-4b0a-8dc5-96076b4eed0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67634bf-4b69-422e-a0dd-69d70b2816b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e62b71b-b7b9-4e5c-83fd-fae1cd98c8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd28acc-c5ac-4859-929d-45069ef85b78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec10c8f-452a-481f-9190-b97f5d562ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f461376-e1fb-4379-8d61-4f05b9d91b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d70246b-0463-4029-b478-4bb70980ba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f46e64c-b67f-4627-8db3-000b19ad5bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ed3ec4-0a9e-4b34-b6e9-7c527eebe271",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23569b49-c406-48f6-ad52-48afbb9c4247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed71781a-4ef1-4337-944d-bf38a19e377f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a933567b-af1a-4b56-aee2-f67ec7ffff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb99c274-91aa-411d-aa16-28e8441a68cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88da15d7-a2bc-4ea8-936d-02241f22f0ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dc5f31-fc36-4ddf-a2b2-d5a5373ce367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a62ad6-0e2f-4e9a-8280-eaadf26b6a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1c8af5-6e63-449e-8032-13b89c1b8456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b1f0dc-6f65-4bcd-ae0e-10b4149ddf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481dcc74-f211-4ed9-a151-9da7a49763be",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ef5701-c67e-4357-9902-fe1b87e374c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b284ee02-ae35-4c67-8000-5729d2be8e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60360998-5c80-49ad-a2fe-fbc4a6f548ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0aeab2-0f26-47be-88b6-e1306d330c34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99bb72bb-7a8d-4195-9eb4-98383287170d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd77ed74-c4b1-4c07-bb9f-c72cb65edf81",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68b3c6d-4dc2-48b6-971d-371b14e1b953",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "881ae49f-d74e-4969-9051-9e3c342520f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07587c2b-72e6-4ab6-a832-5b62f1c79e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b29a407-1bfc-4d06-ae63-dd11c973a0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74158922-1a5e-442b-8f19-a6fd3f865fe4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f6095a-9b11-4909-85fa-f66f8ed581c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad084eb3-f98f-4fd2-8f16-39ade158ed41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee54d1da-1925-4a25-83ef-5ea9502381b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f4595f-4906-40fb-8ce8-48f75b1411cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2414d714-fc4d-404f-b2d5-fc32bdd8dcfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ad2b729-eb38-411f-86f0-25b9de64f0fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5600568-861d-4b8a-9109-1618c66f6c00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77c3c930-ab41-44ea-99e1-72063c38af08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce7f6156-8cc9-46c5-b0c5-3fd4f74526be",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "800ad5bf-c391-4b4f-a3eb-b5a2853986cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98c84ef1-68ab-42c8-8aef-86263e95c0f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "775ee480-0b4c-4cfc-9475-3a087d395fad"
            }
          }
        ]
      },
      {
        "id": "e2ab25ea-d674-4cf0-8c1a-4eee045ee415",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "57eada3a-3e62-43d0-b873-71161806e570",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1bfaacc-5614-4630-8caa-f3945a75d402",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc67126b-cb64-40c3-9a81-40e46cef4d6f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72f32ad-994f-4d37-8b4d-8b2e3ff70b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df792e28-0d23-4ae9-919b-25c802f5e12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc882798-8515-4049-b983-5f80a7975dc6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aee2832-dfc9-4dec-beff-710bca067180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43164479-ed93-4941-b8cd-ab492cb55650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74447949-d67f-419c-8b28-9f368a9289e2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b3a77-05fe-44c9-bd13-6d146863e2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1aadd72-c9b0-491b-a584-4429c15bce69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a62b63-bb29-4359-aa78-d3b3cf858f62",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00567998-d614-46ab-ba8f-0f3f97632d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd38e761-67ef-4cde-8de7-337f8e779c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba7559d-e324-41b4-a432-314d08f871d9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e84cbeb-6417-4ae7-86c1-f42212500805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc58ec33-e87f-438f-8734-5d14bed61eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76265948-8fd6-45fc-b39d-e3e6d9dd7bfd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b911d21-d270-4b8a-aab0-091ba2c41c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad866ec-6618-4483-bba7-9ccbca15d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb73525-0ab2-4337-84e6-774396bf5139",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4336aa42-fbe2-4ac0-a83d-df9779c07f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cf26eb-7c8b-4cf4-9703-047aa1cd9857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9e4290-08f3-4cb2-87a9-986791b0c202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67efd32-a736-4d3d-8882-3a8f692b09c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cccc51-58c9-4688-b09e-b1141fba4f6e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11615d50-8686-403a-beaa-5864dfe9843b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8717a9d8-9b5f-416e-a22d-a31f663d45dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82afab9-a9a3-479d-86d2-f9ede7c64c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b93aa11-5388-4249-ba6d-8dc4b2bcfaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3368788-6903-4636-90f3-caa1eb8bf20f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75602f55-e016-48ea-9c12-66bece8e4452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83832ad8-3cb2-4780-8ef3-a0da74863628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dd4c89-1616-4bdb-8b9b-f00e8c377acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b88b167-5d08-4333-9b26-9cc16f28855c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a7663c-a7ff-40a0-bdf9-04a5190e30aa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4a3d2e-e67b-47d3-b6ca-9b4a466531c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f267fc4-44ac-4406-9c5b-b33b8225f9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f601c2a6-b319-4698-8beb-3605ec6a4869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b109aa-a578-4a75-b930-2f629bc7f401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c93ea6-7b95-4511-a39f-fbbf3a09b80b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3517d264-a1f8-4133-b031-c9201a9b9cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b047a87f-5238-4448-b70d-dea24336c5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220f4669-2141-4d29-88c6-3aad0a4db72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99f4c05-5f20-4696-a8c6-5814dfc8cd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6116b91f-4d19-4479-923a-99680231f449",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ce5932-c7a9-4cb5-ae56-e6bf50949283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dd43cf-90bd-4583-b0a4-9a7d0d9f1146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9775d22-0872-4ffe-b5c7-654572dc5067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f250e72b-9f38-43ec-a1e0-f657e27b105a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bc6c10-eca2-4db6-90ff-f2b7580df423",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9ed9e8-cb31-4894-9307-f6595e9d2f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16f5279-cb02-4794-bf1e-0d15c11d56f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529dbfb2-d3e2-4b71-a208-c4c0eb9ca7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f246a49b-8edd-40e0-b96c-e1d669b031c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fb7b3e-4718-4d75-bb30-540fa30b2995",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd27106-9a79-49eb-844c-adbe3aa71c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc590453-2469-4b57-83fa-63aa02527911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2354c27f-7e1e-4cfc-be74-62cce7655a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaee877a-24eb-4a05-886d-83afa3175527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08185ba-6d49-4b44-a81c-bee7779cf2f4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86c927e-99fa-4bb7-9044-929136df462e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d99c4068-3315-4c5b-ab81-d916e780f675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bbd3d8-d5b5-428c-8b22-75b94e95ccbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e885805-e4b2-483c-b2ce-50a5426414b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d85d68b-360b-44bc-bffa-053e973fa13b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7120826-38f6-4f11-abe1-d3c5133b471f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "580043f8-24a1-45b3-a7c0-9553517abc11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e97ec80-b7c7-44f8-8dd9-97dd812223da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92362ef9-4dc3-4943-ba93-471b556c2b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0094a31b-52c5-4753-9cb3-f466b6fb0afd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9f4aa-603c-46bb-a576-66e0b6fc71a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ca84d3-42a0-4c3f-b9d6-7f4393bfcedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e80822-d0b8-47da-a6fb-955ecdc23e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ecfccf-8e63-47c5-974e-d6eb330aaa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744220f7-5fe7-47e9-9651-e1b3ef6113a9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e65d56-07a4-4668-87d9-e1affaa6debb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fe43cf-c4cd-4668-8830-4e375706c990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcecb227-3339-45cc-b3f1-1c528980f726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e239f0f-7e25-428b-abd9-97a2a94d60d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b24a7-2b04-41e2-9e7f-6b08484090a2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfefe4f-a66e-4023-b96d-91a558734ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ae54e7-7e4f-4792-b2e2-1bb063316cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7d8931-03f7-410b-9369-0831130f6405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7410f650-8539-44c5-b3e3-4d449b32199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc6cb0-7809-48b0-9c59-7ae10da4cb72",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db7522c-a83d-43fc-91c5-36caedaf0cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b2b004-cf5d-473a-a4b3-80cd0d8c201a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7242d2bc-c9e6-45c1-be7d-994640d08489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8531590a-b227-4773-a97c-172b29c25111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab2b672-8a8d-43d8-ad73-2a975e977c3e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd14d768-9c2d-409c-8f9e-c7e2a9e618d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2f2acc-2c27-4315-92cd-c41da1df295b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f63d6e-9fcd-46d8-b226-32c50851c832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59da2297-e2a1-4cd0-a91a-bd9272651e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacc97eb-5fe2-40f7-b15a-ab2b66aaa316",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d27479-f4ac-4001-baad-8d28ef597096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c70cd1-ac1c-4175-927a-787b90371999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eeb372-8663-4399-9edd-7a8a4fe1ae57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85407cc4-0d3d-447d-9d61-cb95521c3990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b3fc40-7ccd-409f-8597-73a321911df4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71900dfc-3b1b-43da-9afc-671b3dac25b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79a3244-ce4b-4b57-b44b-7a24c206e32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872942f3-ed2b-4571-aace-99882f4caaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a9436a-dc3a-4907-980a-46341cb6ea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcb052b-f02a-4a40-8a37-66dd42af3285",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc2d0ed-adf5-44c0-af13-2da507917322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53336b45-9fb0-4a36-86cc-22e68d1c5a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb278c-6f79-46ec-b018-108c74eec53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96fb2f0-eb4a-4025-b68b-44866b3b66cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20f42c-6257-438b-85bd-7741775bcda2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3ff2ac-3edd-4636-90c5-5ecd19ab78ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5108d6fd-c896-4a8d-96a4-42c8e785eefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c50adf-59f1-4795-9e12-e61e813ea4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477a60a6-0e24-4cd5-9589-b24155ac4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3287c2-ea94-4d9c-96fb-bdc07afb9952",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27616ea7-056b-4d07-96f3-7df2a7861df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a236cd6d-9a37-4a0a-aefb-8776ec032d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c422e-bb8d-4e80-9eff-2fb6552424b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e64e1c-3ed4-46a3-9f77-16fb46b8b803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c7e5d3-2c1d-457b-b77a-fa57dae73b18",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c617dea-179e-4aa8-9eaa-1cceaae3aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a19b18-0c68-4a6a-ad16-64166e210e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5933fc73-46ea-4577-89ab-49723635c35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4a86f3-cf4e-4dc7-b2bd-374b7c021eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ec0db2-abd6-4ee7-8bf4-4f8673472ec9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77b3811-66b5-4e0a-b14d-450fd17142d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fd209c-2523-452c-9ce4-421cd7458732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bf5965-0049-487c-ad06-97b19f891dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdb9ec3-3f96-46e9-b55c-ded88a5536b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d4b068-74da-4e16-a93e-4daf2604d58e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a19895-cf7e-46bb-bb94-75d3c9f11ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c54671a-0481-497e-8298-41ecea278e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac83a326-2c5a-4f7e-aa47-1bede291c91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f4a74b-e60e-4287-a854-337294a4e2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ef5aa1-267c-4b92-a4d2-aac2eb913c31",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab75349-6cfa-4d20-9a1f-36676038cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5347b938-140d-432a-8ced-5fb0eb5b9338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca130cbb-d964-44af-ab95-c091887aaab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9748ce6d-f4ea-4cc3-9722-21a28c18af73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c6022a-0829-428e-a938-01189f1a67ec",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d511a027-2514-4033-9f4a-68367b151af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49e1a1b-6632-4eb3-a72d-25bfa35db7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76000d36-b009-4bd5-9d83-d23da5c7a58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e9a526-cedc-4ee0-be46-fed921bd967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1380de9-3e4b-45b2-ba24-74649c96d633",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd3a69f-6178-487b-b7d4-94d5d7d73a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b75e0e-1d12-4dd4-a780-e8c0f3133bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708599c2-8829-49ab-8906-c6415656894a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e4243d-cc50-4076-9069-6b56cc6358cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b06ea24-8f40-4f47-97e3-40ab848cd160",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418956d2-53b8-4447-bf9c-67bbb4ae18ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19b2e00-1e04-4bda-9146-5a69ebb91d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdeafb1-0116-49ad-8285-f24a4cfb99cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defd76b0-e980-4c64-b383-b271361c45be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a6e190-68e7-48cb-9bd2-321d03ddeead",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac6256a-b736-4c73-81c4-b3cdcc67f641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c95f3f-c5c5-43ff-bd27-87683b4d533d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d1305-227f-476b-85c7-cdf8abd19f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee42d4f8-0201-4091-bfed-240beaf17fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cd665b-bab1-4a6f-9252-91e97d9693c7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0755bdfe-37b5-4dd7-b39f-2ae5398a4a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8a34c9-beb9-4cb5-af3d-2b8382a1edc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49e42de-f170-4e6d-bac2-19f9c73150e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0988a22-4dbc-4270-99fa-d7860f574f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e2b179-c94e-482c-b3a7-6144b70ccaec",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46354c5-b8c8-49d3-a8dc-c3b209a2f716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a93638d-5925-4007-9a58-a6b171c3e025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcae02c-0643-487b-8609-31145a4ba4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe649de1-22c1-4947-912b-a0546caa0313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bb2413-a7f3-4270-834c-ce80d133d399",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf61ff6e-6223-4e36-997b-74acb6b7df48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898ce49f-3500-46f8-bd4d-3a7446f0e871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbadc1c-abfe-4620-851f-d6e77428a350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2c6742-8a86-457c-ac9e-f06dc5713031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6ad29d-df00-493d-af2b-d87c5aaf9595",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c69d38-f789-4322-9604-5d296609fa00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f617e89-7f6b-4e08-aeb5-104a11902544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bb2305-65bd-4fc5-bbbe-938c32debbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42be9f39-da86-4980-b917-3f9086467e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2ffa5c-432d-478d-94c3-9523e83402a8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9961cb88-a7a3-49ca-b265-ec1d92fbc228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a88f10-8701-48c3-997d-9dcc86eff4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7415594-2556-4344-bdf8-2bad592df510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce32504-c443-4e60-ab75-074549c747a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311b9479-28be-4084-9272-b5d15c14907a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b05c45-ebd3-47f1-ad17-17865442d69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8910a9-2246-4106-b1fe-b6ff782cbda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b584aefd-aa3e-4fcc-a1b8-6dcea50022b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998e1eda-4c08-4be3-937b-c4d3a7118226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c679d85-d758-49bd-95c0-3cb2839250b2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2029e4d-ae4a-4ba2-a293-27696cc4ea90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848f2ac8-d3d4-443a-b53f-5e3a8a16446e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b258cd-88a6-4183-9ca9-3d9fa5336a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41981dce-0771-4c05-a392-0c622be4fef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae8f63f-72fd-4af1-9063-b468e630d92f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56041782-dea7-46ff-b1f6-cf2358a22d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2a8555-2235-4eff-9c48-e56dc719eed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141f1766-6c9b-4edb-948b-b84d4a701b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f517bc4-a4df-4fb4-8bd7-32eb84542153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567b87fb-1163-41f3-9b3b-e288a82bad5b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb31ecf-12c5-4e2a-b5e2-a80a2b40f575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53981619-c539-48a9-b676-56c8fa1a92d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f88ecd9-91cb-4e08-8d67-29b5949d9ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6910f3e-078f-45bf-8da4-b15ed8351096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bb0a51-90e3-4473-af62-fd276a85a907",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0e5e37-d424-4670-acd8-9216a6f853e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d3a5ea-755e-49e0-9864-99690298180a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695fcd06-6232-459f-b6a4-1b7314402ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65aa974b-2fcc-46d2-8c22-cd6ab09a7d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a827390-57cf-47fc-995d-1f66b439d16b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2487f256-0c91-47b6-8f33-f83587e24206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fee82b6-4890-4bc5-acc4-36af8314f5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fdb8b6-e9bd-424e-b43a-b1884d0ce03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbe90bc-c6b9-41cd-9843-1f86eda8935f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ba93b1-12b4-4894-b314-9bc10242a23f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56bd90c-3f6c-4cd9-ba5c-ae35ffd6ed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae66e069-f2d3-47b3-b8f7-4828e7f44ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405c095f-de73-4d7c-ac4f-0f6d0d1322c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dad2e3-9baf-4051-a6ee-fa31516e589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ed2361-46ad-42f7-819a-00ae0cdaf292",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a785d7dc-56e9-43f8-b1de-a386708e6de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24549b49-23e7-4398-bde7-12ad86c99ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6821e2c-ba07-4d96-a87d-ee3456ff1e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f809b0-b4c4-4b5a-9391-722c7d4ea5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d9836-1bd7-481d-bf62-3e4005ec186f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b50ed99-af20-44ce-9184-64711dedc057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a31fec-9348-4509-93be-dd97c5112099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a0a9cc-7bd8-4668-a815-3c0f2ba178e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618d1408-7093-4b2d-ad87-252304d2bce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b809e5c-41cb-422f-8fa8-9305d4fe4e49",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84f659d-071b-4a69-8c10-3964204f179f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ef9029-8a8f-4b49-9824-871b1e980c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544ababf-418e-4cf2-9a0a-13cf8d55fcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b4b017-40e3-41f0-ace2-90240549ce45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc2e40b-01d3-44e6-b9b2-d018709b5d42",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e43e0f8-d6f7-4de8-b746-4dee4390a079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6eb83f5-8e4a-4fa0-8168-81793e8f712b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddebb3d1-9543-44a3-b351-2aa8f96a8da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e1a55e-3ca6-4332-8c63-7a4838e6f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d286d20-8b62-4477-85fe-c2bd11fcc05d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0354888f-5043-44e9-97ea-7c7eecba5c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92af507-b839-4ff7-a70c-b21bab83a322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba2cccb-6c49-4a7f-ae30-044463a9a4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b36beba-efb9-46de-b370-dbd7dec8fda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dbb79e-e540-467f-bdda-d81c9d289f96",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca95b80d-dd8f-489b-8efa-cc9304dea644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d819a2cc-f1fe-41e2-ad91-3785db3bd61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0361bfa0-ea04-4908-8096-cf9d555b4b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce3ec8c-0c30-46b0-ae5a-5b2f15503ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d136cae7-f7c8-43a3-a450-a65d39e29a6d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b03c74c-9ce6-458c-b76a-86dd82c78b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdec89c8-2fdd-4390-8de3-f4edf121361f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9304a838-00c6-4460-9c3e-86b1a20a099f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27f1a7e-b3cd-4b48-bd82-cbdd84fd6b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848869a2-9955-4ec2-835f-39b9b5e37dd9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab5193-383c-4c67-9e36-eef32e61336b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b76f3b-6aef-4578-8e8e-b20a75841c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca7ca3b-da9f-4791-8bbe-b4c780144d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c6f0df-a020-4c55-bca9-523d5416dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16daebc-ad3a-4349-9f3c-2a5a25f2848f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfce44d-a2a0-41da-ada5-afbe6e9e057a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb8d5c-65a0-4b16-a192-3dac1da9b030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ada73e8-6fc6-4110-9416-2d17a1e91786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f420f1ca-83c4-4900-b6cf-d3d913e36db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8805c9-d20e-4b56-a73f-94dcedee2a0a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f4733-099b-4e5b-84dc-d222681f2006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0551db26-ec5a-427f-be02-8e4155ee061a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f194d3b-c74b-4a47-bf8d-784e10a633d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02647e90-79fb-453a-bbf0-06460f7f54c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657946ba-f772-49d1-be68-e0558990172f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b2ffe0-e61d-44af-80ea-6262cec1f70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe833b6-5ae5-4b09-9cab-d680fdd10380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522bdc53-3bd4-4b73-823d-eebf83c340c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023eaed3-72e5-4ffc-ade5-7afb1da66852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b894bdfa-1684-4be1-943b-c33ae84cba81",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca279769-fb31-4883-817c-78ed453b888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932794ae-de65-461f-8c46-1e49d0dc2ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e04a37b-0dc4-479d-97da-c78cdaf9507c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6b88ea-699f-4dc2-915d-7fe222f0c8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d4a088-da7a-4f1c-a589-a608bb38c240",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5293e7c8-9ecf-4f35-bc62-2ec405bb8825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e561cbc4-76e5-4cb1-9d2c-60a28593d2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def57c53-1a81-4a2c-81b2-bda4b656e6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f3a78b-338f-4bda-853f-d1e7c83971ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3981e56-abaa-4421-99f7-5021cecf511a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38513ff4-b6a4-4f1b-b70f-a66395e6665f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d0260c-b344-4184-81d2-ac5629350b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72bc5ce-aff5-4437-b2fa-0f4913119fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e09e8c0-d12a-4534-a181-97a9b7192d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c96af9-4689-4877-a56b-8675c6032de5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c7dc5d-0f1b-421e-b870-d142bee37d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8aba08-aa3e-4b31-8ecc-a5f323716eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a9e0bf-8b68-43ed-9a1d-ef77b0d47989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeef5b6-1555-426c-81fd-aec38dd3d158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457f80ad-7c33-4424-8e71-c15758332892",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8585500e-edda-4ca8-abec-82f5084f8320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a5d446-8923-441e-82da-90ac0a957989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f147eb-2260-4275-aa5d-133be3de3005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f8ec3f-3412-4b6e-8d54-abdfd40f7036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d223ac-c8a8-4d9e-a4f2-35fb688242a8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba652ae3-8744-4a9a-8431-230f943c63b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65449a08-7caf-4df7-8723-848e81074541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44fd3b6-380a-44af-8838-3a6f95e6a27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d83d45-074c-416c-85b3-b58034191247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389d1c2d-79df-44d0-8ffd-b8c7c97e1004",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21832cef-7f98-43b7-869d-833de07e1a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b816ffb-d534-4ca4-ba76-5baf622368cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbf8fdb-5585-40f9-b3e3-e6c28cee3bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6055b8e-d149-4c15-bee0-a7d3ceef566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabe96c7-9287-45c6-8979-88d529922629",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c842b7-592d-43ae-8a53-807c0f968ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4594aa5b-fbfd-4c5a-942a-b8164b3ca456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23874eca-8f62-4fcd-aea2-9cdb3bc42930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e666166-8b68-40a9-9de4-3f82f2fcdef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d46435-df59-41ae-b2da-2701296ce082",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df07573-030e-4385-86e9-fe9fa9ee1181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53362fd-7510-4bc7-9d30-6ff6dc413bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c1b4b-4cb6-4d82-a8da-92cad5695c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fe5905-5dfd-4549-9e72-ca0d9494514f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5738aa04-948e-45de-828f-65e4582d51c9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33742f9-b61c-4ea7-9d8b-7c3011f3cd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd9f8e42-5138-479e-b7a2-55af69b2b2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9261242a-9f04-4c56-beb1-7cd493709b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9f7762-7686-4419-8462-6bca733affe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714e9e56-f713-4d44-b407-a49839bbcc8f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b58aa7-8aa3-4d1f-9b20-c02db43fa73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd1e4f5-8d53-44b5-bb1f-b1af11af4544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa2f708-411c-45ab-9df3-cad54194ef90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d45c14-8f53-4611-ac2e-ec4f72b75b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59ae90c-ca9d-4590-bce9-d2b15db26ea1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4da36f1-29d0-4ee7-88a7-4cfaa59abf7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3918c61-1d2a-42e6-8857-8bf7ea354864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b288b3f3-aea2-43bc-8871-3017ce0f16d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd851016-1550-45fc-b628-e0d8762a079c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661cd590-fd37-4253-bed3-0166f66fb220",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b37b08-9b62-44c8-8818-e3496381748e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c7768c-2a86-4451-9227-caa50bf72d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c9d026-5747-4095-b1b9-a5c9f3ad3385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b36e64-0063-446e-ac8a-8046bee32f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f59635-ef04-4085-95fd-c6d5aacb8007",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467c8e90-ea7a-4caa-9392-3456ed8a24b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56aa2309-2c6e-4151-b959-b4ae904092ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48f0486-8270-4f16-910a-6834d9b4cd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bdb06b-8a73-49fe-a313-9aa7f6596833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5da1f3-72c6-4ae2-886a-aadcc380e2ef",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f6551-ae92-4470-9d22-690710eb6819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d1cf7a-5a68-4b87-be3c-ef1a0e7ba4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc647ab-0030-4151-a25e-c2246aecbd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8665c7d-1fad-41a3-996c-f52a89387ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8aa3c-5425-43a0-976d-ee8849742bcd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e448dea-0739-460e-9c5e-1d68a59b243c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b3bf6d-acb3-42e4-88bc-a88634babb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb08d66a-5db5-4d94-8260-bcb6350e94f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdb9aaf-3ea3-4bf4-9f86-9083103fdf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c16eb-836e-401f-a6a6-93d1b2b6d638",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dedced-c7ee-4e96-aabd-046d6912de9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464c6cbe-aaeb-4452-95ba-d5f867e58a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350d0981-c522-4f1c-947f-830334ca133e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36948013-8134-42e9-89d0-452867ca7088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000bff2b-e38f-4e9d-ac71-00c1145d89e4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccb5e4b-363a-45bb-b904-1b711888efe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591f67e3-b0d9-48db-91ce-ebe56be0e7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8399c6-4d9e-43f3-ab56-997e91553cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3a73e4-7035-464d-a744-a596b1511ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655a7ec4-0fc8-4383-9816-8fb2e1a8162d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85af685-740a-44f4-bd84-87883e531030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2289b5ef-ee04-40b0-9959-0c9cf061ef47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b91a0-38da-40ad-88f7-60408cf28474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d4e63f-0620-418e-bf66-59e45f5e1ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a67e7b-0dd7-4739-a6a6-d181e257e89d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8e9bda-d32f-4918-9e7e-ad75049368e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5856c7-e642-4673-81e4-a00ca6c57550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4100748-19d6-495d-a23a-1ac42ee41312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0858d6f9-942c-49c1-89a1-f55536c48dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4828c89b-5258-4f8e-90e2-ae703ea5e447",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c753488c-fee8-46d2-ab0a-b2bebe917ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e93c452-bd50-46fe-9141-c6dccb46aa25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf281500-eac0-4c95-94c0-94288cba534f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6128423-c22f-41c9-9621-20cf2caaa46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e632d5b-66e3-4bd3-95f4-971c4960b41a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983b9221-22ba-41ab-90c0-3c8f15aebde5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde4496e-930d-43f4-8315-2f29c13c4bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bea46d-40d3-4bfc-9d29-0102bf450643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ad3660-acf6-42bb-b414-3554a8402697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4245d45b-f4f6-459a-8f20-bc3991ae398f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc6f84f-9c23-49e3-b8c1-a641a93e0e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7c100c-8330-41eb-a946-c6d28ddfc13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53d4b5d-29fa-4870-9118-0165df6d63bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71d145f-59ca-48eb-bc25-fa095d0a8574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e1589c-b790-4d89-bf43-74e4d47a6138",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad1bbd-56d2-4ca0-a533-caaca69c827a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f469cb0e-d299-4eb4-a53e-19ff701935d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7934127c-0ac9-4aca-9635-c470f68186fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8817a93d-0401-43f5-b52e-29d5e61e10f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f727af60-a6cf-4965-bb70-37073c9f8c41",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a2997d-92eb-494b-866f-524d14e5e4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae594cb7-5c13-4176-81c2-962bc7a17b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d5fa4e-9867-4350-90c6-f84d912f835c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11c940b-d430-4c10-96ee-97ddbcdda424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf39bd-63dd-4d04-b846-d31a1f76f0ff",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c975a92e-1a98-49c4-9134-ec3ce1287e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8f9bb9-5c9f-4478-8e68-35c576ef07e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b7a491-bb78-4880-a9a4-0fd6f36e7cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef29b3f-9129-4faf-97f0-df6ea952815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12535dd2-f45b-4376-aaac-ac535a2b07f3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22c3701-80f8-4394-a40f-f46ac21c350e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d17a13-282d-414a-9c5e-b33d486f00a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434b1cbe-ecb2-49ab-ae69-30712bb9f81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183b6dbc-f525-432d-b570-fca839a6a162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc4d9c7-0d4b-4770-b65d-9eeee65f8629",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163778f4-83e8-42ff-beac-90f3bc9d3932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef2522f-8da8-4581-948c-4bd7d6c0fe3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4cde81-d364-486d-bba1-93a08fb99aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfced420-a0e4-493e-a28e-8a988d37e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18fd3ec-7ef5-42bc-8fb6-59991d122fb9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9bfcd2-3029-440e-8e77-c9674639ff72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b411c0b3-bb14-471e-9507-716e2e3fdae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40918bd-dff2-43d8-afc5-4b0296c8de15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd92c44-8f77-4690-8ec8-085a8339f10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f81896-da40-4d60-aee8-172699fad04d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d6b7a-f869-42e0-913c-9a6466ebf77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba36f7c-2976-4f0f-8b16-434a5f20a4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dae95d-dd7c-4fa3-81bb-13c8b302c8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ab05f1-7325-4c67-b46b-81fa9c1a89f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a3acc-f513-4df2-93f0-7c95b41f7dc3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aa1128-70f8-45b7-b445-bd37b8abf22e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a180104-d19f-4362-933b-0ec7c3b9473c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4152cdae-dc77-4093-b604-b4d0c1a98818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3970b689-c988-4bce-ade9-51281993b425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e7f21a-314f-440f-85e3-5aae6a19c6f7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934e10a8-96a3-42d8-8b14-0e201893a698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff22681f-df24-498c-9f5c-5c4befd19b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98423f6e-df4a-4619-a008-1d7cd6ba0304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb347df-da39-49ec-a073-3ab537eea6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec837b6-4d7b-4b36-a025-ec6eec73fa5b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa76b271-63e9-4fb8-b0a4-2c64285ee93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f8eac0-682c-4995-b84c-3fab49b8f20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85da090-b20a-4d52-a9fa-f388f6ac0710",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470217c3-095c-4e22-868c-7d331fa42b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbebad6-5e9a-4477-89d3-d7c37b70d4b0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575dee6f-649b-4d3e-8080-1653c18f084e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88d0d70-e0cf-49e8-965a-5b004b854c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306f2441-15f0-4373-9a43-23a6d19b09dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cb6e34-589e-496d-8e65-b0b13d6fbb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233b54ce-051d-4b91-9049-4854c95dcaea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973fea57-e458-4830-bd93-c91a6ac9b500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fb5fe5-0034-4d60-b8ab-b0c8e06162cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a60e6c-af6d-4600-898d-fb5881ba502a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6a8771-fc79-4fe1-a0c8-bbcf35388dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a7dbec-3683-40ac-9fb4-cc4875b44ffa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14ef065-7c24-4c99-945a-efa09cdc94da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d375bd-20a5-4191-9ff8-7870c928aef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8c485d-6470-48a7-a5ac-a6cc82b9f96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a213b0c4-925a-47c1-af01-9d408c7f5453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c8bc4f-3cef-4138-a345-6f446b7847ac",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16687fa8-0c0e-44a4-a7c8-bf5dd9ced152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b1e3a1-de44-41ed-86ea-f9791557d1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c064df-896f-41e4-8297-53021964649d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dc017f-f8eb-4328-b5e6-07dd3c1725c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaeb3cc-516a-4380-98ae-eca00d34ae9b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d036f80-6449-44a2-9b74-887a06b611d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c00280c-7887-4879-b774-80a780ba946a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c93030-e4d6-45d6-a496-6903fdb99289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d998b738-c62f-4f12-9d73-41d6e5530086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425a5e8f-9516-45a2-9ed8-b6ce167e0336",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba704d1-8927-41e5-9d78-344ea44733e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d897f35-f454-40ba-b749-c950add428b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f37501a-3dc2-472f-bca6-8ccfa4901ea9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839b4376-f505-48f1-8e89-1d63371bbafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92a6822-8b61-4558-9036-17bda4e9549f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac083e32-753f-4caf-a7aa-5525a84938b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa4d12c-4920-4daa-a08b-a269daddefb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c558158-2014-43a6-b07e-8c4d4717bf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8a9185-bd7d-4516-baec-2fe4f28626e9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c141d99f-7ba9-4172-addf-54250d7296f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca17992c-3782-49a7-b42c-77715c2a1f29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f037020-54c3-48d9-b84f-3979a4797019",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e84fe24-9ae5-48b7-9ee6-d555056667f6"
                    }
                  }
                ]
              },
              {
                "id": "c29e05bc-1baa-4a45-a322-d2f46c62d204",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec8590b0-2eec-47ee-9735-a10b0291bf05",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a1670-f56f-4a78-b4a1-5bc3fbe72bfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3f85415c-596a-43b9-a320-941a69077135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d233a16-0dd7-4560-9c26-ed6421f0f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "132dea8e-d1f4-437f-b33e-148daff4c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7c9ca5-7f9d-4ab3-9bd8-cc5a1fd7f0a0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1c6319-a4d4-4a18-b877-b513025f0fed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5ddb3156-25c4-4db6-b30b-ae1d5e8bc3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1606416-1e4c-4369-ad61-c543bdddf8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bee0b352-0a5a-4338-8c81-07f80c63a4c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be2f2d5-7623-4d4a-bcee-42382d2f795f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a21c3292-bc86-4735-8540-641c9c07249c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd2fb7c4-a139-4c34-a2e4-fc6cf78965f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a90d7ad0-10b2-4f40-bc4a-4b38b916b2fc"
                    }
                  }
                ]
              },
              {
                "id": "266b1efb-ecdb-46a1-9550-7c4d6d6c8ba9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "631a9a65-8877-41b7-9143-b104f292afe6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ad1463-b830-4688-bd0d-9072438b1858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ab53dac0-d48c-4b05-8d8c-c74c7fee3dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f377a5cf-2ab6-4054-912e-6444fc3955e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c35442-88a0-405a-8517-8bb4988f0bac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fef37bfc-02d9-464b-80ae-360d84ce0651",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16a50cd0-db12-416e-9f6c-091ea3f2c8bd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81eb955e-738b-4ca2-95aa-68c4ede88580",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9134552f-5fb7-41da-8ce6-e20e842a3bc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed736b35-2368-40f9-9933-c4cb0d4cbc9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fadf996c-f105-4641-9036-90a8e0983bc3"
                    }
                  }
                ]
              },
              {
                "id": "4d4c0b4b-a65a-41a8-a198-159a45f2d205",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ffc735-251d-4eb1-8c8d-9be9880cd590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "77e6d61f-7fec-4877-8263-a8b0051a0669"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca1d24c7-d3f1-4524-9756-0efa0405d95e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6b41c4-317a-4c39-a718-9915c8007ecf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b722b70-881d-482d-a67a-7ae3d30c9613",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c8fe20da-c5f9-4bf6-8bfa-1e48acc82de2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7827aa4-5592-478a-9271-54226a0986de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "450b6f3c-1933-4468-9172-44f00c0de844"
            }
          }
        ]
      },
      {
        "id": "86c86329-ec8c-4336-a8d0-3d8bdec92171",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "591a0513-4ba8-4564-b2fd-016bad2e3b4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a09bf0f0-1540-403e-ac39-97a19107506a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e379ced-f847-4ff6-9c5e-e32cdca0da87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c174d8bc-316b-45d1-aa83-c51586c51539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766c2763-69e3-420c-a0d7-6b5e108d7bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f88b9f1-0923-4936-b55d-741fadd044eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eebb353-47ac-45af-aef1-d86e0642c691",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f0acef-c775-482d-ae7d-9ee2f4fbf855",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fa2f1a8b-313b-4bca-93ee-6ec6c227d70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df410d4-86f6-4930-b670-f5d2fedbe95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22b1b194-d869-490e-baf9-b8a204096404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e8e263e-1dd9-4ddc-bd44-720a319d1b2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a62feb9b-e11d-4531-9124-6d0942aba239"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f73ede6-bbb9-4a5f-8e8d-81868036572a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33bd53cf-1639-471e-bb67-6cbc09b8096b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e39a76c7-3f68-436d-be92-afcf76122287",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5d5fe620-f472-4c03-9b92-2554b1517dc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf32cb2a-4f9e-4335-8bce-0a8108abf11f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbfe7fe3-536d-43d5-9463-88b0db7fc2b2"
            }
          }
        ]
      },
      {
        "id": "e68df569-fa8a-4f57-858e-b57109534c1f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2ee5cec0-8237-42fa-8af8-0c90e831adba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3131f462-d36f-4fde-85b0-0b75927ae60a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8d68140-3c03-4337-bfd5-8c5a34e8431c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a564a13-8d76-41e3-8e3b-914c3f0bed0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4996b499-e473-4480-9ed4-85ec3b568d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ce571c-51ff-42c7-b688-d953028ae2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c90f965c-79ce-45f9-9090-37c5f0bdc20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29af7547-e2f1-4c09-a697-af82444ae18f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d59401-33c9-4b06-b57e-1c271226fd4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7ef2b2-d373-4ee6-9a8e-fe8cebd49dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5104f4-de3d-4974-8b34-b1098560e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ae1b29a-440f-4fa0-9bc7-2b39ffe98e45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9220c3c5-6887-48b4-bb50-a09b9c60cbba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2da61ada-abe3-48fc-a2b0-bc67fe1642da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44652843-61bb-4e46-a467-d14c315c3706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "530c27e7-41ae-4875-befc-fedfc6820400"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1aaae62d-2fd0-438c-92a3-58b2994bc68a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c415ac0-87c4-49bb-93fb-7664d0e16a56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b50480-4194-467f-80ce-f6b02546ef1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c47f629-c08d-4213-810f-b245f7532f5e"
            }
          }
        ]
      },
      {
        "id": "006c4a4c-2907-40d2-a4f8-d2377ce236fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "71c5ac90-4455-4c69-bf1d-ca666638a153",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ece221d-9093-4248-b42a-6aad2d5f0e95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "553ad361-8b3c-468d-84fe-48b712423ec0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fda1e91-3d61-4ad8-9379-1ea0cc6c4723",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8adda73a-dbdd-44a0-9ce0-6d17e655aa5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eb5b15-b6bb-4d65-8846-58abe58e6991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5419a24c-3c53-4eb2-a669-52224fc54336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ef634f-6e56-4575-ae92-9be63482b1f9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713276be-78da-4daf-9d45-7d5f58e76dcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69ee8d28-7a40-4388-aea5-6c9f225eea37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faff74b2-fef3-47b8-89c8-6598ef8b74bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da67c556-2c63-4782-bf30-b9afb6f64dac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a24f144c-4c4a-4d91-8e14-a390d002c685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40c3e9e8-95af-4c8e-aaf8-16723f7103bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee20047e-37e0-4752-ae10-d2b826855607",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b154e9c9-6f87-4f0d-9d14-f75be22f44f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38d4f4ac-41b9-4711-819a-b7215fe3f7f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b805de5-b221-4d94-a166-910a94aded40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73100507-76f1-4c76-82c2-1d472abe8c57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4583408d-4eee-4b28-a9af-6138aee8baf0"
            }
          }
        ]
      },
      {
        "id": "8f840d66-51e3-4d49-be94-bb683bb1cb29",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38bd637a-28f1-4387-af76-b8e96592f8a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73ac377b-528f-4d87-9946-a5d4e99a517b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f4dac065-bca0-43f4-91c2-56b629690183",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aaa9c62-b448-4a5b-872d-1ece5be92a46",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9246254d-64f7-40e6-9ef4-3bc2f4748026",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 19.43461538461537,
      "responseMin": 6,
      "responseMax": 426,
      "responseSd": 48.418205748757295,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680741326004,
      "completed": 1680741341675
    },
    "executions": [
      {
        "id": "fed9e363-c726-4847-8c3f-fdf6c419231d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "65987483-b326-4738-847b-28e734be48b0",
          "httpRequestId": "0a8069f4-7491-4f54-a803-3247ec2aaeae"
        },
        "item": {
          "id": "fed9e363-c726-4847-8c3f-fdf6c419231d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b9f140e2-0fc7-43d0-8f15-6eafaa074687",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "eb9f55d8-554a-4052-a0d0-28a83da080b6",
        "cursor": {
          "ref": "24553049-1a4c-40da-a0b2-a1719a5925c7",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b778f114-9a4f-478b-acc1-b2463ace5ebe"
        },
        "item": {
          "id": "eb9f55d8-554a-4052-a0d0-28a83da080b6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6fb9ce6a-7059-4395-8f64-2e0a75c51738",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "276e16d9-e77e-4612-a08f-e0f565814b80",
        "cursor": {
          "ref": "52a9f29e-eab7-4c05-b091-4737f88d3a6a",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57c14d17-056c-4ae0-a181-efc818c98c58"
        },
        "item": {
          "id": "276e16d9-e77e-4612-a08f-e0f565814b80",
          "name": "did_json"
        },
        "response": {
          "id": "9ab50206-6f57-40c7-a4b2-8b6842e7a93c",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f862d-8221-43ef-b160-3436d1c4aed6",
        "cursor": {
          "ref": "c99a1bc0-3bfd-4bd3-bceb-d44346bf8b8c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "166c92c5-93e6-4011-a91f-64fdf9df04d4"
        },
        "item": {
          "id": "452f862d-8221-43ef-b160-3436d1c4aed6",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d0f775c-10cf-4334-97f1-cfed31e3610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f862d-8221-43ef-b160-3436d1c4aed6",
        "cursor": {
          "ref": "c99a1bc0-3bfd-4bd3-bceb-d44346bf8b8c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "166c92c5-93e6-4011-a91f-64fdf9df04d4"
        },
        "item": {
          "id": "452f862d-8221-43ef-b160-3436d1c4aed6",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d0f775c-10cf-4334-97f1-cfed31e3610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c200c1-74f4-48f1-97ce-943305477d85",
        "cursor": {
          "ref": "ba9c377f-1157-420f-8dad-f2efa7db5a59",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8cffdfc9-e376-4bd6-a9d3-00021ede55fb"
        },
        "item": {
          "id": "c8c200c1-74f4-48f1-97ce-943305477d85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cd65889c-d52f-4ef9-8eb9-43bc62fa1567",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63346100-4426-41b4-a17d-2b08b5a5da0d",
        "cursor": {
          "ref": "18b2da73-b5de-4783-a507-050a14a79ab5",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "67d68c8a-b731-43d3-a544-b48848a64c26"
        },
        "item": {
          "id": "63346100-4426-41b4-a17d-2b08b5a5da0d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "54b96aa4-4f01-4cbc-92b6-0bdb2ec60727",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368f3cc-5091-45bc-b297-881f50bbb342",
        "cursor": {
          "ref": "c1be7b7f-9ed7-4b6e-8fd5-8597554d162d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "575c5728-66b8-42ae-837d-1405186772d7"
        },
        "item": {
          "id": "6368f3cc-5091-45bc-b297-881f50bbb342",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "43bff9f7-9197-443c-ad65-fa45a2a93e65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91593c-c819-46f7-9b40-02796a2171eb",
        "cursor": {
          "ref": "e5c13a0a-70c2-47de-81c1-56546453f551",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f720ee87-2f71-43d7-b3d8-202a48c6eb2d"
        },
        "item": {
          "id": "5c91593c-c819-46f7-9b40-02796a2171eb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b58a3090-0baf-4be8-98ba-3b76907f6e99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91593c-c819-46f7-9b40-02796a2171eb",
        "cursor": {
          "ref": "e5c13a0a-70c2-47de-81c1-56546453f551",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f720ee87-2f71-43d7-b3d8-202a48c6eb2d"
        },
        "item": {
          "id": "5c91593c-c819-46f7-9b40-02796a2171eb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b58a3090-0baf-4be8-98ba-3b76907f6e99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060643da-1a32-4ee9-815d-a84c95e7b8cd",
        "cursor": {
          "ref": "851978c6-7391-44e4-ad9b-c6dc345c8a8a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dfbe3854-9287-48a9-b568-31afcb353d7c"
        },
        "item": {
          "id": "060643da-1a32-4ee9-815d-a84c95e7b8cd",
          "name": "identifiers"
        },
        "response": {
          "id": "9fc9f3b5-5388-4968-bcf7-4f3199784683",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f4671e-f66d-4141-9e32-19d4c3d5278f",
        "cursor": {
          "ref": "55367e4a-a482-404e-9571-5d51645dde8a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72b37df4-15dd-4fd8-88b7-ebb29fba622e"
        },
        "item": {
          "id": "f8f4671e-f66d-4141-9e32-19d4c3d5278f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a5ac34a2-059e-4602-9f7d-636ac47e0c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f4671e-f66d-4141-9e32-19d4c3d5278f",
        "cursor": {
          "ref": "55367e4a-a482-404e-9571-5d51645dde8a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72b37df4-15dd-4fd8-88b7-ebb29fba622e"
        },
        "item": {
          "id": "f8f4671e-f66d-4141-9e32-19d4c3d5278f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a5ac34a2-059e-4602-9f7d-636ac47e0c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc143c7-fd87-460c-915e-5c39776b709c",
        "cursor": {
          "ref": "e3d515ea-5265-450e-bf80-c43fbde55bde",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a975f038-9faa-4d5c-bb91-c009ea6e2946"
        },
        "item": {
          "id": "0bc143c7-fd87-460c-915e-5c39776b709c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d55077d8-7856-4292-a0e8-a48c25b47c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a14026-ca61-4025-b5cc-1a7dba5c267b",
        "cursor": {
          "ref": "88eedf89-dc1d-46b8-9e6a-bd6584049b00",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c45937a-6a27-4cf6-9ee3-ca4e325381be"
        },
        "item": {
          "id": "f4a14026-ca61-4025-b5cc-1a7dba5c267b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "eb91cfed-6a71-45ab-97ba-ff453618b577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b487cfee-8704-48ac-810e-e5ba81c02bad",
        "cursor": {
          "ref": "1bbd8b17-7339-4a64-bfb2-ea71933b2ffe",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c14b16dd-e248-4958-8d6d-548b74af2073"
        },
        "item": {
          "id": "b487cfee-8704-48ac-810e-e5ba81c02bad",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "097065bf-86ee-4e86-ad54-9030b14c0cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e48345-8fee-441b-b48d-3818e68b7d1f",
        "cursor": {
          "ref": "4a5f72bd-30ee-4150-bc32-71d5648425ef",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d2780858-5d65-41e9-ba0f-03fb8bab08a3"
        },
        "item": {
          "id": "c2e48345-8fee-441b-b48d-3818e68b7d1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8b965614-1f0b-4511-a647-0d183e4f063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250399e1-1905-4ab1-a3a1-acd7d1021e3f",
        "cursor": {
          "ref": "e1b931a3-e7f6-40cb-9af0-4bc0ae5da850",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "60ec087b-13d0-4f53-bda8-c00fb59d884a"
        },
        "item": {
          "id": "250399e1-1905-4ab1-a3a1-acd7d1021e3f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "82c73212-8d2f-421b-bd59-90678ef19b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdce4c7-7f42-4f17-988a-6d782a6a8792",
        "cursor": {
          "ref": "86c8e0ea-7f57-4018-b207-a4ab5291b6b9",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0426538b-9a15-4c8e-a4ab-9012800257e3"
        },
        "item": {
          "id": "bcdce4c7-7f42-4f17-988a-6d782a6a8792",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b26aa1b1-368d-46ac-a80d-8a39cef58e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ff9a90-f26b-41e1-a1a5-e923ae5920cc",
        "cursor": {
          "ref": "efb043e2-b76b-49f9-ba6f-db95d08bd0f1",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "87e25d33-3daa-4d04-9dc1-458610d4b3e8"
        },
        "item": {
          "id": "11ff9a90-f26b-41e1-a1a5-e923ae5920cc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "364ac734-01df-4091-8760-d2d4a393a582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a7d369-d8ca-43ba-ba7d-61e5315ef09e",
        "cursor": {
          "ref": "9912d6b8-6c6f-4b40-ba83-9a4edb2b0591",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "778008ca-3c7a-423a-bc95-8c7ce5eba62d"
        },
        "item": {
          "id": "d8a7d369-d8ca-43ba-ba7d-61e5315ef09e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d2f0a7f0-03c0-4457-bebf-4e900dd0248b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c886ddd0-b2f5-4505-906d-9082db6ec1c3",
        "cursor": {
          "ref": "5b6c5ffe-1cb1-4dd6-81eb-0ecae207b0ab",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "50a62f79-755f-45e0-a2aa-0d4c13a257ef"
        },
        "item": {
          "id": "c886ddd0-b2f5-4505-906d-9082db6ec1c3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c3b42758-f7d1-4f42-9e1e-2c20b0d5c967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c9d88d-b5d4-4da5-803b-d635cd6dc0e3",
        "cursor": {
          "ref": "48d4bae3-cf33-4f75-a95c-8266ce7455c1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7625c916-dcc3-427c-9dd3-27fc93a86479"
        },
        "item": {
          "id": "66c9d88d-b5d4-4da5-803b-d635cd6dc0e3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7f7f9cc3-118b-4b28-94ef-b09abdf6b44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7714db-8e67-4e91-905c-f1f2be5a8014",
        "cursor": {
          "ref": "9c14c99c-95d8-4afd-bdbc-cbf04661a38c",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b10225fe-8fec-435e-946a-9923dd349695"
        },
        "item": {
          "id": "1e7714db-8e67-4e91-905c-f1f2be5a8014",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f89540c-3e78-49d7-8b10-4b5bfcf82f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adb5383-2c8f-4685-b869-560577fc80c0",
        "cursor": {
          "ref": "1495142a-2ed6-405c-a154-451f0191df7f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "30181757-cc6c-4109-a7c1-14b473423a0c"
        },
        "item": {
          "id": "9adb5383-2c8f-4685-b869-560577fc80c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46d77ffd-30b5-4ed8-a308-2397019b89e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783808d4-98ad-401c-be9a-0c6e2d216148",
        "cursor": {
          "ref": "1f03b8d3-4e85-4651-a0cb-4ab9e31fef4a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "12aef47e-9584-47f1-b357-a1fe1ffaf34d"
        },
        "item": {
          "id": "783808d4-98ad-401c-be9a-0c6e2d216148",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c4671c00-a5ac-4856-84f2-3e9827ea18b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fb3020-ce53-4568-94b2-3057e0f22307",
        "cursor": {
          "ref": "073d034c-4eb5-4edc-9ae7-feafaf68357a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c71dd14e-f643-4879-9eeb-e6a569f91038"
        },
        "item": {
          "id": "68fb3020-ce53-4568-94b2-3057e0f22307",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fcbbcf14-cbb2-4272-9280-be8215c97ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e1369d-6d9a-402a-9a11-4dc9a3b59478",
        "cursor": {
          "ref": "114d12b0-576b-4d4c-b950-b1a451502a8c",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5bd965f4-d195-434e-916b-c27a329a2fe5"
        },
        "item": {
          "id": "32e1369d-6d9a-402a-9a11-4dc9a3b59478",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d7659a32-5f05-4685-b756-5857a48fcdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfec989-9f3b-44d8-8982-611029dfc644",
        "cursor": {
          "ref": "2e7cbae4-abcd-42c5-96ff-27c8189877be",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cc6956f1-1f39-4af3-83d1-657d493b713b"
        },
        "item": {
          "id": "4dfec989-9f3b-44d8-8982-611029dfc644",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c56e492d-898e-46d6-b07e-951dfbd59cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af8271-5837-455b-b436-838053cda39e",
        "cursor": {
          "ref": "43484817-bf98-4de0-8c8a-85a2efb13fa4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "66eda12f-58e8-4240-916b-6cd642408364"
        },
        "item": {
          "id": "14af8271-5837-455b-b436-838053cda39e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7e096d48-89ac-443b-945d-62e55df28a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda925bf-9b78-41b6-85ea-723b929eea93",
        "cursor": {
          "ref": "ed694c8c-5960-46be-a8e2-71c3dcb2e429",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "176ed827-2a46-4790-ae2d-ee1bc727bcfe"
        },
        "item": {
          "id": "eda925bf-9b78-41b6-85ea-723b929eea93",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f50c5f7f-fc77-45b5-a78f-caedc11bedb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e402a-69c7-453d-a034-d050f3b245e3",
        "cursor": {
          "ref": "81cdb620-d8ac-4632-ad2c-3ec0fb676fb4",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fb7a7e38-0ffb-487e-aedc-d56e55bbdf99"
        },
        "item": {
          "id": "d48e402a-69c7-453d-a034-d050f3b245e3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5df578d1-040d-459b-b61b-1c3964d5040b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c084d7-2cf9-485f-be18-85441485a0bd",
        "cursor": {
          "ref": "858b6e95-4375-4d07-9260-1347e91f0a75",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "50f172a8-39c7-486c-9917-3674a1aa2e92"
        },
        "item": {
          "id": "37c084d7-2cf9-485f-be18-85441485a0bd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a87ab0be-c24e-4587-aa9f-8436bf3b44f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12f876f-f475-4766-b051-834b0b4a99dc",
        "cursor": {
          "ref": "6315456a-7c4c-42f8-aa28-5beaf9558b04",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "43bbbce5-611a-4bb4-ba95-f3c5a6fe6522"
        },
        "item": {
          "id": "c12f876f-f475-4766-b051-834b0b4a99dc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ea57b6e7-8374-445b-a714-d427906f8341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413cc04b-c307-483e-b06d-3a7acb7a059f",
        "cursor": {
          "ref": "71ca16fa-3407-4557-95b9-ee0256f106bc",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "89b77526-a7da-4394-b497-03afe291c10c"
        },
        "item": {
          "id": "413cc04b-c307-483e-b06d-3a7acb7a059f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e575dd7f-ff34-4684-a903-953d7f2b887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f18a59a-eb00-431b-9a03-45a52b44c611",
        "cursor": {
          "ref": "70b8f832-b4f0-41ad-83e7-c68b84c8de66",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ee951a9d-707f-4e07-bc7b-a06173862f29"
        },
        "item": {
          "id": "0f18a59a-eb00-431b-9a03-45a52b44c611",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0b7656a2-f64a-4e9f-be64-e5f4aa55cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a93b85-dc4c-4186-98f7-5a01cc6326fe",
        "cursor": {
          "ref": "0652a02e-4239-4971-8471-02cb6e776e7d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "027c6527-d762-40f9-a977-bcfda0a4997a"
        },
        "item": {
          "id": "62a93b85-dc4c-4186-98f7-5a01cc6326fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6de43005-7363-4258-bbb5-91072e827fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cb7dfb-904c-4e6d-ab20-f9684e01e8d8",
        "cursor": {
          "ref": "6f357b3e-2acb-4df5-9182-c8ec9f1457c0",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "056116a5-5b22-44a4-af23-462ef20855a9"
        },
        "item": {
          "id": "37cb7dfb-904c-4e6d-ab20-f9684e01e8d8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d5b45ade-e2bf-4d54-a7c4-2b011b6bdec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873024ed-364a-4d58-b4e2-dacc0ac0ca37",
        "cursor": {
          "ref": "18106355-d524-47a2-91bd-769f8b884cfd",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ea6d0af6-4914-46d4-b3be-25440149f47f"
        },
        "item": {
          "id": "873024ed-364a-4d58-b4e2-dacc0ac0ca37",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "64a5df49-13f5-4e46-9730-1c8b832bfb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b0304e-0e2a-4601-aaa4-eda2d93d3ffe",
        "cursor": {
          "ref": "29623a07-fdd5-4ae3-ab78-93b1258ce323",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7471c328-bb6a-4c1b-9858-31a3b35082c8"
        },
        "item": {
          "id": "75b0304e-0e2a-4601-aaa4-eda2d93d3ffe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f2aa9def-1c6f-419f-9890-c1b23450945a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdd955d-fef5-4267-9bf7-db9b5099301a",
        "cursor": {
          "ref": "28e261dc-f392-4f26-b57c-6550a44d0d9d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "161de666-5700-4071-8c3f-8c49d0ea5258"
        },
        "item": {
          "id": "2fdd955d-fef5-4267-9bf7-db9b5099301a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "48cb0bc0-be96-4d17-b760-57b27b03edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408c2ea5-70a3-4d32-88fe-60cc3551fdee",
        "cursor": {
          "ref": "49597a01-7433-4572-b5a8-33799b536140",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d65473a3-cf75-445f-84fb-799c217667e9"
        },
        "item": {
          "id": "408c2ea5-70a3-4d32-88fe-60cc3551fdee",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7adbb5f8-2e4b-4ce8-859b-64bee313295d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237203ea-887e-4551-9529-82dbaf7297bc",
        "cursor": {
          "ref": "14171287-534f-415f-a248-a475d82491dd",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b817ac4f-e0c7-4dd1-ab3d-17ca3f4dcb84"
        },
        "item": {
          "id": "237203ea-887e-4551-9529-82dbaf7297bc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "70da2331-cf53-4efa-a4d7-bd199582c5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c471379-01f8-40ce-8fcf-fdd3bd9d5241",
        "cursor": {
          "ref": "5b5b78e7-9dbf-4bb4-aa83-cef0a078f4d3",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3a97801e-dad2-4959-b91f-96be29fef85d"
        },
        "item": {
          "id": "1c471379-01f8-40ce-8fcf-fdd3bd9d5241",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2759b0ba-768d-495b-bed6-f269f0ea6d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41275a2-2f69-4bc0-ac74-b5c9a1319048",
        "cursor": {
          "ref": "b6c76dcc-8526-4931-b711-e5e286ff93db",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bea0824b-5e2c-416d-a823-b8c178fb49aa"
        },
        "item": {
          "id": "a41275a2-2f69-4bc0-ac74-b5c9a1319048",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "79941d58-254a-491a-ab3f-bf9dc4c6a7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3f5853-b448-4ecf-ab63-231b2fcd9258",
        "cursor": {
          "ref": "b9ec7d64-8e47-42a4-8bd7-5feaee5b8b4c",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dc112d6f-c241-4cea-995c-ce8e5a769f72"
        },
        "item": {
          "id": "fd3f5853-b448-4ecf-ab63-231b2fcd9258",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "80571a24-16d0-4bbb-ac38-9caaba4b5c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a200bc4-1e0c-47f9-969a-3596651b212d",
        "cursor": {
          "ref": "728b2566-86f9-480e-b8df-c432c3aebdd4",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "50e00ba9-fdb3-4b0f-b4fa-edd8fde73ad6"
        },
        "item": {
          "id": "8a200bc4-1e0c-47f9-969a-3596651b212d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "506de6bc-5edf-4e1c-b28e-64400b3afc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a25c209-0a54-4c72-bb75-399cf93056e9",
        "cursor": {
          "ref": "5f6eacd6-6bac-48b2-87dc-0c2adedafc1b",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eb7aed02-3c97-486b-a1cd-f57c02d4b4b2"
        },
        "item": {
          "id": "4a25c209-0a54-4c72-bb75-399cf93056e9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3aa173f6-d6a5-45b5-a4df-5fcbe44d5c88",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce37d3c-c9ea-4a5b-93ca-e4ebf34d9160",
        "cursor": {
          "ref": "65c8cb91-6ea2-4470-9215-47d8fdfc04fe",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aeabf1f7-0c76-4259-a811-2ce05379e5a3"
        },
        "item": {
          "id": "0ce37d3c-c9ea-4a5b-93ca-e4ebf34d9160",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d103de09-50f2-44da-8d2c-3222d599ff6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a81105-cd98-472f-8769-317018883e00",
        "cursor": {
          "ref": "09e36aa8-32a8-45e4-ad16-0244efc67bb4",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f12a9d4e-3665-4462-867a-38092ca05379"
        },
        "item": {
          "id": "28a81105-cd98-472f-8769-317018883e00",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e7d366a3-5007-4e0e-a9ad-93aa44fa98e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea6aec5-cd79-4311-8833-d5162e782c53",
        "cursor": {
          "ref": "d63b62e6-65e8-4d30-b0f1-dfffcccf8d8b",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0de79f67-9819-414c-91a2-224a0ff7d373"
        },
        "item": {
          "id": "2ea6aec5-cd79-4311-8833-d5162e782c53",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "901088a4-8593-4c39-be2d-0a3b90d87499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa839d7b-81e6-4681-85ef-176fcfde6014",
        "cursor": {
          "ref": "35109baf-3708-424f-983a-5f1480b9732f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "28090f2b-91fa-4b1c-9883-02ff365b638e"
        },
        "item": {
          "id": "aa839d7b-81e6-4681-85ef-176fcfde6014",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "05f49a82-da50-4e73-b183-7943cc4201dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbdcf58-b32a-4d92-993c-dfa3abcce94f",
        "cursor": {
          "ref": "fb1df7e6-3ebb-4dde-b431-b6c5fb4832b8",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "88fdf29a-b682-4aca-a0f7-8552cc0041be"
        },
        "item": {
          "id": "5bbdcf58-b32a-4d92-993c-dfa3abcce94f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e1a513e7-06b6-4f86-aeb8-6b1a8dbf71a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cee3d1-eb86-4fc0-9ebd-a83fa98adb8e",
        "cursor": {
          "ref": "82c00fb6-0248-4010-bc92-da87c4f77ca1",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e455ca41-d8b5-4d80-af94-e740af4e262f"
        },
        "item": {
          "id": "11cee3d1-eb86-4fc0-9ebd-a83fa98adb8e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c2616a88-8fae-4dd9-8137-95385c744f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8526c27d-aa56-458e-8640-1718d22a6585",
        "cursor": {
          "ref": "4fecc75c-f1ca-4300-b395-31981372598a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ccd07c2f-80e6-4800-839a-2e115b1d6f11"
        },
        "item": {
          "id": "8526c27d-aa56-458e-8640-1718d22a6585",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2e936cd0-4bb7-4b28-ba6b-71406add22f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e4858-69b6-44b9-a7d6-0503d7a7dcd4",
        "cursor": {
          "ref": "f868bd23-62e1-4c84-8422-4f3af47fc7e2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "44ed70d3-7c97-4664-bc6e-6534ec2edad9"
        },
        "item": {
          "id": "362e4858-69b6-44b9-a7d6-0503d7a7dcd4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "81f23d12-eec9-4bc3-91de-69e9571d0e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79de6d-1fb2-4c6d-8cfa-57943ce6c64d",
        "cursor": {
          "ref": "b2b8e7e8-02d5-457b-8dbc-57a50a56f874",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0784d006-5a88-46d1-9f2f-bcd4b2130d3b"
        },
        "item": {
          "id": "9d79de6d-1fb2-4c6d-8cfa-57943ce6c64d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6f2130de-34ae-4d5a-867a-cd30d951545f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dcbf1a-3eb3-497e-bb9f-7fce22137a68",
        "cursor": {
          "ref": "7651f69f-94d4-42cc-872b-d03d4b47f41d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76291d36-7835-44cf-b525-0b31d3732380"
        },
        "item": {
          "id": "80dcbf1a-3eb3-497e-bb9f-7fce22137a68",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "91394f1a-3f3e-443d-be2d-aa79f406caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbb9700-e59e-425a-acb7-c0f29a848401",
        "cursor": {
          "ref": "6871f34c-48c8-467d-a2e4-2af7848aaa11",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "721ad841-af53-4815-88e9-4f9496df70e1"
        },
        "item": {
          "id": "fbbb9700-e59e-425a-acb7-c0f29a848401",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "36fe6369-7eda-478f-bb90-4a68ccadc19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82eb35-594d-42c1-94e7-5fb557f00c3b",
        "cursor": {
          "ref": "c560a3cc-cb00-4905-a7a9-47e0e467b8f2",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "33fe9a9c-dbaa-4dd0-96cf-cca46497bd52"
        },
        "item": {
          "id": "ed82eb35-594d-42c1-94e7-5fb557f00c3b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5197c3e4-29a4-439d-a2f9-5ef0a5a70769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333f79f2-1af2-4179-be77-26a377930729",
        "cursor": {
          "ref": "219bf1e1-9a93-4232-b5dc-bcc9421a90c1",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "11e002b5-bcaf-449f-8948-71271a0d8d9c"
        },
        "item": {
          "id": "333f79f2-1af2-4179-be77-26a377930729",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "19997010-eddc-42f4-a414-ff24442de704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2a8773-3d2e-4803-8f6f-0cbff44d1408",
        "cursor": {
          "ref": "a6abd8cd-c9e9-4245-8be3-856d3254f06a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "efaef1f2-ca03-4900-8b31-b5226de7b391"
        },
        "item": {
          "id": "4b2a8773-3d2e-4803-8f6f-0cbff44d1408",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a92c0b0-782f-4206-95ac-9e14b01a48c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d21689-20d5-4064-b148-62faebddd7d5",
        "cursor": {
          "ref": "7133b2c3-55ec-4256-b8f4-285e5081f8c7",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b9b91989-b6a5-414b-a1a1-843852a0c362"
        },
        "item": {
          "id": "74d21689-20d5-4064-b148-62faebddd7d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6f4ae499-8f4d-4671-8a3a-5e967fd0a34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c992f02f-a467-426e-b9a0-2460d1574926",
        "cursor": {
          "ref": "958b3ef3-1772-4b64-a58a-a00ec806b28f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ad30d2b-a627-4a0f-8a11-7efaec9357fd"
        },
        "item": {
          "id": "c992f02f-a467-426e-b9a0-2460d1574926",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b42c97e2-d68f-4ae8-ae76-22e9b50c33e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcd3901-f9e4-4c53-b212-487a39d3dc18",
        "cursor": {
          "ref": "fb1aee05-3b40-451d-96bf-547c5226b990",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad12a6ad-7459-46c2-af30-9920607eb801"
        },
        "item": {
          "id": "adcd3901-f9e4-4c53-b212-487a39d3dc18",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "adc34d56-51b6-464c-80f1-c868db76f396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4216d282-c5b1-4a20-be79-9631a9e13f00",
        "cursor": {
          "ref": "b220dc9f-4480-4b1f-b764-ffb7c5beb26e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "77cd5804-b65d-4fca-ad27-7c19b213f60a"
        },
        "item": {
          "id": "4216d282-c5b1-4a20-be79-9631a9e13f00",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb5930a7-c79b-4ba1-ad82-104736f6c865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601fc485-da07-49e5-8c74-2a38882ae599",
        "cursor": {
          "ref": "de5d3d66-d707-4fc8-af5a-0e306d2801f1",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f2e3184-30a2-409e-a17c-d06c3f213d07"
        },
        "item": {
          "id": "601fc485-da07-49e5-8c74-2a38882ae599",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0197085f-3288-4073-b412-78a21b8cc183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1564d93-ba08-4583-ab5d-68a46f7f0dc5",
        "cursor": {
          "ref": "fe0947d1-c602-4d26-8bbc-008488cbe34e",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c659452e-119e-4150-bfcb-bf7be3d6091c"
        },
        "item": {
          "id": "c1564d93-ba08-4583-ab5d-68a46f7f0dc5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "19693718-489c-4a25-8488-92ae0ed45b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf224701-c06a-4204-ba6f-ff61bb3b21a2",
        "cursor": {
          "ref": "2fa6a699-1880-42f7-9186-5bdbb884d126",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "52612f76-ccdc-4eda-92a3-bcb33c996b72"
        },
        "item": {
          "id": "bf224701-c06a-4204-ba6f-ff61bb3b21a2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5c1b3ed1-4ab7-4430-8158-85622d08ba32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26f5977-d089-4af1-919d-9a042304f600",
        "cursor": {
          "ref": "ff49733f-604b-4118-b380-0968864c3a5a",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ba1e9623-6222-447f-ac91-5b2e93224af7"
        },
        "item": {
          "id": "b26f5977-d089-4af1-919d-9a042304f600",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fbb21e7f-a1dc-41df-b3c5-e2a27085c692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3afa6a-39e9-4cc7-88b4-70c0c579329a",
        "cursor": {
          "ref": "33c0a374-9dd7-4174-83ba-b3a3012006f7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "710fa468-eb09-4a11-b004-295e1750c3e9"
        },
        "item": {
          "id": "4e3afa6a-39e9-4cc7-88b4-70c0c579329a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a9787840-cd56-462b-a49e-863db05b5282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130dc9f1-d72b-4b07-a25e-39e5e6129178",
        "cursor": {
          "ref": "f77b8abb-15b1-4a67-85ed-99854cf24e80",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "69195a6a-0f56-44a5-92cb-d233a70de7c7"
        },
        "item": {
          "id": "130dc9f1-d72b-4b07-a25e-39e5e6129178",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aeb8b6df-3e93-4fb5-b83a-df43494dd60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a899fe-0bc9-43a7-9f1b-9df35b5b40ad",
        "cursor": {
          "ref": "1073c4e7-b58c-46cd-b34e-77dc50549b7d",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eca79ed2-d490-4bc4-9a79-df64a9e6880a"
        },
        "item": {
          "id": "c9a899fe-0bc9-43a7-9f1b-9df35b5b40ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "33c1a622-1cb1-4d16-af56-5ed82051d4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2d6d08-fafd-4d18-87d6-2282c6926bc5",
        "cursor": {
          "ref": "c5841964-2cf4-406b-823a-f4809ae2a5d4",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c794c425-b027-49a7-83c5-854f1401d339"
        },
        "item": {
          "id": "ca2d6d08-fafd-4d18-87d6-2282c6926bc5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "86adc568-31a8-414a-a081-d5f16e5cc90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a925f-395b-4a77-bf0a-d5f70e8b9039",
        "cursor": {
          "ref": "6d5823b1-8c25-46ad-8b16-e7c299e24ddd",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46e390f3-a533-4297-a4d6-09231a79c020"
        },
        "item": {
          "id": "2d7a925f-395b-4a77-bf0a-d5f70e8b9039",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d7772e72-19a1-4cc4-bb05-3803b71e62b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625e0810-7d56-4888-93dd-d7bb369a68ec",
        "cursor": {
          "ref": "18ff668c-893e-4b88-ab75-365dd1a4c86a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4538a7f5-a494-42b6-a9f3-856dec2fbfb6"
        },
        "item": {
          "id": "625e0810-7d56-4888-93dd-d7bb369a68ec",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5cf6a061-4526-479b-9ce7-eebf571a72f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d429ee88-6f15-4a0e-a466-b3678df0799c",
        "cursor": {
          "ref": "3ae730fe-c3ec-4854-a7ab-e1d5d9fbc13b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f775f32e-d2ba-426e-ab4a-070ad114f27b"
        },
        "item": {
          "id": "d429ee88-6f15-4a0e-a466-b3678df0799c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "44f2413e-ce7b-4db9-afc7-a490e1f7289d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8032cc-3766-4052-8080-49d43098d1b9",
        "cursor": {
          "ref": "41ce54fa-4261-4b99-af5e-bf5ae6c8ab84",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6c36761e-83aa-48dc-82e0-3e18b5620555"
        },
        "item": {
          "id": "ea8032cc-3766-4052-8080-49d43098d1b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5c89e5eb-7e60-4a0d-a643-8853211cc24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c622310f-9709-4f81-8ade-21dc2275d680",
        "cursor": {
          "ref": "a5eba89c-1548-4f9c-88ca-57ca68b72158",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "614b291e-0def-4cad-afa9-210f7e9fc733"
        },
        "item": {
          "id": "c622310f-9709-4f81-8ade-21dc2275d680",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0259d817-0a21-48b6-a0ff-4f4339e99ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cee37d5-34f6-49ee-a5aa-25e994a39c57",
        "cursor": {
          "ref": "daa9ac5b-e5fa-4fa4-b2fc-d31a08c50c15",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c28e0989-6afe-47c0-ad89-6d3a420c15c7"
        },
        "item": {
          "id": "3cee37d5-34f6-49ee-a5aa-25e994a39c57",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c56468e8-0a81-4901-b68b-95c1f3a868ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06073cf9-4d7b-4e26-9ed7-cad43aa579f7",
        "cursor": {
          "ref": "1d4a917e-9c25-4905-9122-26a5ab69f98b",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "df567a5b-4202-4adb-98e7-87386d3859a4"
        },
        "item": {
          "id": "06073cf9-4d7b-4e26-9ed7-cad43aa579f7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "81274f34-4782-458d-8ce2-35d426c133d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69741fd-87a8-48cf-a36d-19ee18139613",
        "cursor": {
          "ref": "239960ac-b8bb-4a26-bece-7b163537af48",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a71bd986-7f6e-4e8f-8996-6cc183cb8ba3"
        },
        "item": {
          "id": "f69741fd-87a8-48cf-a36d-19ee18139613",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4ccf9311-d76d-4f31-a86e-83965949fe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c0de50-5f40-4277-8af1-85c73bda215a",
        "cursor": {
          "ref": "9573484e-b166-40de-a5b2-91fbddfa023e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d2b6b68c-c064-4e25-b78e-5c7bf1a3db55"
        },
        "item": {
          "id": "52c0de50-5f40-4277-8af1-85c73bda215a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "959cd96e-6969-49a1-9f2a-0171864a13e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce38cfda-203d-4b46-b444-108f98bb4ebc",
        "cursor": {
          "ref": "3079f5cf-e7e3-402c-94a3-433582c8f143",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad201d60-9505-44e5-bb7e-8c3bdbd5c562"
        },
        "item": {
          "id": "ce38cfda-203d-4b46-b444-108f98bb4ebc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1e40839e-d00d-4775-b7e1-34b51ae63356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb310754-951b-42c3-a351-2cfcc2cd47ac",
        "cursor": {
          "ref": "bc5bab32-bb21-4bfa-872f-0c770dba9030",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f8b453a3-b544-48fa-b396-4c8aca5f140b"
        },
        "item": {
          "id": "bb310754-951b-42c3-a351-2cfcc2cd47ac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b912bced-38da-4b84-b45d-5289f05d09bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed535de1-5de5-4740-b7b5-ba57d01f7f41",
        "cursor": {
          "ref": "c1c3c484-88ad-4d29-b17e-cdb9e57ff38c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6182122c-4deb-4eeb-a4c3-b2d880731223"
        },
        "item": {
          "id": "ed535de1-5de5-4740-b7b5-ba57d01f7f41",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "96a7aac4-9145-401d-b38c-d07b2887b0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a4d786-df55-48ba-ad61-e4ef110ff1fc",
        "cursor": {
          "ref": "928523d5-3f22-40a8-8c16-fd0859dbbbd2",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "068a16ed-4776-4f30-ae48-bf63e460d3ee"
        },
        "item": {
          "id": "c4a4d786-df55-48ba-ad61-e4ef110ff1fc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9fdb36fd-dc39-4140-8290-c633c0bbfb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff51b8bc-e6c3-4963-9d78-fc93f09dd71c",
        "cursor": {
          "ref": "060d3558-9af2-45ac-bcbb-4343d78dc571",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "73649aea-4f2c-4783-b243-3ecf047a47ad"
        },
        "item": {
          "id": "ff51b8bc-e6c3-4963-9d78-fc93f09dd71c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4e4083f0-b5bc-49f9-a27d-4d08df9f5ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfddf9e-9651-46a9-83b1-109c9600b658",
        "cursor": {
          "ref": "5a8b5c0d-214a-489b-b0ea-5dc3a51027cc",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ee05f6b2-3897-48d1-a00a-108eee76acd6"
        },
        "item": {
          "id": "6bfddf9e-9651-46a9-83b1-109c9600b658",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "605586fe-1dcf-4967-930e-051f147e0ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d17915-4414-4d4d-a433-91d48f3516f8",
        "cursor": {
          "ref": "5e6df50f-c6d2-45dd-974e-981c3185efae",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d149c3b9-b9b7-47c0-aabf-812aa00c8ee3"
        },
        "item": {
          "id": "01d17915-4414-4d4d-a433-91d48f3516f8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e0b2e42f-25ba-4b06-99b5-d406d91ab655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10b7d81-a127-4a17-b2ff-4e7ff582a3eb",
        "cursor": {
          "ref": "ac1fdc6c-c056-4070-b14c-6948b2b191cc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0666832a-d6f3-4d55-9fac-ed52e724b94c"
        },
        "item": {
          "id": "c10b7d81-a127-4a17-b2ff-4e7ff582a3eb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "922135ab-15c6-4d65-98a4-143ea778b5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc46a68c-352c-4a58-ac52-7a59bf1f5abd",
        "cursor": {
          "ref": "e05204c4-7355-4419-9d71-1b6ae5ebae7d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8d30153a-9d57-448f-acb9-f6beed50b4dd"
        },
        "item": {
          "id": "bc46a68c-352c-4a58-ac52-7a59bf1f5abd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "efc7f037-8e0d-4870-ab78-07b7d4937089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c1304a-1291-410f-89b9-aadccc33a851",
        "cursor": {
          "ref": "29880576-3b5f-476b-ae50-f5a18350bda6",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6fc326be-9cd9-4874-9cce-27b8c1243ac0"
        },
        "item": {
          "id": "10c1304a-1291-410f-89b9-aadccc33a851",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a79e55eb-2ea0-48e4-9f4e-b534cca0617a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efca4970-8ee8-446c-ad83-792c07cf5d96",
        "cursor": {
          "ref": "b654b476-9ff3-4757-8015-4534d0fd7477",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ec4f0fa7-e507-46e0-8264-c23aad24ed17"
        },
        "item": {
          "id": "efca4970-8ee8-446c-ad83-792c07cf5d96",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "00642a59-5f3d-433d-ba5f-12b342a5e0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c3fa5b-ad64-4001-8612-9a359d12a277",
        "cursor": {
          "ref": "4066bba3-a418-46d3-97a8-35ad010a9187",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3183511a-0ed9-4b30-b3bb-720d254e6bdc"
        },
        "item": {
          "id": "95c3fa5b-ad64-4001-8612-9a359d12a277",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5a65a617-1bea-4e29-9810-153691b38011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92153940-1514-478e-905f-e33fd80e9993",
        "cursor": {
          "ref": "a7918179-4d95-47fd-93bc-34c377c0763b",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c76d4183-f384-492e-904c-0ae74baa1161"
        },
        "item": {
          "id": "92153940-1514-478e-905f-e33fd80e9993",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e6f1b25b-79e2-4d4d-ad8f-bd557f4aa137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc2917b-f318-4f87-bb2e-bc24daf61409",
        "cursor": {
          "ref": "b8b27472-17bc-4e5c-ab1f-a8a957852eaf",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12415ddb-ebc4-4bd8-a065-3c86928dc60f"
        },
        "item": {
          "id": "4bc2917b-f318-4f87-bb2e-bc24daf61409",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "31cf7221-c782-40b3-b179-cd553b17e8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abab14b-196a-41af-abd5-5f0667c332c1",
        "cursor": {
          "ref": "10f86429-d5cf-4072-9109-0571bcc2babb",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f2fb1cbd-93cc-4bec-8409-01ed4b4c073c"
        },
        "item": {
          "id": "5abab14b-196a-41af-abd5-5f0667c332c1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "02cbc285-a938-45c1-9580-f3ca06a954f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c14aa8-6e51-4d2d-9f81-e31e424b4e52",
        "cursor": {
          "ref": "ad664eef-20cf-43dd-80f7-d8190f7a5a30",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4240eeb6-c2af-4a89-9e2b-858ffc4284a1"
        },
        "item": {
          "id": "f3c14aa8-6e51-4d2d-9f81-e31e424b4e52",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52b9cd60-1835-4ab1-9df7-4e6600add6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437bf303-e474-41f2-b20b-72155330096b",
        "cursor": {
          "ref": "4c8eb388-0635-4055-ae0a-525265e8dfc1",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65dbef8d-898b-488e-aa40-964b19b9aa27"
        },
        "item": {
          "id": "437bf303-e474-41f2-b20b-72155330096b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "22b1c550-d2f6-4c39-9b3b-1fd6ad0edfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f71f5fc-6741-494f-9250-554af153671b",
        "cursor": {
          "ref": "5764bff5-bef2-4729-90d6-b08f837b2ef1",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bb64f5e1-5b16-4d49-bb96-a15c7da8a74a"
        },
        "item": {
          "id": "0f71f5fc-6741-494f-9250-554af153671b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a3928b25-b583-4746-93ab-177bcc2e1581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4756836e-6d78-4bdc-ba11-f85eb437a8cb",
        "cursor": {
          "ref": "2e4704be-75b7-425c-ae51-b2eee10365c8",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f0b7c765-ad9d-44e6-a75e-995a90f9131a"
        },
        "item": {
          "id": "4756836e-6d78-4bdc-ba11-f85eb437a8cb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c7bcf69f-ad4d-41da-9ffd-88210287ccbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a05491-7725-42bf-9e46-a005a140bf96",
        "cursor": {
          "ref": "0eb511a0-326b-4b80-b596-db939a06ae97",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "517242e9-a0ec-4ca8-9b20-3508644b14a8"
        },
        "item": {
          "id": "b2a05491-7725-42bf-9e46-a005a140bf96",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a6dc57fd-f9cb-47ba-a093-e5ee6fb92774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2f4538-cb3c-405c-a12f-71d20c90f1d8",
        "cursor": {
          "ref": "385d5582-ee01-47a6-8858-c047a1c5283b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3319dc81-ced3-4ccf-b8bd-f846b1ff30c2"
        },
        "item": {
          "id": "8e2f4538-cb3c-405c-a12f-71d20c90f1d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9fa4af18-2967-4d22-9731-f55bb027d4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e119747c-9029-43a2-b688-c0e2d238c26e",
        "cursor": {
          "ref": "52a8a637-b820-4efc-9e32-052c143510ed",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "22b9b379-f712-408c-a6d8-9509fec8632e"
        },
        "item": {
          "id": "e119747c-9029-43a2-b688-c0e2d238c26e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fdf185a8-cca8-41b4-8c17-29ce663550d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1289a08b-683d-497a-907b-db9aca2e94b3",
        "cursor": {
          "ref": "64ec8145-de6c-43f0-a8b4-402ccff96d91",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aee2de8b-ff63-46f1-8a1e-bee73427fec3"
        },
        "item": {
          "id": "1289a08b-683d-497a-907b-db9aca2e94b3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e21a7153-2f82-45ca-a2ea-a94e295ad55a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ebf9ca-a064-4bec-a853-6622d6f819c6",
        "cursor": {
          "ref": "f3928665-4552-4272-90bb-b9b6e3424a01",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "36b70e4e-cf0d-418d-9aee-0e8e962fa7bf"
        },
        "item": {
          "id": "42ebf9ca-a064-4bec-a853-6622d6f819c6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "caa11a24-95c3-41ad-ac29-8c29b4bd1c31",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "913cb342-eeeb-42fd-a493-a5f3dfea7538",
        "cursor": {
          "ref": "3a7a006d-b255-43d6-99e0-fd23a7527dd3",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8bdeef9d-e252-4e99-ade7-b9bc16a4ed7c"
        },
        "item": {
          "id": "913cb342-eeeb-42fd-a493-a5f3dfea7538",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "765bf2ef-7a21-45e8-8861-6d5971573ebf",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c997e0-7312-4e16-be79-b6603b0c1f0e",
        "cursor": {
          "ref": "c1835a27-54cd-4131-b0ae-71276ee3581f",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fa18187a-0b7b-4a3c-bce3-5938e50d89bd"
        },
        "item": {
          "id": "f6c997e0-7312-4e16-be79-b6603b0c1f0e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "28a78a15-e4e1-429b-9347-38515c9852f8",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70644148-8d9f-44e5-864b-5d5e0e170c86",
        "cursor": {
          "ref": "60a77a88-2425-48a3-bf2b-ccd5fc9b80c0",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "566faa99-0b88-44f7-868e-a56facab3af1"
        },
        "item": {
          "id": "70644148-8d9f-44e5-864b-5d5e0e170c86",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ebe92049-4150-4208-81a2-dda3bf514a1b",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b50dd19-2370-4cca-b3f5-c8ae851ad948",
        "cursor": {
          "ref": "2393456c-88aa-429c-8b0c-adeed39789be",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d4c170b3-1ddd-4675-bb3d-46035ef3bd5b"
        },
        "item": {
          "id": "5b50dd19-2370-4cca-b3f5-c8ae851ad948",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "171e079d-031c-48d1-b90c-c6a6a7756a0a",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e62791-1950-4f87-ab0c-bb91c9803e38",
        "cursor": {
          "ref": "2810ac3a-ea21-45f0-957c-f2681df657a5",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "927b7af2-7912-4705-8c7b-1de2b942e61e"
        },
        "item": {
          "id": "20e62791-1950-4f87-ab0c-bb91c9803e38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4e0585d3-d796-410d-8799-c18d18cff1b8",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d64ab42-6bbb-40a9-9fb2-103b133d24c3",
        "cursor": {
          "ref": "da3e96fe-24bd-4a54-912c-cd0f9bec9879",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b1bac70b-7f78-493e-93cf-8e210b9e74b1"
        },
        "item": {
          "id": "3d64ab42-6bbb-40a9-9fb2-103b133d24c3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "779b89d4-0d9d-4455-8639-a7a36f0ddb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d64ab42-6bbb-40a9-9fb2-103b133d24c3",
        "cursor": {
          "ref": "da3e96fe-24bd-4a54-912c-cd0f9bec9879",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b1bac70b-7f78-493e-93cf-8e210b9e74b1"
        },
        "item": {
          "id": "3d64ab42-6bbb-40a9-9fb2-103b133d24c3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "779b89d4-0d9d-4455-8639-a7a36f0ddb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd7856a-4c3c-4939-9995-7c96513fb34b",
        "cursor": {
          "ref": "6626eb77-ab77-41ab-9f53-1407d556a812",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fd623e10-cff7-4c65-98d7-e385ed670828"
        },
        "item": {
          "id": "ccd7856a-4c3c-4939-9995-7c96513fb34b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "21d0791f-f371-4f35-9dbd-4c36e80110ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b18841c-3267-45d8-89f1-a2df38e48832",
        "cursor": {
          "ref": "e72d3ce1-ecf9-429e-bbc0-28a60f1dd679",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1c772d2a-0c8d-4c71-9388-c2bbf7d13059"
        },
        "item": {
          "id": "5b18841c-3267-45d8-89f1-a2df38e48832",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "130f9823-7d51-4ee7-924f-4a84f280f141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398c71a2-123b-4cf8-86ac-833d6f6444af",
        "cursor": {
          "ref": "4fedc80a-df6d-42f0-b2c8-612b62d4bba3",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5dee1de9-75a0-4aab-93a2-d8cdb4c0266b"
        },
        "item": {
          "id": "398c71a2-123b-4cf8-86ac-833d6f6444af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3cb2f05-87e9-4aed-b248-e22c0daf679f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abfed2e-06d8-4230-99ad-a2596705100b",
        "cursor": {
          "ref": "a13d778a-e589-41b3-8b55-9bb0dbde29a9",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f54c76ee-3c5a-44e2-8415-409062438464"
        },
        "item": {
          "id": "5abfed2e-06d8-4230-99ad-a2596705100b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8c739ba9-12ab-42db-915a-41653a16a621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f195d357-2d6f-4d81-8398-294a33e0c735",
        "cursor": {
          "ref": "b12a7441-503d-4d25-b7e1-c2bcd37f6f2c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8602dc77-cd83-4aab-8718-5479e98fe514"
        },
        "item": {
          "id": "f195d357-2d6f-4d81-8398-294a33e0c735",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "52a76d9c-7683-4e1d-802c-d56f61fd33d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ca28c5-2b89-42bc-bd0a-b36c71384cd9",
        "cursor": {
          "ref": "f32338cb-5ffe-441a-a2a0-5ab9f0946dd3",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "70343782-dbc3-44f4-a858-578367cc3abf"
        },
        "item": {
          "id": "57ca28c5-2b89-42bc-bd0a-b36c71384cd9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bfabb1b9-51de-4bc2-94e8-baa5c03cc50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2e6ded-bf2a-43c8-b486-89e265986592",
        "cursor": {
          "ref": "13f9c8ac-5349-4a41-8e2a-c7c65acc2dd8",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "901ed347-112b-4f63-aaa5-59461844dc2a"
        },
        "item": {
          "id": "cf2e6ded-bf2a-43c8-b486-89e265986592",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cf1cec99-02af-471b-8aaa-0279d7c25dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3794eb39-c2ab-4220-b667-36b4b57250c8",
        "cursor": {
          "ref": "c2e9bd96-c98e-43fe-976c-226752b7bc06",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7ddd3990-7f62-4d75-b63a-20580927426c"
        },
        "item": {
          "id": "3794eb39-c2ab-4220-b667-36b4b57250c8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c4cdccbd-be75-4fe6-85aa-2c6dfe2921ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf539e5-3df6-444e-ac94-fdfa70711e5c",
        "cursor": {
          "ref": "43b9427f-3394-4bf0-9d63-f0c355e52939",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "54087c4f-a372-4ae7-addd-6b46aa41fb22"
        },
        "item": {
          "id": "cbf539e5-3df6-444e-ac94-fdfa70711e5c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a9a2b36e-6d87-4c87-be06-307e9e324734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca333c5-01db-4727-b24b-3292216f1565",
        "cursor": {
          "ref": "454d2449-702f-4030-accd-25ec886119e0",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eff7aa6a-7e59-40d1-9898-8c91c3a237c1"
        },
        "item": {
          "id": "cca333c5-01db-4727-b24b-3292216f1565",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3736d9d2-2670-4748-8163-ca19994758f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1d255e-9685-4f78-ae82-98628a433656",
        "cursor": {
          "ref": "262c0949-1644-43e5-bceb-217898cc89f1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6c6c24f7-84b7-48c1-847f-8dec5838a46c"
        },
        "item": {
          "id": "ab1d255e-9685-4f78-ae82-98628a433656",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "be8109ab-e714-4d69-92bd-9eb78b3c963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6311b7cb-80b6-4d23-a6a7-f6e90ab48056",
        "cursor": {
          "ref": "bb9ee8b9-618d-4a7e-a28e-e4d6b3475a04",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "39eecc62-99e1-4af3-ba40-91287c283b9e"
        },
        "item": {
          "id": "6311b7cb-80b6-4d23-a6a7-f6e90ab48056",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6069d149-5b07-4d82-ba8d-450673e89ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d5043f-484d-4527-bb85-16e9f6a8130d",
        "cursor": {
          "ref": "2b70220a-963e-4be9-94ea-7f79f084ab47",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c0b317d2-343d-482b-8c49-ba87d820edaa"
        },
        "item": {
          "id": "b8d5043f-484d-4527-bb85-16e9f6a8130d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "49b01b97-34fb-4b29-8ffe-fb566172bacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca28ce8-75a8-406c-ac7b-b2f313a30c2f",
        "cursor": {
          "ref": "5484ced3-c67c-46dc-860c-949bbfc13ea2",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aa27e4c1-ec00-4904-90c9-c3317c5c8096"
        },
        "item": {
          "id": "dca28ce8-75a8-406c-ac7b-b2f313a30c2f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "00917f3a-f2d9-435b-b707-b84cbb78a6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3656e687-2971-441d-945a-dad059d31e83",
        "cursor": {
          "ref": "ed91f14f-9086-4e05-b277-cff05efb4709",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "82f9c784-5f4d-4546-9b17-ef6bebc56233"
        },
        "item": {
          "id": "3656e687-2971-441d-945a-dad059d31e83",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bd7f9055-f44e-4b95-ace5-7da2c797e5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12d598d-b919-469a-8131-818585a9804a",
        "cursor": {
          "ref": "e539f000-c535-493e-aa44-12b0ad9972ce",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d7f2b504-ff91-443d-87aa-71d7c104a7f5"
        },
        "item": {
          "id": "a12d598d-b919-469a-8131-818585a9804a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "036f364a-6097-4ce2-8498-286cee93c29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7744321c-d37b-4c5e-9c7a-bef24f7051aa",
        "cursor": {
          "ref": "6844aeb0-c3df-4148-9b58-67684618bf40",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d35532f-9854-4ef3-92ad-92e407e4b375"
        },
        "item": {
          "id": "7744321c-d37b-4c5e-9c7a-bef24f7051aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6fa9b385-2fcb-4154-9149-06cda014928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a46044-5c04-486d-b87e-a1054df9df9b",
        "cursor": {
          "ref": "ea3a8b26-6c7b-45a7-9962-a5124e1730fe",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b65cee30-faed-4567-94b0-6c90aa43067c"
        },
        "item": {
          "id": "16a46044-5c04-486d-b87e-a1054df9df9b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "30808c5b-97d1-44c5-8b32-15f199865593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fd8fc3-4c3b-4a3d-a098-29695c3c81b4",
        "cursor": {
          "ref": "805d0457-970c-40c0-bc79-b3c31e66403c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7ac9cba9-4ffe-4231-94bc-29d0abf6f255"
        },
        "item": {
          "id": "02fd8fc3-4c3b-4a3d-a098-29695c3c81b4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "17c51467-d515-4205-91d7-8c8a8589fbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce5848f-6dd0-4127-89ac-ec663bbdc00e",
        "cursor": {
          "ref": "e783773f-6865-41a2-a1ce-12e6d93b8db0",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a3dde459-4bbf-4651-a739-b4db473e97fd"
        },
        "item": {
          "id": "fce5848f-6dd0-4127-89ac-ec663bbdc00e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef5ef1ac-4684-4850-8deb-4a6ce9894708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7c45d1-abf2-4b45-930d-9e2371d84aa1",
        "cursor": {
          "ref": "187b2a05-0aaf-4294-bd46-369887b2041e",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e3430354-05c1-47e5-972c-a0d1d6e16c5f"
        },
        "item": {
          "id": "2d7c45d1-abf2-4b45-930d-9e2371d84aa1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f4810f40-e2f1-43c9-89bf-00cefca4d663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db83b8e-a6fc-4e89-ab69-04b55d30b554",
        "cursor": {
          "ref": "1badefe0-bfe3-4bad-8c7b-2231f30b8d26",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a6a22bb0-dd44-426f-843d-6f5c47a8a2b3"
        },
        "item": {
          "id": "0db83b8e-a6fc-4e89-ab69-04b55d30b554",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2533bea-fa07-4584-ac68-3d6232a23df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfcd6b4-7571-490a-938b-044bc097634d",
        "cursor": {
          "ref": "cc1daa34-5a8e-4e31-9a50-d36c371b222c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "da440313-34cd-4b13-a05e-bf450d8af924"
        },
        "item": {
          "id": "ccfcd6b4-7571-490a-938b-044bc097634d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "669d8771-793e-4532-9840-2024aebd976e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01948feb-16d5-4c89-8364-4ce4b95c2f4f",
        "cursor": {
          "ref": "bfadcdf1-fe5d-47ab-9648-1a1d8b8a3843",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "07809828-11d1-4e15-b756-b2badbd4570c"
        },
        "item": {
          "id": "01948feb-16d5-4c89-8364-4ce4b95c2f4f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a5c99784-2bcb-485c-8b5e-a0c22c423654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b2f5b6-c351-46bc-9d5d-b8b3e5b89383",
        "cursor": {
          "ref": "d8df0547-d882-4b4a-8801-67f05c3aa3c2",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ae61ce7-82ea-4dac-a315-e3b726796518"
        },
        "item": {
          "id": "a4b2f5b6-c351-46bc-9d5d-b8b3e5b89383",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37e37e2b-0409-4e6a-8e1e-b10ec30925e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f62b8d7-3157-4c84-a16e-a6ca3403ecbf",
        "cursor": {
          "ref": "508b340d-f439-4916-909c-19ac2f70a287",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8cb571c0-a31b-4c81-8326-88eb2f22a8cf"
        },
        "item": {
          "id": "6f62b8d7-3157-4c84-a16e-a6ca3403ecbf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1edc2999-d112-414f-ad84-8af17c4d2838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4549404d-45f2-4db3-b0ea-b1001caef3fe",
        "cursor": {
          "ref": "42630c8d-d8b6-4896-ba79-a1651891d849",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "334f5152-49eb-4b79-875a-d0040bf56623"
        },
        "item": {
          "id": "4549404d-45f2-4db3-b0ea-b1001caef3fe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d83c826-e757-41fa-bf2f-b8416191ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd28acc-c5ac-4859-929d-45069ef85b78",
        "cursor": {
          "ref": "e8ea7859-a11b-4d38-a70e-4b01ef1ea537",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "587ac148-934f-4f29-be02-7e4fa0ac258b"
        },
        "item": {
          "id": "fdd28acc-c5ac-4859-929d-45069ef85b78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e9ab9bc8-77f7-497b-86ce-c9384fb7bea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ed3ec4-0a9e-4b34-b6e9-7c527eebe271",
        "cursor": {
          "ref": "17796d18-c281-4d13-a099-173defe93256",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1f36437c-bec0-4e0f-83c5-47e0ee135907"
        },
        "item": {
          "id": "f5ed3ec4-0a9e-4b34-b6e9-7c527eebe271",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8956cc9b-2498-44ba-b9cb-97d9d505a95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88da15d7-a2bc-4ea8-936d-02241f22f0ab",
        "cursor": {
          "ref": "2556e73e-b30e-4a47-b058-8a6ecf171c0e",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bae09e74-d613-4c9b-8f4d-413ea2f2a095"
        },
        "item": {
          "id": "88da15d7-a2bc-4ea8-936d-02241f22f0ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a81a4524-7db9-4dbf-914b-a3f89685aa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481dcc74-f211-4ed9-a151-9da7a49763be",
        "cursor": {
          "ref": "7275aace-f2a2-46bc-8d8e-fafc5218944b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7f2ed7a0-31a2-40c5-a5e5-947eb670b3fe"
        },
        "item": {
          "id": "481dcc74-f211-4ed9-a151-9da7a49763be",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3af3ec6c-bc2b-4626-a4a3-cc316e3a3e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd77ed74-c4b1-4c07-bb9f-c72cb65edf81",
        "cursor": {
          "ref": "0708b798-2f08-44e5-852b-5541b108455c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0c19535b-d43c-42df-81bf-38f9795d49a3"
        },
        "item": {
          "id": "fd77ed74-c4b1-4c07-bb9f-c72cb65edf81",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ab4f2bd0-4aff-4c5b-82b1-c4ed950b9874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74158922-1a5e-442b-8f19-a6fd3f865fe4",
        "cursor": {
          "ref": "3730f5b5-f82c-493c-a2a8-969b56a29953",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "787bf790-6198-4f76-8bc3-92b03a2e038c"
        },
        "item": {
          "id": "74158922-1a5e-442b-8f19-a6fd3f865fe4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7b539748-9136-4f90-a7c9-3f7a72affd68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc67126b-cb64-40c3-9a81-40e46cef4d6f",
        "cursor": {
          "ref": "0206feb6-2126-4c8f-9726-12cc0d42819d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d5d73280-e3d4-41ec-a62a-df16574a55de"
        },
        "item": {
          "id": "bc67126b-cb64-40c3-9a81-40e46cef4d6f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9e2c0770-5fba-4d34-88ed-c112326379ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc67126b-cb64-40c3-9a81-40e46cef4d6f",
        "cursor": {
          "ref": "0206feb6-2126-4c8f-9726-12cc0d42819d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d5d73280-e3d4-41ec-a62a-df16574a55de"
        },
        "item": {
          "id": "bc67126b-cb64-40c3-9a81-40e46cef4d6f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9e2c0770-5fba-4d34-88ed-c112326379ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc882798-8515-4049-b983-5f80a7975dc6",
        "cursor": {
          "ref": "20b377e5-182b-4e6a-b030-07fa8f31314b",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "17b8195d-90f0-46a6-8cbd-61579c667739"
        },
        "item": {
          "id": "cc882798-8515-4049-b983-5f80a7975dc6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d8768912-d99d-4f25-a7cf-6e0c6e7b53af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74447949-d67f-419c-8b28-9f368a9289e2",
        "cursor": {
          "ref": "e1dc65c4-f210-44ba-81e7-558bd365ae0c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fa928125-676d-4665-8643-ec5213364256"
        },
        "item": {
          "id": "74447949-d67f-419c-8b28-9f368a9289e2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "078b707e-aba8-4f50-b833-8c84f2cedb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a62b63-bb29-4359-aa78-d3b3cf858f62",
        "cursor": {
          "ref": "d555b27c-839d-43e1-bb14-5f130714bb60",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "acc366fd-2006-4c40-bf63-f52a1c924878"
        },
        "item": {
          "id": "b0a62b63-bb29-4359-aa78-d3b3cf858f62",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b84f2522-b620-4ad1-91b2-6e28390ca28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba7559d-e324-41b4-a432-314d08f871d9",
        "cursor": {
          "ref": "a093bff2-5ad5-43ae-9ff9-e110cfc5c38a",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3f828053-5fe0-4e78-b380-1aa491044058"
        },
        "item": {
          "id": "9ba7559d-e324-41b4-a432-314d08f871d9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c92b1638-1577-4641-a2ba-ef8972c70178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76265948-8fd6-45fc-b39d-e3e6d9dd7bfd",
        "cursor": {
          "ref": "b48cdbbc-bda2-43fc-b2af-d0ceda003a40",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "83f2c39d-1652-43a0-93c4-9ce535c510e0"
        },
        "item": {
          "id": "76265948-8fd6-45fc-b39d-e3e6d9dd7bfd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8b4eae2f-456a-4f1c-ae96-03efa641fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb73525-0ab2-4337-84e6-774396bf5139",
        "cursor": {
          "ref": "9be19d43-677a-4a0e-9fc6-e90029bfe1e2",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b9e58e49-7f5b-4ed6-a1a1-60807700c052"
        },
        "item": {
          "id": "1cb73525-0ab2-4337-84e6-774396bf5139",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1ff662d9-74af-4c5d-a6ff-4710703dae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cccc51-58c9-4688-b09e-b1141fba4f6e",
        "cursor": {
          "ref": "e59e0bf9-c915-4231-879b-ce0b8db84d56",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cabd302e-474a-4b95-ad5b-4de033c97ed1"
        },
        "item": {
          "id": "e1cccc51-58c9-4688-b09e-b1141fba4f6e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d20a289b-eb5a-4d49-ae23-5f164122827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3368788-6903-4636-90f3-caa1eb8bf20f",
        "cursor": {
          "ref": "2fc41c54-6d32-4e5e-930e-49eb14b833bf",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "49fac170-d4ec-4012-94b7-dcf71e6440bc"
        },
        "item": {
          "id": "a3368788-6903-4636-90f3-caa1eb8bf20f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a1e8a46-6e47-4414-a0fb-1af0e2b574d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a7663c-a7ff-40a0-bdf9-04a5190e30aa",
        "cursor": {
          "ref": "e30af4df-3653-443f-b103-d42101040b61",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a92f600b-6754-4e76-8e8b-611d963d0f05"
        },
        "item": {
          "id": "e5a7663c-a7ff-40a0-bdf9-04a5190e30aa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "66fa0184-87f9-43ea-b537-c4bfcf712c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c93ea6-7b95-4511-a39f-fbbf3a09b80b",
        "cursor": {
          "ref": "69371e72-9cb3-4161-bc2e-74704fb0abe0",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "05ac5eda-16b8-477e-b348-e275d6c25d1c"
        },
        "item": {
          "id": "f4c93ea6-7b95-4511-a39f-fbbf3a09b80b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d104bea3-c318-4411-9b4a-e141b5e6f0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6116b91f-4d19-4479-923a-99680231f449",
        "cursor": {
          "ref": "76013a83-fcc8-4d4e-8878-59b5671ab0fb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "42993e05-65a5-4b65-ba1a-9571a55baa07"
        },
        "item": {
          "id": "6116b91f-4d19-4479-923a-99680231f449",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8cf0ec10-c055-45bc-b064-83a9aec07458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bc6c10-eca2-4db6-90ff-f2b7580df423",
        "cursor": {
          "ref": "126abd6c-e46c-4018-bec7-330e6ebb3d2f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "770764ed-6b01-40d5-a46a-656ce7e31f5b"
        },
        "item": {
          "id": "10bc6c10-eca2-4db6-90ff-f2b7580df423",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1a9c202c-311e-4233-b46b-6cbfceda7c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fb7b3e-4718-4d75-bb30-540fa30b2995",
        "cursor": {
          "ref": "ef62293d-ff45-48dd-a12c-b81aad764f43",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "af920c95-9133-45b1-b5b8-b71171b6924f"
        },
        "item": {
          "id": "67fb7b3e-4718-4d75-bb30-540fa30b2995",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "305b5b69-5ee7-4d97-8792-05dca6596d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08185ba-6d49-4b44-a81c-bee7779cf2f4",
        "cursor": {
          "ref": "ad5a8eb9-6ed8-4c87-958b-7dfce2d04a9b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0411385e-3e51-4631-a843-6df5b7d99d9a"
        },
        "item": {
          "id": "e08185ba-6d49-4b44-a81c-bee7779cf2f4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0b92a8d6-8086-44f9-82e8-12f26084a288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d85d68b-360b-44bc-bffa-053e973fa13b",
        "cursor": {
          "ref": "f4f43828-4560-46ee-b85b-94d1f1856923",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d84abf38-b644-4e47-8a5a-1e2f771deb6b"
        },
        "item": {
          "id": "6d85d68b-360b-44bc-bffa-053e973fa13b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "78c7dafa-198f-41e7-b16a-a0cdff471b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0094a31b-52c5-4753-9cb3-f466b6fb0afd",
        "cursor": {
          "ref": "ef49c467-b31b-4869-97be-5fa46bb7f62e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6d440290-07ae-41e3-8ac2-c34ba61a2bbd"
        },
        "item": {
          "id": "0094a31b-52c5-4753-9cb3-f466b6fb0afd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6e7093d3-9bcf-4a63-9027-6cec6219c43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744220f7-5fe7-47e9-9651-e1b3ef6113a9",
        "cursor": {
          "ref": "2268d820-eca4-44b0-809f-4dd370b90b4a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb4b9471-ea9b-495f-9cbf-dc729aad6f09"
        },
        "item": {
          "id": "744220f7-5fe7-47e9-9651-e1b3ef6113a9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5f6eaca9-f322-440d-bc10-96ff658f024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b24a7-2b04-41e2-9e7f-6b08484090a2",
        "cursor": {
          "ref": "a550ef8e-6569-4fdd-b159-b0774f017e41",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8842bd29-2038-4567-989e-71ab67ff3612"
        },
        "item": {
          "id": "2f9b24a7-2b04-41e2-9e7f-6b08484090a2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "033d67a2-a22d-4b23-b0a9-6720f3cbe442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc6cb0-7809-48b0-9c59-7ae10da4cb72",
        "cursor": {
          "ref": "8c36a387-ac35-4e9a-9789-939e93d5181e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "875deff2-0a5d-446a-b0f8-9e68e8be4ff3"
        },
        "item": {
          "id": "5afc6cb0-7809-48b0-9c59-7ae10da4cb72",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "92a415e2-14bd-47b6-b163-7b23f6fa6d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab2b672-8a8d-43d8-ad73-2a975e977c3e",
        "cursor": {
          "ref": "0b9ace8b-f9d3-4647-8604-826606801ff2",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2f38e34a-f7cc-4bf3-b789-80b1c7c0715f"
        },
        "item": {
          "id": "0ab2b672-8a8d-43d8-ad73-2a975e977c3e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "449fc23e-fd5f-4234-8aca-ae208ce3f976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacc97eb-5fe2-40f7-b15a-ab2b66aaa316",
        "cursor": {
          "ref": "e50f87af-4a58-4005-be2a-0f19feaa9ae2",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "385e5f39-eb21-4f45-8854-26f363fe0c07"
        },
        "item": {
          "id": "bacc97eb-5fe2-40f7-b15a-ab2b66aaa316",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d76e723c-db59-4225-a92b-c19c48c98a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b3fc40-7ccd-409f-8597-73a321911df4",
        "cursor": {
          "ref": "403d7cb2-3bc1-4e77-8ca4-2b4f07b9dc39",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f5ac0afb-86ef-4511-9261-54ad031c80e3"
        },
        "item": {
          "id": "26b3fc40-7ccd-409f-8597-73a321911df4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ec3e24cd-9f13-468a-92ff-d8dfcb904003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcb052b-f02a-4a40-8a37-66dd42af3285",
        "cursor": {
          "ref": "0616ae6d-e2df-4efd-aa1c-fa341f030aad",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e0662703-7115-41d3-b5a8-5c2b4ae24647"
        },
        "item": {
          "id": "bfcb052b-f02a-4a40-8a37-66dd42af3285",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "598b7822-2cf8-4b27-9482-c4365237cf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e20f42c-6257-438b-85bd-7741775bcda2",
        "cursor": {
          "ref": "ae2acb54-98f2-47a4-befb-2414193e7125",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "57aa9251-a1fc-43b9-af88-c7c2864d2187"
        },
        "item": {
          "id": "0e20f42c-6257-438b-85bd-7741775bcda2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6c89df56-fb94-4e36-901f-ea134813f69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3287c2-ea94-4d9c-96fb-bdc07afb9952",
        "cursor": {
          "ref": "4458a66c-daff-418f-8f3e-46f17539142f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "01c920e3-c978-4b11-b695-4432d21a4545"
        },
        "item": {
          "id": "0a3287c2-ea94-4d9c-96fb-bdc07afb9952",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9d1464e1-f1df-44d2-9dee-0caecb832c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c7e5d3-2c1d-457b-b77a-fa57dae73b18",
        "cursor": {
          "ref": "3d94d75b-8de5-48c1-bc7e-9e4e1db08992",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5d8b8645-9252-4cba-8af3-46c370c23337"
        },
        "item": {
          "id": "e4c7e5d3-2c1d-457b-b77a-fa57dae73b18",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f74a4030-5527-4bdf-89ff-196c92bbf023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ec0db2-abd6-4ee7-8bf4-4f8673472ec9",
        "cursor": {
          "ref": "195bab20-981c-44b0-8498-1197dd1ba41c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "557ba19c-11ad-448f-bebd-69692fa86b9c"
        },
        "item": {
          "id": "78ec0db2-abd6-4ee7-8bf4-4f8673472ec9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "45a0e910-717a-4ea3-a46b-24985bab8afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d4b068-74da-4e16-a93e-4daf2604d58e",
        "cursor": {
          "ref": "7a388625-28bd-4f5b-9b1c-ccf13fdbfb73",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe4f21aa-0690-41c2-8d3f-4e45f1928b5d"
        },
        "item": {
          "id": "f1d4b068-74da-4e16-a93e-4daf2604d58e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "20e359a5-3f20-448c-a779-44cf0c95d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ef5aa1-267c-4b92-a4d2-aac2eb913c31",
        "cursor": {
          "ref": "25e20ab9-bc4f-4a3a-b953-2a2c12c17ab4",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "34c805a7-f5d6-4bf4-b59f-d4ab2996ced5"
        },
        "item": {
          "id": "49ef5aa1-267c-4b92-a4d2-aac2eb913c31",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6fa1683-33d0-48fc-823b-8210a4031051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c6022a-0829-428e-a938-01189f1a67ec",
        "cursor": {
          "ref": "9bbe5b41-c5cf-4bb7-902b-4cf94e319579",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0d742797-331f-433f-b317-aa22345150f7"
        },
        "item": {
          "id": "e2c6022a-0829-428e-a938-01189f1a67ec",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "507c37cb-e3bb-481e-9d11-ccfdeac1af16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1380de9-3e4b-45b2-ba24-74649c96d633",
        "cursor": {
          "ref": "98d70cab-a975-441a-ae3c-cb476d5e4cd7",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e5e1daea-94cd-4a31-9329-0909dbd26ed1"
        },
        "item": {
          "id": "c1380de9-3e4b-45b2-ba24-74649c96d633",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b68906ba-cf26-4568-8a92-c9796c4003b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06ea24-8f40-4f47-97e3-40ab848cd160",
        "cursor": {
          "ref": "e92fafe6-53f1-4ac6-a0ef-48487b693aa9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5a76a85c-87f8-4f0c-afba-e163ec8e772f"
        },
        "item": {
          "id": "7b06ea24-8f40-4f47-97e3-40ab848cd160",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a43963b2-8fb2-484d-9549-3747439d55d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a6e190-68e7-48cb-9bd2-321d03ddeead",
        "cursor": {
          "ref": "986651eb-5b76-4bd3-9b92-4724c8feb4e8",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0e0fe50e-542f-4d2e-929f-94e197459712"
        },
        "item": {
          "id": "57a6e190-68e7-48cb-9bd2-321d03ddeead",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a2555653-85dc-42f3-936a-c3c06c8c80cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cd665b-bab1-4a6f-9252-91e97d9693c7",
        "cursor": {
          "ref": "284f17b9-9a5f-4f9e-96e6-fcc62032a6d5",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "699a0aff-39c3-4c4d-96e8-44745b302d01"
        },
        "item": {
          "id": "37cd665b-bab1-4a6f-9252-91e97d9693c7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f248f2e1-6a64-483c-8e0a-325e96c6cd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e2b179-c94e-482c-b3a7-6144b70ccaec",
        "cursor": {
          "ref": "06026c28-ff8b-4f2a-b662-3bafb4adf302",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4f5abe11-0231-4abe-8e21-beeeb4da8461"
        },
        "item": {
          "id": "d8e2b179-c94e-482c-b3a7-6144b70ccaec",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0a125411-a579-4428-a964-eac8a309aa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb2413-a7f3-4270-834c-ce80d133d399",
        "cursor": {
          "ref": "663654fb-f09a-4b4d-947d-23d06cc6b3d5",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a085b360-5876-4498-9d8f-a8aad2d5bcf6"
        },
        "item": {
          "id": "62bb2413-a7f3-4270-834c-ce80d133d399",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "26eeb584-776f-443f-8e29-9d784cde98a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6ad29d-df00-493d-af2b-d87c5aaf9595",
        "cursor": {
          "ref": "3e571084-c330-4108-8c1a-5afdc0227c48",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0770e638-6ad9-46df-9d76-4ffd93b1ec27"
        },
        "item": {
          "id": "7e6ad29d-df00-493d-af2b-d87c5aaf9595",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0324c09-11c0-4f76-b094-26aad783152a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2ffa5c-432d-478d-94c3-9523e83402a8",
        "cursor": {
          "ref": "dd5175a4-a6b1-4797-96ef-1af28bfd9659",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "25bafb30-7981-4d1d-b57f-678da4008f63"
        },
        "item": {
          "id": "bd2ffa5c-432d-478d-94c3-9523e83402a8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b5bfe23c-d206-4beb-b829-db5683886922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311b9479-28be-4084-9272-b5d15c14907a",
        "cursor": {
          "ref": "db255346-aee6-4c8a-97d9-3e12d5722eb6",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15b5d536-95ab-40ce-b492-93242821c1ae"
        },
        "item": {
          "id": "311b9479-28be-4084-9272-b5d15c14907a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3cc2bfc7-3bb3-47dc-8482-7ac2c6bc8e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c679d85-d758-49bd-95c0-3cb2839250b2",
        "cursor": {
          "ref": "fb039d8e-a5a3-4978-aae0-e1c97fbdc202",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "70fb58cd-09c9-4986-809f-5db75072dd96"
        },
        "item": {
          "id": "7c679d85-d758-49bd-95c0-3cb2839250b2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1ffe2f00-2a00-4823-800a-07ff2feccb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae8f63f-72fd-4af1-9063-b468e630d92f",
        "cursor": {
          "ref": "cecbd006-f14e-4c35-8a15-4165122c1049",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d51e3370-36b7-4510-986b-ef6d270b5b93"
        },
        "item": {
          "id": "1ae8f63f-72fd-4af1-9063-b468e630d92f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "78acbeb9-40d9-40db-852f-b393ea53658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567b87fb-1163-41f3-9b3b-e288a82bad5b",
        "cursor": {
          "ref": "3957a595-af62-469f-959c-6ce513d25712",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4ec876ac-06e7-43ba-b295-efda457295b1"
        },
        "item": {
          "id": "567b87fb-1163-41f3-9b3b-e288a82bad5b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f0fa5545-b43d-430d-8eb8-6d2d3312cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bb0a51-90e3-4473-af62-fd276a85a907",
        "cursor": {
          "ref": "903fd878-9184-41f8-a0ba-392fdeb3c2ae",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "32ae33c1-71e0-4f23-a943-ca97c3d21e3c"
        },
        "item": {
          "id": "98bb0a51-90e3-4473-af62-fd276a85a907",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9ab7df50-f621-4d9f-924f-0774debdb40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a827390-57cf-47fc-995d-1f66b439d16b",
        "cursor": {
          "ref": "ffce8b34-a4bd-42ec-bd2c-98c342fb9cff",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "de00f40c-f335-4bb3-aa54-bfb56352e2c0"
        },
        "item": {
          "id": "4a827390-57cf-47fc-995d-1f66b439d16b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5127c5ba-8549-4e72-9109-578a8732422f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ba93b1-12b4-4894-b314-9bc10242a23f",
        "cursor": {
          "ref": "26e843dc-4d88-4748-a0d9-300dd452c1d4",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "156d92e1-3905-4d88-b076-d08cf983513b"
        },
        "item": {
          "id": "24ba93b1-12b4-4894-b314-9bc10242a23f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fc5b3726-2343-4e3c-80e1-a7102eade501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ed2361-46ad-42f7-819a-00ae0cdaf292",
        "cursor": {
          "ref": "dfdbeb65-7df6-405a-a408-1235bb389955",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "147e0023-db2e-490b-b8e8-f3bc57bc06c3"
        },
        "item": {
          "id": "03ed2361-46ad-42f7-819a-00ae0cdaf292",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "035d0d92-b480-483a-9597-e42828552d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d9836-1bd7-481d-bf62-3e4005ec186f",
        "cursor": {
          "ref": "e3d9215b-1fa5-4d00-af7b-d4a2c45890c0",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "61063319-5947-4fbf-bcd5-3c00f7b0e149"
        },
        "item": {
          "id": "088d9836-1bd7-481d-bf62-3e4005ec186f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cd5b20a0-92cc-4f84-bf79-7137a51b2d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b809e5c-41cb-422f-8fa8-9305d4fe4e49",
        "cursor": {
          "ref": "106d0ca2-4dfe-4c14-98d4-b9d2ab77f093",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4e7c0c28-b99c-49e9-9171-143ed382fe5a"
        },
        "item": {
          "id": "4b809e5c-41cb-422f-8fa8-9305d4fe4e49",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cf3f603f-cb65-4e42-98ae-c93fb4a6a8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc2e40b-01d3-44e6-b9b2-d018709b5d42",
        "cursor": {
          "ref": "fffe08b7-e3b9-45ee-8da0-d31d3cf3f584",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "37c13218-0396-4d87-bb85-f95c5ae42348"
        },
        "item": {
          "id": "6dc2e40b-01d3-44e6-b9b2-d018709b5d42",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c626176b-208e-4201-bbae-fd96c4ebb5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d286d20-8b62-4477-85fe-c2bd11fcc05d",
        "cursor": {
          "ref": "bff8a7c5-d0c5-45e8-8990-92153867fe1f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5c857dbc-9f07-4324-948d-bdfba6930fcc"
        },
        "item": {
          "id": "0d286d20-8b62-4477-85fe-c2bd11fcc05d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c9457afc-f294-44ea-bd2d-22148b628853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dbb79e-e540-467f-bdda-d81c9d289f96",
        "cursor": {
          "ref": "281d7ce8-1872-4674-a979-bf249561e896",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aedb2c93-6549-4df2-a737-84b16c91018b"
        },
        "item": {
          "id": "29dbb79e-e540-467f-bdda-d81c9d289f96",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ede9f394-595e-4274-8970-18eb23ed79b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d136cae7-f7c8-43a3-a450-a65d39e29a6d",
        "cursor": {
          "ref": "3dfa92a1-c91d-4af9-b6be-84eb57c36fe4",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7cfe2787-70b3-41bf-a453-b44bcea22e8c"
        },
        "item": {
          "id": "d136cae7-f7c8-43a3-a450-a65d39e29a6d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f88ce259-f821-41b2-978e-b1eb3028678a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848869a2-9955-4ec2-835f-39b9b5e37dd9",
        "cursor": {
          "ref": "3fa0242d-e0ff-482b-bb06-f7e260534e5e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "90dfd1ad-4126-43cf-bf80-b0700c848847"
        },
        "item": {
          "id": "848869a2-9955-4ec2-835f-39b9b5e37dd9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2c26d508-b937-4702-9328-0ac797193f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16daebc-ad3a-4349-9f3c-2a5a25f2848f",
        "cursor": {
          "ref": "c5222556-1bf5-4d14-b50a-7b95788410c2",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1f8cf0bf-9a0f-476f-825e-bdad39932cd9"
        },
        "item": {
          "id": "e16daebc-ad3a-4349-9f3c-2a5a25f2848f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "84b9c681-fe93-4081-8f77-1b43746b50d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8805c9-d20e-4b56-a73f-94dcedee2a0a",
        "cursor": {
          "ref": "a13ae94b-2782-4092-96e8-d0840f778feb",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2bff45f0-4dac-4dc3-bc7a-2076ab0d2c82"
        },
        "item": {
          "id": "cc8805c9-d20e-4b56-a73f-94dcedee2a0a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6734eee0-a7ea-4cf9-960d-fc84c1e1d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657946ba-f772-49d1-be68-e0558990172f",
        "cursor": {
          "ref": "a73a8604-55ea-4ccc-a785-06153528dc03",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bafba446-5495-4374-bd6d-1be375a8950f"
        },
        "item": {
          "id": "657946ba-f772-49d1-be68-e0558990172f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "38230841-19ba-4b61-812d-c1467f4b6f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b894bdfa-1684-4be1-943b-c33ae84cba81",
        "cursor": {
          "ref": "37180b15-8dbd-4fe5-9c44-4460500a8ecb",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "adafe82a-0ffd-4e0b-aeff-7eecfec8e283"
        },
        "item": {
          "id": "b894bdfa-1684-4be1-943b-c33ae84cba81",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f4822b0b-0ffb-4a73-b870-6d676a2ce8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d4a088-da7a-4f1c-a589-a608bb38c240",
        "cursor": {
          "ref": "a49fbff8-b4ba-494f-b67f-80b20b6e5af3",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8f94a62-f154-42fd-8cb7-27ee89d47e81"
        },
        "item": {
          "id": "a5d4a088-da7a-4f1c-a589-a608bb38c240",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "15ba67a3-ed6f-49e2-a015-bf3ebd319594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3981e56-abaa-4421-99f7-5021cecf511a",
        "cursor": {
          "ref": "0d7186b8-d1fd-4cba-a239-ccea2eb73384",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3ea412cd-7585-4ef7-83d9-9e4fc05c35d4"
        },
        "item": {
          "id": "c3981e56-abaa-4421-99f7-5021cecf511a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d4cf4ca4-82aa-4dc4-b3d9-613597a43e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c96af9-4689-4877-a56b-8675c6032de5",
        "cursor": {
          "ref": "dc5f23d8-aa8b-41a7-8089-7e524dd724e5",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4547e648-6984-4caa-ba93-4f8aad188b39"
        },
        "item": {
          "id": "80c96af9-4689-4877-a56b-8675c6032de5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1749834b-5c57-4647-a176-5d90337d4c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457f80ad-7c33-4424-8e71-c15758332892",
        "cursor": {
          "ref": "6631f978-2c49-4b44-9253-c6e53604681c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "419ee006-b4ce-447a-aec5-693ef647f70d"
        },
        "item": {
          "id": "457f80ad-7c33-4424-8e71-c15758332892",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e85848f6-4c21-4ff0-9f3f-c378d07d02cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d223ac-c8a8-4d9e-a4f2-35fb688242a8",
        "cursor": {
          "ref": "4b4443c6-940d-48d7-9eec-05c578f2026d",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ba2fe371-6914-4cd0-aa8b-c163dbfcfb5c"
        },
        "item": {
          "id": "16d223ac-c8a8-4d9e-a4f2-35fb688242a8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d4968d2d-0cdc-4007-b8a5-2ee53bc63152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389d1c2d-79df-44d0-8ffd-b8c7c97e1004",
        "cursor": {
          "ref": "e5663f81-7459-475f-9250-47392e105842",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e10040ad-9779-4ec5-a0e2-138d4cbfbf4f"
        },
        "item": {
          "id": "389d1c2d-79df-44d0-8ffd-b8c7c97e1004",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "63f0ad0b-4b6c-401f-b5c7-f0aaeb92e5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabe96c7-9287-45c6-8979-88d529922629",
        "cursor": {
          "ref": "70de5c76-ab26-4211-a067-a2488227769e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "336cebb1-994c-40c7-ae37-8edf29e0822c"
        },
        "item": {
          "id": "cabe96c7-9287-45c6-8979-88d529922629",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a4937bbc-f3b8-4634-8315-200e12410e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d46435-df59-41ae-b2da-2701296ce082",
        "cursor": {
          "ref": "9eafb27e-45e5-4f86-9811-9e5a1d8accc3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ee0744ca-23b7-4951-9ae6-7d52b709a35d"
        },
        "item": {
          "id": "a1d46435-df59-41ae-b2da-2701296ce082",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b3c36ff1-a4ab-4c66-8194-10c1b5404105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5738aa04-948e-45de-828f-65e4582d51c9",
        "cursor": {
          "ref": "316e432c-a624-479f-a9fe-2607ee08b7f0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ba0da946-f0ca-4c23-8e02-31a60e68ee24"
        },
        "item": {
          "id": "5738aa04-948e-45de-828f-65e4582d51c9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a09d2191-7d28-4a3f-8879-9fd5ee25294e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714e9e56-f713-4d44-b407-a49839bbcc8f",
        "cursor": {
          "ref": "3d9b9769-dad6-4291-b456-7e6a29a9d6c0",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "972486cb-0c72-4832-8fbf-3647ee277266"
        },
        "item": {
          "id": "714e9e56-f713-4d44-b407-a49839bbcc8f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "60db5961-47f0-48bb-a2a0-12b9bdb59163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59ae90c-ca9d-4590-bce9-d2b15db26ea1",
        "cursor": {
          "ref": "4b880dab-6bf6-4b0a-9fd7-6587469a0cda",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1e0e814a-e553-489a-ab3d-d3c4bd1621c8"
        },
        "item": {
          "id": "c59ae90c-ca9d-4590-bce9-d2b15db26ea1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e435b892-17d6-49ac-9a22-5014895425a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661cd590-fd37-4253-bed3-0166f66fb220",
        "cursor": {
          "ref": "2739f338-cd00-483e-9ee7-9308146dc562",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9a51d84f-4006-410f-9be4-ead907d6062a"
        },
        "item": {
          "id": "661cd590-fd37-4253-bed3-0166f66fb220",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e14ea330-7d7d-4962-87bc-71cbc33775f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f59635-ef04-4085-95fd-c6d5aacb8007",
        "cursor": {
          "ref": "24a043a0-2508-453d-adf7-9dc95b945879",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c4bed10b-8d7b-4ae6-bdc8-7f9ea3e58683"
        },
        "item": {
          "id": "58f59635-ef04-4085-95fd-c6d5aacb8007",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7af3532b-b7cf-43a3-9f4f-f665a67f8837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5da1f3-72c6-4ae2-886a-aadcc380e2ef",
        "cursor": {
          "ref": "d3ae29a8-d1d8-4587-8406-f85f4c2de4e7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eb97e818-f4c5-4ed3-b609-16a66f0d9dee"
        },
        "item": {
          "id": "ba5da1f3-72c6-4ae2-886a-aadcc380e2ef",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a397902f-623c-48e5-b65a-f80382064a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8aa3c-5425-43a0-976d-ee8849742bcd",
        "cursor": {
          "ref": "48a39052-8a94-4a49-b8dd-8a957e9060b2",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "88d5391f-8792-4563-9c49-0a5ac7316ea1"
        },
        "item": {
          "id": "14d8aa3c-5425-43a0-976d-ee8849742bcd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "48bbaf78-91da-4647-a129-2318b1db88fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c16eb-836e-401f-a6a6-93d1b2b6d638",
        "cursor": {
          "ref": "322586d6-3ba7-414e-9b34-b8c19c28fe2e",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "208eb18e-070f-4b51-bfcc-c3c2e375ba94"
        },
        "item": {
          "id": "348c16eb-836e-401f-a6a6-93d1b2b6d638",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a1424e23-42a8-4c30-b1c0-4427d9a5c24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000bff2b-e38f-4e9d-ac71-00c1145d89e4",
        "cursor": {
          "ref": "0f3c7a8b-9971-4167-8295-118b81978270",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "85010965-ab77-498d-a464-ed943d9cfd98"
        },
        "item": {
          "id": "000bff2b-e38f-4e9d-ac71-00c1145d89e4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4017184a-1292-4210-bb36-1fc777fcb314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655a7ec4-0fc8-4383-9816-8fb2e1a8162d",
        "cursor": {
          "ref": "135618ba-8772-40cb-9f8d-3cfa93607ca2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cf6171ee-d36a-4f05-94d4-de05e3804749"
        },
        "item": {
          "id": "655a7ec4-0fc8-4383-9816-8fb2e1a8162d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92d68c0e-5914-4be5-a7db-d9eea3a5d7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a67e7b-0dd7-4739-a6a6-d181e257e89d",
        "cursor": {
          "ref": "67fa20a9-feb0-4662-a9e0-035f6f16914b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "68b46632-09eb-415d-9cad-a43866516b95"
        },
        "item": {
          "id": "e6a67e7b-0dd7-4739-a6a6-d181e257e89d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "264a48d3-4ce6-4d3e-9cad-fe662f9af3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4828c89b-5258-4f8e-90e2-ae703ea5e447",
        "cursor": {
          "ref": "97078e6e-4b63-47e0-ae61-adc97e8300b8",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a8c60fa6-cb27-43f1-aabf-21c1415f33a3"
        },
        "item": {
          "id": "4828c89b-5258-4f8e-90e2-ae703ea5e447",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4f0ae3a8-fe0f-490e-a984-19df73222082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e632d5b-66e3-4bd3-95f4-971c4960b41a",
        "cursor": {
          "ref": "4e414399-ec89-4658-b115-f92aee641aff",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6257c10b-d9fc-4bc4-9076-9f6bf0595899"
        },
        "item": {
          "id": "5e632d5b-66e3-4bd3-95f4-971c4960b41a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dc2016ef-41df-49aa-a3e2-8e3ebecc6126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4245d45b-f4f6-459a-8f20-bc3991ae398f",
        "cursor": {
          "ref": "3346d926-a685-4c6b-88e2-09df718f3b8c",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9c59597d-ad56-4c66-996e-1a4ee911def6"
        },
        "item": {
          "id": "4245d45b-f4f6-459a-8f20-bc3991ae398f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c1d9c211-aefd-4dbb-859f-3392d75c45c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e1589c-b790-4d89-bf43-74e4d47a6138",
        "cursor": {
          "ref": "0b0b0677-12e1-42b8-8905-cea963150eab",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2de24259-dcbd-46fc-b1dc-2ba4a3a2e034"
        },
        "item": {
          "id": "15e1589c-b790-4d89-bf43-74e4d47a6138",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dab820ea-1bf0-42fc-a53e-ae59a8b54a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f727af60-a6cf-4965-bb70-37073c9f8c41",
        "cursor": {
          "ref": "ae57ae0c-d78b-444d-9062-a4e90cb7dbb1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "abd074c6-50e1-4451-9515-35fe94ce312b"
        },
        "item": {
          "id": "f727af60-a6cf-4965-bb70-37073c9f8c41",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0518421b-1d4a-4643-b3a1-d95b06704caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf39bd-63dd-4d04-b846-d31a1f76f0ff",
        "cursor": {
          "ref": "a5c49ea0-dd05-49f6-953f-ea27ab79b483",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "27d9fb19-ad62-49f0-8d37-48a8154423db"
        },
        "item": {
          "id": "0dcf39bd-63dd-4d04-b846-d31a1f76f0ff",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e81503f2-e472-4af0-909c-bb57e65113ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12535dd2-f45b-4376-aaac-ac535a2b07f3",
        "cursor": {
          "ref": "8de09892-e867-4b9f-9cfd-80492896edcf",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "76730370-e878-4ad2-ae57-7fc2a6ddbdf5"
        },
        "item": {
          "id": "12535dd2-f45b-4376-aaac-ac535a2b07f3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "07680291-280c-4315-8631-ed77080f2aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc4d9c7-0d4b-4770-b65d-9eeee65f8629",
        "cursor": {
          "ref": "4f0605d0-8714-4b4f-9d55-c20dab02f027",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "188b9d41-70e9-4c08-a370-60a386576690"
        },
        "item": {
          "id": "8fc4d9c7-0d4b-4770-b65d-9eeee65f8629",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "46c99c8c-7556-48d5-8fec-445954a2e519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18fd3ec-7ef5-42bc-8fb6-59991d122fb9",
        "cursor": {
          "ref": "5dec483a-50e5-4e15-befa-53ac701381a0",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6fe268b8-b319-47b7-b742-7d29cfa4a840"
        },
        "item": {
          "id": "e18fd3ec-7ef5-42bc-8fb6-59991d122fb9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "631039c9-2737-4e1f-bed0-5a9913734217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f81896-da40-4d60-aee8-172699fad04d",
        "cursor": {
          "ref": "c956698b-fdee-46b4-a4e6-36e6b0287dd7",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e914dd5b-6f54-4a13-a20d-199b876350ac"
        },
        "item": {
          "id": "22f81896-da40-4d60-aee8-172699fad04d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6334ec34-02ed-4df9-ab63-ca132f83f6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a3acc-f513-4df2-93f0-7c95b41f7dc3",
        "cursor": {
          "ref": "e8ed8dfe-a3d3-4351-9dbc-452d4ebd07c5",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "32929d4b-1384-4719-aa97-7e7ff141f3ea"
        },
        "item": {
          "id": "841a3acc-f513-4df2-93f0-7c95b41f7dc3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7f3d535b-f292-4da3-8245-5b1318a34331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e7f21a-314f-440f-85e3-5aae6a19c6f7",
        "cursor": {
          "ref": "df45d074-02c5-481a-93cf-4b461622dcdc",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8c3db318-aa4c-4bbe-b2e7-da44d527ec6f"
        },
        "item": {
          "id": "86e7f21a-314f-440f-85e3-5aae6a19c6f7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "65a148d3-d02f-4255-b368-f170aaa2fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec837b6-4d7b-4b36-a025-ec6eec73fa5b",
        "cursor": {
          "ref": "1e461488-d098-4983-8dc5-65da47c946a9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9ef0d8ce-940e-4f70-9671-7e549b31ae4c"
        },
        "item": {
          "id": "5ec837b6-4d7b-4b36-a025-ec6eec73fa5b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fe3fd2ae-65b1-42b5-8220-a8e04fd7e15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbebad6-5e9a-4477-89d3-d7c37b70d4b0",
        "cursor": {
          "ref": "6ce5b357-5177-4785-af37-f7fff14fc6ae",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f4d6b1c8-bad0-41ff-852e-cd3bf4fb6ff3"
        },
        "item": {
          "id": "1bbebad6-5e9a-4477-89d3-d7c37b70d4b0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e9ffb2c4-bdde-4912-b241-7e71a6cee767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233b54ce-051d-4b91-9049-4854c95dcaea",
        "cursor": {
          "ref": "80b7f8d9-e46f-4e9e-a51a-60adae99d093",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3cd8fcd4-a251-4eb7-b3c7-e03f4acd38b6"
        },
        "item": {
          "id": "233b54ce-051d-4b91-9049-4854c95dcaea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cec67915-b0e8-4706-8b36-4e42cc91b022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a7dbec-3683-40ac-9fb4-cc4875b44ffa",
        "cursor": {
          "ref": "417dba89-4ee3-4253-a72c-6a864560220a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61e65932-1a52-4cc2-b0f0-e887aa9acfb7"
        },
        "item": {
          "id": "52a7dbec-3683-40ac-9fb4-cc4875b44ffa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "80db6345-8e94-4bac-8fe1-22f17b735ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c8bc4f-3cef-4138-a345-6f446b7847ac",
        "cursor": {
          "ref": "64a9d20d-e7b2-4b72-9a57-0f8b08df0acd",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "43f814da-e9d6-4a5e-8909-35ba64d53b9f"
        },
        "item": {
          "id": "e2c8bc4f-3cef-4138-a345-6f446b7847ac",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "128c8d89-38c8-48c4-ad22-4ac0380ac630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaeb3cc-516a-4380-98ae-eca00d34ae9b",
        "cursor": {
          "ref": "8715d339-ba3f-483c-82cc-325796e06b11",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bbd18400-c380-420e-a98b-c5748d40229a"
        },
        "item": {
          "id": "8aaeb3cc-516a-4380-98ae-eca00d34ae9b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "029f11f1-c1e1-4f21-8a44-1d78aa3acdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a5e8f-9516-45a2-9ed8-b6ce167e0336",
        "cursor": {
          "ref": "cd213828-a2cb-4738-b4f5-424e5e710357",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a9aaa5ad-84f9-4b50-9836-302ebd9064e0"
        },
        "item": {
          "id": "425a5e8f-9516-45a2-9ed8-b6ce167e0336",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "34aafa52-55fe-4de4-b6a0-92c64610dc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92a6822-8b61-4558-9036-17bda4e9549f",
        "cursor": {
          "ref": "0fe9bb01-4ca5-43a1-bf32-11ba8b24d072",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3476f282-857f-4183-b766-bfdb890f436a"
        },
        "item": {
          "id": "d92a6822-8b61-4558-9036-17bda4e9549f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "89b074ee-7b91-43ce-94fa-302d8b0bfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8590b0-2eec-47ee-9735-a10b0291bf05",
        "cursor": {
          "ref": "424e14b0-3615-4dcf-b0f9-60d576e2cc0b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "75258140-7f1e-49db-9dc6-53a27574d439"
        },
        "item": {
          "id": "ec8590b0-2eec-47ee-9735-a10b0291bf05",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f3551c18-6688-48c0-877d-687b19c79a98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7c9ca5-7f9d-4ab3-9bd8-cc5a1fd7f0a0",
        "cursor": {
          "ref": "618011c7-5859-4a19-a0ca-b71b611b2ea7",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4f869a8c-7c24-4464-ba54-9e25ceac26b4"
        },
        "item": {
          "id": "2a7c9ca5-7f9d-4ab3-9bd8-cc5a1fd7f0a0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d8572445-a37a-4ad7-a43a-b8689a641454",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a9a65-8877-41b7-9143-b104f292afe6",
        "cursor": {
          "ref": "da3b3807-466e-45e8-a3dd-29c94b5a1b75",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bb1a6c66-0a1a-4210-963e-ba83a5bcc022"
        },
        "item": {
          "id": "631a9a65-8877-41b7-9143-b104f292afe6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "47376306-0f86-4ccd-9a23-caf6223350cc",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a50cd0-db12-416e-9f6c-091ea3f2c8bd",
        "cursor": {
          "ref": "61df12fc-0011-4a98-9c49-7847b329a2d4",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1a2afb55-6c90-4472-9960-d71b08015721"
        },
        "item": {
          "id": "16a50cd0-db12-416e-9f6c-091ea3f2c8bd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b79b39d3-3847-4b7f-b7d8-34cc2386e29d",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4c0b4b-a65a-41a8-a198-159a45f2d205",
        "cursor": {
          "ref": "1d2039ad-f49e-4b60-b31d-f894099dcd9e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54b0d6ac-061c-4da9-8b25-0edc5846b07d"
        },
        "item": {
          "id": "4d4c0b4b-a65a-41a8-a198-159a45f2d205",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "75f84eef-e741-49fd-96bb-5f7cb32ffe68",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
        "cursor": {
          "ref": "f7eec607-7633-4f23-ad4d-2c902e66d7b8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ba0c1894-77d8-421a-a97a-08942db34a30"
        },
        "item": {
          "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c768be1e-4ce1-413d-acb3-c1c9b6b3b974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
        "cursor": {
          "ref": "f7eec607-7633-4f23-ad4d-2c902e66d7b8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ba0c1894-77d8-421a-a97a-08942db34a30"
        },
        "item": {
          "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c768be1e-4ce1-413d-acb3-c1c9b6b3b974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
        "cursor": {
          "ref": "f7eec607-7633-4f23-ad4d-2c902e66d7b8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ba0c1894-77d8-421a-a97a-08942db34a30"
        },
        "item": {
          "id": "948bee2f-bbb5-4025-818f-c22ef437f44f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c768be1e-4ce1-413d-acb3-c1c9b6b3b974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eebb353-47ac-45af-aef1-d86e0642c691",
        "cursor": {
          "ref": "20e20e43-8523-4382-a26b-f198415b0658",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "585fa109-fb68-4ecb-8099-44dc81e3a1cf"
        },
        "item": {
          "id": "6eebb353-47ac-45af-aef1-d86e0642c691",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fedd638c-4c94-453a-98d5-82840725a502",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d68140-3c03-4337-bfd5-8c5a34e8431c",
        "cursor": {
          "ref": "806a1975-454d-4d7e-bbfb-e2b275ae23c6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1fe40057-01b7-4b90-8846-2be07981bc88"
        },
        "item": {
          "id": "a8d68140-3c03-4337-bfd5-8c5a34e8431c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e397f801-4710-406d-8af1-6f4f108097c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d68140-3c03-4337-bfd5-8c5a34e8431c",
        "cursor": {
          "ref": "806a1975-454d-4d7e-bbfb-e2b275ae23c6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1fe40057-01b7-4b90-8846-2be07981bc88"
        },
        "item": {
          "id": "a8d68140-3c03-4337-bfd5-8c5a34e8431c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e397f801-4710-406d-8af1-6f4f108097c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29af7547-e2f1-4c09-a697-af82444ae18f",
        "cursor": {
          "ref": "37d0b9ac-f29d-42ce-af27-208db1f0c057",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d6533998-9921-4bde-8844-a7e2b400fe0e"
        },
        "item": {
          "id": "29af7547-e2f1-4c09-a697-af82444ae18f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ad535f0b-569a-473e-a4bc-f3acda58a790",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ad361-8b3c-468d-84fe-48b712423ec0",
        "cursor": {
          "ref": "b6edac9a-eb33-4612-b517-99173fc49521",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cd0d0f02-7fb6-47fa-b073-e78aa2874028"
        },
        "item": {
          "id": "553ad361-8b3c-468d-84fe-48b712423ec0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f943754e-d52b-405d-a635-79adb3277528",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ad361-8b3c-468d-84fe-48b712423ec0",
        "cursor": {
          "ref": "b6edac9a-eb33-4612-b517-99173fc49521",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cd0d0f02-7fb6-47fa-b073-e78aa2874028"
        },
        "item": {
          "id": "553ad361-8b3c-468d-84fe-48b712423ec0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f943754e-d52b-405d-a635-79adb3277528",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ef634f-6e56-4575-ae92-9be63482b1f9",
        "cursor": {
          "ref": "8862ec81-ac58-489d-a7e6-eb22fbbc8ef9",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd3c47f8-0b62-4045-9b86-41ff56c84f0c"
        },
        "item": {
          "id": "d2ef634f-6e56-4575-ae92-9be63482b1f9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "70bbab71-4810-4227-9e82-eb6d70293092",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}