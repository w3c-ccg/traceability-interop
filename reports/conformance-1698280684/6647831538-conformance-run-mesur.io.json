{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fedd6ba3-35bc-44fa-a146-f1826a337ee6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ddbdd6e2-0efe-4dc1-8467-8c39406aac88",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d2d22ee-2673-4828-9122-09023fdb3927",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14ebdaac-3691-4b13-8978-057fb18fbef4"
                }
              }
            ]
          },
          {
            "id": "d0c6e992-2919-456b-b948-fc7225e468e0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ea7f22a-5625-4bec-b3b7-e1927b43fb23",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c235e3f9-73c1-4ad9-93a5-fcb60c98ca49"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47f3e70c-44e3-46e0-8714-effa50a5b846",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "00c58e23-0b9f-42e6-929f-1d76a1178df0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88ab4bb1-d419-4ae8-ad9b-964283efa730",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccf19bd3-7726-4bea-b141-b6cf801f7ed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc3f84ef-100e-4e47-afff-b759d2170759"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "304b3256-a912-4c08-911f-467bf62333ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "389f9cc7-ac23-451e-af9f-16200ccfc380"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aaf81975-c0a5-4d2f-9bf0-eb85a7a6a87f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5156f21-0ee2-4447-9dc8-f6f02fa4feb1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19ef8493-1527-4da4-bbb8-3e7f86280e22",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "96615c29-1de0-4d94-9b8e-315d7371ca6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9b88a5d-55be-4506-a8ea-a49599cce7f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "839f2adf-dc17-4a86-9b16-66a4d9aa0fa3"
            }
          }
        ]
      },
      {
        "id": "71da5f25-4f9d-4c79-ba89-ecaf96dd99dd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "054f8f9a-b1c5-445b-8e8d-7d6a666de498",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fdf1219-b4de-46a7-a688-b60ceec11c30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d93c5cfe-74c3-4a6a-8557-b04fef964ce9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08199841-73ec-4040-b8b6-aadd12f57e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb0b5d09-d51f-44c3-b00e-65ad803e6824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f242eb48-5c20-4298-af02-0d772aed4c04",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eb77fb-5e9c-4d3d-aed2-62089c0ddd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7910346-2639-4f9a-8b8a-e6fc742c5cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc58a215-0b7f-4a09-8461-a3d797baf683",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a21df2-3e74-4045-835e-0b56bb98b5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28ccdb27-8977-475f-9ddf-828b8cf07567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a807bf48-c821-4060-8275-79dee8aa445b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "326ab758-3c8e-4576-82ef-53e8bbd39f69",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09484911-5409-4b58-9f01-d607bd77ad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcefe5c0-7e14-4b62-a174-0a173ed5ec8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78a459c-07b7-40a2-a394-a331b37082fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975ac3e7-d822-40ef-ad52-79fe9468097b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d035ffe-7ebd-46aa-b44e-ff3b122fd76b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9c0418a-e7b7-4561-845c-c6a0c19dda2b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "264b8c13-69f0-4152-8082-26fae11e8388",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b3946689-4020-4253-a010-07fc46d710cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e55cad23-4cdd-4115-ad47-1d747f0cabe3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "caf5cf68-6ab9-4e09-938a-8f2f0e6997b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db8c179c-33f3-4c7f-8af7-8ac36d6766d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42d06dad-14ff-4751-8d92-7f47f572c90a"
            }
          }
        ]
      },
      {
        "id": "c1565348-3806-4e40-baef-bdcf5d68432e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74d8e650-4e20-489b-b02d-1a98aa3acec1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40bb25e0-a6ee-45e8-80d8-1df02dfc3957",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "43412eaf-0955-4f82-96a4-50a2f227e13e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de2be78-56fe-420c-babd-127a98d69387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5eebc5-c7b0-4e71-9cd6-b7e55fab8f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d0abe2-62db-4a28-8e6e-e029251c15b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986976cc-f91f-4095-a6c8-db81f4bfe133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0be5a9-9816-43e6-b9ea-95550da573dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e650d4b1-4d17-49cb-b4a7-f1d78e3caacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79edca4-c163-4414-919f-953a44410eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7669bb-2e04-482d-9f09-f1aa96d13f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32fe6641-f099-419b-ad17-6ef6921a6a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e62fc1e-affa-424d-9504-edeae31ee8a3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5e9a54-044c-43fe-806a-074614f1d53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af496ad8-5c90-4c14-ad1f-d4cb02459c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba1f313-f1b7-4295-903c-8dd4e31fb0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86e6868c-4eb7-440f-a15e-5d9ac9d8d720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c90abc-4dfe-4908-b642-03b87d51b411",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4aa4f7-e43d-4e3e-9a48-3140c5f8ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7c81c5-82a2-49c8-bdc8-97fed4f61a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dc3e02-2f01-4654-8d46-d48286303d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38d1bbd9-f773-4cdf-8cd1-a048cd097a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5361b4-0821-447b-85ae-ee90a3dead98",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060eb92-4cb8-419c-afd8-75d57c3fa90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce10967a-5da0-4bb9-816a-b536e35dfd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62fa80a-1791-4d3e-9f76-0c4ece4f1299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02a0291a-360b-41fb-888d-7da8e8d70ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62363c9a-ba59-4de2-acf9-1804d4e16144",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f258a7-2f0d-495d-a022-434a03eb611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9574ec4f-0de7-4074-8ede-51842dd41a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd4eade-23a2-41ce-9548-f7d53a6d30ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072b2969-a4c0-47a9-991b-3b45f9d815b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0b58f5-2a16-4873-825d-14bee70181c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8397828b-730e-4efe-b9cc-584af5147619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363a0819-bccd-4fd6-a139-713abc0fd971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66dd5d7-a1ad-4aa0-a7c3-fce542237497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0d3b95f-3f11-452f-9fc9-66819aa1f6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14d25dd-cd05-47b9-9a7a-9a677fe64b12",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab064b2-eae0-4451-898f-8b328ec6f05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62daf286-32c0-4580-9492-b314b269dff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4e6af2-6250-4da4-b28a-d850ceaca6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15cee20-1d4d-477f-98be-b96b6d669c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db8b52-3f20-49a5-b97b-e7499278313e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafc6d00-3d60-4745-91b3-4e595fae4f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466913dd-4201-4663-96ee-038d39c77b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b677f07a-d9fd-4563-8e9c-b8714eb98b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ab9eb73-b13a-42a5-ab12-870da2fde628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9aeb5-f5eb-40f9-911f-b2062e3824c3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675108a1-aba8-45a9-8fa8-6512209b2cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca12ea-1416-4415-921a-daf78ded5d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c3e50e-2498-488f-bb5a-9a5173e78666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e8f1fd7-b820-449f-89b5-d9abe3cc2a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b42b7bb-c8ce-4476-a7c3-a1160af8231c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0139d0a0-0bfe-4ed3-a9cd-03f8d47e1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b6a8f6-934e-4a4f-b60c-fd8dbac2526e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fbc9cd-3276-4d67-86d8-c2dd370b0591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6931eb2c-bff1-438b-9e5d-a0a7b8995dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d94c7b-6e9b-4367-a0bf-0d9e3bff97f8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7128bacc-537b-4e18-97e9-f3d02a5f21d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39272993-ddf1-4780-9a30-37d77a09c6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363474a7-86bf-477e-8e66-15df31d3e22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6816bcff-d036-42e2-80c8-f047fa7ef7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8e8d73-c257-481f-858c-c4e6137337bf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ba5930-bc68-4402-8024-94e37a2f78bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335a2ace-ae69-4f11-894b-a4812a06bcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd1a89-95c2-4b65-a34c-0584cb6c4824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2faba4a2-83a8-4ba6-bdbd-9b801b18200b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a8ba87-1acd-4b16-82b0-e8051f67edac",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67befe1a-1cc7-4d45-a971-fdb516d656b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d2ed81-bd9e-4b54-96a3-1062e71b0868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fa95a6-163e-4ab5-9a6e-313f108d6ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31a77417-b869-4798-9637-09ed4cee6695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97c4215-d1ac-4b4a-a1be-9c567c171e12",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eec6bf-b468-4ace-b560-1e5cc6dbd56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b28367-eeb4-4dc0-a575-aaf777a5b32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2525468f-09e3-4a60-9a5f-c1948a4eb633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "988f9dd7-b0c3-4aa1-825a-3c037f597500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e046b8ca-70ea-4c64-ae0a-40967a5fd7ca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281bf517-9436-41e7-a04c-0c5ea6e8f7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464329dc-1317-4752-bf2f-236b7d94309e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30527f23-dc82-40cd-a16d-8ee9738cb407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f8f16e-0981-42b5-8d8c-c62c42c6b8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf19ade-5768-4b05-8b6d-bbf66115b35e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f400c9-9de1-49b4-ac29-2b02cad8764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29827163-6d1d-4740-b5bf-39c0cdb2947f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad27a522-eac9-4509-982c-a2e59372e58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b6513d4-cd60-46f2-8641-95a8b01e48c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d93864d-f900-4c1b-8530-db683c2d3a4f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85430dc7-069f-4be3-abc1-b86f2c027bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dce500-d6b0-4d65-992a-6b5d210b652a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fffc33-f624-4822-9e38-5e23e9459af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1513e252-fa95-49be-a0df-d16f58f085c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe4bbcf-e7bc-43dc-ae26-5cf1f25eb582",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a72d72-c586-44da-b261-9194db19029b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d2bd04-d032-4571-9565-778ebe388024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdded17c-6894-44a3-802e-da15ec47a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "496ae546-a2ee-4a1e-9ad7-e6234150274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c01412-92a8-4642-bd26-8ed94ef47a36",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d6fa94-4f8b-429b-9159-0fde8509c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace5a065-10c9-406d-b1c4-fb9fa2655460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee88c3cf-b95f-46dc-8e94-904a3dc45d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ebfce8-0d4c-4f22-89bc-ddf18792ed21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e6a7a6-64a6-4c06-92c9-eba87c8ee666",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cab741-1722-4cb9-9827-8eef27d23a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a4ae84-36e6-402c-bf82-9e9e036e477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3dbb88-2ff2-45fc-9a94-b3d41a97e499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d19f360-7a0f-4433-9eab-fc812e7fd458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133738bf-d781-4dbc-a170-951da1af1ad8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02baaa15-f7e7-429a-b582-895e3291f0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf691b7-8c3d-44e7-9136-22b2e129f323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bf71bc-f10e-4b57-871c-dae9939b8b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b479dd-eb7e-4bb1-89be-e2d5c0b09394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b00171c-30f0-482a-9b00-71ff2db379b0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacbd86b-1126-4c88-a02d-3bd83bedda92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1822e4b-f796-4808-b153-a14f8e478265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d2936e-2125-4e16-97f5-dd1eeecd0688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3564cbd-0950-4cea-9db0-4e294cbe8cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c2886c-2896-49fa-b7cf-def579969649",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a9b230-5bc2-4981-88bc-be4a02855303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3ac0b5-8d09-4f31-83e1-1932ad529b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbec5444-6822-4987-9134-546bf05ef321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "920283d8-733f-4ec5-8867-104dd40783a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe68e07-7bb1-431b-a087-3c9da47b3651",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bfc005-c165-4257-833f-ea9584490383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb410bb-6e41-40d2-8985-89f1dd0a578b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb6848f-744f-49b3-9e04-3a02348dfe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84029607-c41b-4122-b87a-1736c7f14754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deef5265-d342-4eb4-85a3-e9914c728797",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ba50b3-6be9-4d78-8973-2dba0db59e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6f64e8-1b77-4197-aba5-64bdbad8c695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe48ec3-389e-46e1-920a-ef92e0dc887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa5a645-d5d1-4680-b3f6-c4d5ce4d3ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782caa06-bf4c-479c-93f4-79b2cfbebf93",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b9c63c-0c58-4bcd-a4fc-c1fbdef9d2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bbde3f-2047-4b99-a5a2-285a04c3253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cda21b4-869c-4b5c-bc8b-645e7170f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8414719b-d387-473e-badd-a669cb6606db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b4a8ec-db7a-493f-a720-7ef32fe21018",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94abc155-4aa9-4115-9385-60351a7a020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d97b8ec-996f-4da4-bd41-9654271649a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd576d4-9367-4248-84e4-7481edfe9fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82fd9984-0dab-4d39-995b-deacefb072c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e93825-2f4f-4877-9a84-ab48eadaa8ed",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaccf02-8c41-4d9f-a45a-e4dd83533008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7a20c4-28de-4ad5-a7ea-9ee4dfd0fa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a24df87-9e1b-4a28-87fc-2a81ca585cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8f08c8-88c1-43e4-a547-97bc3a5b47be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb0a825-7448-48d5-a3a9-a5f9bb2d276c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41770556-f8e0-4893-a98a-43288376d9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed419919-b3bc-4f64-9254-1bcf70d94a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedf877e-ffe8-487b-a116-b4fcd60de7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6119308-6ab2-4ecb-987d-a0855ec8d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea28bdd-c920-4a5c-99d9-80da53b49817",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ede7cb0-1696-45c5-81c2-c0b334729386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f380c41-0d10-4bde-951d-e2ed18b678fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e29d6-0d34-4f39-8563-06fbcaabfa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "266ddc5b-e463-40fd-98b0-d0e0f5bc5814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf78f9b-4065-47fd-b853-05e4ee95fcd6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2988ebeb-8770-464f-87a8-952e9618e220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50000733-e280-4e34-98f0-a3d7b6042f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e9d931-13b9-49a1-a800-88e8ad99aad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4efb4c-c101-4b05-b62b-ec60e015a589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d366416-bf86-4f5a-95ec-08eeeba3a871",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a43d52-87fa-4a73-b06b-b68f66ee7847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81874c6f-8954-4534-a878-099ddc8521d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51969c18-9494-49f5-aed7-05c269a32a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d77c8fa8-6c5b-4d19-a359-e102c37ba43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da8d206-e1c4-4cc0-8ece-7a3da3f0f1da",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0ce1ec-c301-47ad-87b1-a6c9dd8d229e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b22f2bc-8b11-4201-aa8e-e0650ceb3c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5062ac8-2559-4f29-a23e-824b008b8009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0818c9-336c-4c31-a3d1-c2550c249842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c298ddfd-a045-4873-b073-7d9e62c793ab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68131d04-bc65-4bb3-bee5-ec649111c675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ff4b9d-ad73-4f41-a887-33f005f95262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9decdbb2-085d-484f-a03d-8a43a980db9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ecbec0-da89-4bb7-99b5-e71db8fc6bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9c732e-7ad4-484e-a943-860d2a2785dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4980fe-1d92-4f62-8b2e-dfea320b23ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52ae949e-6bd1-4cc5-9e63-42623a36982d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f326aa-7782-4fbd-87d4-5ccc6447b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b533f4-81f8-407c-a291-f745ffad530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b9b45f-bed9-4f93-98bc-59a2973f7f34",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630f7728-f7b5-40fd-9301-2da8913e6765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fea2fd7-6af3-4ec8-88d7-ec4c288798f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820b12e8-0f18-4443-a7d2-b619bcc87ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f31848-e326-4fe0-a186-75c4a20ba0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60da7f1d-cf86-4939-a1a0-1a61f94bcd0e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2430820f-a248-42b4-b67c-caa3221da333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0883484a-3c60-4a6d-b08e-3e75d088390d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015d365c-86ef-4dbb-9e7e-fc254bd5b643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c821a01a-1283-4d9d-ab01-403dad3f0ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a459bb66-130b-4b0b-9a29-c918f3d442f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8ea7e5-f7c8-4857-b541-f038226eaca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c10c57-3ac2-426f-8702-a163faf612c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe117fdf-e99f-4df7-b722-16a5910cae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef5844f-1faf-4b17-ad0c-5f5ae0512909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceef458-496d-4177-a321-7156501e5d53",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb5a56b-755c-463a-8b9b-5a8286989d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1b5e1d-74c9-45b9-9440-1a8b1ebe5e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076d9fa1-71f3-496f-8496-662618543981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3312b8-f5b2-4280-9107-1120df9b0633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a60b3a-5a18-4229-bc98-5f8e8e41fbf0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0a8515-589e-4d70-a640-74812e72d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60047c8c-9f4b-41a6-98cf-484d4b2144fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df534967-7337-4662-88dd-3f9043d082b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "efad3421-ad37-477f-9b55-f5f93f843a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f13fc52-e66b-4067-9ac9-76ca5648f53c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511df5d-6631-497e-be08-c0ca17be7d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b15912a-885a-475e-8f77-3ad134486bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a8d82c-1c63-41ad-8d91-f50f3561cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27d9bf40-13f0-4ae3-a7bb-cee5fbccdbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59ff1ca-7b22-41b5-9570-3944f3cd5bec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b860720-37a9-485e-889f-d5090089dfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6353af81-8d64-4dd3-aadb-cef728056a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc209c02-fd61-4c60-ba35-437b29fc606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "009e8bda-d3b7-4500-b95b-cc7edadf3205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d72e4d-487c-47e1-b916-3508e7fe5cbd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a2429-bb0a-457b-bd78-4958fc212bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde4e324-06df-41a6-ac9c-954af7827349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841484e2-46c1-4c57-8860-505f803d497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fa4de9-ed8e-4fc8-ab74-0612d5cf0cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3a2187-788e-42c5-85f8-80072934f69f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87008fcc-0de2-4b01-9f0f-3c8f61afd3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeecefe-cbf5-405e-8137-a2bd1c160af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c65eaf3-5684-4aa8-8fd8-50c800247ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f04462e-6255-4ed4-bb53-b92511cd3db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c2894-3b2f-4e90-9bfb-b5cb0431803b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8145d41b-dbc6-4260-8bf1-e426273620e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114af2c5-678a-46c0-bba2-41d6c6773ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e90a248-86ec-459f-b03f-57e1827f2450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "819de4ef-2a41-4fd6-a720-41b4da91eb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89358c3-3e56-4ed9-96bf-3377e0b38681",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b84bf-6494-430f-92da-9d1c8e80aa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1068e7ca-30a2-493c-b57a-817fee8e60d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd6996e-5ba9-41fd-8e0b-01009c4ba74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea897f7-2c97-4eda-b39e-5bf3b83eba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f40c250-96e9-4bf3-b650-9c383292421e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa459623-cce6-40fe-be69-ee5a05a9a751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133c0176-cf4e-451b-85dc-909ed039116f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28f2e04-7a56-4651-a35c-e1bd711d0fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97d43252-6e2d-4a44-92e9-819a61b04116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1806ec6-329c-46a4-ace9-6388d0441283",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf84cc-63a7-44d4-97f9-496a3ee810f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1c62d8-3d55-4a60-9de8-f74cfc36b762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17f1777-b023-416a-8bd3-4b996d61d8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f98f84-cd2d-4708-bc28-159e0de64db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbae8599-ac45-44bb-be81-0a9cf3cb1f6a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0758d8e1-a9df-4343-b799-a6d8eb54e5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29084534-6c88-45ee-b3a2-e4a5d83f4a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e45bca-b790-426c-9e56-d2e4ea9d1286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaf93aa-b5fb-4136-9263-80b4efd90514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9f968c-33db-4f50-abac-4b7c4a0fdb5c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b4e36-9a0a-41d8-9adc-19399d2dbc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ebe16e-6472-4ced-bd0d-aefe1c933bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2534fd9-3d09-4506-8715-e003c72bfff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c1684c-9344-4cfc-8044-a6ce197affee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2538f5f0-00c1-4ee5-9b50-4420a1ec22a5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ebbe58-829e-44fd-8d89-22e30daea8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bb28ab-3f95-4ebc-9f25-d942602f4be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aa6439-a35c-418c-9b50-48f7d1b878a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ab8eb1-06d0-442e-95bd-1f29a2e67323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515b44b8-49e7-4d74-a0bc-21cb9b561fd3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a13e4c-3e1f-48b1-a8e6-352f472de50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fc2791-6dea-4de9-ae11-8013507066ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70420cb0-2b90-4908-acf1-2ae8db26ee97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "776df9c0-70c0-4a24-bc49-5ff3ee08aa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb41b5d-1bf2-44e9-a2df-b7d75d74ef1b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa1f08f-048e-46d0-9fbc-b149ec4e3c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd18257b-10a5-4229-96b7-472809e7af9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48f4de-1230-4633-9866-2aa40159f2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ab0166-97f0-4b28-8cdf-acf0087ebf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062166fd-781f-4605-a8be-28fda8a3544a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6a0727-1411-47b1-9389-fc219d3e5773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58e9835-1813-45eb-89d5-f9e94aebbf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cb2d02-5efb-493b-a322-744a90fd919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c11778-027c-4fca-8afe-0eb1e3aac204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1e5d2f-0032-4a45-a337-6d57a1fc3896",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141eb376-2afb-45a5-8f0f-8aa6e94ee855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e578f740-426a-40d9-81f1-5e22801906c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f847ecb-e5a9-4db5-8122-790048d1d3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5882ad0f-32dd-497e-bb07-9b69951fc87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2024f037-7172-4472-91f7-84752c91cafb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ad2af2-44cc-4bda-86c5-140835d0028d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4236d79a-7ead-409f-9c68-2e7b7eed0377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91df54e8-123a-406a-ad85-fed5910836c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83b0d48a-2f71-4071-8cb2-4e52bbcb4d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f659420-70c5-4415-a944-8d3e85404103",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fb59f6-8d98-4322-9363-c5a922338d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee720e6-1e80-45c2-8186-9c82cd4b54d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c32b26-6060-4db9-815f-396aecff564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8f71f1-1c57-4d69-9d6a-a3d4a09594ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0643427-d5fd-4d91-87f7-0276cbf59c8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0264003e-a22c-44be-8913-82989528c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bc89a8-a9b6-48d7-8af8-6b47170190e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c646e-0c86-48d0-880e-80135d258789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53ee446d-eb33-44bd-a3a2-0427268b8763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0a5922-db79-46ca-bb3d-6077f234390f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ad1ef2-dfd9-4868-955d-8680432c6db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aa9762-37ee-4d80-9093-6d8daa31207f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5a3139-114b-42c3-8971-ee24e246197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a7370f-e777-4ac8-95bc-b5b05de233ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fed237-5685-432e-b549-2a184c7b8fb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd565e8-4c0f-446e-8b90-f0257bce0f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14588154-6bf9-4696-84b5-c733ddd69799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c38b8f-ff6a-4ae8-beee-bf0213e90223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "51771507-5621-4933-aeae-75c180044b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba22df04-2846-4cd4-8630-2e5487de9df1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311781f2-3126-4551-b26e-eb8883aebbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fe6312-3c28-4314-b647-9b0e0dc11458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7e3fbd-bd9c-4af4-9913-d6676fcdf0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4042c231-c8b0-4463-b82c-48e070579ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9595a5-8931-456a-99db-6725954a3459",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b5d84-4f19-47d9-910a-6ef13a2c0390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b48f437-203a-4092-b4fa-dae33ebe380e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dac9084-f4b7-4be9-9714-c75e566fead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe4f844-e534-444b-b745-84597d5fbdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5c56e4-bf4f-4ab6-b4cf-2996258ec799",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01529d23-77bf-4e7e-b2af-b789e5d8a55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4191d02-693b-4ced-af6a-246405a4b357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf99a0ff-0ae9-4438-a788-149fae7607b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcbc1ae-1e28-4d3b-856a-16a785bd4c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f757df39-3400-4835-b5a6-d1f254aac0dd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115b2a0a-a5e7-4f1f-90d1-5e60f8ba90bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a54f5e-7f6e-4eea-8471-654b50d84c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37333b0e-8b2a-4ffa-a6eb-66c2e08fa50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb3c5f-13cd-4942-8e5a-7e58b518bc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cf9757-6c05-476d-ba69-4660a6ccde46",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df03173-3ab6-4aae-99e2-b2c8c3509ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea323ad4-c995-4e8c-b1e1-ea4e65245c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d6f9e0-f3b1-4cf7-ad69-44f128ccbbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d382701-9350-4594-8e6d-014827cca7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597eae05-95ae-4419-8d7d-fdc5f2720512",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b258ec-f66a-41c6-b0f7-aa05039786c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62409631-23c0-48cc-9512-3710711baf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d2a232-a136-414a-b749-8fdafaa60203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55e0349d-3878-4d79-bd77-c490cfbc5a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be01dde-49c3-4375-a6e7-753d8f927a48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56378aa3-4c9f-4844-a358-b6ca374b98ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75193cb1-6399-4480-9daf-f101a8706e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8849d67-f469-4471-8829-a38791eaef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d78b28c-498f-4d94-824d-fe722da2e067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a53e97-3ea5-41c3-a80a-164187d9e08c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b80036-91f8-47dd-b226-f75b9524939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd0ed2c-d050-4024-b9a4-a3ebb81540b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f5954c-73c6-4ec5-b174-3fee1a30c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a3db67-f344-432b-8006-35dc4b538460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae85dbbb-016b-4730-8ea1-4a46e57888df",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17db3fc-649a-436e-ac73-2c63d84a3100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23fa31c-139c-4cd5-8ec5-9700fa2f3026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fd110d-a9c7-420c-a375-6c660cc3844b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e972dd-d138-41ba-a196-64062b5df56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5211484-8edd-4d2d-ad89-c9bf5c0d64f4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a3155b-a269-4186-8994-0a7aefefce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156410a9-9624-4a76-a6fa-2d19cde1377a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2c3ba9-98b3-4d23-8d3d-ee0809cd9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd259bb-defa-4214-a7dc-aa8be98875bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc048019-77d9-4579-8b87-fe0784a07261",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4a7d02-41e1-4052-833c-4a8c79a8ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533ecac7-da4d-43d7-8018-ad83437b4f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b7d00c-b68c-41dd-83b0-4ed9b1cc9c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02d4d95-1feb-4815-882b-b1e5bcbaf054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afe48e6-e000-4ff3-8a64-87c5d81cabe8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1592c668-e06c-44e8-8f71-5298b2ff6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f442d4-fd2a-4288-bb4f-a2b07a3a2c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790a7bf8-850f-40ee-88f1-a0f59456d9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dfb0bf-6304-4d25-82d3-0b164a3ef885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1371bbfb-b57c-43ea-b34d-adf1b88d9c88",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c00741b-8d34-4709-856d-aedb8bd59e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71632b81-1cb8-470d-bb81-17a0133ed019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a5ff35-d9af-4b66-a9ce-4cd4f94621ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a048e67-32ca-4794-836f-b1658d435fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ccccd9-a7f5-49c4-b7f3-39ec1b8beecf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883eebae-dffd-4456-9bcc-02288590d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061c0cfc-015f-4a33-a233-485179772fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfe967c-c166-4767-8ad7-76a18f0e7d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d52ab7-7d4a-4c8a-97ea-57215e233899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fcef3e-6bbe-4263-9086-5398a134f356",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0499389-9170-46e9-a3c0-6eb0b02a44f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cbdd90-83c2-48e1-be26-75c1709bff7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e42ebe4-6f54-4bc3-8d41-2598f2f4b8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5e572f-223c-408a-862b-a32fe1304619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51055937-e7d0-41a9-ac82-fdeef97e93a4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65460be9-fb23-4347-974c-7a371700f98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4a50e7-845e-4d1d-aab0-7a8ea9b75884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0225780b-b304-4890-9d99-686c79700598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20028d4-ef1c-4d4f-9c0d-74ad2f9e04c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bf7a29-cf3d-4304-8ff6-3adbf7ec6059",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8dd509-2c91-4f4e-bb7d-6103b90fd346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5c0f64-4f16-4f64-9cc1-a7822f811ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c28abce-0d70-4c09-acdc-11ae6ee82ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3614bdbf-075a-4c73-bd8c-52d3de75630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0698b6b-4f01-4d2c-88b8-c6235ab783db",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c496a522-5c99-4972-b7ba-7c7bcb29c6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6967fd02-ec5d-4461-84ed-8cd7e87eca47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ee2814-f7ab-4e28-898d-11d4f2546f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a643deea-456a-4f95-9380-5439af0ec3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b19d06-9dbc-49d2-b589-744b53ab92c7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e84b9d-28f9-4a1b-a677-b57a0e1b5fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50369f8-f517-44e6-b11b-64b1fef02a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081723c0-ef00-4371-be99-c87378b80bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b0175e-577a-4277-8053-6498832994ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75bc073-ca6b-4212-acb5-b6e4816df494",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c567bd6c-961d-4919-b6f1-7b9b6f14fc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff457195-df14-4ce1-82d4-8bc4cefc263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bbed36-67a3-474b-82ee-d73650054bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb49b28-c5cc-4d2e-9b03-c1974fabaa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65556d2-feef-44bd-a2c9-20b92da954e5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feafbab1-b8d2-4744-86c1-c6213a6317f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b6aec3-a265-4f11-9dc7-17cb040fe2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce50635e-5e5f-420f-b20d-b5c4a4a27670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2bd0c2-b60d-4fb3-b0f1-62e7edfc986a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de3548c-1334-4220-bee9-8c86580f7aac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a9b501-9bad-4d0b-8d9a-927ca1e2e153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c44c7d-f4cc-47ff-b7ff-060faa9776b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df93c2c-6179-444c-8a0b-2824c6fb0a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e726d34f-2c1d-4a40-bd67-a4a98408d250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e117762-2ab4-4f08-9d58-f3694ae7a3fb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961fcdc5-5cde-4001-92ba-a8c57e812ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4517e5-0d7d-4edc-b376-0c39bda8c0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e0f1a7-603d-4060-8fda-44e36c928601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe197cc8-8eb1-4901-8be8-41541170ec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d948e42a-c9e7-459b-8791-4c49ac30bee1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26a1da9-086e-44d2-9962-8a87232de42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957af8ee-90c3-40c1-9faa-aaeca16b2d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e6b4f5-45de-4d3f-a793-3b9d35a84112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03c9872a-8c57-4334-aabd-76dfbf582bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e04d24-c2ad-4567-a243-f9adc085bf16",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b573aa0-44f4-4180-a3ae-5fdb8972fc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8378ff6-19a4-45ec-8979-97e8ba56a249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df6b4bf-8560-40d5-b4b7-dffeb9f814ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "878f4fe0-d534-4b4f-9302-2ce6546cef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a4af52-db3e-4ec1-b560-be873bdc19b2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120743d4-6e5e-4a78-8885-528db11a2646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e34120-1e23-48e3-b467-0a908b403769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a7c2d-0a58-498d-898d-1caf6486835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c90db5-4ad8-4014-bcdb-35457f520d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8363eae-f177-4171-a469-376e542196d9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4c3fae-6c8f-4baf-a425-ddd3de7058d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44645a42-4026-4c2d-8126-dbfacff10614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0233a103-c7ae-4375-9bac-c80369dfb3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5baab200-6ff1-4540-a2e5-8d5ace821a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8354e6-5d17-4834-81b8-98115ded6a1e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38f9251-42b4-421f-8357-925db77460af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a55aeb-f315-4949-af14-83cfc839dc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b359ffc-4abf-432b-83d2-ec6eaadd8345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62ed868e-b534-4616-9eb8-caddb640a23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e8a74-4bc2-4e01-90b3-4c6663838f07",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93abab63-8ec4-4d24-8eb6-95b01f4592a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bdb2a0-c646-42e5-b615-2d69c93f9915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebff0b8-0ba3-493c-a71e-b926abb3cd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1246b7ed-98ea-4030-8fb6-87d2061732f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a491110-a4ad-428b-9476-38b9df3e6fe4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba0a5cb-2fdd-466e-a1fe-b8ec288bc5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9966be-cb4e-413c-bf9a-5c9bd80e9a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d76b9a1-dc32-404c-8eac-05de4babaaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7db624b-00d8-49ba-ba2c-e3763b292bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f8690-8aa3-4fdb-be3b-ef36695a3ae0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca04bc04-913d-4b66-a86a-0df83e9f1485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e975c7dd-ff26-4dec-abb3-01c6d0310406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8843c0e-f297-4a63-88a3-d262a0b1cc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6fb392-8b50-4b44-9bbb-3fcf0e347d39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8312034-da37-4e86-a6b8-8ea822436f2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef7735f0-16ec-4a0e-a8df-2792cda24423",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec92bc9a-1fd0-4bef-b9cb-595272621e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c69301b8-9d03-4c18-9941-1ece720568a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c48df39-37b3-4f78-b52e-432de39c09c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e50397-f923-45ac-b623-b03b1f3cfc81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48545068-6eef-4fba-8849-c4ed3c794800",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57b0a962-9eab-4c41-ae8e-8c1055b3a24e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd82f5b2-0bd0-4c34-8354-4df863aed62a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd965099-1027-4a2b-a51a-b61ab454def8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e41b926-17d4-46e4-92bc-3ef01b451742",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e50be339-c271-4e48-85b4-5d3a4c3f0339"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0adc1202-0ac1-41ea-8835-dd749bf9d0f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cd2604e-fa3f-4226-9785-6f1529804975"
                }
              }
            ]
          },
          {
            "id": "b84b2a9a-8e2a-40f7-8036-c0954c33ebaf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "662a2815-c41b-4eaf-a32e-955147d2657f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0f627dc0-77e9-4100-b615-c60f56d2195f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a95cbb1-5753-43f1-86ba-6534d87d64be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d0af85df-0b1c-465b-84ec-d684b630025f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75b987-cfd3-4927-aed7-17a79d9cac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980d13b1-b855-458a-b9a3-73607f85c2ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "580bace4-9de4-431f-931e-ba9d1f85aeec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c64cfb80-c081-41bf-aa8a-25b2396319cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02b05b5f-7abd-4465-ab3e-8ac3371a0757"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4707e8e4-809b-4722-bb47-d066d726dd2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e14b9186-f48d-4912-a747-4f46d1f397ad"
                    }
                  }
                ]
              },
              {
                "id": "387be426-999c-47ea-8eb3-a9696a994684",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a54692b-0218-4127-abb4-50d6b5ac5da0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b6dafa3-37b6-4264-bdcb-bdae1beb6bb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e21da86c-2c20-404b-a4b6-85d1628b1ff2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "303ba2e9-2a41-4cf5-b451-f95ec7cb0ecc"
                    }
                  }
                ]
              },
              {
                "id": "c5fc5a30-77d5-4b00-97fd-6abbaa57efdc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "397006ea-cc0e-4636-8bf6-b80bbad35bc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83727be5-1c25-48b9-945d-4b3ecc64b82c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d877e30-df34-414f-ba6e-4edb732f8c5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "803427bb-d398-4dee-bc96-13dfaabb7dea"
                    }
                  }
                ]
              },
              {
                "id": "ac7d6433-7e01-4d6e-bd60-13b67f349271",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "078145bc-2547-4e88-8dcf-e66cbfd1d225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95ea6c3d-e0c7-474f-8954-0af34c17befe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1231efc3-6613-4777-904f-645d4eb8959c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "80662bba-74b7-4050-ad98-d3ba14ef9a6f"
                    }
                  }
                ]
              },
              {
                "id": "bca392bd-b255-43d3-a01b-96574b041bc5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14a60496-6459-4664-a659-631509c6d62d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4fcfac2-e9a5-4bec-8c5a-7ac24a654f6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5162427c-cfaf-4aa4-9061-902361f60e2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "25c35289-684b-449f-91c1-8517c1091815"
                    }
                  }
                ]
              },
              {
                "id": "c6c34ff8-05b8-4d2b-8f58-337b4d0f124b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3473b6a-7acf-4e72-9897-da01fdf6c811",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b7ace29-5e28-4d67-9be6-edbb6c32c52f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9090ac2d-28f5-41d6-9845-fb8277eb5374",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d4a3cab-c380-49cd-a827-5101adf7b99c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7be5ed5-0fa7-40cc-9cb2-0d6ab29354f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc2639bc-625a-40a0-81c3-1adef8eb4081"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fece854-b1fb-4724-afda-69dde6cc05d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "987d8789-c87e-40cc-aa97-37d1b1e1a30e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3230a779-0874-4059-8a56-ed30915574f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "84d3afd4-87ac-4925-928b-5844e8c8ae69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6afe880e-df1b-4d0a-a8dc-bf615d3a0ac1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74ee92ad-e0b6-465e-84a0-29c2bdf5e693"
            }
          }
        ]
      },
      {
        "id": "4aefaae0-21a3-48f3-82d4-5837954a110f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "52ea518f-1fc0-4a44-8520-0a0458d66ee4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dff04659-f2d6-4870-98d2-de8d8de58916",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cd33f5c-d6e8-4157-9977-cab37a73bae3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c556622-9af0-499a-92a5-006b42590150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f89714-b8d7-4bdc-8c44-6ba52a19b67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f19ec79-fc2c-48b0-8316-f013cd42ee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "747ac551-87bf-4d28-919a-54bd225b086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07bc881-fd7b-45fd-bad7-ce5c23dc9499",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5f1c96-d87c-4347-9a29-fa0139d81ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47165d2-e715-412d-9dc2-bf9b5e50fa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2500886-876b-469c-b48d-d1c5a0113a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a39e06-16f9-40db-a8fa-bbff2062d803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450ab7bc-cbe7-47ed-acf8-cd625f7d02ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16565a46-6a02-4d6b-8fc2-8ecc7c1c3a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab2af14-a17c-4fb6-b428-331c6676df09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d66c68-192c-4df4-9c7a-df65e73e9806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72658ad-6388-4d9d-8167-b6e0895f8f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c721cb-ef92-4727-8c31-45711cc1fa95",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6e915f-e70b-4e5d-9d5d-7aed0f63a363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3032319-4820-46bb-8d3d-20e7f47e0b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fe03ac-79a7-4fef-9cb3-5c64ef3f048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d15b285-0883-48fe-9ee7-71a8652aa0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b7bf97-7669-49ee-ac6a-5d4d6f0b78e9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f600a696-0994-45a4-ba46-f07ac7f26fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c68e162-e187-4e9c-a123-e8f73c9c856b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306127b6-92ae-43d4-a23b-41bba4e27d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a68bbd0-04c5-4706-947b-9111139c199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e47ae97-2103-4cc9-9661-858400de4a39",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99469619-74d6-4b37-8c44-fb20bf3a7ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef8ec00-81a8-4421-ab43-bd4db3e23490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f94dc0c-bb81-4a45-ad5e-a9fe76c1b803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e61814cd-1b90-481e-a146-675a089cb705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72271867-4672-41a9-b7a6-f5040a2e1e70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a59857-82cb-463f-8e84-722bc24a658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d02fd2-a824-4d33-9526-71b72973e228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71c2061-c5d5-45a8-be76-45ab61d8f7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf47ac9b-8a0f-48b0-9608-f6ca7aeab2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be196ec-ca93-45f3-823e-a6579c013463",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e0db64-1bf9-454c-b330-3a9eb85a25f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620f51dd-62d2-4288-b2b3-be71db77dbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe1d241-355f-4563-a0ca-a1be8b035c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "635d3bd5-918c-40ed-9923-d12d28c15ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069e1493-2be5-43ad-b627-cbca97007d21",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c292e58d-55d3-43ba-883f-4008ed17d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2719990-fe20-47aa-a92a-3dcefa0cc1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995a9e5-9721-4911-95e2-e3850bf23ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0230b2-737a-476c-99a0-3982f6b361c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82309df-45e2-476a-a41d-24946dffe022",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814094a5-35db-49e3-b246-f57fa364b98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acb4aaa-62cc-4a4a-8a53-d952a353274a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a918a7c-c5e4-4f71-92f5-6c7a8e680f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b9b414-3546-4a09-bfbf-630ea51c6c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefe1352-09c4-4ac1-afa6-4f8469967916",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dd5285-5142-4b44-9fa7-2a2bf6dbef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1ffb63-8015-4493-a488-9a8200653b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a7d300-4182-4801-8bc2-ad9799b241e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "55c12f43-57dc-46c7-820a-1cb9d7d3d0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfbcff5-20bd-403b-957e-8be9d0c2e1f1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f127b024-7498-4b35-bcaa-490b16aedd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872def8b-fb46-488a-9cb5-2240a3ac0b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf096f4-e2ac-46d6-98b1-97f93c08f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ca747e-ba8c-48b3-9567-8bdb95ed4566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe269460-7189-4521-8a96-26b96c734188",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fe8910-4a41-42a1-9abc-a7df49e16dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce97515-96b9-4419-83f9-2a8165772beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb533ea1-13dd-41b1-9925-b25b7a94e497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7edf46db-f619-48ab-a1a0-f83a4a7cc38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a564fcd-e8ce-40b3-859f-10d89fe5524b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854cc93e-0cd0-4b2c-81e1-199dfec242d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f2bd9d-f4d8-4d65-acd8-d783b5ec6512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa58b53-9bb9-4c55-bf6f-d466eaf8cc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0dff33-1876-4f16-bde4-3938edca6764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7d48e9-970c-42e9-b32f-18a58a5a9dee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20362f01-6787-47fb-9cec-624bcc75de75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dfcc1b-6c98-489e-b3b2-0229840830e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009de328-0656-4796-a979-e04d40ddfa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac7f9b9-688f-48dd-be2e-8486a08e7518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433e0399-4324-4fdf-bbd8-e968c1a26a14",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015e6305-87d0-49df-9cec-2c7c7051e5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af3ee7b-ffd8-445e-b231-37d1cd052552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bdfd4c-1bdc-40e9-8b33-039f447de81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d8867d-12a4-4637-b348-2ab89982f83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043ad766-e2a0-42c4-956a-cb7f0fdbd169",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc32b3-6646-47e3-8884-edfbcaba0357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609a543d-b265-4654-bb0f-d7d742b70e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b52c8c-d8ef-4de8-8204-1235ff7118c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "59eb710a-6766-4ee2-85f0-75472665edd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a795b72-3412-4dc9-8be6-d0cd26241684",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f00419-17ae-4747-9e13-e51b3a397b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4c7bb0-5838-4493-bebc-9a0ce90662dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c346d5f4-0789-488b-9869-997e979bd9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a24227a-00ef-4daa-9215-fbf2b7cffd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e5eef-729f-45dd-a847-c64ff1a7e317",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88aa640-c632-4791-8667-8da9a2de47fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b374312-9fb5-42ec-be42-07e175e3cc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf48322-2cd6-4d0f-954f-009be4466d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e6cbc3-5fd9-4f03-9be2-bdea741fde20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f5e013-c8ab-4978-9b9a-58d8e61ade81",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d82e507-233a-422f-bfc8-87d7b931fe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150e81aa-7c4e-496d-b371-4a4e45578865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15753775-0cda-439b-9eb3-98152ba7052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f372f890-e545-4c50-905d-c966039f13ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45461a2a-d06d-4a12-a228-050925fc5c6b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95346f90-4acc-4e05-abb8-40be878144b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa6b8c0-d59d-43ca-becc-a32f3771a794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a127777c-ef92-4456-828b-23d8427b3f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad55a745-30f5-44cf-bf69-03cf2aa1f918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c374358a-3273-475d-ac97-6de28ff6df38",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04103ea8-ed87-4b04-806a-5f353b87f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb43f0d4-08e2-4365-aed2-575582837dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db469de-02c7-4099-806a-89e54247a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1568a9d2-aedf-4ab2-9f23-dd568c85ecc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ee04be-7e0e-4908-981a-6306146132a2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d86bff0-bbe2-45b7-a048-b8998b68481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f5b56f-8cc6-4f77-8b14-14c9859536ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cbc439-369f-4c7d-8b8c-6574ec5ba355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b26fd413-e107-400c-8202-f6040bc363e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb25013-ae80-4c7a-bd27-76bb1f25c55a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425e839-416a-424e-8225-8f53d43a3239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717e4338-bac5-498b-9427-bfc41b572a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e3b798-f275-4314-918a-a056d97c5da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bcf57e-2f41-463d-bf26-3ff45db75028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6900df08-b64f-4cf1-9223-0f204ba94c14",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2053f2d8-526b-407f-abb2-f65e1216b12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b31eacd-d110-48a3-94ea-8df699f5d627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cec4270-3e59-4637-ad23-d64e66079feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9826da-9b7d-4d74-b6e5-e028e17bcea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab83fb30-912d-4517-9225-3342050ef254",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdbbd72-166f-44df-92eb-e3c092172025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3642943a-59da-4476-99fc-ca7a4bdff1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2ca8ec-e3a4-4d40-b65b-d3dc7b43b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c09ea6-b8fd-4d39-90a8-beb3011ee734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ab77dc-c78a-434f-aab6-48d8746b61f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af72152-64ee-45a3-9448-520adb3f9558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc181aa-6a81-4f42-804e-8d0f87cdc77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d52438-ca9d-4c01-b4e5-757d9fe8c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6742e13f-cca5-448f-82a6-15cdf39aa700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5bcb30-2e2d-4d0f-bbdc-e867d0738263",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8b96af-f76d-416b-89f3-d8318e54c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a391854f-6d6d-4271-be2b-b5418833b7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25b6223-a88a-407b-85cd-1f2b06aa8db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba91fed1-4953-411a-920f-a31ac985659e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce67b9f-6416-4626-a611-2051807930fc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeccc23-50fd-4f3a-ae03-10f753cca97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca9f409-ded2-4e59-97e3-274da1b4ea61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cee57c-0045-4d86-9469-e5849dfcc3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37538296-347b-4268-9ceb-0573ebeaa4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aba58d-ac71-4e01-ac97-c729b1bc74ea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122fe0d7-1a67-49ea-bed9-295e05d97bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944f05fa-c391-46ef-a6a2-016285d664dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5bfadb-11b1-4887-88a9-86b466c79422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "713db3ef-764f-46ee-8cf7-42d21c3f5d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b482a-a550-4bc5-93b3-089bf6f97a9b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb19e1fa-985b-4900-b94a-7526c813ed49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308d5a84-5ba0-4136-a7f3-da2dd5de515d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f8a979-0ef2-49b4-98ce-4d45fb4586c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad69158-f000-4ad9-9955-88a4dfb47f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b560630-c524-438a-8225-b46c5fab82df",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0251aabd-697f-40ea-85a8-de224165c167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1feca79d-4d18-41fd-a5d4-8c9fec18d135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27168fee-e3b4-4703-9482-e40311bbe8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78dd83a2-2574-42ed-8c7b-45520f002ea4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "834e07fe-a1b7-45af-b9d5-a37bee1e4c0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a94b749-d1a8-4b38-b089-f9a539274922",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed67f53-0f2d-416a-92c5-3db3c699d85e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a3498851-ba49-4f51-8504-dfd45c5be71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23d6972-ed5d-43f5-8775-af42782c51f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "501d8ee3-a3ef-4d8d-8b84-95ccb60510ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a3c7ad-cc20-4036-ae92-d21bcffd4e79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8bdb582-ad78-4c48-ae2e-5ec74f41be74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b252a24d-daee-4f77-814c-b296efed1e84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de3c6bb4-0998-4458-adb7-f9e18d485182"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "519551b8-c296-4e43-ac2f-dfdfb7b25507",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9972c58-e9cd-4ce5-9908-d7965e438986"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c9284f4-7f93-4530-b03c-0b568f2b1117",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46881414-7e70-4da2-bed0-6f381674b3d5"
            }
          }
        ]
      },
      {
        "id": "0f7f01e9-5716-4d3d-b242-19805a1f86d4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d40514f7-e050-4da6-bd36-35d5b1854029",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ad86a0d-5567-48cf-8bcd-9af3754603ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fed9fc95-0f7c-4410-af1c-81cbed5be12f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459d9bf2-ccf5-4e20-be72-24dacf88c8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4474b98-0478-43aa-a1c7-776b0696dee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d627d1df-fbc2-4446-9168-edafccb92d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32d83a9-50df-4fd3-8f68-9a3703538588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2558af83-6053-439d-8464-b430fc7720c9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62437dc7-d87c-4954-ae38-21de669d38f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869131e0-47a3-4f62-88cb-35fff88925bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea61cb2e-627d-4fa7-9042-2f6e8a424dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7996272d-1245-4ef0-8605-4310b4797009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b52aba7-87ea-442d-b80a-d3de3363e5fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f788f7-3d11-4df7-8b6e-f82ba4cc5597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7201b197-b1bf-4553-a560-679d820a7b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a809e8d-f8bb-4f8d-b976-bc426c79b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2abfea1-d9ce-4d0b-86f8-4e85f874c079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c65a69-7815-4af9-9b40-eabb4caeb279",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c84615-54ce-4c62-ba76-5316b7d6cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8392eefa-9617-47f9-96fe-fe589609f86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62cc6bb-ba5a-4519-a620-20d2e41d1a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e55307-99df-4cc0-80a0-32385a2b683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04843259-8b09-4428-994f-16173f4ca922",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0d13fb-5ffc-428a-882d-5948d46b7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4fc3b2-fc76-4c4c-9646-ea528bc9a4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa66ea0-79c6-4e2a-a5e0-78a9974f708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0473af9-582a-4747-96c2-b4df8f4a0857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372b66eb-96ad-40db-b07d-c388c1d3ffff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004d8713-ec53-4a2d-8b05-d16463c88b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba17eda-818d-4ac4-a28b-204a6492d124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437c06b7-a8ba-47aa-bca6-061eea741169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d210335-af72-4db4-b735-ed56d2221264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9766e07-c1b5-48cf-b42d-1fc7d15bd8b7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c479f2ca-6829-4ea8-ac9b-7b949692d53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e6ea9b-6f77-45c8-87a3-09bab671a4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f543e-1394-41d2-a0e1-9aa98a37bd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f92939-e32c-4628-8dd2-03b7ba279a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53667efd-5283-4fd4-a56f-d02fb743e749",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a088262b-8d7f-471d-9acf-c835718efde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa064637-29d6-4022-8957-deb47f3f468c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466ebbd7-dd7e-47ac-9c67-d4c1f3df6f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b855577e-b0b2-4e6c-ad89-7f15d986e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850a4e9a-03d3-4002-855b-60dc1710538a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486a314a-be8b-47ef-9d51-ac9dc861562b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9048c8ee-1e38-4c93-b2af-eb3caf0c8794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd561b89-78ac-448c-98b9-1728e533e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "196a755d-c793-4775-a255-c55300dc2353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb81d5ca-a21b-4887-b067-135d70b32f26",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cd0b87-6d03-4750-921a-6168c05c8022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40726a20-94fe-4040-9a3a-c75f11729a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7239307c-b473-4617-b0a3-035a51273996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c74b53-9bed-47a6-818f-b9837cbf99b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26053d87-2010-4bb4-a18d-262082dc6495",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1048a525-fabb-47b5-8b77-222c47b064f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c74e0b0-8c9b-4679-b450-6c642491e61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51dbad5-a21a-461b-994c-de92419cb683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc47ad41-e4f7-4f1b-b4d9-2d3d55b878b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a232f9a-aea0-4cc6-af98-77a1f4c131c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410dc0c1-0d3b-4d79-b66f-4266f6abdc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb77ed2-c2a4-4abf-a962-b4a99044f1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729c45b2-2b10-4daa-911a-70396a30efbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79b21276-36c1-4cbc-9c79-f561e9ee3e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a51d59-56a1-4fb0-a99c-ae830d752986",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec536ce-c11d-423d-a457-0544f351da60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf6d3df-9b61-4ae0-b961-83e0f66f1bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc7e573-8b88-42f9-99fa-c479ea3a1501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b9f8c6-7cc5-48fc-99ca-600680268671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67898295-3be3-4129-bf05-22af47607942",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70b1b24-844b-4a40-8533-4a8152779aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fdfe30-1a61-4b64-aac2-1e9df9ae1e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12a59a9-3c18-4d2a-9ea3-378bb1b66113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9622add-df19-45d2-94e2-63c0ec410799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb2ac69-8696-4e63-be2b-e6e4b8e03795",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd1d2dd-7fef-4ba2-a848-f14ac874471d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4931325c-035a-4e26-9be6-703fe7670ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1869a065-0198-4366-a550-a2411a20569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d20a794-2b7a-4124-882d-9d97fc7b968c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd903ee-b085-41b8-9a05-b19dc4013073",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44f6dde-8bfd-47a6-952c-2a5b74eafda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145487da-d8c2-45ef-a82c-62e00666129e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373f4a73-d304-437e-baaa-f6964a82eb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5060581c-9f0b-4e1d-a0f8-41ae4f531e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d5ba8b-af58-4211-aea2-c891bf4a0adc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca0556-c3da-4e46-9cdc-78a7cf4572d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c61ce50-a486-4b93-a0e3-e66129c61f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f972b0be-c33a-47e0-92e8-e5fe86811134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0639ca-f7ce-4837-ae8a-83e1d77fcbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1018b4-82ed-4cd1-b1ef-dbff22606785",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0c4a4-acdd-430e-a3bc-a32e652d5129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3228827d-c01f-416e-bd3f-abc08ea12a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5587d9-c9f9-4fb8-89f8-36fa3441d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aedd827-3fb9-4f46-8e07-3ba3a25991ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9287cb44-06e4-4fac-a018-ad05862c412b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c439085-e4bb-4301-8e97-2a56be9d110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac20efd-0380-454e-8692-0ab77aa696ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da37567-86fb-4f1d-adb1-021aab357d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be35289c-ceb4-4906-904b-b6a2bf6ffe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1ff242-19d0-4d22-9c51-94890b5a0061",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117dd5a8-de66-452f-b931-53ef9a59f201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fa47f8-1f42-4133-a265-a1c7de09fcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d07235-4a4a-4367-b47b-fa73b292d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2daedc1-98d9-43fc-97b5-450056d59511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4109b4-3607-4218-b94a-4433ea64d9c6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e0168-3ed4-4e86-9e7a-e2c25191bfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074ad13e-db9e-402e-8a01-8c6eda44d218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea920a2-692e-4abd-9ad5-6920b673ff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d9b8d4-135c-48aa-a547-aa3abecfb617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef99eacf-2836-41ff-ae62-20310d493c64",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b73b4d-d800-4dab-93a4-ecf62411939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e8eaaa-740e-40d6-bfda-0c9855a9efef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8557222a-7bc8-4c9c-b641-8da8a19da158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e343b4-9914-4676-a7b5-d810de7dbbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7055c08b-00a2-41e7-8ff9-ea926e3e3f37",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916a5964-c60d-4018-aa3d-08c113a9369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86103b35-e4d1-4294-8825-92c925c73261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72e731-5171-4201-b8ae-cf2e9c90b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26047be9-378b-45d7-a332-0e287f7e3948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db77764-b0a5-4d22-89b6-99ed3e38e02c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8a3013-4bad-4862-b924-5d74fb520024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49dcd53-9e8a-4084-924e-7bef1b1a02d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e148fa2-3ce1-4966-bed6-60ec3d5b50f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad1c8ec-6308-46f6-8db0-7af092cc04bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cab2694-56f0-4eb0-962d-91ecb43eb8ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32038e5d-2f0f-4a32-8488-439146e84972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f64b5d0-ccb1-41e8-b13d-a572e0f34f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95c2615-9bdf-4eff-b330-0defbe1ad3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab40b5f-f8fa-417e-9665-d55ddf145038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d150491-c3c6-4ce4-a8e4-e799029929d4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b4d01-128b-437f-a932-6c36fbe181b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0361eacd-240a-47b8-8d4f-d1412b7cbac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c34a279-5268-4a39-b9e2-5aaaadaf97a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ec324c-8a6c-4abb-b11a-4278d76442ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14a75c4-eb46-4125-a9f4-0cc687dafccf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a883a59-9202-41c8-b6fc-2a31804b69c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fe1418-75ab-42c1-ba61-572a1be4fc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952cf5f1-31d8-4706-b600-0e78e43e7484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11f6483-6965-4187-a95a-6cd86ca912d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1a8783-773e-4559-b468-7d8c9b444a52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40887da1-0711-4b3b-a082-b6b8d90c3289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330c3e30-6a4d-4317-8e40-bf28eeef8e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6d6812-fadc-48d7-b74b-40926f4c1e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c163f82f-0572-42d7-93c6-0564a6a2a132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c5da9c-e980-46e3-b925-30172188f2d4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5226b5bb-f60b-4ed7-9171-ed2880386319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9025f7a-c037-425f-9323-711df2da8ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c73ffdc-1709-4ac3-a805-060709f4fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46102f54-3fe4-4990-86b6-fdcc8b8eaf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd177880-c16c-406a-a8d3-d94b5a855c39",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8f5555-5622-4ec6-9f6a-743bdcaf82ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4632fe96-d550-4a8f-9dae-16f9567add5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef819fd4-421f-4ae6-9794-7288a88bdad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "154a0a3c-f2ca-48a0-b1fd-1b4a20bf824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805bd595-a738-4fe1-b23f-8d589e05331c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaee2d1-328f-41d3-9572-230a6cd01558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69618369-55df-41a9-9ea2-c66d8dcfb4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beca26c-2ff3-4eed-a7ec-4c3ff6d2c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92931935-e823-4088-aec2-5d3ccbb77f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f071bca7-8b72-4006-bbcd-3a8072b14a99",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611fe6a8-e332-4300-931b-8113ce09372e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd3060-8417-4e0b-bc10-cbb7855f483b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2b670c-3905-4082-bc1e-77d6cf9a0eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7db47a3-e051-47da-a426-b5370f38262e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4834b0c-b654-4e5c-991d-9307473cb31c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac49b0c2-0429-4dee-92f8-fdef48e4fdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1031f8db-ad9a-4263-914d-9942ea658d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ab5092-1850-4053-8874-f1e6983568b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e1ba14-6dce-4876-8d5d-84244ab0d90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577a5147-bb69-41d7-919c-278f164be38c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bf2bb7-cc9c-4bee-8be4-e3f28663906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa5b730-7648-487e-a7ff-bee7a6f31c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a93290e-af29-41c2-8055-4e571baa3dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0295b7-56e7-4e75-ba9b-18eebbba30c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2b471c-d9ba-4af6-9640-ea6906e36d01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c11fcac-5f61-479a-ab74-cdf6ac95e04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f75cdb-ed72-46d7-8f18-c3837e16abc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2c5aec-1c21-426c-beb1-2d55bd06f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50812895-240e-4a19-b5f4-fa536f8a9552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa1886c-5fce-4404-bb53-2d90fc01a7d2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eac153-82fd-49e1-bd68-4560a36f6def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2634fd-49ba-4353-8570-53208942b7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c98fc2-5b6e-4ee2-b374-e595bd92caa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ddf8af-c564-40be-af12-63202a908b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c506dc4f-50c5-4b4f-9cfa-cd144cf9ad09",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e752b64-13b1-4c6a-8825-ea96fc92a667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7e6f2d-5dd2-4da2-ae8d-666d51767a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf5674e-9cf9-4838-a090-a6a482bf636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4b773f-3926-4c15-a866-30ce53456ac8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7e81365-deaa-457d-97a4-8e89012c104f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f852961-00a0-408e-ab69-3ee54b7c7703",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d33159-e720-47b0-8b7c-2a9d018990b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "799adb16-4e7c-405d-8256-12def1a2220f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aafee43-9428-479e-bec0-ebcee433c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dae2263-fa55-4eec-969d-3daf6ad3bde1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "210d4dea-7b7a-4b58-95b7-f2f76c1c068c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "950b2f71-a760-44a7-96ce-ba31feaf3d32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a04706d-2d35-4f45-b514-9f1e4e045262",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c7cd9c3-5602-46d6-a501-14b17c30d821"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ba8d2ae-bb8c-40f8-8994-6812392491f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2283d482-1624-4889-b365-bf77dbeb8078"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "629a080a-3c8e-44e2-bb09-a93e954378d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3651b83-6f51-4695-a8cf-680f394931cd"
            }
          }
        ]
      },
      {
        "id": "a0a6a6a9-70c1-4e12-b6f0-5fa6ecb3b67f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7a356e1d-e6a2-46c2-b8f7-a736262f5f28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63bbe352-75ee-4b7c-a177-7e9136514f86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ff9ff9b-48cf-4c4a-9baa-259b9df35307",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84dc114-042b-4c27-a18d-4a15a50d7018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c45baca-aec1-487c-8f53-9b687cf1f3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1337d00-6b8c-4191-8f1b-4d37ee34e5f3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ccf355-da86-4616-9d69-646d1d40b103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9adaf44-d13f-4d3f-bcf7-b4824a66577c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf816ab-63fe-4ad2-b93d-3f70ac6e4d50",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2a3503-9921-4984-84a8-d39b77b762af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2cde3d-6046-4ba2-b3a5-02722b6faf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d3ea15-c88d-47ed-801a-a34d226ff590",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9400cb-f421-464e-9a9a-bd759b04b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7573f905-4108-418c-8444-8aede8b3057f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f46757-db49-44b1-ab8e-e47e35c1a1e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934ee4d-d877-4649-bcb8-63bc199e6fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaad00ba-59ee-484c-8274-a12611d9d4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ab597e-037a-4e71-952e-030cef5bc622",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83f651a-1b79-4698-9f82-9a788501d8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a78bff5-ee27-4e94-89ec-dedefc322c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dbb1ca-eb3c-42e0-94d5-ee52531e7e5c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dd9ccc-2fb6-4f7a-bd39-87e88353b1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64a8a5c-c1cd-40cc-8c50-ceef67c5bd02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e1f2f8-c67c-4f35-bdd9-e44e93e6b15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d460cb-4ee2-456b-a6a1-cb673e473aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34caf31-d400-4574-801f-65f33e5e22ff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f666465-7813-47e1-b968-ed69a4caeaac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a36eb9f-7b83-4591-ae99-05117cfafca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57511618-4d91-4613-8c2e-849674ea7d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109142e8-08bd-4269-aa56-f74f1af395c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4206b2a2-9d31-4d47-8bbd-f12177e49f42",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b811862-7d92-492e-a9e3-5b6753b9d2f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa3836a-bafc-49b3-80b8-11c1f981cd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05daa3a-92c6-4349-9556-362741924b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bced51-13b1-4af4-a8ac-8a532dc063d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00152237-6dd2-40bc-a575-2e2b90e9d6df",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84399f6f-a86e-4aac-ba86-a6ee9ae85208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa0f010-faca-4b70-8839-f4e3930dbd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc522dc-6823-471a-aac7-1ce8d6700546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e90367-8800-4201-b6df-972d1056e078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078d4586-6009-408c-89c1-4d2918b5d7a1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31c7f18-96fb-4a2a-9463-21edd358074e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54dabf8-ba94-4f0a-9796-dce2ba588b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fb5f73-1c6e-4bf1-9979-87d1f74d70c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6b3a36-351d-41c5-9f1c-b9ead2790c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c6967d-85b1-4e4a-b67f-b5cfb52af984",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1395f4a-74d6-4ff0-9604-6c2038b14e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fd7ec1-5b7c-4954-9a2c-b6b73e3ddc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b42fe8-28f2-40f9-b8ef-326c77bc463f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cbbb1c-9b20-4b33-9afe-3feae9d695d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ecda33-08df-43e3-8161-8752a066c0d2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672f44a6-0617-4e52-8d39-9870b86ca0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d44f0e9-1168-4e05-ad4f-820c1459797f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1575e0e-d567-4879-82a7-beac6b3c9a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f202fd5-94d0-4669-bf00-d613ba207094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba12af-11c1-41b5-8ea0-72d0f6a95968",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd321377-308a-4286-9c75-96c851dad446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f248444c-9445-4109-9017-d624d9e8187b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a5a410-12f3-4aa5-945c-08c28ea384d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8d7721-3f3c-422a-9f43-7dc2bfd84ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ff870f-bb53-4ece-b75f-c6268aebe04b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b1a5d-2544-47b3-aaea-0cb39a23e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d6cf6c-cfc7-4a27-88e4-688704c06556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa2828e-c787-460f-bbdf-3967c4d525ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8767c631-9cd4-4c5a-af61-df8c6ece5c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e291d1-a426-4b91-abc0-045b2f703581",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d776c39-e7cf-44e7-aac9-a570d85e3f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8debf80-ceec-491d-973e-aa1e137d4a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa46f74-6064-4f15-b3ad-d2bb1f74e3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad874e2-edcf-471d-a2ae-619030d83994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5304a0f9-afcf-4831-b906-0189e125b512",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1700f6d0-10fa-4914-9d18-6048fbe85192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c929830-ba84-4104-a329-a6873b0b12ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975c0ea-04a2-4fed-96a1-5974c5a14bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda5f75b-e011-4d7d-8479-a3d3f58be006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81753cb-a6b6-4a98-8fc5-2f0534c70af7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60134166-7384-484e-9b1c-06472be8992a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ff7c6a-beb5-4812-a5bb-751e450eb866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e47575-f330-44ec-8e67-d0280e177b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43516154-ffc0-423f-8533-c2ace1d7776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a1704e-e688-49a0-a2fe-5df2d56dfc20",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3b4d9a-822c-406b-9695-8caa5e487478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3deff51e-d249-4e2d-b0c8-fdb19b2afdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f353ae-b4b8-4b0b-aee5-d1fdfdeb687d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c71b3f-a822-4cd2-a2f5-881bb5c69161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4abcd3c-d68f-4204-a08a-35a8b99706ed",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505c7e04-82d4-4262-b0bb-b9e37e3d12ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305989f6-ccc4-441f-b7f3-268fead64c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea1b8c4-3782-4439-ac0b-c9b02fabc3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b150cc92-e847-42a4-b48c-d7973fc7e3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df17f3fc-ef31-4043-88ab-3b6953a90512",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0437b61-4dbb-41ee-b335-448e334cb55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67be9d6-4786-4a53-b176-c06e7c348c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6a4e2d-c7c1-4ad0-91c5-14b42e7f71c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad573bf-7867-40a0-b90a-504a790047ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9542a231-6602-4582-bfb4-60f39481cb86",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5b1269-51da-4579-a04f-6425830aa9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4aa53b-a6f3-4601-b622-cf833e657b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dbaa40-aaa9-4f97-a974-f1305e3f1264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f54448e-011a-48f1-be85-5f6724cd1f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d3aaaa-c8ec-4179-946f-4c03979cd229",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de54748-c031-4a04-b098-a43f17f377c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97501a1-c859-46a7-a941-3bf7d152c6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8bbdc9-7017-4e66-865e-e5fd588f0937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532354fc-5330-47aa-ae67-b3f3ae0315b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e289530-3e04-449f-9c24-7f7923d70cd7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851ecf30-48d1-4608-9dee-57b1b01765eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ce6ad5-9a3b-4a1f-a38c-0a6f5473e709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc2bef2-2ff0-4003-adf9-7d2d8f25f23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f5dfd7-dee0-43fc-b075-f8efac1b049e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e66715-58b3-43a7-b3c5-0f8ec271377b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92652d6b-5a39-4bbf-ae2c-a7a296b60fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa83a3b-a9d5-4328-99a9-5b11d4c4814e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028a5f59-8ad7-4fae-b41f-f223e5cf9909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac7b2f1-5df6-49aa-b749-2a27f4a55c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b600749-d043-45cf-ab46-c4b9bdc88dd7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f27638d-4af8-4752-b4d6-ead25dd4bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23a30c3-69f8-46a8-a389-4e8089eaea5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cf5148-7cea-4afe-a718-8f1b7d53680f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093216e3-3655-4cba-8ccd-a24ff43301af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adb35a7-2233-4cf9-bc69-fc917481c66b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701f7e20-c64d-48c7-8343-aa005ed211c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0592776-90d7-4150-bb12-12c302cb26fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb00c33-cec2-4f56-94f7-ebe544294db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8724bc-bff8-479f-a1d5-9d93f26ab119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4307f1a-2cd1-4e26-8795-9de6d7aaa3cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e107703-01c1-4462-ad3c-864e9ced2f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23a1211-f929-4939-894b-b1abfbbbde19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6ff796-af36-46bc-8d3d-c6655f975814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09320e0-41ca-4975-a399-39d6b45c9f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4549b83-e30b-44e3-acf9-cd4f4027498c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d229acc2-c42c-4d82-a03b-3f7a9790794e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfb753a-73e5-4e1e-b979-2ee2ce3c4051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66d6820-7646-4dd2-a424-ca14c776e9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fb8093-760c-46ce-855e-226f51436948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a07dcef-8b0a-48f9-89a9-a221494ea148",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565881c1-3895-4f46-a4d7-0b330bf093e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa714565-bcf9-4ec9-8386-3ecff43253a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d44ca78-f413-495f-9cff-671f1d5acbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a797f66d-6183-4460-8a1f-c709d7ddaf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151ead2a-506b-4145-a0b7-67f7ded57ec2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce9d5ca-3085-4895-844f-73bd1eaa2f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f7e034-a97f-41b0-9e33-08569004e3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc96c6-f80d-4c33-9841-9a340d0d1283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e1e12a-babc-4d85-a3f6-d1cc589d611a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3124607-65c4-46f6-82de-4c4d0a8d297b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54873c65-4209-41af-9da5-2eb7d8fd0cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bb9e45b-db06-4453-8b76-22e0a2d553d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0fff99-8bf8-4475-be55-f7f6c9bff565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8749b4d-92e6-4fb6-8ced-494417ca9d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36df4374-bb9a-4070-a755-bbdf1becf6ec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf55ddc-97fb-4764-8c6e-c2e3efe1b48c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffcb426f-818b-40ea-a2c5-b4c462e94654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9ac08c-0734-43f5-bcb0-729c9521fd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e40f419-7f1f-4b09-85f0-601ef8336a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6493db5-9278-4aef-95d8-9fb85fa3bd3a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f147bc3d-a3b0-4568-a42f-0c4d676258ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2afae01-f823-4dc0-90e7-51be448575eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411d35db-9e0d-4a3b-bdba-36babb2a0ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92412734-972e-4edf-ad42-e339b9c24191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7435805-ceff-4db1-ba46-185f9de03f3e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6279b2e8-17e1-42d1-8f39-ddee4ba41cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b45226b-39e2-479b-9ec6-16538fe82bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3106d2-ec73-482a-aed8-c285ed4a6493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b643f9-88be-4b39-86ac-eaaea06304fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d32f95-fa18-4b1c-93db-689f176f5510",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f352cc3-be5e-4a52-be4f-ef5af30ff1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efca3ec8-b66f-42a5-b2ed-2529e1f29bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c11a255-49f3-4607-b924-06cb540c1d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064e852e-da9a-405e-bbca-dda9d82f4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b53edd4-7078-4cff-99ed-dc24a44f3de1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3392c1-dadc-476b-ac91-c0b88286ac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ea72fb-dd70-4b8c-bcb7-c9ed9ddc53f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c29fe87-1446-4669-b54f-8bc429acc61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f658c142-3a4b-4138-aaad-bee9ff99635a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc476b-453c-4781-8ebb-197d7d6c9374",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfa48d3-5219-4df6-ae10-889b5aae0588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd7eee7-8f76-4a49-ba30-68d17c124b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e50829-cca4-4b45-bee3-4c8e6eceeb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cccf9d-ad4f-4222-9e65-94c13debc708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b11ee36-9762-49a4-bf73-f4750c907ffc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2cccd7-1973-4d59-af31-bb9cd18aaee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef31dd1-9dea-43af-ac3d-96866ca101cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b13a3-24eb-411d-a67b-998c0582d1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4626c6b0-ef5d-46b9-bdb5-7e7e840d4114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f98e5-087b-43d8-8a94-3e5e80e0becf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad558ef-d8b4-4306-b965-c8fe2460c95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4723a39a-1cc3-4685-9295-fcdc9a56cc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243eda37-cb4b-43d0-b0f8-9e15b6c30ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b55d84-5acd-4c5b-8582-8cea9307375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3fff82-9307-4e21-beb9-45eb0bb0d0ab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0602d6bc-94a1-41ae-af1a-3db06b1eb4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f0d05f-6f79-4086-a113-ed807081b501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed2a6a-ef20-45d5-8ec6-cfed5f1ef06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c035b770-cc3a-477c-8809-854678b763a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168a514e-c79b-4e73-a786-188a64167021",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2b0c07-f5f2-4702-b286-9285a1fd6a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04d0784-4db5-408a-80d8-9db1a61a6678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7923ccf-f710-4669-a163-8148024dd3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651b3c44-3903-4313-a096-6a13d6ed7e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14a7b5a-8e66-4e94-8ba7-bb6502a03c72",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6e2ece-6640-48c2-b42f-5611500eafba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b49bfd-66a8-487a-84ea-843abbc7ed7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4d01ca-e443-4ee1-af8c-0b56445142f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1060e72c-1576-464d-b750-bd518f304391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f34e389-1fe6-4aa5-aa07-1a2ccbc0f3fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323de301-edf2-4cc0-84ba-146f181961c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a5a431-3491-4605-baed-ca450c017c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23629f7-ae8e-4efb-860c-c9af99620498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b5876c-1059-48d3-b3bd-1cb7bed8e31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067b801b-1b71-4647-bfc1-d314fe856a39",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e869156b-0676-42dd-a1ae-f04f30493112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fccadb-2ffe-4457-837c-85752e61e267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2a81c8-984b-4952-9410-99e223bd020e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9567ab-59fc-4feb-8165-fd1d1c7593ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a019742b-2a79-48f7-909b-7a8e736c3690",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1ba959-3111-4bb0-975b-105410caaadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8882376f-7b86-4560-9ea7-7d00db0e0e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb13d2df-9728-41f9-ad8f-8fc85351e8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae0619e-8064-4835-a75c-b01a2b7f4a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ad113-5c86-49dd-9663-1a612e508eae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9530a1ed-5bdf-4ef5-a363-87e94115e4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7c928a-468e-47eb-a178-cc0ea71f8321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da54b003-27ea-4f1c-ba4e-b31fdbab5039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f81a3a-6a8f-4ffd-9e82-c7c03dc1f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3544c3f8-f9e1-4ba9-b5d2-cbcd6c867d65",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60903df6-df39-4504-a46e-32fb6ec7d077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3cce37-5f1f-490f-9512-d2e8ad6a8439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eafb04-a485-4301-936e-506eb4a0d9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13663be3-abc1-46f9-9413-1c1bdb6dc2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ce65c6-cded-424a-ac37-3d52aaa2bace",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8d0cdc-6362-4956-9552-88fca7a52dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce198ef4-6435-46f7-86df-a4c75e511876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1963491-4f3f-40f2-9e4e-b3d4899f2cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae7e29a-c17e-4bb5-a210-68b24c326497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92217423-f530-4775-8bf8-cae33dfacce7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3626b100-cafb-4aa9-9e7d-fe01982a85b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d452aa7-01f2-4cf9-9219-8a82c82aa139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a12919a-1ba8-469c-8875-50fa88dc1eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89992170-6632-4b4e-b041-49d755ca2c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186074ef-831f-4a9a-8ff7-8cbb1491ffb2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d627901-e27b-42c5-8d1f-d8e02f1d2ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75046513-725b-494d-86cd-7cd8575b2748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e1c920-687c-4d64-8330-906ae4f4f61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3894bc56-0934-4730-9799-613496d982a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80123289-ea7f-4265-9c04-bc786a961bc4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c09f2f7-f535-4734-aa45-37a86407062d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ee05cd-9aeb-45ab-af31-91ed32ae8db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ac2964-7e9f-4716-acfa-f34ce22f6d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b4657f-78b5-45b0-a6ef-42055f028e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26411402-7da1-4de0-8fc3-953d21514171",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35852348-04d6-4fb0-b350-0bc66a2005d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e12372-1f99-455f-8375-aaec95c680d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afa72d4-b5ac-496f-abe7-cead7afb6cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5500e881-a6be-40c2-b914-651fae6a7cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b739b092-f083-4a8c-bf29-7d739b5b00ae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dd1397-6386-45a5-b84f-84c5a87e552f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8238989a-9379-4fea-bdaf-8a87a4b9632b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f213a70-951c-4332-9fe4-eb0f8e50c5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a00a10d-b6f5-4822-a0d5-774f3fe7b02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84f0c26-1622-4efa-bc99-9a023bd9f44e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19070814-7e04-4477-a87b-f3a14ebe63e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859736df-8512-42af-ba46-ae0fe857ae9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17804264-dd94-4114-b12d-852e3e645060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc33b956-cbff-49e3-b191-255e7663a237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec775738-6211-4bbd-8a03-ad5375201aa5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1cdaa2-b6c5-4bca-af34-29b14778ddc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f835f9d-1ad8-48c7-9e42-301d6534af18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1af620-c6ab-4882-bba7-3609375dbf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a0be5e-b04a-4584-9f44-963d0fdafc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c67d93-a355-4674-9111-c900ce99e631",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577c2ad9-5df7-433d-8248-6cc992b9a8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae55b4c-45b7-4f1b-8b63-0a3d0b5fa81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6328bf7-1789-4d95-853e-43b98734aa0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332ee088-a3cb-49c2-b9e7-221bd98b6fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b64090-c980-4167-8775-9fdfae82b926",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9e9023-bd1f-490a-bac8-831023fa0005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987749a3-a19e-4d04-acf0-a8d8045220f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f11f6-c9ab-4a58-b99d-8be1ca723414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d773dc-3367-4f90-bfd9-a0b6da74dccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b34f197-78fe-43b5-841c-850e0b3ffd1a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fa33b4-0a5e-4aaa-814d-3125e94a7cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b7b25e-4ea0-4fae-8fe6-d1593990a37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc14d23-4e1f-4a5c-9436-06a036659a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05c7a9c-9e1e-4d8a-99c0-5f83b968571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3c7be5-1e6a-42a2-8ad4-8f742b57d32d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0842332-1bd7-40d0-b1d9-f8fce5b667a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc3ff9e-eb77-4f70-ab5d-960a13f142db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d364fa-14f4-48e7-b985-39e84176057d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7bb802-42d7-48fe-a274-a604c0f810e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2751a12d-e869-4341-8110-33498b28dd7a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b8c81-46a4-4831-bf90-a0e6331b6e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918313b9-7187-4bd0-ab7e-e15dc307a09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beaf744-6bf9-467f-933a-43389e812483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18956546-bffc-4197-866e-23bc335af15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35251ddc-c17c-4fb4-9828-8e65821b7730",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4c2372-07df-4ac3-a9cf-f61f90144324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79c3690-790b-4668-ace7-c01c9f1ca970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1161b0c-5c16-4aba-8f9a-5f1e1666286c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109b72a9-3792-4e12-85fb-5399b2e123f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53358dc6-f9ee-4ba1-9c28-35a01bb45f03",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800d7589-5b35-4c85-87ab-ba01f219bb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a9c606-6796-4c9d-8b62-24c09c7c32e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb70ac6e-1c80-48f2-93f8-15f4d7f60848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32be69eb-ea7b-42a7-994e-08c5d7927c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b1e67d-e51d-49f5-a2a4-75801d7d0164",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fd16bc-c77f-4644-bc88-dde1d2f914e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0549e0d-79a0-48a1-a8a0-888db7bb4f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a180f90b-a6ee-458d-b6ba-19fd0110831f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723fab12-b844-49da-8cd9-2f3e05221bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbecd2c5-d948-4e42-9c0a-c095d5b54815",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b97f8fd-e15f-4024-93fb-23d81a9fbb79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea325e8-b3e4-41e5-b922-fdd367908000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59781378-5f11-4107-b964-578b73beef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336fb337-9ae9-427b-a761-a7dc08b9a714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4999e7-2d3b-419d-a10b-4269537058a5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0960a0f-24bc-40ec-9751-5931b55f1369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64475170-45e1-4296-aba1-4df6458834ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57e7f5e-c10d-4d7c-bcdc-dda16cc19574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4d7cfd-fb03-4801-9345-5cf1f242446b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c396b564-60f9-4b7b-9f86-089c2273d6bf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59c60cf-be98-41f2-a9ae-3651f43b5fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3ece3d-5e22-4b22-9d03-85765f7ddcd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c611580-0eff-48e8-bd9a-2be61f07bb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87cf79a-1d4e-4c8b-89d7-1693c895be3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e2c79e-8611-4d4b-bcee-354495c08d40",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253b9ffc-cd9c-44d2-ad64-0a906dab899c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a72e20-f623-40fc-8541-eb1d74d4843b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af36789-de08-4351-bafa-ee94fe50576f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84dd36c-4144-49dd-b144-f912ceb34cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba42cba4-bfff-4c4d-87c7-b09d61d55c50",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca01a3aa-f6e0-4f77-a7ac-5530843d3755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b064c96-7f24-481e-ad3e-ed165b73369e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b2c178-daf7-4335-b167-7ece9ca67057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effc9a76-0f16-4626-adf7-b8371b946bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0c913d-5ed3-43f8-8c84-e95ab3be1383",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0075b7d1-9ee7-4fbe-aeb2-812685ddf941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85b4001-6358-4225-9581-f476a5bc5a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb61077-77af-43fa-8d48-e5c590f649c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b63508d-212d-4857-8612-559e130c9c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b5bbe-f924-4619-827a-2b760b72e50c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0ca918-5293-415d-a87c-ed9ef1152634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1cb01c-2f7d-44ce-9071-0e2347621e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b836e4-e946-4f1b-a97c-48933aa43cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668c3fb5-8a80-4e32-8371-f4ea83bde402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce765b8-fdfd-4659-bed6-d6b095962477",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b1c3a3-0336-4475-809b-654e957cfa5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03536b9-2d9e-4c31-bac5-27a9fe395b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1e64b8-8d68-478a-92f5-61c5d947311e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86df97d7-61a2-4373-a6a8-dffc5dfa3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e2bc62-e00d-4d19-9c00-55b50ab6d483",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b21f381-55f8-492a-ad60-6dd66b431b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e9f81f-f7ac-4388-b6df-d7f28afe8bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e1d278-0c37-4d5f-ab37-a01612cdba82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383b4289-391b-4d58-a902-730c2034dfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b109c6-e72b-4305-a5e1-fe65df44af11",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1116716-2e7b-4b74-ab80-d1ff8e0ed314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3592c21f-395a-4d8c-9666-34656a7967a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c67f97a-9ba3-4726-997b-cc5ad705902e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b73f7c-fdac-42b0-b367-27dd8c81ddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9402dd6-f09d-45c6-afe4-e8de81feb3ab",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c683fdbd-e24f-4654-939c-a58a86dbf506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dc458d-19e2-4f28-841c-abca9ca9841f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de2c908-98d6-4ce9-a1d8-4b80cc59dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef40f61-f988-4917-9fe7-69202074a489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c6e7a9-b780-4fbe-824a-b166c80661f0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295386c7-4db7-4c35-950a-b283b6611d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "684604a8-1d01-4c3d-9d3b-19524ab04250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39faf33c-d925-465a-88e0-d451d5e651cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69668f59-6a4f-49fb-bedb-0126ead9a728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8d3c21-4de7-4b12-89a5-5edc8f790bd5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c37bb3-5938-4973-b71e-de1085ad1bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d14ce8-77cb-4026-809e-eefd9feb9297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbe383d-38bf-4489-81ad-a06e8a16fb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ace8345-8425-49ac-99ee-84e72683f9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32187ef9-5b0b-4461-9e2c-527425800892",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c67834-b464-4575-8f6b-8ceffd9049e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c43d8c-8973-48eb-8788-90856e43043e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d87b90-de60-42cc-bfea-dcbe151a1601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e42df3d-8b1d-4df6-ad3b-5813bd1b419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08bdc1e-da17-4598-934a-26ed913969ec",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ef152c-6e05-4fcf-bd79-3a5fae348662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cdf365-dc9e-4a87-9d73-5c6a26f89d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa51a6c-fe72-42fc-b79b-9cc69c73842f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d8c5f7-608e-40aa-8eab-776b3742b01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1756ed6c-14f2-4d6f-af74-de11d0de21a4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe3b2d-fc1e-4927-86a8-034099ed239f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe9b7260-d03b-47a3-906f-860b446de384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bef342-e93e-40ae-a354-f24057c5fdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e858e8b-75be-4c93-b137-b02ee4082aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d3fcb8-44a7-4bf5-a689-ab9e2e90908b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13dc409-cb6b-408a-b290-e9ff27425727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697357e9-3340-4e53-b9b0-9fd8d8919158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac88843b-7e14-4df0-9bc4-3aa20e470a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be93f0c-baea-4cd9-a960-2861bc1b48a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe85d8a7-5c9b-4f39-8ecd-a60a1f2f0aaa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2acbfe6-c9c2-4f75-a0d9-32f7a46873a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870a36d3-56ce-4a5d-99ac-987c6a317052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdef3a8d-4da1-48e5-bac1-ed6322dada52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77283f53-cdaa-4623-a1db-ca82a0c69daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b60fcbe-8326-4e3a-99dd-314c25b4b69e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273bc475-285e-493d-af3d-fb69e645d298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de89c358-840c-42f4-b736-49d54ed030ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398700e2-c9e8-40b2-9e17-0919a7696eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e228e708-33ab-4ee1-8ca5-37747e96d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91eb429-c17f-4b20-b152-8d25059535ea",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb4d43-ae6d-4055-b43c-c16f57082e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa93599-c9b5-43d2-9c15-f3f7b6cab049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bc76c7-f6d5-4c24-b3a7-789d63b4e756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e1f2d9-93f4-4f4a-b43a-87a59c533148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285ab966-28fc-44f0-8767-0220390c225e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8de5f95-ab28-4361-91a0-51a32db43b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5d2e9b-701b-4870-b139-3c6b593319f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c61dff-d53e-47b5-a1f2-8779b178b87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b6a216-c6bb-485b-9dde-dd93ff57de38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97cd10-8477-438d-93d6-72668a253738",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a165a5-1bda-4ae8-b484-6efe3a59b5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6864ccab-cb07-409b-bfd1-ce56aaf286ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c358df-1edd-4c00-b349-f75e364385de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac35f73d-a6d8-49d2-99c1-89fe9a07ed7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c582f81a-4c52-44be-a9b4-b7ec3e9dee25",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79330ae-0bf0-4880-a0a0-96d9ac720e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94e69b7-ef67-48b1-b24b-c4ee3fc61daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eac0a82-80ba-4628-a290-e33ed087723a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188d2a27-6483-47ef-94ce-57cc899bcfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66075dd-e2de-4beb-8eed-9034b7b3ec26",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e776f0-2c4a-4ac9-bf51-a16a08b54057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01000c22-cdec-4671-8a70-3a392d11e6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7fe8d3-afe5-4ec7-93bc-1d95672a6db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ec2f79-0ce5-44ce-9cbe-5199506cdd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66da35c-79f4-4979-9ea7-317ff4c1fa73",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd55289-df9b-4e84-82b1-a53d4dba3d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1483a5b-01f3-40f8-b594-4db923d5dd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb658026-da1c-4746-955d-71b721e82289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578e33c9-8ae7-43a0-9d88-c59251b56590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeff8b2b-f888-44e3-b55d-66a63a7da6d1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386b7345-b290-4150-918f-838fdfeb4e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00041cd5-c02e-47e0-b3c7-ec6210db29cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047dc177-a2a5-4385-a646-94eef0616865",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9e2840-c1bd-46b9-ba9e-f5bf376a7bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebe337b-398b-4276-baa8-f03994fd48b5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fcb5a3-e803-4b11-91ab-9ad4c38bd393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4320b8f4-2646-4757-a5b4-8f95d3124290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c366989-4120-4dae-9e29-dc11610858ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655836ce-559f-40b8-bfe9-6c086b143c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc38eb87-7d50-4d36-bd54-de3f0e2fe842",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9889f5e5-b439-4a4b-a1de-035814fdec76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c604e7-f502-498a-8bd9-f2abaea1bd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7609e36e-f45d-48e7-a605-afd6e39ab447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cbeae8-30ae-4c0f-a6dd-35fae40512f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17be14ff-7d78-4767-9c4f-88826b7d2ffa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319a3736-728b-4670-b51c-a93aac7f64e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dbf16c4-bba4-4c3a-b040-9c8ccfcebe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758cbab0-3d92-4bf3-8a61-acd415708906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a08bd9-1188-43a3-9868-76a3691f48a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d9ddfd-0b32-43ec-8036-45000be392c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a942e397-86fd-4e6b-b842-e7ac407a8d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "182a1bbb-dd26-4257-b9cf-b9f266ce9d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a6c200-9122-445e-9065-aed30a18b950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789b7101-bee0-4207-8bdc-8e9f8617c95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7116b7-031a-4787-ab55-d115a58fb00d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d88de9-fd3f-43e9-8f08-4826810b574e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83c981c-d628-43f2-bf5e-43d7c9a64725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9a321e-6925-449e-b06d-b935edb31c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b90b44e-711a-46bf-a7e5-f15f9cdb6ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466aac06-b4d8-422f-a6ec-b0bb31e76f96",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d6b256-6adf-485b-95b3-0a550b96d0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb755cf7-315a-4690-8a16-9c84b112e7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f42884f-3369-4abf-a9b5-79238d53fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24891511-8216-4d23-be90-973407ad3888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be16f52-c827-4666-bd78-81d2affd6289",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dae1f1-39a2-4415-8368-4f52bea64547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa904715-2688-42a7-9e82-2b1996f3bf83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfde026-0b4c-4745-9a80-de370ef4c3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b46c4e-e42c-47f4-9d96-ed411dae3c6d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00c10f85-92c2-4124-9c3a-0312dc601dcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57714664-5c89-4fd2-846a-8c1a4c60b84d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7163b92-1646-4367-b49d-efb24b2d3219",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b90da8d-3e82-4471-b94b-6a03e3716806"
                    }
                  }
                ]
              },
              {
                "id": "72745af2-8193-4326-807a-f60bcab9c9ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e499784-28c1-4420-aad9-f44b5830b1d5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b5ae3-e030-4509-a746-2d5fc8523e03",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6db7e14d-2560-4297-b1ab-71e9dc701473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb9f70b-32c4-411b-ab30-6372c1a3e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66b0cd28-7db1-41e2-9374-a2ac8cbbd49c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deabd3e1-5783-40b2-a3a9-073807962289",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91fcaf0d-c230-45c0-9805-3b324391c025"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9cf30e1-c5e4-43c7-b065-1d22fba75970",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eb94a47-0fa1-44bd-b6a3-9521453c4e08"
                    }
                  }
                ]
              },
              {
                "id": "19defbe2-7669-4c84-9a1c-443585680512",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b0af9b5b-59de-4d56-9960-ad6bb0438976",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b13268-763f-408a-9e81-826eb60b7905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "16571beb-1b52-48d5-a695-da03e7ac5b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5901c148-2aa3-4720-87d6-e9ae6e40f65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dceafd8e-16e0-4f9a-90d9-c298024517a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e4d9b580-3004-46ad-a6ac-af0eb48f3f61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d45d1d94-f58c-49e9-bf79-24dc85622f56",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39a14001-d5fd-4164-98b0-ddecdf025abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0595e910-9fa5-4dde-b110-0db210e6b6b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28445e23-20ba-46a4-959c-c6577054feae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab46234-eac9-4220-be1e-59704dd8a6c2"
                    }
                  }
                ]
              },
              {
                "id": "ecd21da2-4a38-444e-be1d-8d25452315b5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9dbc310-c876-4e3a-8db2-f3b64df699a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac5fcfa8-ffd4-418c-986e-3d0467011d31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5866e4fe-cd53-4d8a-8323-f129b5e3e431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1153aa18-e83c-4ca4-95ad-91f1e8dd2a31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93495653-5988-4050-9dcf-4a0a041b4cc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36e1c2af-a085-4634-b5ca-fdcc89f5c1b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1b8db5e-6421-4b9d-a34a-396d902d8be7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aec612bf-baf6-4e06-a3c1-9e8698bae77b"
            }
          }
        ]
      },
      {
        "id": "88ba5998-0a74-4a11-b2ff-7a4759756c27",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "af8551a3-2742-4a68-801e-9b8facb4e135",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ba80a31-1943-4166-978d-a11ec2197967",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23789fd3-b152-4bb0-816a-11a3442e5bcb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e253e3-80b1-4869-8280-1f2ef18699f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1fe37bd5-98fc-4edb-aa57-ce3113a18c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77daae5-0e80-4ae0-bdf9-19b0363a4e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bd383de-5fcf-4067-bd92-3a034e306ace"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "740f80fb-ca3d-48b7-99ea-27c280fc6188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89ad2761-6c32-4490-954e-8ad673f36e09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ecd582-2323-4d33-8ac2-39930b4eba16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5f2576f-de95-45b6-bdc7-debc6b1a9ba0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2656b2a1-d777-497a-a04c-68f73f9457f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c317e5f-146e-43e1-a1f4-d09d4a6b7c84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72d7e16d-7d40-441c-bb2f-58425d88c5ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0da30ede-938d-45c5-bb83-4645561c4d3d"
            }
          }
        ]
      },
      {
        "id": "5dbd1c50-6f85-4757-85de-1cb9eb24bc89",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c4999922-1e5c-4666-9b2b-a04ba0a41bc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e5f2c81-2a43-4353-b3a8-7e48f80a995a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d614b35-9752-4432-bf47-08fa35f8abb8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92c912f-e3e9-4d43-8d52-cd59df091bea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93fd196f-3a8c-4440-b711-ecfc9d67d43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9db55d0-c525-4106-bdd1-cd5b8b4cb207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e2f92bc-0db1-41f7-9ff5-1b70c0d95624"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "929d017d-66a2-4b8b-a77e-addfc8f79f30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29042a92-fe40-4423-a720-9b1974b4aa83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4595fc56-367d-47de-89ee-8279234a7605",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f75807e-ac0a-4071-8c3b-f48a389f5339"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dd1448e-c2e9-4314-87c2-d8fe8a01f827",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4077a35a-b5a1-4f29-95bf-5cf1c9a6a468"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d90b6b6b-6568-46da-97bf-478f16f52516",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecbdbeb4-b8d6-4afd-a9d9-372a57797fef"
            }
          }
        ]
      },
      {
        "id": "08204519-60bf-40d1-939d-062a1dc1d6d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d575ef6a-c6b7-40bc-983e-8df46f17d2e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a1632ea-b594-43bb-8bb7-7c0cb7253369",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a446db42-5764-4b75-a6b4-984e83b0d834",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8fe2a4-e796-4458-91cf-15d84fc2865e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee9346f4-dae5-47d6-ae63-a5db90bbfa13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bde6882-c270-4ea5-9246-6ab646f83891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e40eb79-fa19-4367-9446-5b7d691598f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90d7e3f0-b4a3-40de-9791-e555a5951313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17a8217d-6f54-40f6-af9c-9e7cd496fbbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "004080cc-fa6b-4573-a63a-e77c28b6815b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d303a690-7cbd-4aef-ab30-6e165647bcb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4c6fb73-383d-4419-8ad9-f66f2d4d441e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12812a6c-e48f-4db5-9273-e50d0bdf2fad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1e5e5fb-8039-4d2a-bf2e-4b0399a07775",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "995fca34-66c5-4a64-b92d-20fbb45127df"
            }
          }
        ]
      },
      {
        "id": "6c60e91b-b9d4-4e75-b9b5-a050d48c8a93",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bef5c14c-7e21-49af-9c1c-b6387b4aeb44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8000633-faa7-415f-9772-bd183a6ba6e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d29a6787-85cb-46fc-895f-d6a89536b5e1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9c2b495-e892-4201-963b-afd0c5d1bd4b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfd4e240-68ad-4285-b677-713c29e4adea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.66666666666669,
      "responseMin": 19,
      "responseMax": 279,
      "responseSd": 25.290684321510437,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698280360580,
      "completed": 1698280382351
    },
    "executions": [
      {
        "id": "ddbdd6e2-0efe-4dc1-8467-8c39406aac88",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0e106bfb-06de-4ffd-9e9f-fb7b9ed2b26e",
          "httpRequestId": "ea932ec3-74d2-4993-b6f1-e1dfd5dfc58d"
        },
        "item": {
          "id": "ddbdd6e2-0efe-4dc1-8467-8c39406aac88",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5fdf33bf-927d-45b7-88f0-47e1b178c4d7",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "d0c6e992-2919-456b-b948-fc7225e468e0",
        "cursor": {
          "ref": "8a50e95a-97e5-4943-bbb3-88b076a391df",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a57b5a1e-d7c6-4a48-8782-a2ee628b1afb"
        },
        "item": {
          "id": "d0c6e992-2919-456b-b948-fc7225e468e0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "41a69597-e6e2-4a97-b203-734a230ed7cb",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "88ab4bb1-d419-4ae8-ad9b-964283efa730",
        "cursor": {
          "ref": "64e34409-b114-4557-a400-897d08dcd79e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f0aa1b27-af07-418a-8b7e-819c9fbaf22c"
        },
        "item": {
          "id": "88ab4bb1-d419-4ae8-ad9b-964283efa730",
          "name": "did_json"
        },
        "response": {
          "id": "2910f21b-5c58-43ef-b5c3-262495c9cc70",
          "status": "OK",
          "code": 200,
          "responseTime": 251,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93c5cfe-74c3-4a6a-8557-b04fef964ce9",
        "cursor": {
          "ref": "f882068e-7319-46e4-a482-8eac43474d23",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ba273b9-fe1e-4be2-b53e-369c6fb9a79d"
        },
        "item": {
          "id": "d93c5cfe-74c3-4a6a-8557-b04fef964ce9",
          "name": "did:invalid"
        },
        "response": {
          "id": "a4ad5413-fcd5-40ff-8708-30de9cb4c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93c5cfe-74c3-4a6a-8557-b04fef964ce9",
        "cursor": {
          "ref": "f882068e-7319-46e4-a482-8eac43474d23",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ba273b9-fe1e-4be2-b53e-369c6fb9a79d"
        },
        "item": {
          "id": "d93c5cfe-74c3-4a6a-8557-b04fef964ce9",
          "name": "did:invalid"
        },
        "response": {
          "id": "a4ad5413-fcd5-40ff-8708-30de9cb4c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f242eb48-5c20-4298-af02-0d772aed4c04",
        "cursor": {
          "ref": "7d0d7001-139c-404a-a6f9-7a7e03107833",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b4097fe6-95a8-417c-bc43-9b25a2304121"
        },
        "item": {
          "id": "f242eb48-5c20-4298-af02-0d772aed4c04",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "342a57be-fba3-4c9d-bd2f-205b71767dce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc58a215-0b7f-4a09-8461-a3d797baf683",
        "cursor": {
          "ref": "a2911546-1fec-4a59-8972-2aa2532877af",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a47036c4-b6ee-4790-bb3c-35f653e65934"
        },
        "item": {
          "id": "cc58a215-0b7f-4a09-8461-a3d797baf683",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2af06824-ca5d-462d-8007-765efb7be7ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326ab758-3c8e-4576-82ef-53e8bbd39f69",
        "cursor": {
          "ref": "74eeac23-f5c8-4c82-8217-c2c9f39b8108",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b1f915ce-74f9-4e9a-b2fb-c661961b13c1"
        },
        "item": {
          "id": "326ab758-3c8e-4576-82ef-53e8bbd39f69",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e86822c7-dafc-43e3-a940-163220c7a111",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c0418a-e7b7-4561-845c-c6a0c19dda2b",
        "cursor": {
          "ref": "fc79ffc0-d289-4b3e-bf94-ee561138f895",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b68dc3f-904e-4f65-b6ed-1ca32c8d4238"
        },
        "item": {
          "id": "e9c0418a-e7b7-4561-845c-c6a0c19dda2b",
          "name": "identifiers"
        },
        "response": {
          "id": "41eaaefe-cfd8-4259-ba8e-f5a316a82ba0",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43412eaf-0955-4f82-96a4-50a2f227e13e",
        "cursor": {
          "ref": "089cc4a3-a65e-42a3-91c8-a3325c00a29f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5c786b90-2e63-49fa-95f4-3285ec03d5fc"
        },
        "item": {
          "id": "43412eaf-0955-4f82-96a4-50a2f227e13e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e011ea99-8233-4351-9563-ceb941f6646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0be5a9-9816-43e6-b9ea-95550da573dc",
        "cursor": {
          "ref": "b5d3b0b9-82c8-4611-b8e5-bb2fc8e3feb6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dcb1c388-9488-428e-9ff3-db6697c0ee35"
        },
        "item": {
          "id": "4a0be5a9-9816-43e6-b9ea-95550da573dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c73e23fa-1fb4-4fa4-9bff-cc59d06572ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e62fc1e-affa-424d-9504-edeae31ee8a3",
        "cursor": {
          "ref": "f7d88878-d059-4f60-9ac8-3582d5644011",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "46488cf0-61c2-48cf-bb1d-899aab667f53"
        },
        "item": {
          "id": "2e62fc1e-affa-424d-9504-edeae31ee8a3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90d408a0-5906-4f1e-8b5f-f22e03f57003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c90abc-4dfe-4908-b642-03b87d51b411",
        "cursor": {
          "ref": "5a88a861-36d0-4a40-9b7e-45cfa3460c38",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ef7b6f7f-7ea3-4ebd-a65c-36c30d8a365a"
        },
        "item": {
          "id": "06c90abc-4dfe-4908-b642-03b87d51b411",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "42940315-d15a-4798-8c40-988672d4fb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5361b4-0821-447b-85ae-ee90a3dead98",
        "cursor": {
          "ref": "416e42c8-3f5c-4b07-b2e8-90cc1caeeadb",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d569e26-2a8f-4753-a5d8-f8ca0fa885ef"
        },
        "item": {
          "id": "7d5361b4-0821-447b-85ae-ee90a3dead98",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ee6f6eaf-69bf-4c89-b98e-3a7c1d170650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62363c9a-ba59-4de2-acf9-1804d4e16144",
        "cursor": {
          "ref": "ff578c74-ee92-43fb-a028-317e98d780a1",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8ae11ab6-0d2a-4b52-aebc-36b7d9ffe6ee"
        },
        "item": {
          "id": "62363c9a-ba59-4de2-acf9-1804d4e16144",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "626b0bc4-80d1-4ef0-998d-61b4dc5a4554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b58f5-2a16-4873-825d-14bee70181c2",
        "cursor": {
          "ref": "41d0ee1c-ad25-4631-95ed-c6862b8d2e05",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e8992fa6-b972-4a32-9434-94fb5cf1ba12"
        },
        "item": {
          "id": "6c0b58f5-2a16-4873-825d-14bee70181c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8ca16979-7cbe-4141-83bc-f51d1b1ed105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14d25dd-cd05-47b9-9a7a-9a677fe64b12",
        "cursor": {
          "ref": "5f278841-35d9-4b78-89b6-388991819776",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "db50aca3-c7da-40f9-b6ea-c69038d0e283"
        },
        "item": {
          "id": "b14d25dd-cd05-47b9-9a7a-9a677fe64b12",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8c182126-623f-4e97-9309-112cdd121cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db8b52-3f20-49a5-b97b-e7499278313e",
        "cursor": {
          "ref": "92ab7baf-b7b7-4726-8384-1a1f97495577",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "940ec943-82ba-49ba-a8fd-135e838093ce"
        },
        "item": {
          "id": "95db8b52-3f20-49a5-b97b-e7499278313e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "acbfcac5-34b8-438e-befc-862eeb94d4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9aeb5-f5eb-40f9-911f-b2062e3824c3",
        "cursor": {
          "ref": "dcd5f3f5-c2af-48ae-bbeb-1d4551429a4d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a1750ddb-53e4-4989-9362-bc485006de98"
        },
        "item": {
          "id": "11f9aeb5-f5eb-40f9-911f-b2062e3824c3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0b1f0f6-16ad-4c23-ba83-13db14828aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b42b7bb-c8ce-4476-a7c3-a1160af8231c",
        "cursor": {
          "ref": "d127ad94-6747-4553-a721-055098ec0022",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "01489c5e-8498-4be9-a677-612aed081321"
        },
        "item": {
          "id": "0b42b7bb-c8ce-4476-a7c3-a1160af8231c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d4a73398-0068-4d15-98eb-ec5d274a2ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d94c7b-6e9b-4367-a0bf-0d9e3bff97f8",
        "cursor": {
          "ref": "934dbe11-3cd3-40e1-a9db-a86b84583029",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9b3b8c71-3ac5-4527-b70c-ea734cdeb8a4"
        },
        "item": {
          "id": "97d94c7b-6e9b-4367-a0bf-0d9e3bff97f8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7e3ea8b0-f6c8-410c-822b-ee2eee20577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8e8d73-c257-481f-858c-c4e6137337bf",
        "cursor": {
          "ref": "1b1248b2-d489-4c69-a9c0-4f61fb5e4b5b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52c2f470-7f9d-40fb-b086-4ea6a217ec23"
        },
        "item": {
          "id": "df8e8d73-c257-481f-858c-c4e6137337bf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cabe3438-9960-4e04-ab86-1070ddf79c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a8ba87-1acd-4b16-82b0-e8051f67edac",
        "cursor": {
          "ref": "1c28cd71-e90d-415e-b2d9-480044693efd",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "87df547c-5c32-4897-87a2-cf630a4a97fc"
        },
        "item": {
          "id": "35a8ba87-1acd-4b16-82b0-e8051f67edac",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b3b60062-ad80-4c38-bb96-4dc6e7749772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97c4215-d1ac-4b4a-a1be-9c567c171e12",
        "cursor": {
          "ref": "05d89f62-8847-4233-8a0d-1580105a3475",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "661b75b0-1174-4a86-be79-d2c04c1a6eb7"
        },
        "item": {
          "id": "b97c4215-d1ac-4b4a-a1be-9c567c171e12",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8940832f-ea31-4382-958b-72f38fd0d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e046b8ca-70ea-4c64-ae0a-40967a5fd7ca",
        "cursor": {
          "ref": "0b02366a-e08e-4cbd-aeff-66b91ec59b04",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "76ad81e1-7886-47ee-aef5-5ef9e649998a"
        },
        "item": {
          "id": "e046b8ca-70ea-4c64-ae0a-40967a5fd7ca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90e6328d-2761-4e28-ab32-38ab02dcfc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf19ade-5768-4b05-8b6d-bbf66115b35e",
        "cursor": {
          "ref": "102f81c3-6827-43fb-9ba4-c42568227d7a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f5686dd7-6a46-42fc-80b8-9497766966ba"
        },
        "item": {
          "id": "baf19ade-5768-4b05-8b6d-bbf66115b35e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b1e96cc1-77a2-4f74-a09e-f7e00fd9c73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d93864d-f900-4c1b-8530-db683c2d3a4f",
        "cursor": {
          "ref": "6661c8f7-283b-4b95-9736-167fdee1c22b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "03f90868-cae7-4dfa-b5ef-28e70efdb27d"
        },
        "item": {
          "id": "4d93864d-f900-4c1b-8530-db683c2d3a4f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c73cbede-d3c8-4610-8200-97202a36fb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe4bbcf-e7bc-43dc-ae26-5cf1f25eb582",
        "cursor": {
          "ref": "276edb83-b0d0-4b49-98c1-565a2a0ae0e8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d3e8c03a-7a50-4f3f-a289-39051ecdd34b"
        },
        "item": {
          "id": "bbe4bbcf-e7bc-43dc-ae26-5cf1f25eb582",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "673dfd60-2e0b-42e8-83c9-7fe9a86eb66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c01412-92a8-4642-bd26-8ed94ef47a36",
        "cursor": {
          "ref": "5005e7ef-221a-49a9-adff-3ca38d615102",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "12208893-6ece-4c7a-9e90-53a05ecf4eaf"
        },
        "item": {
          "id": "71c01412-92a8-4642-bd26-8ed94ef47a36",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "59833d96-cc29-4677-90dc-02935543ee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e6a7a6-64a6-4c06-92c9-eba87c8ee666",
        "cursor": {
          "ref": "c3901c3c-e225-4833-86ce-b93983a9c0b9",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b1bcaee3-97ca-47c9-bc3d-bd577454e7e2"
        },
        "item": {
          "id": "68e6a7a6-64a6-4c06-92c9-eba87c8ee666",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "df1dbbbd-113b-4c0d-bcff-9263a88592ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133738bf-d781-4dbc-a170-951da1af1ad8",
        "cursor": {
          "ref": "f61ef974-f916-41f3-9682-583675804259",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "75f53a1b-0094-4041-86cd-069be0f35ad0"
        },
        "item": {
          "id": "133738bf-d781-4dbc-a170-951da1af1ad8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "28580f05-77e2-4a3a-9e26-1946119799d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b00171c-30f0-482a-9b00-71ff2db379b0",
        "cursor": {
          "ref": "3692c12e-5c54-496f-b77a-00427eaa9ef3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "de23f253-a9c0-4ba2-bc1f-f3e5a0492da5"
        },
        "item": {
          "id": "4b00171c-30f0-482a-9b00-71ff2db379b0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c73725e6-637d-4e56-986d-32ea8952235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c2886c-2896-49fa-b7cf-def579969649",
        "cursor": {
          "ref": "d3d19f1b-7c8d-4f8a-bb8e-b26d3a81fb4c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ed911637-096a-42d5-aaad-ecff1798b9dc"
        },
        "item": {
          "id": "19c2886c-2896-49fa-b7cf-def579969649",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "75ce2727-a06a-4735-90ba-ea1c26f6ce70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe68e07-7bb1-431b-a087-3c9da47b3651",
        "cursor": {
          "ref": "89e36d3c-ec0c-4c71-bc66-c5f0f2909b33",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ba800063-b6de-4c9e-953b-3accab76eb3b"
        },
        "item": {
          "id": "7fe68e07-7bb1-431b-a087-3c9da47b3651",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "34a50829-ae86-4e64-afa1-0abcd4981c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deef5265-d342-4eb4-85a3-e9914c728797",
        "cursor": {
          "ref": "b30ad081-dd8b-45f5-bc42-4a18bb48bff6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b7bcce5-b092-4daa-a71d-12cfae43deb9"
        },
        "item": {
          "id": "deef5265-d342-4eb4-85a3-e9914c728797",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b773ece-df17-4636-a6c4-d1782018853c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782caa06-bf4c-479c-93f4-79b2cfbebf93",
        "cursor": {
          "ref": "ce99d1cc-cb61-4a84-abf0-d4f37d6db278",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "083fc79b-6a15-49fc-b9ec-31c0cd4b78c2"
        },
        "item": {
          "id": "782caa06-bf4c-479c-93f4-79b2cfbebf93",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e5b22957-d345-42cc-92c3-1de8b8901e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b4a8ec-db7a-493f-a720-7ef32fe21018",
        "cursor": {
          "ref": "58231495-4277-4e8b-af9e-1bd707aae579",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "94577ab3-6c8b-49ce-855d-e1a1e6f1fc3e"
        },
        "item": {
          "id": "85b4a8ec-db7a-493f-a720-7ef32fe21018",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6f12e4c6-4d22-4a74-94b7-cb387b899738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e93825-2f4f-4877-9a84-ab48eadaa8ed",
        "cursor": {
          "ref": "cae0153e-e6dc-46e3-bc55-c7b1e3ba130c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9d5e16e2-2752-4898-9a2e-61745d287964"
        },
        "item": {
          "id": "c0e93825-2f4f-4877-9a84-ab48eadaa8ed",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6e62c9a3-c788-4d41-8c8b-80ffd65b5832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb0a825-7448-48d5-a3a9-a5f9bb2d276c",
        "cursor": {
          "ref": "c6fdc632-300c-4e54-941c-6f5c86133842",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a72a1802-aba6-41ae-a978-27d862798bf9"
        },
        "item": {
          "id": "afb0a825-7448-48d5-a3a9-a5f9bb2d276c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4dd6fbc7-5ae9-4fbd-adea-ae9426cf6e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea28bdd-c920-4a5c-99d9-80da53b49817",
        "cursor": {
          "ref": "2449b5e6-fe15-45f2-b21a-3c0831d5d2dd",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f8403d47-dfbe-4920-a029-65e605d9f635"
        },
        "item": {
          "id": "eea28bdd-c920-4a5c-99d9-80da53b49817",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2c2a0757-6ada-4c93-a56b-08d47eb917d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf78f9b-4065-47fd-b853-05e4ee95fcd6",
        "cursor": {
          "ref": "3c43652f-e8d4-407d-8930-c1f6fee74c7a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c45bdf78-f7a9-4a28-91ed-eb2590c6d04f"
        },
        "item": {
          "id": "7cf78f9b-4065-47fd-b853-05e4ee95fcd6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "03473870-9198-476e-90ad-faa4d296a5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d366416-bf86-4f5a-95ec-08eeeba3a871",
        "cursor": {
          "ref": "8e495d07-a730-4c63-ad33-290bef427be6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "992d2861-eda2-4636-bd5d-ab70cc1cdd4e"
        },
        "item": {
          "id": "5d366416-bf86-4f5a-95ec-08eeeba3a871",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "151408e1-a07f-454d-89b9-e9786d8a8690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da8d206-e1c4-4cc0-8ece-7a3da3f0f1da",
        "cursor": {
          "ref": "23eecc4a-5f1b-4274-9aa5-21f9d5bd3596",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "12e0eb2a-fc2c-4b56-bd5f-48ffb66ae279"
        },
        "item": {
          "id": "6da8d206-e1c4-4cc0-8ece-7a3da3f0f1da",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b214a691-96e3-4261-b00a-e3cf42f6d8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c298ddfd-a045-4873-b073-7d9e62c793ab",
        "cursor": {
          "ref": "05505520-6972-4d1f-8726-fecd22979b09",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f759af96-e8cb-4043-a0ce-9b69bed773e5"
        },
        "item": {
          "id": "c298ddfd-a045-4873-b073-7d9e62c793ab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "13fed9bf-4194-4179-ac6a-57e4cf0e7136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9c732e-7ad4-484e-a943-860d2a2785dc",
        "cursor": {
          "ref": "e8c19fae-67fd-4710-9b50-60326af34999",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e43cfc1d-3621-4f51-8292-a6b36ce0ca09"
        },
        "item": {
          "id": "7b9c732e-7ad4-484e-a943-860d2a2785dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e1c1ab47-da6c-47b3-826a-fd9f9d19106f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b9b45f-bed9-4f93-98bc-59a2973f7f34",
        "cursor": {
          "ref": "8783d61e-badd-4e56-87d1-a5e76617d37e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "36ef41c7-fb6c-481c-88a5-267bdc9e7711"
        },
        "item": {
          "id": "05b9b45f-bed9-4f93-98bc-59a2973f7f34",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f206e324-a7f4-42cc-aba0-d3a427f35d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60da7f1d-cf86-4939-a1a0-1a61f94bcd0e",
        "cursor": {
          "ref": "5f6ace62-71da-4c51-95d9-54154af2ddd7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33c871d6-f3aa-4017-8458-0967acb1af81"
        },
        "item": {
          "id": "60da7f1d-cf86-4939-a1a0-1a61f94bcd0e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "025da776-8fef-48b4-9997-9178c0d89beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a459bb66-130b-4b0b-9a29-c918f3d442f0",
        "cursor": {
          "ref": "f518eb69-1714-4950-87ac-2f709e338956",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1c0675fd-8f79-4bea-812e-68d26b8ca129"
        },
        "item": {
          "id": "a459bb66-130b-4b0b-9a29-c918f3d442f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1cb2e752-3761-40df-865f-575eb1e702f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceef458-496d-4177-a321-7156501e5d53",
        "cursor": {
          "ref": "35cc6dd8-993e-4eaf-96f6-47dd04539aee",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9e34e801-3dca-4eec-bffd-7e02f87bc2b1"
        },
        "item": {
          "id": "aceef458-496d-4177-a321-7156501e5d53",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "14132dca-4945-4cf2-8a5c-443843bdf4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a60b3a-5a18-4229-bc98-5f8e8e41fbf0",
        "cursor": {
          "ref": "e1927212-c7c9-4c63-9844-975627a4a134",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "37adcd25-07d1-48c1-9d9b-bda89016e188"
        },
        "item": {
          "id": "f2a60b3a-5a18-4229-bc98-5f8e8e41fbf0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fc10773f-e0ac-4446-b62e-3b6590b11734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f13fc52-e66b-4067-9ac9-76ca5648f53c",
        "cursor": {
          "ref": "0194b4b0-f26b-4264-af74-0b2a569c7fde",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cea04203-45dd-48da-bd48-53586171b404"
        },
        "item": {
          "id": "3f13fc52-e66b-4067-9ac9-76ca5648f53c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a854bf3e-7570-4c4f-8471-b80e277da545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59ff1ca-7b22-41b5-9570-3944f3cd5bec",
        "cursor": {
          "ref": "65e6ea47-f180-4610-a1d1-2289d3d9fc58",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d81f2449-5915-4734-9fd1-1a3e47151876"
        },
        "item": {
          "id": "b59ff1ca-7b22-41b5-9570-3944f3cd5bec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c118442c-84b1-4ba6-a58f-e384f7dea755",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d72e4d-487c-47e1-b916-3508e7fe5cbd",
        "cursor": {
          "ref": "1ba86df1-bd02-453a-81bc-a979f5dca29a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2c127787-195a-424f-8f01-5ef3dd1907bc"
        },
        "item": {
          "id": "23d72e4d-487c-47e1-b916-3508e7fe5cbd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9bb5a491-bf35-4c0b-9313-4ec3ea4f853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3a2187-788e-42c5-85f8-80072934f69f",
        "cursor": {
          "ref": "40f67095-8cdb-4088-a776-b01acfede695",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "55d5a45a-1a87-4114-843d-f4519aeff998"
        },
        "item": {
          "id": "0f3a2187-788e-42c5-85f8-80072934f69f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50ddda07-3e5f-4dd6-a9bd-21e0909d4591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c2894-3b2f-4e90-9bfb-b5cb0431803b",
        "cursor": {
          "ref": "4d1054ea-c060-4861-b097-66a14260170d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2ed4ae4-18ea-4dab-b047-29f0caef4eb8"
        },
        "item": {
          "id": "630c2894-3b2f-4e90-9bfb-b5cb0431803b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8b45a9f6-c64c-4ddd-b1ae-e63918c0e612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89358c3-3e56-4ed9-96bf-3377e0b38681",
        "cursor": {
          "ref": "984094d9-f589-43d0-a017-f90abb835e7a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d1a9a432-5f26-418c-816b-8b138fbe3db3"
        },
        "item": {
          "id": "b89358c3-3e56-4ed9-96bf-3377e0b38681",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8cd2e28b-ebb3-41f4-8c9b-2437dc68ae56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f40c250-96e9-4bf3-b650-9c383292421e",
        "cursor": {
          "ref": "664b323e-c9ae-40dc-bb4e-014b63cacc95",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "70f3c1a3-27f7-4f14-b7e4-59d6615609b9"
        },
        "item": {
          "id": "5f40c250-96e9-4bf3-b650-9c383292421e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6105d2a7-4942-4b38-a2d2-435c0c996928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1806ec6-329c-46a4-ace9-6388d0441283",
        "cursor": {
          "ref": "bcfb2491-6123-4021-9591-d08bd32057a0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "48de436c-bf99-46b3-a88d-6bfaa3445abe"
        },
        "item": {
          "id": "d1806ec6-329c-46a4-ace9-6388d0441283",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2b8c4044-ce74-4220-aa2a-f32f0b54782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbae8599-ac45-44bb-be81-0a9cf3cb1f6a",
        "cursor": {
          "ref": "9e9e8689-5551-4c1b-8e1e-03e7f846186c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eb9e7056-3a9e-44fd-8a87-dbc2bae060f2"
        },
        "item": {
          "id": "cbae8599-ac45-44bb-be81-0a9cf3cb1f6a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7cd4eea4-7442-4e6f-9355-42f5d10aa393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9f968c-33db-4f50-abac-4b7c4a0fdb5c",
        "cursor": {
          "ref": "e987a6b9-909d-4f87-a6ba-e721d3ef9b3c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "27c09ee5-d031-433c-b0c9-ad86e9bbe0f9"
        },
        "item": {
          "id": "4f9f968c-33db-4f50-abac-4b7c4a0fdb5c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "962c6213-4f9d-4759-8aee-b0b3490b7173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2538f5f0-00c1-4ee5-9b50-4420a1ec22a5",
        "cursor": {
          "ref": "df385213-811e-4e80-9840-22b2feac6c52",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "46600a45-7689-4851-8b97-dd86756f9e76"
        },
        "item": {
          "id": "2538f5f0-00c1-4ee5-9b50-4420a1ec22a5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4dcd60ee-a589-40f2-88a7-c7179d8e1f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515b44b8-49e7-4d74-a0bc-21cb9b561fd3",
        "cursor": {
          "ref": "8edfc0ac-f9a4-4000-99ee-7ec71e245df3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "162ea0aa-a142-44dd-8d82-faff149a5a14"
        },
        "item": {
          "id": "515b44b8-49e7-4d74-a0bc-21cb9b561fd3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5bb378b6-535d-4770-b6d6-ac609534b9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb41b5d-1bf2-44e9-a2df-b7d75d74ef1b",
        "cursor": {
          "ref": "908da954-d84e-4ff6-b578-95e3aad3a5be",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "43e9a604-42d6-4e00-b0ce-c5bd99f773f1"
        },
        "item": {
          "id": "6cb41b5d-1bf2-44e9-a2df-b7d75d74ef1b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e59293b0-54fd-414b-b252-0e84d10c0433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062166fd-781f-4605-a8be-28fda8a3544a",
        "cursor": {
          "ref": "b8fd8403-cef5-4a07-80a3-4d3fe5a43e31",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "78b67d7a-52ed-4436-bd5b-a20c6621bd73"
        },
        "item": {
          "id": "062166fd-781f-4605-a8be-28fda8a3544a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c41f1b35-0df3-44e1-899c-ca959ab7f705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1e5d2f-0032-4a45-a337-6d57a1fc3896",
        "cursor": {
          "ref": "307a0400-564a-447f-b5e8-4d09244daefa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4619d62c-fc0d-484a-8769-7f5efe20682c"
        },
        "item": {
          "id": "1d1e5d2f-0032-4a45-a337-6d57a1fc3896",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7090c4e0-2265-404b-a6b3-fc983cfb16c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2024f037-7172-4472-91f7-84752c91cafb",
        "cursor": {
          "ref": "303e3995-4b96-4859-9504-08c815101dac",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "261153e8-39d6-468b-b65d-3d09e48a37c1"
        },
        "item": {
          "id": "2024f037-7172-4472-91f7-84752c91cafb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "26cce2c4-5ca7-4e9b-9ef6-f541be6e3cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f659420-70c5-4415-a944-8d3e85404103",
        "cursor": {
          "ref": "4087c0cb-6c8e-454d-b2c5-25c89c026021",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d80cde8b-9250-4a84-aeaf-c05b0d80da05"
        },
        "item": {
          "id": "2f659420-70c5-4415-a944-8d3e85404103",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fb5a3c76-c8cc-4968-b694-c10db4aa5b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0643427-d5fd-4d91-87f7-0276cbf59c8e",
        "cursor": {
          "ref": "055fb264-8714-428e-a08a-45d8d83bb07b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "700388ef-0837-48ec-a5e2-af41d174d2dd"
        },
        "item": {
          "id": "b0643427-d5fd-4d91-87f7-0276cbf59c8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "528ce870-8268-4bf3-88f5-17d8e8efb133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0a5922-db79-46ca-bb3d-6077f234390f",
        "cursor": {
          "ref": "f37a8e52-9d66-4b1c-bf0c-bf12e13d5605",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d5b6cbd1-1578-4fed-b01f-42c54eec25a5"
        },
        "item": {
          "id": "ce0a5922-db79-46ca-bb3d-6077f234390f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "284ff1fc-3de8-40c4-8aaf-2f867ec72294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fed237-5685-432e-b549-2a184c7b8fb3",
        "cursor": {
          "ref": "c945c9b9-b1aa-4aa8-8671-f7c74697ee5a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d3d3ffd3-1763-42fb-bc11-60af614ce6e7"
        },
        "item": {
          "id": "20fed237-5685-432e-b549-2a184c7b8fb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "811da3f7-9737-457b-b21d-90897db2cab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22df04-2846-4cd4-8630-2e5487de9df1",
        "cursor": {
          "ref": "86419097-8b59-42ee-9030-a233097b1cdc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "985e1442-5b44-4b88-b411-a39661efa60b"
        },
        "item": {
          "id": "ba22df04-2846-4cd4-8630-2e5487de9df1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29acdc7c-a5a3-4ef8-916e-aff0ee55362e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9595a5-8931-456a-99db-6725954a3459",
        "cursor": {
          "ref": "fecf0e89-f572-484b-a7a1-94e3e5d93f64",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9c8a40fa-d5fb-4866-97dd-4ed91eab0f5a"
        },
        "item": {
          "id": "cf9595a5-8931-456a-99db-6725954a3459",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f1060915-7694-4eda-9b18-8c6bfd0e6f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5c56e4-bf4f-4ab6-b4cf-2996258ec799",
        "cursor": {
          "ref": "d9cc37c1-9354-40d8-92f7-4c3c66779f98",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c393b600-77eb-4a65-a1de-8219eeb756f5"
        },
        "item": {
          "id": "8b5c56e4-bf4f-4ab6-b4cf-2996258ec799",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c231a63b-63b1-490b-88b8-af625964a152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f757df39-3400-4835-b5a6-d1f254aac0dd",
        "cursor": {
          "ref": "0567489f-5581-408e-b2b8-e5cc354ce7ab",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "856b1f99-4113-4355-96d3-25c003b77f69"
        },
        "item": {
          "id": "f757df39-3400-4835-b5a6-d1f254aac0dd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1d83906e-349d-4e6d-85db-28863f80bde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cf9757-6c05-476d-ba69-4660a6ccde46",
        "cursor": {
          "ref": "15edea14-1e08-42cc-be95-31f4c6152a75",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7118db99-18a4-4448-9b78-e2b9d643d179"
        },
        "item": {
          "id": "23cf9757-6c05-476d-ba69-4660a6ccde46",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e886ec3e-a8e5-411e-b5b8-8430f12c7d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597eae05-95ae-4419-8d7d-fdc5f2720512",
        "cursor": {
          "ref": "be9b943e-e08a-4756-bb05-4f61f99e0520",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cc7fb055-7cd2-4360-aab6-908968b23a90"
        },
        "item": {
          "id": "597eae05-95ae-4419-8d7d-fdc5f2720512",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f0ae4b3e-3b18-401c-83ee-64a2998a1ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be01dde-49c3-4375-a6e7-753d8f927a48",
        "cursor": {
          "ref": "50ce3af1-40d3-4cc6-a782-1b8d213e00a7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dfee352e-d7f3-4a94-a40f-9fda6e658877"
        },
        "item": {
          "id": "7be01dde-49c3-4375-a6e7-753d8f927a48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b8c85674-0985-46e8-a7e5-a8fb33a17619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a53e97-3ea5-41c3-a80a-164187d9e08c",
        "cursor": {
          "ref": "717b67c6-26ce-4b24-83aa-018064787823",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e86c0722-02b2-45c1-97c1-fa0264fdf638"
        },
        "item": {
          "id": "c5a53e97-3ea5-41c3-a80a-164187d9e08c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f14c47e-bc29-448e-80c5-ac1fe38a7684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85dbbb-016b-4730-8ea1-4a46e57888df",
        "cursor": {
          "ref": "5387c453-66f5-4be7-87c0-c4e8952237ef",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c8fd3ca0-6637-43fa-8ad3-556e1e7afc70"
        },
        "item": {
          "id": "ae85dbbb-016b-4730-8ea1-4a46e57888df",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "728c74d4-be62-4d38-bcc8-0081dcac2cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5211484-8edd-4d2d-ad89-c9bf5c0d64f4",
        "cursor": {
          "ref": "72dfbeb5-adb2-4759-acdf-046ac90bbc47",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1d115348-f180-4396-8892-f32806d553d3"
        },
        "item": {
          "id": "e5211484-8edd-4d2d-ad89-c9bf5c0d64f4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "81025427-bda9-46ef-a061-18a3d053ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc048019-77d9-4579-8b87-fe0784a07261",
        "cursor": {
          "ref": "7d490440-959d-4a7b-81d5-417cb937f8ec",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3a503a2f-9ff8-4417-b771-e2d135b98c47"
        },
        "item": {
          "id": "dc048019-77d9-4579-8b87-fe0784a07261",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "524fbd63-4cea-4504-adba-4d8d5c81aa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afe48e6-e000-4ff3-8a64-87c5d81cabe8",
        "cursor": {
          "ref": "c6824a14-3d57-43c5-a99b-1d4467115a1b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c8c14e68-c7d3-4c1d-9490-37d7f5db9845"
        },
        "item": {
          "id": "3afe48e6-e000-4ff3-8a64-87c5d81cabe8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c7e7d278-4a5b-4629-96b7-d7016c3b971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1371bbfb-b57c-43ea-b34d-adf1b88d9c88",
        "cursor": {
          "ref": "b5ca1a91-8e89-47c9-8fef-62227fc637ad",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "693dac26-a319-4f15-9412-e7ef326c74a8"
        },
        "item": {
          "id": "1371bbfb-b57c-43ea-b34d-adf1b88d9c88",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cf8161da-2340-4e15-ae7e-f62b29a4e233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ccccd9-a7f5-49c4-b7f3-39ec1b8beecf",
        "cursor": {
          "ref": "c8223aaf-df5b-4107-973e-5bbbeec15831",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "206bd8c3-bf45-4a52-9185-e843ffa39fee"
        },
        "item": {
          "id": "99ccccd9-a7f5-49c4-b7f3-39ec1b8beecf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "20037344-06d6-4cc4-8a26-63ad7cb56d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fcef3e-6bbe-4263-9086-5398a134f356",
        "cursor": {
          "ref": "faa17d6a-2731-4c74-b442-3926f2ba870f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc448e21-6ba8-49ba-9255-3346e04866bb"
        },
        "item": {
          "id": "74fcef3e-6bbe-4263-9086-5398a134f356",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1b72c9f3-39c3-4473-a076-371d4423dea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51055937-e7d0-41a9-ac82-fdeef97e93a4",
        "cursor": {
          "ref": "f9758981-ddd9-432d-8586-f401887a19fb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f3661448-530f-4018-b184-3703f0f4369f"
        },
        "item": {
          "id": "51055937-e7d0-41a9-ac82-fdeef97e93a4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fb7b6d7c-be83-40f5-ae83-613a005a14b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bf7a29-cf3d-4304-8ff6-3adbf7ec6059",
        "cursor": {
          "ref": "57a6b651-4e06-459e-a923-88f4b75b2add",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0ce0cb0e-f6d9-4bab-bc5d-6a9254ff9974"
        },
        "item": {
          "id": "01bf7a29-cf3d-4304-8ff6-3adbf7ec6059",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf3f2b11-98be-445b-80a1-5d2f396227d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0698b6b-4f01-4d2c-88b8-c6235ab783db",
        "cursor": {
          "ref": "2f441c2b-5595-4321-a27c-190fd5e2476a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da148810-cfdd-48af-a382-276eea80ab07"
        },
        "item": {
          "id": "f0698b6b-4f01-4d2c-88b8-c6235ab783db",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fbde4bba-09f1-478d-b37f-bd657ec44ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b19d06-9dbc-49d2-b589-744b53ab92c7",
        "cursor": {
          "ref": "68ba6097-1810-46b2-a933-527626770e9e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dff78162-6cf8-4735-826a-ed528c720809"
        },
        "item": {
          "id": "88b19d06-9dbc-49d2-b589-744b53ab92c7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "155282ce-ee9d-4e46-9cb4-01fc4b4879e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75bc073-ca6b-4212-acb5-b6e4816df494",
        "cursor": {
          "ref": "0e7e720b-41cc-44ab-ad8e-a685eabe55d9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "efb7553e-9e65-4ce6-8237-54158606b19f"
        },
        "item": {
          "id": "c75bc073-ca6b-4212-acb5-b6e4816df494",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c1106e4c-f758-4004-a649-48d5fbb03fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65556d2-feef-44bd-a2c9-20b92da954e5",
        "cursor": {
          "ref": "a1319339-f704-403e-b5f1-073d6154d21b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e3623c35-54ac-4acb-a9a3-e9d0f7aa217c"
        },
        "item": {
          "id": "d65556d2-feef-44bd-a2c9-20b92da954e5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4a3de0dc-1b1d-4ff1-a76d-ae406a996862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de3548c-1334-4220-bee9-8c86580f7aac",
        "cursor": {
          "ref": "b03cb430-5a96-49a2-9ce0-dbcc8a2c4ea7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "476fd1d2-0676-4001-9dbe-e4a73683702f"
        },
        "item": {
          "id": "7de3548c-1334-4220-bee9-8c86580f7aac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "24e54c76-7bc7-4fdf-9520-0feb3718b489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e117762-2ab4-4f08-9d58-f3694ae7a3fb",
        "cursor": {
          "ref": "f369832c-2d23-49ad-8a7b-68a1f9553f38",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "59b7ffdf-d68b-4083-b58d-654bbb4d106d"
        },
        "item": {
          "id": "7e117762-2ab4-4f08-9d58-f3694ae7a3fb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "52051510-4ce5-4f4b-8826-ffe3f14a29d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d948e42a-c9e7-459b-8791-4c49ac30bee1",
        "cursor": {
          "ref": "62ac2330-d3c4-4695-b64c-5f778b45bb92",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "773f9bac-dfa5-42d8-aabd-c0bed23bbe9a"
        },
        "item": {
          "id": "d948e42a-c9e7-459b-8791-4c49ac30bee1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "479476ab-3c30-4d7b-a045-2c3641601ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e04d24-c2ad-4567-a243-f9adc085bf16",
        "cursor": {
          "ref": "b6c0ded6-0ee7-48a1-a36c-d32d4d7f7c9e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "864ab06c-794c-4f0e-94ee-ed6cdc5cbab0"
        },
        "item": {
          "id": "c7e04d24-c2ad-4567-a243-f9adc085bf16",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "943c3046-3c0f-4ae6-8275-09752abf752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a4af52-db3e-4ec1-b560-be873bdc19b2",
        "cursor": {
          "ref": "049a63c5-645d-4c09-9b1e-332aa5622df1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e3c2fbeb-afad-46ff-b229-aadb08803aaf"
        },
        "item": {
          "id": "34a4af52-db3e-4ec1-b560-be873bdc19b2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "98fd297e-5a39-4880-984b-3762f39b0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8363eae-f177-4171-a469-376e542196d9",
        "cursor": {
          "ref": "03e7b123-4615-48a4-ba72-3bedca82f410",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "da4b4038-dbc0-4ec2-bed2-ea49eaffe0a2"
        },
        "item": {
          "id": "d8363eae-f177-4171-a469-376e542196d9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bbfcfa0c-1a33-48df-836e-9a66b425b9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8354e6-5d17-4834-81b8-98115ded6a1e",
        "cursor": {
          "ref": "c68e83df-f5b4-4d7b-bbc5-8c460ef8dac0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "322bd18b-196c-4167-b8e0-f7315db63238"
        },
        "item": {
          "id": "cb8354e6-5d17-4834-81b8-98115ded6a1e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "017d1865-73e8-46e2-acff-840f1d4cd099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e8a74-4bc2-4e01-90b3-4c6663838f07",
        "cursor": {
          "ref": "963cd128-ed59-4e74-a9a5-da804905c252",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f79493f7-d30b-4303-bfd1-114913bc9522"
        },
        "item": {
          "id": "145e8a74-4bc2-4e01-90b3-4c6663838f07",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "30a61cc1-bf02-4451-8feb-0e85a2013bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a491110-a4ad-428b-9476-38b9df3e6fe4",
        "cursor": {
          "ref": "2868d609-dc55-4edf-9ca6-46080a013896",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d7a7f28b-cfb1-40ec-b094-10ec66346afb"
        },
        "item": {
          "id": "6a491110-a4ad-428b-9476-38b9df3e6fe4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84b00a2d-41aa-4011-b4e5-14d94e9718f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f8690-8aa3-4fdb-be3b-ef36695a3ae0",
        "cursor": {
          "ref": "6c1bc700-e9a6-4db6-8185-a0c7eba9bee7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ce83d201-e00d-487f-9e6b-597202419776"
        },
        "item": {
          "id": "190f8690-8aa3-4fdb-be3b-ef36695a3ae0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7f3de1c5-c45b-4caa-9b6d-94f01678e423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7735f0-16ec-4a0e-a8df-2792cda24423",
        "cursor": {
          "ref": "88ea6cf2-a0ca-4f27-bece-a86012bacef0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "972490f7-78e0-4e43-a7c7-62a88044c43c"
        },
        "item": {
          "id": "ef7735f0-16ec-4a0e-a8df-2792cda24423",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "085cd799-cd1b-490b-84a1-32e90bfd7778",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f627dc0-77e9-4100-b615-c60f56d2195f",
        "cursor": {
          "ref": "c010317d-55a8-4286-aa09-8be4623c7fe4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d19d2a07-cedf-40c3-94bb-949200c93090"
        },
        "item": {
          "id": "0f627dc0-77e9-4100-b615-c60f56d2195f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7c21e136-5db3-4a1d-b046-636fc6631547",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580bace4-9de4-431f-931e-ba9d1f85aeec",
        "cursor": {
          "ref": "426155e8-611e-4b0f-90b7-4feb096e5a18",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "38cb36af-f70d-48bf-84fc-c10191c094ad"
        },
        "item": {
          "id": "580bace4-9de4-431f-931e-ba9d1f85aeec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bc5742aa-2998-404a-b076-675a21ac1876",
          "status": "Created",
          "code": 201,
          "responseTime": 163,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "387be426-999c-47ea-8eb3-a9696a994684",
        "cursor": {
          "ref": "547eca1b-52d8-441f-92f8-2fb515f75634",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d8dd8cdd-26a2-4a94-a2ee-fac6548945c2"
        },
        "item": {
          "id": "387be426-999c-47ea-8eb3-a9696a994684",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "60689bf7-baec-4d21-82e4-8b344d27325b",
          "status": "Created",
          "code": 201,
          "responseTime": 212,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc5a30-77d5-4b00-97fd-6abbaa57efdc",
        "cursor": {
          "ref": "5a58d4eb-d9f0-486b-a92d-175b251672b9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9cac3953-3b54-4c3f-8f36-385e3a2d5d2a"
        },
        "item": {
          "id": "c5fc5a30-77d5-4b00-97fd-6abbaa57efdc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bc25ce9d-c513-49ff-b122-1d34a189d6df",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7d6433-7e01-4d6e-bd60-13b67f349271",
        "cursor": {
          "ref": "7a050b41-d6bb-4d54-a950-e622eab5ea79",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "282eb54d-d57d-4bd7-ac2e-19414d3a9949"
        },
        "item": {
          "id": "ac7d6433-7e01-4d6e-bd60-13b67f349271",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2386f5ef-633b-414d-8843-93ec55b4295e",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca392bd-b255-43d3-a01b-96574b041bc5",
        "cursor": {
          "ref": "18a4d438-1017-4dc1-a41b-51af9c3e822b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a8fae89b-f65b-44b9-b0cc-b9cf3d2c3825"
        },
        "item": {
          "id": "bca392bd-b255-43d3-a01b-96574b041bc5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fa3bcea1-5b09-4816-a6ba-5be34bd9eb73",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c34ff8-05b8-4d2b-8f58-337b4d0f124b",
        "cursor": {
          "ref": "0ff7e07f-5ca6-42ab-8525-45a1580d95f1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "48ad58a1-ae0d-45a0-98f3-e6e42d976b39"
        },
        "item": {
          "id": "c6c34ff8-05b8-4d2b-8f58-337b4d0f124b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "53343d68-ff33-49f3-962d-dea056c93eb4",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd33f5c-d6e8-4157-9977-cab37a73bae3",
        "cursor": {
          "ref": "6617b11a-2b7d-4a77-8e73-f2cbf48e8373",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f4c23cdf-c444-4dbe-b5df-9e6f43df31f4"
        },
        "item": {
          "id": "8cd33f5c-d6e8-4157-9977-cab37a73bae3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc6dbf08-7892-48bd-b461-6fa5b7bc0860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07bc881-fd7b-45fd-bad7-ce5c23dc9499",
        "cursor": {
          "ref": "7fcf5f85-33d6-420c-be32-e9ac086368e3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bc0ed24a-42d5-46b3-9000-578219f810bd"
        },
        "item": {
          "id": "a07bc881-fd7b-45fd-bad7-ce5c23dc9499",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b68fff30-0e86-42f3-9e22-ab924879051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450ab7bc-cbe7-47ed-acf8-cd625f7d02ee",
        "cursor": {
          "ref": "b5b9c53f-aebc-4e93-a8f2-1dd465aef963",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "57d366c8-12d5-4e44-ab75-06ae289ef114"
        },
        "item": {
          "id": "450ab7bc-cbe7-47ed-acf8-cd625f7d02ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83a6a89e-a145-43f6-9e9d-8613f6fdade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c721cb-ef92-4727-8c31-45711cc1fa95",
        "cursor": {
          "ref": "97335d66-42d5-4b9b-9ad1-2e9a4af54838",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dd7e7f47-5e89-4574-aa0e-5bf3b7115d97"
        },
        "item": {
          "id": "84c721cb-ef92-4727-8c31-45711cc1fa95",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cc2ada56-b5cd-415c-bfbe-c6b5624b67e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b7bf97-7669-49ee-ac6a-5d4d6f0b78e9",
        "cursor": {
          "ref": "194bc182-db62-4cd4-ba96-ed95200ab827",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "99f072cd-1f72-4719-901d-075443cfb3ec"
        },
        "item": {
          "id": "44b7bf97-7669-49ee-ac6a-5d4d6f0b78e9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6257f642-315c-4b18-b0bd-301fc4cb2c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e47ae97-2103-4cc9-9661-858400de4a39",
        "cursor": {
          "ref": "f9e353d4-b5d3-447c-a317-8e601cadb7e7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "51958fdd-4013-4011-9a61-20d913bbf26c"
        },
        "item": {
          "id": "3e47ae97-2103-4cc9-9661-858400de4a39",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a9f9c578-8305-4af4-838f-57e6afcd110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72271867-4672-41a9-b7a6-f5040a2e1e70",
        "cursor": {
          "ref": "bebb2d0a-201d-4249-8e66-b094843cf50f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9a4d2708-ea23-48ea-ab03-38e5d22144c7"
        },
        "item": {
          "id": "72271867-4672-41a9-b7a6-f5040a2e1e70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b45a31fc-c4bd-43f8-9d19-987ce9635288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be196ec-ca93-45f3-823e-a6579c013463",
        "cursor": {
          "ref": "591deee3-32b3-448d-9503-a1feb94923d5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4ce04471-5eba-4884-89d7-70b7e466d958"
        },
        "item": {
          "id": "5be196ec-ca93-45f3-823e-a6579c013463",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d937205c-9e93-4397-9f70-bf766fa9cd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069e1493-2be5-43ad-b627-cbca97007d21",
        "cursor": {
          "ref": "e1845ae5-36fd-41b3-bfde-0e11fbedcaf1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5ede3e50-fd0b-4675-84f4-7836b91cf95f"
        },
        "item": {
          "id": "069e1493-2be5-43ad-b627-cbca97007d21",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cd400020-1a15-4e43-b283-8db797be29c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82309df-45e2-476a-a41d-24946dffe022",
        "cursor": {
          "ref": "f3b9bb7e-61f0-4704-b78b-5e60059b9d3b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "10d09f44-1584-40a2-96c0-77011e21e353"
        },
        "item": {
          "id": "a82309df-45e2-476a-a41d-24946dffe022",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd487388-373c-4503-b7d9-5e9ee203da8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefe1352-09c4-4ac1-afa6-4f8469967916",
        "cursor": {
          "ref": "191b3008-20c5-420f-8b94-29db31ccc314",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b5ea773f-c7af-44e9-b7c4-e1f704c64c93"
        },
        "item": {
          "id": "eefe1352-09c4-4ac1-afa6-4f8469967916",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "89348292-4b14-4181-8b08-7e168ec042a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfbcff5-20bd-403b-957e-8be9d0c2e1f1",
        "cursor": {
          "ref": "9a010c91-8046-4ac4-a651-d92787868467",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "237f7939-0aae-4aba-b2e6-ff103c20d846"
        },
        "item": {
          "id": "bdfbcff5-20bd-403b-957e-8be9d0c2e1f1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cd595887-8ee9-4ee2-9593-75adddb9b6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe269460-7189-4521-8a96-26b96c734188",
        "cursor": {
          "ref": "23e3bc5a-57c8-4f70-a3db-795482ee098a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fda752a4-589d-4a39-9fa8-dc219a1cc82f"
        },
        "item": {
          "id": "fe269460-7189-4521-8a96-26b96c734188",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "725123fd-8f72-43e5-b4e7-9ec961d80b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a564fcd-e8ce-40b3-859f-10d89fe5524b",
        "cursor": {
          "ref": "0c00c3de-8fdf-401c-ba94-86acde9e1380",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6a6f78b-228c-411b-8e0b-77084c142a7d"
        },
        "item": {
          "id": "8a564fcd-e8ce-40b3-859f-10d89fe5524b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a50b7f07-2a76-49ac-aaea-53c5e9ec67ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7d48e9-970c-42e9-b32f-18a58a5a9dee",
        "cursor": {
          "ref": "c83d3747-3801-47b1-93ea-308cee433ee4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "93036cb5-b491-42ca-ae28-a2ae3698fba6"
        },
        "item": {
          "id": "0e7d48e9-970c-42e9-b32f-18a58a5a9dee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0c0144db-02cc-4e2f-8b36-8551ff906d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433e0399-4324-4fdf-bbd8-e968c1a26a14",
        "cursor": {
          "ref": "ac5a5c08-4bd5-4dec-86f7-e55208693551",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1f2b54ef-c468-4ffe-ad87-570df35a1663"
        },
        "item": {
          "id": "433e0399-4324-4fdf-bbd8-e968c1a26a14",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcdfaa4f-d6a8-4399-8fb3-4cb2fdb4bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043ad766-e2a0-42c4-956a-cb7f0fdbd169",
        "cursor": {
          "ref": "a8a34f7c-4506-4e33-be38-54990683a972",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b6ad33da-006c-4e06-9b83-fb822ce9c798"
        },
        "item": {
          "id": "043ad766-e2a0-42c4-956a-cb7f0fdbd169",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3b6124b7-90e0-4553-8367-eecf0792bcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a795b72-3412-4dc9-8be6-d0cd26241684",
        "cursor": {
          "ref": "32e18880-74b0-4261-8d79-547d915d5264",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a015d1ff-d99d-40bb-a2aa-f9182779fb47"
        },
        "item": {
          "id": "8a795b72-3412-4dc9-8be6-d0cd26241684",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "181a4125-f69e-4584-a819-d2ec44228d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e5eef-729f-45dd-a847-c64ff1a7e317",
        "cursor": {
          "ref": "08e5af52-4dad-4380-8665-619aee7c87a5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "680c8422-5a35-4a5b-a709-25ce0879835d"
        },
        "item": {
          "id": "ac4e5eef-729f-45dd-a847-c64ff1a7e317",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3aa32164-1fca-4c72-8127-f99de17e5e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f5e013-c8ab-4978-9b9a-58d8e61ade81",
        "cursor": {
          "ref": "01ead7fb-6807-4036-aa8a-2c064fd10a20",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87cdfc85-925a-4719-bf6e-c1d708be9b87"
        },
        "item": {
          "id": "e0f5e013-c8ab-4978-9b9a-58d8e61ade81",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7912582a-98d1-42fa-a345-a9d8454f59b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45461a2a-d06d-4a12-a228-050925fc5c6b",
        "cursor": {
          "ref": "1134b811-f79b-4481-9252-c711c0075078",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aa78ee41-a47a-4f30-a339-a588bac4bddb"
        },
        "item": {
          "id": "45461a2a-d06d-4a12-a228-050925fc5c6b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7d251cd3-3c46-4f28-abdf-90c3ce0302f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c374358a-3273-475d-ac97-6de28ff6df38",
        "cursor": {
          "ref": "5b1527e3-5669-4b2e-92ac-0a512e1d8dab",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6b726eed-fd70-42a0-a764-dd4c5f37a129"
        },
        "item": {
          "id": "c374358a-3273-475d-ac97-6de28ff6df38",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e858a0ce-c4a4-4f07-86e6-a4a1cc6c65bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ee04be-7e0e-4908-981a-6306146132a2",
        "cursor": {
          "ref": "80823494-78e6-4237-adce-0c57bd2f052d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "146e2fc2-7441-41d1-b4fa-c0eae01ff370"
        },
        "item": {
          "id": "13ee04be-7e0e-4908-981a-6306146132a2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d12d9c4f-e977-4b74-936d-0fd87a3520bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb25013-ae80-4c7a-bd27-76bb1f25c55a",
        "cursor": {
          "ref": "e0dda07e-dd68-45f8-b74c-7f7b73ae74c5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6986ddce-cb1d-4863-8fdc-42f307533dfc"
        },
        "item": {
          "id": "ccb25013-ae80-4c7a-bd27-76bb1f25c55a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e7729e01-ed01-4896-b161-6d4e8f26e11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6900df08-b64f-4cf1-9223-0f204ba94c14",
        "cursor": {
          "ref": "3077cbea-7c54-462c-b939-9e07dd7e3794",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "19deee48-1527-48b8-8e4f-f66e933f8372"
        },
        "item": {
          "id": "6900df08-b64f-4cf1-9223-0f204ba94c14",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "33e7b378-3ae7-4601-ac0a-50d16bbc4cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab83fb30-912d-4517-9225-3342050ef254",
        "cursor": {
          "ref": "fab49045-b34f-4cf9-ab37-6b4f8d398aab",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5c245681-1398-4f00-9052-38b2d0e7fcaa"
        },
        "item": {
          "id": "ab83fb30-912d-4517-9225-3342050ef254",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "272b4892-0f85-4290-bb68-165fe6a76815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ab77dc-c78a-434f-aab6-48d8746b61f3",
        "cursor": {
          "ref": "71e9600b-b366-40c6-8939-70d1e69b02d2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "325d8260-4c78-4e64-90d8-0350c42cc91e"
        },
        "item": {
          "id": "f9ab77dc-c78a-434f-aab6-48d8746b61f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f652fd9a-5fa0-44c7-b12b-65eefb56c318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5bcb30-2e2d-4d0f-bbdc-e867d0738263",
        "cursor": {
          "ref": "28a774d3-265b-470b-9a95-fc47e46ea062",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "95510256-7344-4978-b3a9-7ce056964d84"
        },
        "item": {
          "id": "2d5bcb30-2e2d-4d0f-bbdc-e867d0738263",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "40a53f69-6de0-4ee7-9ab4-5776b435b7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce67b9f-6416-4626-a611-2051807930fc",
        "cursor": {
          "ref": "e27086e8-ae42-4b96-80e4-ad1fb7f93d5d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "52734882-5a05-4bf8-bc61-c7fd43ba908c"
        },
        "item": {
          "id": "1ce67b9f-6416-4626-a611-2051807930fc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a867f49c-fd17-4292-9b6e-7925ea390226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aba58d-ac71-4e01-ac97-c729b1bc74ea",
        "cursor": {
          "ref": "a4ede042-f0f1-45ce-99c0-24731ff2bf83",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "799b95ee-5e1d-4545-b04d-3d9ce482f0f0"
        },
        "item": {
          "id": "50aba58d-ac71-4e01-ac97-c729b1bc74ea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "85c6f8dd-d4ec-47bc-b127-725a503cb578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b482a-a550-4bc5-93b3-089bf6f97a9b",
        "cursor": {
          "ref": "dbba1631-7cd1-4943-86b6-a2937b2b8405",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8a79c021-104d-4cb3-89a6-c54c50dcc698"
        },
        "item": {
          "id": "846b482a-a550-4bc5-93b3-089bf6f97a9b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6082ac0-2049-4c8f-bf1a-88204499334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b560630-c524-438a-8225-b46c5fab82df",
        "cursor": {
          "ref": "e7dd2397-27d4-4b87-a9c6-cd08eaf910f3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3ad9714f-fe5d-417f-92ef-9d299f858eb5"
        },
        "item": {
          "id": "2b560630-c524-438a-8225-b46c5fab82df",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cd725b69-4e88-4fc1-accd-893d62641865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a94b749-d1a8-4b38-b089-f9a539274922",
        "cursor": {
          "ref": "16f8e20f-3248-465d-9468-5a8783257c16",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8139abb1-8146-49c8-8f14-969834abd6ee"
        },
        "item": {
          "id": "5a94b749-d1a8-4b38-b089-f9a539274922",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "332c725e-f00d-46b6-bf80-85158a133bc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed9fc95-0f7c-4410-af1c-81cbed5be12f",
        "cursor": {
          "ref": "f38cd7b2-3901-43af-8397-005f5452aeb7",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2cec3578-9f1a-4c5c-b4ea-4f9eab540b7e"
        },
        "item": {
          "id": "fed9fc95-0f7c-4410-af1c-81cbed5be12f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d25853b0-975b-40dc-bede-7f9d7063bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2558af83-6053-439d-8464-b430fc7720c9",
        "cursor": {
          "ref": "8abe5e6c-875f-403a-89c7-cc74075105c6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5e9dd376-b18c-4182-b0bd-e0c271b72b59"
        },
        "item": {
          "id": "2558af83-6053-439d-8464-b430fc7720c9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72943bdc-3f66-4845-9f18-4d557fbeb1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b52aba7-87ea-442d-b80a-d3de3363e5fe",
        "cursor": {
          "ref": "198febfb-9b63-4f3a-ad90-12df86af07c6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bf8e89c9-4e90-4e8f-969f-8dc9de2ba044"
        },
        "item": {
          "id": "5b52aba7-87ea-442d-b80a-d3de3363e5fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e73756dd-faee-471e-8872-e4e22f9da7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c65a69-7815-4af9-9b40-eabb4caeb279",
        "cursor": {
          "ref": "49c3bcda-5a1b-473a-ba9d-f7713a6d6ca2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f8e015a2-9969-4c79-9e1f-f85ca1355c63"
        },
        "item": {
          "id": "a3c65a69-7815-4af9-9b40-eabb4caeb279",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "04feef04-a72b-4a44-ac42-fef23c944463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04843259-8b09-4428-994f-16173f4ca922",
        "cursor": {
          "ref": "d9b2b0f0-2847-48ef-98f9-2393efe0a28b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f627da0b-4f06-4176-af42-eb2cde534ca8"
        },
        "item": {
          "id": "04843259-8b09-4428-994f-16173f4ca922",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "291c1e1d-286a-4901-a7f9-c0b5646574e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372b66eb-96ad-40db-b07d-c388c1d3ffff",
        "cursor": {
          "ref": "9d724d5f-bd61-4472-a6ba-9a52a08fa559",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a3447b8f-0f7d-4ecb-aeb5-9bb518a39c85"
        },
        "item": {
          "id": "372b66eb-96ad-40db-b07d-c388c1d3ffff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "de5f8146-c7d8-4c8d-a7fd-f08b9542a003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9766e07-c1b5-48cf-b42d-1fc7d15bd8b7",
        "cursor": {
          "ref": "88971d67-6a42-40df-b03b-beab369f0b05",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a05505d-fea3-408a-834e-9ff2785faa3a"
        },
        "item": {
          "id": "e9766e07-c1b5-48cf-b42d-1fc7d15bd8b7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "51a5e9b6-85f6-4654-ae4a-145aba70b645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53667efd-5283-4fd4-a56f-d02fb743e749",
        "cursor": {
          "ref": "362c064a-fd79-4afd-9805-bba81dd06ddf",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bd4d02fb-dd57-42ed-a55c-5c7c22bf7981"
        },
        "item": {
          "id": "53667efd-5283-4fd4-a56f-d02fb743e749",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "840930ea-45c0-436c-b0de-dba8dfbd469a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850a4e9a-03d3-4002-855b-60dc1710538a",
        "cursor": {
          "ref": "92355b04-03cf-40bd-8348-63bee7c13917",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aa136a4d-0d6e-4dc8-8d3f-e5ec2397f686"
        },
        "item": {
          "id": "850a4e9a-03d3-4002-855b-60dc1710538a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "99ce1304-c5a0-48e1-8473-fd1af1df4517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb81d5ca-a21b-4887-b067-135d70b32f26",
        "cursor": {
          "ref": "198d35a6-680f-4ca7-94c6-6cc750b0198d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7fe7de2e-3933-414c-8041-1ac22a783d58"
        },
        "item": {
          "id": "fb81d5ca-a21b-4887-b067-135d70b32f26",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a1a6faf7-a2d7-43db-b76e-6e806b38a2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26053d87-2010-4bb4-a18d-262082dc6495",
        "cursor": {
          "ref": "a0a89b34-ea42-4ebe-a570-7fa5b6547144",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48c6b1cc-57b9-4f4e-a7c9-8e7a57bd4a3b"
        },
        "item": {
          "id": "26053d87-2010-4bb4-a18d-262082dc6495",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c3b5cd9-d12b-48d2-886f-955fde58744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a232f9a-aea0-4cc6-af98-77a1f4c131c1",
        "cursor": {
          "ref": "cd80965f-58ad-4e53-97b5-cc6fb77b1d0c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1a67b795-0696-42bc-80b0-8bedb2fe28c0"
        },
        "item": {
          "id": "7a232f9a-aea0-4cc6-af98-77a1f4c131c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "df247051-3371-407f-9f90-903a2900c50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a51d59-56a1-4fb0-a99c-ae830d752986",
        "cursor": {
          "ref": "1c7545dc-0187-45c3-815e-0c065b7e88c9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "96c0be57-5578-4d25-8f96-4dc1f846ac2c"
        },
        "item": {
          "id": "30a51d59-56a1-4fb0-a99c-ae830d752986",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3131f2c8-0ace-4286-848a-0a5eefdf5a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67898295-3be3-4129-bf05-22af47607942",
        "cursor": {
          "ref": "efa0058f-4b6a-4fd7-abc0-e68fb4784563",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "327415d5-c150-4643-81f7-3ac82c40d705"
        },
        "item": {
          "id": "67898295-3be3-4129-bf05-22af47607942",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b136a9d9-b9e9-48bb-b5d5-de31c1131ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb2ac69-8696-4e63-be2b-e6e4b8e03795",
        "cursor": {
          "ref": "490fa0c1-3793-4df6-a28a-dc96c19770ba",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5152b253-fc08-4968-912a-b5877aba949a"
        },
        "item": {
          "id": "8bb2ac69-8696-4e63-be2b-e6e4b8e03795",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a6e57513-49a1-4b68-91ae-229e9fedb6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd903ee-b085-41b8-9a05-b19dc4013073",
        "cursor": {
          "ref": "4a1fbefb-7788-4d68-be27-05f81be7c646",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bfc36c94-2ec4-4f89-a4a8-86cfa163b800"
        },
        "item": {
          "id": "3dd903ee-b085-41b8-9a05-b19dc4013073",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2445465e-4bec-4d47-a62d-da213f7b6dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d5ba8b-af58-4211-aea2-c891bf4a0adc",
        "cursor": {
          "ref": "163712bb-44a0-4a23-a830-745ba4192217",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a1d11df1-5b8b-4982-b8b6-2800dc13f637"
        },
        "item": {
          "id": "17d5ba8b-af58-4211-aea2-c891bf4a0adc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "362da907-8896-4cc8-b81c-b9c1136c8086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1018b4-82ed-4cd1-b1ef-dbff22606785",
        "cursor": {
          "ref": "66eb03e8-8e35-496c-98dc-c8e834e01733",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "01a8b5d5-e5c5-499a-a30e-58519da5cb13"
        },
        "item": {
          "id": "0e1018b4-82ed-4cd1-b1ef-dbff22606785",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0b48ee17-d711-4026-b2f7-f51fc23574d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9287cb44-06e4-4fac-a018-ad05862c412b",
        "cursor": {
          "ref": "d6f45dd6-b39a-4f77-878f-47f987485a7f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5a6bce27-51ba-478d-9abd-9fc30cd316da"
        },
        "item": {
          "id": "9287cb44-06e4-4fac-a018-ad05862c412b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cdc52ef7-564a-474c-920d-ad7e293b68d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1ff242-19d0-4d22-9c51-94890b5a0061",
        "cursor": {
          "ref": "8c7aa123-fc4a-4f53-af39-e671d2faaf8a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "862e7466-1018-4a25-86d4-c6fc2b3654ec"
        },
        "item": {
          "id": "9e1ff242-19d0-4d22-9c51-94890b5a0061",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "edd43066-97d9-4ad1-8289-fd9675c7c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4109b4-3607-4218-b94a-4433ea64d9c6",
        "cursor": {
          "ref": "707a34ac-b255-4171-8cfc-41548eac64b0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "96cac7c6-3fb8-47fe-adea-125f557a0c10"
        },
        "item": {
          "id": "ce4109b4-3607-4218-b94a-4433ea64d9c6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "37b1dd2e-cf76-4c31-996a-58a55d248665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef99eacf-2836-41ff-ae62-20310d493c64",
        "cursor": {
          "ref": "6bf6673b-ef6b-4487-8632-110a296679c2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0ff6eab-0995-4567-a6e4-54d8ff379762"
        },
        "item": {
          "id": "ef99eacf-2836-41ff-ae62-20310d493c64",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "90f56b73-533b-4fcb-aa8c-8301d5016584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7055c08b-00a2-41e7-8ff9-ea926e3e3f37",
        "cursor": {
          "ref": "fc3d5ce8-26b8-4264-a3ad-95f833cc2280",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a9974f5-6825-4f8c-8ef9-3d4f457c438d"
        },
        "item": {
          "id": "7055c08b-00a2-41e7-8ff9-ea926e3e3f37",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "507541bf-2b0a-46f0-baff-ccec888e9a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db77764-b0a5-4d22-89b6-99ed3e38e02c",
        "cursor": {
          "ref": "ee64b19f-d78b-418e-a601-a294e0c04568",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a3c3a2ca-f023-430a-b011-4259c740bf3d"
        },
        "item": {
          "id": "2db77764-b0a5-4d22-89b6-99ed3e38e02c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b98b64de-cc91-4c80-b99f-78450a66a8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cab2694-56f0-4eb0-962d-91ecb43eb8ae",
        "cursor": {
          "ref": "78868d13-aed4-477a-80b2-ac50fefa2700",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "41c091b2-f8cd-4532-9505-1937c9749074"
        },
        "item": {
          "id": "1cab2694-56f0-4eb0-962d-91ecb43eb8ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "10a2e5a5-a7d6-40b9-9466-37a1bbd23c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d150491-c3c6-4ce4-a8e4-e799029929d4",
        "cursor": {
          "ref": "fdf0fb1b-fbb1-44a0-804a-d561d91d11df",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ba0ef304-60bc-44d0-85c2-30d26db055fa"
        },
        "item": {
          "id": "3d150491-c3c6-4ce4-a8e4-e799029929d4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c6f8ce8b-9eab-4fe4-8c32-6c641c26d4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14a75c4-eb46-4125-a9f4-0cc687dafccf",
        "cursor": {
          "ref": "745d7c2c-896a-440c-86c3-076d0c211d3a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "84e572c8-b223-4a36-8f26-64f993f6d18e"
        },
        "item": {
          "id": "d14a75c4-eb46-4125-a9f4-0cc687dafccf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a2804ba9-0ddf-486e-8cde-807e41c56ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1a8783-773e-4559-b468-7d8c9b444a52",
        "cursor": {
          "ref": "51c28b93-299d-496b-8dc3-507af068449b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "266da3bd-2a08-4742-bb05-6bfc8d480a26"
        },
        "item": {
          "id": "4b1a8783-773e-4559-b468-7d8c9b444a52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f8c84f6c-7bc1-4735-a70f-e54455aee184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c5da9c-e980-46e3-b925-30172188f2d4",
        "cursor": {
          "ref": "25fe2fba-6b9c-4779-a682-f5435529a4ae",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d2cc9a23-0aec-4f45-b698-3cc77d382163"
        },
        "item": {
          "id": "84c5da9c-e980-46e3-b925-30172188f2d4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9db6987-7e95-461b-8e30-7fccf3a1fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd177880-c16c-406a-a8d3-d94b5a855c39",
        "cursor": {
          "ref": "5e8a7824-d8d4-406d-bfff-7a87b69e9705",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aa73a660-b606-45fe-a9c5-194664b3f26b"
        },
        "item": {
          "id": "dd177880-c16c-406a-a8d3-d94b5a855c39",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "08752d71-bb2e-4553-b652-830a119dc979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805bd595-a738-4fe1-b23f-8d589e05331c",
        "cursor": {
          "ref": "a1303b8d-e0e4-4837-bcba-238674b133fc",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "65be7221-bd2b-404e-87c1-241efbc6cc77"
        },
        "item": {
          "id": "805bd595-a738-4fe1-b23f-8d589e05331c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2b3dd27-4d5a-4e13-97dc-73a8fe2ff6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f071bca7-8b72-4006-bbcd-3a8072b14a99",
        "cursor": {
          "ref": "9c248f1d-b47f-4504-8991-9853a2ece032",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a48bfa03-f9e0-42d4-bd78-0d1145727403"
        },
        "item": {
          "id": "f071bca7-8b72-4006-bbcd-3a8072b14a99",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3bb455ee-0778-41bb-986b-e5c740239d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4834b0c-b654-4e5c-991d-9307473cb31c",
        "cursor": {
          "ref": "9fc85a26-6e1d-413d-9421-12bcec9091f9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d1f9f1fe-cafa-4ddc-93a0-56a46c442843"
        },
        "item": {
          "id": "a4834b0c-b654-4e5c-991d-9307473cb31c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8c51f61b-d091-42cc-b546-cd50678068ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577a5147-bb69-41d7-919c-278f164be38c",
        "cursor": {
          "ref": "367b84f6-a760-49d5-97c6-33cd312607d9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0b0fabd2-6b62-4865-b577-01b66e2b5de6"
        },
        "item": {
          "id": "577a5147-bb69-41d7-919c-278f164be38c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8c10db30-8ffd-4b8a-897f-e72f8f8a8a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2b471c-d9ba-4af6-9640-ea6906e36d01",
        "cursor": {
          "ref": "00783b4e-5327-476e-a345-39a6289d371c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "26086a2a-b2b8-47ec-82e8-9ef596b75584"
        },
        "item": {
          "id": "8b2b471c-d9ba-4af6-9640-ea6906e36d01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4934ddea-9647-4842-9d09-014eca65ae53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa1886c-5fce-4404-bb53-2d90fc01a7d2",
        "cursor": {
          "ref": "cd21c84d-c214-450b-9e14-0018a846b9f9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7e26d89b-7912-4095-a6f7-f00d44e3436e"
        },
        "item": {
          "id": "dfa1886c-5fce-4404-bb53-2d90fc01a7d2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "09ca15ec-c7fa-4881-8ef1-97a90962b4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c506dc4f-50c5-4b4f-9cfa-cd144cf9ad09",
        "cursor": {
          "ref": "f1fcd3d6-497e-4c25-a86e-67e84d62dcfd",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "854f3826-2f55-4fa2-b42a-3da63037ce72"
        },
        "item": {
          "id": "c506dc4f-50c5-4b4f-9cfa-cd144cf9ad09",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b1fe571b-60ee-4210-94f4-4352fd164de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f852961-00a0-408e-ab69-3ee54b7c7703",
        "cursor": {
          "ref": "145df8f7-7be0-48de-a968-a5e3149d0d37",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d5010be2-cefa-4d33-a188-1ec2430b72b2"
        },
        "item": {
          "id": "5f852961-00a0-408e-ab69-3ee54b7c7703",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2d3b2ad4-5536-4fe3-881a-d887cbd4f3bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff9ff9b-48cf-4c4a-9baa-259b9df35307",
        "cursor": {
          "ref": "5684525b-0866-493f-b0f7-d1341a1c9639",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2e7ca84c-cee1-450e-9588-14e22c3fad85"
        },
        "item": {
          "id": "4ff9ff9b-48cf-4c4a-9baa-259b9df35307",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "03d6b28f-816b-4047-b49f-880f88f2297e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1337d00-6b8c-4191-8f1b-4d37ee34e5f3",
        "cursor": {
          "ref": "0cb285d6-15ae-4cd6-986b-f45a891f317b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c5098dc7-0a62-491c-a2ba-45d56baf5902"
        },
        "item": {
          "id": "f1337d00-6b8c-4191-8f1b-4d37ee34e5f3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "19ab5fd0-c033-4159-828b-2760fdb77aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf816ab-63fe-4ad2-b93d-3f70ac6e4d50",
        "cursor": {
          "ref": "57f11fce-5973-4577-b88a-354ff51de608",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "08df0c5e-310c-4b82-8980-c0ba2b1b37cb"
        },
        "item": {
          "id": "abf816ab-63fe-4ad2-b93d-3f70ac6e4d50",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d45f25e2-4208-4713-9992-b13c8b44fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d3ea15-c88d-47ed-801a-a34d226ff590",
        "cursor": {
          "ref": "b74cf066-95a3-4fb7-87a1-2dbd7ba26f59",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d172c235-fd74-44ee-a0f1-bd5c33763a78"
        },
        "item": {
          "id": "36d3ea15-c88d-47ed-801a-a34d226ff590",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3dccbcdb-69fa-4ef8-a436-a7b95b898b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f46757-db49-44b1-ab8e-e47e35c1a1e6",
        "cursor": {
          "ref": "033d8f50-1c40-410d-bb5e-9a5952e672d6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9e971b5c-62f9-4ecd-9944-1b6a2625f9cb"
        },
        "item": {
          "id": "91f46757-db49-44b1-ab8e-e47e35c1a1e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1aa5f28b-b1d8-4d22-9556-035004eb1c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ab597e-037a-4e71-952e-030cef5bc622",
        "cursor": {
          "ref": "57648e6d-a133-4d75-ab2a-ce8ccd23ddef",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fd2760a4-d616-4f51-bf4a-19dfc4a543f8"
        },
        "item": {
          "id": "d6ab597e-037a-4e71-952e-030cef5bc622",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dec76e91-4b5e-426e-918f-bb60ff5ae74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dbb1ca-eb3c-42e0-94d5-ee52531e7e5c",
        "cursor": {
          "ref": "561a7d66-2e6c-4c7b-bc32-cd7d4390eb18",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "30ab96cc-2342-48d9-a33c-6f1913b8a781"
        },
        "item": {
          "id": "f2dbb1ca-eb3c-42e0-94d5-ee52531e7e5c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab9ba2c5-b9f5-45e8-9525-f29e23c721d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34caf31-d400-4574-801f-65f33e5e22ff",
        "cursor": {
          "ref": "6e5d97ec-92e6-457b-a115-dd78715f7d41",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b36df0ad-97d1-43d0-9c5e-d188ca281dcc"
        },
        "item": {
          "id": "e34caf31-d400-4574-801f-65f33e5e22ff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4ceaa98f-e652-4b63-9c88-3783809c3231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4206b2a2-9d31-4d47-8bbd-f12177e49f42",
        "cursor": {
          "ref": "38b060ab-938d-4d89-b279-e583abe059e5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e3c17161-94ca-4e47-b689-4d45b847c8cf"
        },
        "item": {
          "id": "4206b2a2-9d31-4d47-8bbd-f12177e49f42",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cde76713-56db-4a10-8f36-b5086ab1a113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00152237-6dd2-40bc-a575-2e2b90e9d6df",
        "cursor": {
          "ref": "124234eb-b486-4b6b-b53c-22e34ca2fe39",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8a5e7641-4891-4951-841f-d65f4a5d5396"
        },
        "item": {
          "id": "00152237-6dd2-40bc-a575-2e2b90e9d6df",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "89e8abab-0085-4ce2-82a0-b75de01eabc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078d4586-6009-408c-89c1-4d2918b5d7a1",
        "cursor": {
          "ref": "39920a1c-5513-4091-8a9c-690f22a83301",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "05e25009-df96-404a-a9c9-a22e19ed4d62"
        },
        "item": {
          "id": "078d4586-6009-408c-89c1-4d2918b5d7a1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2eb32a8d-514a-4e4e-bd36-6716868ff440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c6967d-85b1-4e4a-b67f-b5cfb52af984",
        "cursor": {
          "ref": "d88b56b4-4bac-4f0c-afa1-367e523b0376",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6d4eb612-8a07-4f4c-8601-1ecc75876d72"
        },
        "item": {
          "id": "33c6967d-85b1-4e4a-b67f-b5cfb52af984",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "14c011e2-c44f-40d8-a6dc-631fe8d52dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ecda33-08df-43e3-8161-8752a066c0d2",
        "cursor": {
          "ref": "647f07fd-5944-4d00-a3c4-842b79239ebb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f62c6b60-f929-499b-8e2b-42761cd0e7f9"
        },
        "item": {
          "id": "44ecda33-08df-43e3-8161-8752a066c0d2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6e18e23e-6b0a-413a-aa5a-cd1a6d5283bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba12af-11c1-41b5-8ea0-72d0f6a95968",
        "cursor": {
          "ref": "7520fa0e-44fe-46bc-8bd3-5a947e383001",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5ab33014-b6fe-4384-86a2-1dfff670a931"
        },
        "item": {
          "id": "ebba12af-11c1-41b5-8ea0-72d0f6a95968",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c4f6dd63-77bd-4b6b-a1dc-1cb4f3352f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ff870f-bb53-4ece-b75f-c6268aebe04b",
        "cursor": {
          "ref": "d275a532-5c8e-4a0f-9407-23d63756f21b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "46f56145-d377-47a6-9771-9ee9f85b3aa8"
        },
        "item": {
          "id": "03ff870f-bb53-4ece-b75f-c6268aebe04b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "345609be-0d13-43fb-951d-f144d0a8f8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e291d1-a426-4b91-abc0-045b2f703581",
        "cursor": {
          "ref": "fd34dd3a-e3b8-4f63-9c54-54729e41b188",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "42bc28bc-aba8-46ca-987d-febaf35d8190"
        },
        "item": {
          "id": "76e291d1-a426-4b91-abc0-045b2f703581",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "64cf3fa4-f5d7-48b4-b8be-5621ded539c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5304a0f9-afcf-4831-b906-0189e125b512",
        "cursor": {
          "ref": "4b273464-5b70-4639-b464-44e28dff663d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "07e4dc22-e55f-4620-8784-92fbb723c904"
        },
        "item": {
          "id": "5304a0f9-afcf-4831-b906-0189e125b512",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5f2685b1-c748-4061-8b85-ffa06e9a862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81753cb-a6b6-4a98-8fc5-2f0534c70af7",
        "cursor": {
          "ref": "719d1869-650d-4b3a-98e8-629c772656ac",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "45ed1a3b-1875-4eda-b447-d74a2b3f30cd"
        },
        "item": {
          "id": "a81753cb-a6b6-4a98-8fc5-2f0534c70af7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4c0b6968-bd55-42e9-a20d-5c4519645c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a1704e-e688-49a0-a2fe-5df2d56dfc20",
        "cursor": {
          "ref": "46841881-4f31-4937-98ba-6296af823b3f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d16f196d-6d21-4022-82fc-82698478ada2"
        },
        "item": {
          "id": "c6a1704e-e688-49a0-a2fe-5df2d56dfc20",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0ac99d24-2c38-40aa-9646-a0abf99526c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4abcd3c-d68f-4204-a08a-35a8b99706ed",
        "cursor": {
          "ref": "74349628-8151-4c36-9703-a3838cc3bd9e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "256b623f-40cb-41ef-8df5-4aab8b7a06da"
        },
        "item": {
          "id": "f4abcd3c-d68f-4204-a08a-35a8b99706ed",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bc380ab8-dfe9-4aef-b259-1939d5e2c4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df17f3fc-ef31-4043-88ab-3b6953a90512",
        "cursor": {
          "ref": "d579bc8f-c497-457f-a37e-7c6ed1422be5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2d97f00-daf3-4c38-88d3-ff2cbb662e74"
        },
        "item": {
          "id": "df17f3fc-ef31-4043-88ab-3b6953a90512",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9be8558d-b35f-4f40-832a-86c46e3358d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9542a231-6602-4582-bfb4-60f39481cb86",
        "cursor": {
          "ref": "6123d8a6-ece1-448d-96cd-5c7ca31676bd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "14f1b3ba-b89a-4a51-948b-8b87c0c304ff"
        },
        "item": {
          "id": "9542a231-6602-4582-bfb4-60f39481cb86",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b635791e-1818-44f3-8f1e-852f2e4e2dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d3aaaa-c8ec-4179-946f-4c03979cd229",
        "cursor": {
          "ref": "27307406-4f0c-4f92-a205-cf476b130617",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "616b4b37-976e-4da8-9b1e-6628fea63e9c"
        },
        "item": {
          "id": "c3d3aaaa-c8ec-4179-946f-4c03979cd229",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7ba01a7b-7100-499c-b68a-a6b96da1fad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e289530-3e04-449f-9c24-7f7923d70cd7",
        "cursor": {
          "ref": "50eeb406-6284-4423-bbab-d3227074bccd",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "508abdad-4443-421a-8fa4-de9e11954728"
        },
        "item": {
          "id": "0e289530-3e04-449f-9c24-7f7923d70cd7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b6f68d7f-b1c6-4209-ad91-2a399252470a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e66715-58b3-43a7-b3c5-0f8ec271377b",
        "cursor": {
          "ref": "ffab6e37-37a4-489c-a527-6c937306171a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f682e92a-df6c-4a3c-bb33-e46a06f3e5b2"
        },
        "item": {
          "id": "c7e66715-58b3-43a7-b3c5-0f8ec271377b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ca151ba1-11a4-4c8b-bf43-53d28c9dddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b600749-d043-45cf-ab46-c4b9bdc88dd7",
        "cursor": {
          "ref": "d81ad08b-f623-442c-9218-de16f44364a8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "09834889-92ba-4384-b879-4778b99ac3e1"
        },
        "item": {
          "id": "5b600749-d043-45cf-ab46-c4b9bdc88dd7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fe211fb5-96a2-48f9-b447-365cb05e726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adb35a7-2233-4cf9-bc69-fc917481c66b",
        "cursor": {
          "ref": "e455ed57-213b-40ff-825c-786c50a9d54e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c02e0240-236d-4ce8-b9fc-27ec0ed04e08"
        },
        "item": {
          "id": "3adb35a7-2233-4cf9-bc69-fc917481c66b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7989f0b1-5f63-4d83-9b9f-4d69683f4f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4307f1a-2cd1-4e26-8795-9de6d7aaa3cf",
        "cursor": {
          "ref": "ef09a60b-ef43-4cc7-955d-025bdbdb5350",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5ab5216f-91e7-4257-9466-e80bced1357f"
        },
        "item": {
          "id": "c4307f1a-2cd1-4e26-8795-9de6d7aaa3cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5a00a5f2-a1a9-4610-a1d4-49ba132a288f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4549b83-e30b-44e3-acf9-cd4f4027498c",
        "cursor": {
          "ref": "0b7c1134-7b1f-4bad-bfc8-d2bae912a6ee",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "03f30500-38ca-4970-a8e9-1a88fecedd93"
        },
        "item": {
          "id": "b4549b83-e30b-44e3-acf9-cd4f4027498c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e8f1bf8f-86ac-4258-b76e-8322028a8160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a07dcef-8b0a-48f9-89a9-a221494ea148",
        "cursor": {
          "ref": "5d6960af-41ef-4558-a085-aaf2526d1ed2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fe9ba78b-c397-446c-b58e-984f89f186b2"
        },
        "item": {
          "id": "6a07dcef-8b0a-48f9-89a9-a221494ea148",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb61790b-6281-4d37-875c-55ef359d86a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151ead2a-506b-4145-a0b7-67f7ded57ec2",
        "cursor": {
          "ref": "7c46b330-c140-407f-bbc1-67e6a284c907",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "19b3d8d2-c7eb-4899-a191-6e6341a66f06"
        },
        "item": {
          "id": "151ead2a-506b-4145-a0b7-67f7ded57ec2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dab39377-dc2e-471b-9d21-6a7cfd6b9653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3124607-65c4-46f6-82de-4c4d0a8d297b",
        "cursor": {
          "ref": "832b1229-1d30-491d-b813-bb9fcd40892a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aca55194-0e42-4765-97d3-7b55aa718eaf"
        },
        "item": {
          "id": "c3124607-65c4-46f6-82de-4c4d0a8d297b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bcf623a6-7c2a-47d9-99da-5253551f828e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36df4374-bb9a-4070-a755-bbdf1becf6ec",
        "cursor": {
          "ref": "13840512-e2e9-466b-b3e0-983b0062cedd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8c8154e3-ae83-4b71-84f7-180347071037"
        },
        "item": {
          "id": "36df4374-bb9a-4070-a755-bbdf1becf6ec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "11ac698a-a146-4d04-a926-02e710ff2a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6493db5-9278-4aef-95d8-9fb85fa3bd3a",
        "cursor": {
          "ref": "d287a9bd-326c-48ab-96e2-e62ae1700415",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8bdbab3d-19d4-49d5-9495-339fb24f4baf"
        },
        "item": {
          "id": "a6493db5-9278-4aef-95d8-9fb85fa3bd3a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0516e295-7612-4786-b5e5-b256f1d036ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7435805-ceff-4db1-ba46-185f9de03f3e",
        "cursor": {
          "ref": "d68c4ff8-e5e5-4666-92c2-1f7dc2754734",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "39c7bfe7-836b-4774-8286-1f7db22f5ec3"
        },
        "item": {
          "id": "c7435805-ceff-4db1-ba46-185f9de03f3e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8c780da9-55e9-4e2f-b7e0-ad509b71d560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d32f95-fa18-4b1c-93db-689f176f5510",
        "cursor": {
          "ref": "97d51f31-e66a-4bcc-bfc3-6091ba0710c7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5eb32ff0-3f85-4b98-a45c-7ffcbc11c396"
        },
        "item": {
          "id": "35d32f95-fa18-4b1c-93db-689f176f5510",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "df56e892-4505-41b6-ba00-2275fd2ad8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b53edd4-7078-4cff-99ed-dc24a44f3de1",
        "cursor": {
          "ref": "e5c2dbdf-9d53-40ba-a2a6-3de492f52cc5",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f841e201-98a8-48b2-a5fe-19989877ad57"
        },
        "item": {
          "id": "1b53edd4-7078-4cff-99ed-dc24a44f3de1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4d0fac27-8dc6-48c4-a3b5-bfa591f27ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc476b-453c-4781-8ebb-197d7d6c9374",
        "cursor": {
          "ref": "203583e5-ce7f-46a0-929c-eb593f38f09e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "837fc29a-f67d-4ffe-9323-f071dd410c67"
        },
        "item": {
          "id": "32cc476b-453c-4781-8ebb-197d7d6c9374",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "92fcb42e-4d1a-4e51-9d6b-a71a3c41f502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b11ee36-9762-49a4-bf73-f4750c907ffc",
        "cursor": {
          "ref": "ec337f3c-a39d-429d-8c9a-9aaaebd752a4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4c3f5b18-fffe-4629-a965-203df5834730"
        },
        "item": {
          "id": "3b11ee36-9762-49a4-bf73-f4750c907ffc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fec01c83-7377-4a8c-8320-bc8882922180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f98e5-087b-43d8-8a94-3e5e80e0becf",
        "cursor": {
          "ref": "9abbae83-ca90-41a3-b446-a1a86f6e9738",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b96f4aa8-e6b8-4c93-a88e-7fd036bbbe2e"
        },
        "item": {
          "id": "778f98e5-087b-43d8-8a94-3e5e80e0becf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2547c589-571b-4cea-b04e-49894e9292fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3fff82-9307-4e21-beb9-45eb0bb0d0ab",
        "cursor": {
          "ref": "aa10013e-d655-4dbc-8d15-d12de916e2da",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b8c12068-8631-404d-9e2f-82cfd31f15b5"
        },
        "item": {
          "id": "1e3fff82-9307-4e21-beb9-45eb0bb0d0ab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "03fa6b5e-76c6-49c6-ae76-83ed5a17d80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168a514e-c79b-4e73-a786-188a64167021",
        "cursor": {
          "ref": "e2a2ef8f-7968-4daa-ae04-97696c2f2117",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e1907b66-9106-4c67-a288-8c390f80de02"
        },
        "item": {
          "id": "168a514e-c79b-4e73-a786-188a64167021",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f1d178f-88a5-42bc-a620-2a7f47853c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14a7b5a-8e66-4e94-8ba7-bb6502a03c72",
        "cursor": {
          "ref": "e502b4aa-a6a3-4acc-a37c-fb8fdc01e2c8",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4d5b26a0-8fb1-42fd-8908-4f8dc51b395a"
        },
        "item": {
          "id": "c14a7b5a-8e66-4e94-8ba7-bb6502a03c72",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e3bf0f33-c171-4120-93c5-35c36b374c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f34e389-1fe6-4aa5-aa07-1a2ccbc0f3fa",
        "cursor": {
          "ref": "2ce3d4e9-a866-4d32-bb6b-47a6961401b6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f5f12470-e4fc-4bf7-b93d-04a1779cd08e"
        },
        "item": {
          "id": "6f34e389-1fe6-4aa5-aa07-1a2ccbc0f3fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ee8e289e-e6e6-4edd-941c-5f50ac5a0ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067b801b-1b71-4647-bfc1-d314fe856a39",
        "cursor": {
          "ref": "af448336-73d2-4e4c-8433-431a524dffea",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b8d5262b-9f18-43c7-bf0e-28b96578e7bd"
        },
        "item": {
          "id": "067b801b-1b71-4647-bfc1-d314fe856a39",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fdb02d26-e1b0-42ff-96fd-ad4e1c03a84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a019742b-2a79-48f7-909b-7a8e736c3690",
        "cursor": {
          "ref": "6e40c241-df5c-4b25-88ed-64af2da81a77",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f7a86102-8b91-4c09-84c8-bb30d16923cd"
        },
        "item": {
          "id": "a019742b-2a79-48f7-909b-7a8e736c3690",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b11d7ece-01eb-4e58-9fc0-94a73ff4198f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ad113-5c86-49dd-9663-1a612e508eae",
        "cursor": {
          "ref": "cc672e43-bade-451a-a866-7e64732bc03e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a74e7b82-46e0-4704-b830-4e99c4666283"
        },
        "item": {
          "id": "0c0ad113-5c86-49dd-9663-1a612e508eae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c8ef2ca9-52d0-4821-89eb-7c13e472b438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3544c3f8-f9e1-4ba9-b5d2-cbcd6c867d65",
        "cursor": {
          "ref": "2d0aaf90-c227-44f0-9b6d-f042cea79f67",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8678c697-c736-4815-8f1e-eaacac575ce1"
        },
        "item": {
          "id": "3544c3f8-f9e1-4ba9-b5d2-cbcd6c867d65",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "87ddc74c-6706-4008-abbd-562bfdc39357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ce65c6-cded-424a-ac37-3d52aaa2bace",
        "cursor": {
          "ref": "5acde37b-f9b6-4c92-94fb-7d749673f2f5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fc292675-ea2d-4e62-99cb-7cc7d51f598a"
        },
        "item": {
          "id": "93ce65c6-cded-424a-ac37-3d52aaa2bace",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3c30d2da-869c-4de0-a842-8cbd3e57f62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92217423-f530-4775-8bf8-cae33dfacce7",
        "cursor": {
          "ref": "80699035-51e8-4423-a144-af9991c9d2bb",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2f23d0d4-7308-4f17-b6d2-547e4147a699"
        },
        "item": {
          "id": "92217423-f530-4775-8bf8-cae33dfacce7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "02dc755d-b351-4850-953e-b7597af8534b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186074ef-831f-4a9a-8ff7-8cbb1491ffb2",
        "cursor": {
          "ref": "a823460b-627e-4615-8607-94ec750ef45a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "851d8224-e69f-41bb-9ce8-56f910aa784d"
        },
        "item": {
          "id": "186074ef-831f-4a9a-8ff7-8cbb1491ffb2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5d775336-4098-48fe-8191-93ac85397715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80123289-ea7f-4265-9c04-bc786a961bc4",
        "cursor": {
          "ref": "38aecb15-4988-4ba0-a2e1-0c0e73f2c2a8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "62fbcb03-1d2e-4549-a438-72fd167e3c1d"
        },
        "item": {
          "id": "80123289-ea7f-4265-9c04-bc786a961bc4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "003a33b5-d268-4cd5-9b26-7d4496cc1306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26411402-7da1-4de0-8fc3-953d21514171",
        "cursor": {
          "ref": "abe8457e-275b-40c9-9770-03c736121737",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6a9a7f20-5ffa-435f-b74b-6996261eaaa0"
        },
        "item": {
          "id": "26411402-7da1-4de0-8fc3-953d21514171",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cd3474fc-48fc-414f-a507-dcd790f81836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b739b092-f083-4a8c-bf29-7d739b5b00ae",
        "cursor": {
          "ref": "d75c2a68-4913-448e-b76a-6532d136ec8d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9ec3b3ac-ffb3-47c5-a533-269a1537e95f"
        },
        "item": {
          "id": "b739b092-f083-4a8c-bf29-7d739b5b00ae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "534d8f36-2113-4f1b-b932-5d1d4137b85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84f0c26-1622-4efa-bc99-9a023bd9f44e",
        "cursor": {
          "ref": "af7feb9e-bdca-4ed8-8619-9127b4cfafe1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a8735e28-961f-416f-8e17-8f5b018a7ef0"
        },
        "item": {
          "id": "c84f0c26-1622-4efa-bc99-9a023bd9f44e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e68e1e3c-270f-4b9e-8373-cb9c0afdeeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec775738-6211-4bbd-8a03-ad5375201aa5",
        "cursor": {
          "ref": "c1f284ab-9c3a-4eec-aae1-a679b5996c0d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9f0b8c0f-decc-4dd1-841e-90e5d81c7ff8"
        },
        "item": {
          "id": "ec775738-6211-4bbd-8a03-ad5375201aa5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f858b6ba-ff4c-44cc-bbf1-0d643981b30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c67d93-a355-4674-9111-c900ce99e631",
        "cursor": {
          "ref": "172edd65-6273-45db-98fb-d0d7c5d4c7b6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f65d927c-01d2-4f97-8e90-7e14537da95d"
        },
        "item": {
          "id": "57c67d93-a355-4674-9111-c900ce99e631",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "286e1bae-4177-426f-9e44-7bf90b50ff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b64090-c980-4167-8775-9fdfae82b926",
        "cursor": {
          "ref": "5546c5f8-9238-4fe5-b6c3-a429f391952c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "467e20d3-2854-4310-a18b-c174506d72c2"
        },
        "item": {
          "id": "18b64090-c980-4167-8775-9fdfae82b926",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "97abf449-0122-430b-b786-2e16f7976dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b34f197-78fe-43b5-841c-850e0b3ffd1a",
        "cursor": {
          "ref": "9e72e7e7-a90d-4658-bb5b-0738506fab6c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a89a85c7-8d15-4340-864d-075b58e61582"
        },
        "item": {
          "id": "8b34f197-78fe-43b5-841c-850e0b3ffd1a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dc41ab3d-038e-4aaf-97d9-351a3448ee8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3c7be5-1e6a-42a2-8ad4-8f742b57d32d",
        "cursor": {
          "ref": "6dd10d4b-a458-4722-bd8c-3f979ce4f124",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6771b1ce-59aa-4cb7-91e3-6d28f74bbec6"
        },
        "item": {
          "id": "fc3c7be5-1e6a-42a2-8ad4-8f742b57d32d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9aac7fe6-37de-4bd2-a508-bf1902a10727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2751a12d-e869-4341-8110-33498b28dd7a",
        "cursor": {
          "ref": "d0f8035a-1625-4089-8176-f1d96991e6a7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dd9f46b1-51f0-4a9d-9eee-4673567a4e04"
        },
        "item": {
          "id": "2751a12d-e869-4341-8110-33498b28dd7a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2497072d-ff58-4d41-949e-9620aef637e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35251ddc-c17c-4fb4-9828-8e65821b7730",
        "cursor": {
          "ref": "d501681e-4d1d-4496-a5cf-a059b26e7b8d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d7caf362-f858-4b78-bb7c-7e51962f9588"
        },
        "item": {
          "id": "35251ddc-c17c-4fb4-9828-8e65821b7730",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9adcd786-4b4c-444f-9491-91c8805c8d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53358dc6-f9ee-4ba1-9c28-35a01bb45f03",
        "cursor": {
          "ref": "d2e25f41-b5b8-41c7-9161-bf84e3255b30",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "72154ab0-2027-4787-808f-f1d8803a2118"
        },
        "item": {
          "id": "53358dc6-f9ee-4ba1-9c28-35a01bb45f03",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "97c15ccb-abfa-4227-81dc-bf2501d8fa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b1e67d-e51d-49f5-a2a4-75801d7d0164",
        "cursor": {
          "ref": "09eac227-4119-42a7-b58f-a37e41730a68",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "14aea89b-ecf3-43bf-bdca-cdfcefd13b11"
        },
        "item": {
          "id": "72b1e67d-e51d-49f5-a2a4-75801d7d0164",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7982386e-f0a3-4e58-8efb-93836e275e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbecd2c5-d948-4e42-9c0a-c095d5b54815",
        "cursor": {
          "ref": "a960d5c2-dde6-4966-a651-a3335deec2ef",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1d218822-bcd7-4693-b90b-1541cd397249"
        },
        "item": {
          "id": "bbecd2c5-d948-4e42-9c0a-c095d5b54815",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4b282bbb-3913-4a42-b2f2-3a295402796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4999e7-2d3b-419d-a10b-4269537058a5",
        "cursor": {
          "ref": "1b28b703-bde9-4f7e-9ec5-4716bcd556da",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1f7517e3-ab91-4dd7-8339-6410bad9ef89"
        },
        "item": {
          "id": "dd4999e7-2d3b-419d-a10b-4269537058a5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2dbfc3e4-d76c-421c-a257-00d4b5fcd757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c396b564-60f9-4b7b-9f86-089c2273d6bf",
        "cursor": {
          "ref": "09be47ac-c532-4129-a1c2-709317b70d1f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4e0421d0-a314-49df-9057-59ba80e3245d"
        },
        "item": {
          "id": "c396b564-60f9-4b7b-9f86-089c2273d6bf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fe404bc0-4ce1-4699-993b-5f0da3c522d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e2c79e-8611-4d4b-bcee-354495c08d40",
        "cursor": {
          "ref": "51e5ccfb-90a4-4b9f-afab-b840aa6bf14d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b0373760-f165-4abb-a1d9-e457e1e8c1cc"
        },
        "item": {
          "id": "c2e2c79e-8611-4d4b-bcee-354495c08d40",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "164b4751-8cc2-4631-a72b-32940d86675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba42cba4-bfff-4c4d-87c7-b09d61d55c50",
        "cursor": {
          "ref": "f25ca3fd-88c5-4651-a503-b839a4d46aea",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a6a04d5b-6469-446d-8a1f-1970add9dc55"
        },
        "item": {
          "id": "ba42cba4-bfff-4c4d-87c7-b09d61d55c50",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6de24874-646d-4fce-b9a2-b4a25ff66b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0c913d-5ed3-43f8-8c84-e95ab3be1383",
        "cursor": {
          "ref": "bd1ca12d-e69d-47df-b71d-1ca3eafe747c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "996c8abe-9c04-4e63-92fb-ad93b87fcb98"
        },
        "item": {
          "id": "fa0c913d-5ed3-43f8-8c84-e95ab3be1383",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5a9e34aa-b50b-4102-b664-85ea0131e737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b5bbe-f924-4619-827a-2b760b72e50c",
        "cursor": {
          "ref": "676bcfc4-9da6-4e15-a552-dbd494552ce9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "09f06f51-7ad8-43ca-9adc-ead6f19354c9"
        },
        "item": {
          "id": "417b5bbe-f924-4619-827a-2b760b72e50c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "303a9d6c-cc55-4db4-9d98-2085cdf6da84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce765b8-fdfd-4659-bed6-d6b095962477",
        "cursor": {
          "ref": "34460ba8-38cc-4f3e-acee-204837f59bdf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "198c10f2-7153-4a48-a603-3681bac0bca0"
        },
        "item": {
          "id": "3ce765b8-fdfd-4659-bed6-d6b095962477",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "88dcf575-b2d4-4919-90f5-03bea917ceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e2bc62-e00d-4d19-9c00-55b50ab6d483",
        "cursor": {
          "ref": "35288233-0661-4cb6-8cfc-6f74923286c1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e04e8a16-b36b-4edd-86d6-2536de090012"
        },
        "item": {
          "id": "22e2bc62-e00d-4d19-9c00-55b50ab6d483",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b79aecb1-27a5-4768-a1bd-ab0dcfb73cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b109c6-e72b-4305-a5e1-fe65df44af11",
        "cursor": {
          "ref": "fda1f47c-b318-4e06-8e99-1b59e6c772a6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bae803ce-a666-4bb0-a41d-773f675045d4"
        },
        "item": {
          "id": "b3b109c6-e72b-4305-a5e1-fe65df44af11",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a42c7a4f-4cc0-4a36-9cb4-cb7dc2c42103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9402dd6-f09d-45c6-afe4-e8de81feb3ab",
        "cursor": {
          "ref": "0d637253-a659-4428-92a6-9ea219b02de3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e5f521c7-a9d2-4395-b58e-e83f923942b7"
        },
        "item": {
          "id": "a9402dd6-f09d-45c6-afe4-e8de81feb3ab",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5c07804e-d80a-42d8-a902-cb435413dd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c6e7a9-b780-4fbe-824a-b166c80661f0",
        "cursor": {
          "ref": "730d5651-6ad2-4754-b2f3-ba4fc5e8bbae",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ee20e7f9-e73d-4bb7-a481-ce92739a60d6"
        },
        "item": {
          "id": "43c6e7a9-b780-4fbe-824a-b166c80661f0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "17d51e42-d640-475f-8c90-122ba2a8d943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d3c21-4de7-4b12-89a5-5edc8f790bd5",
        "cursor": {
          "ref": "5aaf8524-8e24-40af-b91e-a9fce0401b1c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2360ed63-723e-4f2e-ad1d-3eb88ec5b455"
        },
        "item": {
          "id": "ef8d3c21-4de7-4b12-89a5-5edc8f790bd5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f35a588f-e431-4deb-85f5-a950f510dfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32187ef9-5b0b-4461-9e2c-527425800892",
        "cursor": {
          "ref": "5705de9e-f158-4fdb-80f1-54314d2917ed",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c0d5bae1-ad3a-4d12-8754-6c7d4a9e7c98"
        },
        "item": {
          "id": "32187ef9-5b0b-4461-9e2c-527425800892",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6a24af90-433b-45b8-883a-1f20cb49ad9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08bdc1e-da17-4598-934a-26ed913969ec",
        "cursor": {
          "ref": "0860268b-e8d0-412c-897c-0b5228e43ff6",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0baaadcf-7968-4f80-b5c2-e135f0bc2e27"
        },
        "item": {
          "id": "e08bdc1e-da17-4598-934a-26ed913969ec",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e9c837d6-8547-4797-878e-3780b006d0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1756ed6c-14f2-4d6f-af74-de11d0de21a4",
        "cursor": {
          "ref": "78941cb2-944d-49b1-adbc-cf29c045ee90",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "205ebc57-4788-4cff-b5f1-7aac1593e62f"
        },
        "item": {
          "id": "1756ed6c-14f2-4d6f-af74-de11d0de21a4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4f698135-349e-4ce2-a21e-93c7be384bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d3fcb8-44a7-4bf5-a689-ab9e2e90908b",
        "cursor": {
          "ref": "401fb4a9-65ea-4967-94b8-f7962e5723f2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "adb64f6d-55f7-4953-a27c-af11f147ab8c"
        },
        "item": {
          "id": "a9d3fcb8-44a7-4bf5-a689-ab9e2e90908b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "08d5cad8-d287-4800-8892-71ca50cc0075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe85d8a7-5c9b-4f39-8ecd-a60a1f2f0aaa",
        "cursor": {
          "ref": "e3639251-2877-4519-bb6b-cc5a37623e57",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "843db23e-5533-427f-9fc9-f9c111e4276c"
        },
        "item": {
          "id": "fe85d8a7-5c9b-4f39-8ecd-a60a1f2f0aaa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0780096c-1b85-4838-bb95-e56e766d22d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b60fcbe-8326-4e3a-99dd-314c25b4b69e",
        "cursor": {
          "ref": "ff183d59-2ec2-4baa-8f4c-e3ac261f19b8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a78acf9c-6314-4756-bbcf-104773fd9370"
        },
        "item": {
          "id": "6b60fcbe-8326-4e3a-99dd-314c25b4b69e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3c45577c-ec34-490d-aef2-2fbea9a94b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91eb429-c17f-4b20-b152-8d25059535ea",
        "cursor": {
          "ref": "4452cee7-e58c-45b4-aa5d-70ffe6ba69be",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bab58ac1-c239-44ad-a5f8-7108ecd90999"
        },
        "item": {
          "id": "a91eb429-c17f-4b20-b152-8d25059535ea",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a5380e31-e445-4d9a-9d03-b579f2c0ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285ab966-28fc-44f0-8767-0220390c225e",
        "cursor": {
          "ref": "66ebe2f8-4669-45f3-88aa-424216c00332",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7508583c-e267-40f8-9fbf-b6965e6d79c7"
        },
        "item": {
          "id": "285ab966-28fc-44f0-8767-0220390c225e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7746fd5e-5565-4aff-8120-fd32caec30cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97cd10-8477-438d-93d6-72668a253738",
        "cursor": {
          "ref": "92098270-444e-435b-b7fb-b7ed39b97486",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "267fec1a-a5f8-477b-80c3-eb981907e968"
        },
        "item": {
          "id": "2d97cd10-8477-438d-93d6-72668a253738",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d4e75fe3-c620-46ff-b0b4-6821456ac237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c582f81a-4c52-44be-a9b4-b7ec3e9dee25",
        "cursor": {
          "ref": "938ed1cf-b75e-4dd0-aa64-46268705e72d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f0634355-d7fa-44b8-8f36-fc446fb00853"
        },
        "item": {
          "id": "c582f81a-4c52-44be-a9b4-b7ec3e9dee25",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8b4ebb37-6c76-4908-9347-29b622ed27cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66075dd-e2de-4beb-8eed-9034b7b3ec26",
        "cursor": {
          "ref": "76394c9c-00f0-45bd-95d1-8baece88ba06",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8245d32d-a280-4358-ad4e-0c4bf5fee282"
        },
        "item": {
          "id": "b66075dd-e2de-4beb-8eed-9034b7b3ec26",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6971a512-7ee2-4a3b-8dac-4e33e11d81c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66da35c-79f4-4979-9ea7-317ff4c1fa73",
        "cursor": {
          "ref": "3cc68616-9357-4b8e-9cdc-8a7b24a6ace2",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ee19e6db-4366-4af2-91e8-9eafc16d5918"
        },
        "item": {
          "id": "e66da35c-79f4-4979-9ea7-317ff4c1fa73",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "951779f5-2c60-4196-96b5-bfb628cc273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeff8b2b-f888-44e3-b55d-66a63a7da6d1",
        "cursor": {
          "ref": "0f78b32f-93fe-4799-b881-106b02e0aa5a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1a4a019a-4b9c-4fcd-8436-989026cb5264"
        },
        "item": {
          "id": "aeff8b2b-f888-44e3-b55d-66a63a7da6d1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6f904fa6-7293-4669-8220-02e53ce55acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebe337b-398b-4276-baa8-f03994fd48b5",
        "cursor": {
          "ref": "0b12a421-d3f8-449b-b0d3-6f4f0bfb489c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4186c817-a2ff-4505-abf1-edbf7d5dc109"
        },
        "item": {
          "id": "bebe337b-398b-4276-baa8-f03994fd48b5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aa297ccb-7803-444f-8c68-8d0096c52bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc38eb87-7d50-4d36-bd54-de3f0e2fe842",
        "cursor": {
          "ref": "5f4da685-5e58-4c5c-a891-210917912a40",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ad55ee84-b020-4df8-8720-740a6a387808"
        },
        "item": {
          "id": "bc38eb87-7d50-4d36-bd54-de3f0e2fe842",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9e325c84-04ef-4353-9bcb-919e13847eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17be14ff-7d78-4767-9c4f-88826b7d2ffa",
        "cursor": {
          "ref": "82f3614f-3be5-44e1-8d11-4f202f54320f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "857076f5-87a6-4790-8387-eafac1d2278f"
        },
        "item": {
          "id": "17be14ff-7d78-4767-9c4f-88826b7d2ffa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "22d6cc27-9028-4b43-a6da-b9403685019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d9ddfd-0b32-43ec-8036-45000be392c1",
        "cursor": {
          "ref": "bbf6bf16-d0ed-4d64-8138-30bdf61d76f7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dda31300-3905-413b-8a31-83da64ff96d4"
        },
        "item": {
          "id": "a2d9ddfd-0b32-43ec-8036-45000be392c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2cb1e52b-16da-4e85-8931-425e4352b8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7116b7-031a-4787-ab55-d115a58fb00d",
        "cursor": {
          "ref": "cc92392b-89fa-47d5-bb0f-84baac4f1312",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ef760002-c47d-433c-ae72-3e9a1284d9b4"
        },
        "item": {
          "id": "6b7116b7-031a-4787-ab55-d115a58fb00d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b61a8324-1f45-416f-8d77-fbb8d38971d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466aac06-b4d8-422f-a6ec-b0bb31e76f96",
        "cursor": {
          "ref": "2da82d0e-0422-494d-9c80-4e7e95e1f958",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f52cefaf-b41f-4f02-adbe-51dd2587652d"
        },
        "item": {
          "id": "466aac06-b4d8-422f-a6ec-b0bb31e76f96",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1dd1d8a2-e87c-4e21-a8ae-0fc9954822bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be16f52-c827-4666-bd78-81d2affd6289",
        "cursor": {
          "ref": "2998c3db-f023-40d0-a6a4-d732db6583ae",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "50d6f2aa-a767-43c5-b772-a93e446ec866"
        },
        "item": {
          "id": "0be16f52-c827-4666-bd78-81d2affd6289",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2db15dfd-ad73-4be1-8795-1dd54520e90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e499784-28c1-4420-aad9-f44b5830b1d5",
        "cursor": {
          "ref": "2bc8b05f-ff8b-43da-a38f-6998d14d9894",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8e5289c2-6d20-4468-a1df-ef2692a601f6"
        },
        "item": {
          "id": "6e499784-28c1-4420-aad9-f44b5830b1d5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "908836c8-20f0-433c-a5fa-e55942a5a6d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0af9b5b-59de-4d56-9960-ad6bb0438976",
        "cursor": {
          "ref": "9a71b0e2-a8e2-4a61-ab8c-8c2ae34815e5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "816fde4e-499d-4ee5-bcc4-af4b82f637ea"
        },
        "item": {
          "id": "b0af9b5b-59de-4d56-9960-ad6bb0438976",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6a6dce08-0fdf-47c1-b95e-f7d216bb711f",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45d1d94-f58c-49e9-bf79-24dc85622f56",
        "cursor": {
          "ref": "25df8a5c-1676-4f5d-8d0b-9426af2d27a4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7676dc95-73ec-4be3-8ad1-aff1802681e3"
        },
        "item": {
          "id": "d45d1d94-f58c-49e9-bf79-24dc85622f56",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e113aeec-5d1f-4cbf-95b3-b1f587c8c2a9",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd21da2-4a38-444e-be1d-8d25452315b5",
        "cursor": {
          "ref": "f55fe2ef-8388-4c3f-8528-281d5d327ca0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "889b29f0-8290-455d-9f90-5c1c8e46d64b"
        },
        "item": {
          "id": "ecd21da2-4a38-444e-be1d-8d25452315b5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cfd1b6f7-b4a2-41d5-aba7-e0f9d512d7f2",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "23789fd3-b152-4bb0-816a-11a3442e5bcb",
        "cursor": {
          "ref": "64795a6b-ef53-45c2-b28b-70bfdb6a3427",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f769a94e-6fc5-4e7a-be48-d5cdef605898"
        },
        "item": {
          "id": "23789fd3-b152-4bb0-816a-11a3442e5bcb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e558c5d-0d74-48d6-934c-86752209ecdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23789fd3-b152-4bb0-816a-11a3442e5bcb",
        "cursor": {
          "ref": "64795a6b-ef53-45c2-b28b-70bfdb6a3427",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f769a94e-6fc5-4e7a-be48-d5cdef605898"
        },
        "item": {
          "id": "23789fd3-b152-4bb0-816a-11a3442e5bcb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e558c5d-0d74-48d6-934c-86752209ecdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d614b35-9752-4432-bf47-08fa35f8abb8",
        "cursor": {
          "ref": "f98b3c87-b1ba-415e-a944-0e0976f244e2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ef96f536-fba1-47b7-866c-9c2332a84202"
        },
        "item": {
          "id": "5d614b35-9752-4432-bf47-08fa35f8abb8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0946b186-b348-49e3-8cf3-af385f7ef43a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a446db42-5764-4b75-a6b4-984e83b0d834",
        "cursor": {
          "ref": "1bb1a160-8d88-4bc6-8860-d2eb34ce2f19",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "02e75c57-fbc7-46ce-be67-e79719560c62"
        },
        "item": {
          "id": "a446db42-5764-4b75-a6b4-984e83b0d834",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d047aac2-bc2d-469a-bb33-b386f5c87d4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}