{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eb399135-ec1d-4c7f-aa56-9eb8959676eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d78dc98a-8fa4-4bc2-9079-234ec63d8d4c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3664bb26-310c-472c-bca2-36d220ad8e45",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27243303-dd97-4921-851d-ec7378050599"
                }
              }
            ]
          },
          {
            "id": "b73d0681-c9ac-49d0-9a43-1e2e93251be0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "344a9a82-a85d-4983-93bf-05ff839e1838",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93ee99ea-d8ec-416c-95f5-02a59ab75747"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47121b1e-2472-4afc-bd74-e1ac71729a57",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "490276f4-a77f-4434-b129-d1193176eed8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e6a0957-0c80-471b-b7d2-f38c17e967c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cb9e769-8cc5-42d6-8235-9d737dce2624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a54dcd80-6cc4-4eea-950f-ec94624b9de0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29044644-151f-4ccf-9f54-47849c972e9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9de5fc0-6436-45c5-9d8e-c54e6727c6aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af20240c-5f99-4bbc-813f-5e37ff66b529",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d8519f9-d0fe-4cca-98ee-07c08900a848"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01dcb6c1-c462-4d3b-bb88-fc2697765355",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "104f99c0-a841-404a-b91a-3e6578ba0c69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94cbd15a-85d6-438d-93d1-10027424d4ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd4f784a-19d5-447a-9067-ed378c9ca5e2"
            }
          }
        ]
      },
      {
        "id": "be469342-c180-479b-a89f-4932b0975415",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "41f26aaa-83f9-4b49-a9f8-a2d73b5494c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a455ec9-b783-4035-a976-9f383a798f66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f3e9680-f5a1-4503-80fd-6080fd6760c4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45743b1-3f31-42be-af49-8128eff15a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc09fbe5-40c7-4b43-a20d-9fb38ee76f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827f3d82-2e79-4bc4-866f-b36182d86335",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a729a4ba-af58-41cf-a27b-d567d1cf5a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02813073-a84c-489a-b69b-6417bae564c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3a690f-ff16-404f-8e57-202ad993c873",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e7018e-d233-43d5-8d63-2be52132be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7552562e-5d13-479f-9420-72b9a2933395"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70a5bb86-744a-45d3-a281-6795a8928af7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10dca60b-2fdb-42b9-94b1-c2e14b49082e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25141ee5-6da3-41cf-a282-d85d2b0a182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21d11438-5b21-40c5-add7-9b0ceb22c89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2dc75-511a-4b09-bce7-2b5b4a39f341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885ab325-f424-4b42-9bc3-0bfa73794b74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c785f17-dffc-4e47-ab29-5ef11e9fff45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e50f4dd-b7fe-4edb-84b3-105269f36d93",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf0508e8-0155-402e-897f-1b9dd56a8931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "684eba8b-8ca2-4c21-8c82-0bb62a2d1122"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7524032-800a-4983-81ff-cc79c5cc3f73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e1dd77a1-8278-4693-aa01-b52665a1762c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e07521c-d28d-4446-a9d4-af2243a98bfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b07714d3-b90f-49c3-8ba5-d71fc980fdac"
            }
          }
        ]
      },
      {
        "id": "4d1354ef-5fdf-4119-9219-83eabcda6ab5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7baf2f09-f7c9-4dcf-9490-11e45980dad5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ff5447-8e5e-4f69-928f-b1bc4699a364",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "739a794c-9d13-4e8b-8c78-69cfefa00319",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b61dc3f-0c20-481f-9141-f04c82587468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd992f3-53ba-4d9c-8ec8-360207fb14e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff33ff5-5cbd-4b5d-a7dc-ac52f6420ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3943af2c-968d-4f2d-b976-8c96a7843dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78897267-8a3b-41f0-90d6-61be9703ce31",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd94103f-0459-4089-a6c9-c0e2d11c49d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fde154-d899-4b8e-a14c-c226475f6a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2afd75-fb3f-42e5-8353-b064dd5b170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e17df4b-0359-4ae6-a5d7-c7f8d3f3edca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acf6458-08b8-450a-a91d-f58c6e48e4b3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b219889f-787c-47cc-8f5a-6d4c5e810bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b6c737-6eec-4747-a982-f49995623836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5e8935-e01d-48da-9ce7-4a7afc2165a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f11a4ebe-78da-44fd-9518-2ac17241daa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f494bad0-bc8b-42e4-a044-2a55029e9396",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21435ad6-3294-47a5-a950-87c644573240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6073488-8b6b-477b-8b28-23aae3278323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb005a31-8b07-4ae7-8842-07a6e0940589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85575f1f-68bf-49c4-919d-b0cce0c7e725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0557748-7a61-4e8e-95b8-f8c8ac40062f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae98e976-d0fd-4b63-bc1e-2ec1785b5ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb5fb4f-933e-49ff-a140-6643b48000b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02033a28-fac8-4333-9fa6-341359306212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24c4b892-c6c1-4ef7-8f27-f0377ddffc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41a0353-649a-4d8f-9fa0-713d2801e157",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8588090d-b470-4c7e-910e-c8bff5761e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892d79cf-8f6b-4fe8-8115-a4bb716871de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a17d326-f715-4aba-985b-6ea352381cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "544adf1a-10d4-4fd0-b26c-5e2f1d961b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f0e13-bfba-4482-b645-9a8e28ee5930",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c4f42d-00bb-4c28-a62f-e4f03a3a0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11635798-970d-4ff4-afdc-223df566e70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cda2db-ecf9-4338-a339-a8c3ceddd563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e8d76f1-dc12-41b6-be1e-cf7e152ee0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dfe15c-ccb0-4911-b9b2-c8e947afbdcf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48bcc55-a599-4335-a3dc-d5be748473b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de64b40a-78c7-4d59-b554-f3ad783b5bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f89116-a867-424d-a337-4a55b777604d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b223db52-28e7-488e-9c27-7d52c40464f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b50bcf1-f776-4ca1-94b5-353a871ab943",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927bd144-30f6-46e9-92e6-bcab5d936833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba46e80-e161-4026-8677-3d6a0a2adc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ddf08f-f745-41ef-9d00-2d2e82190662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aceb6aaf-3797-4315-923a-f9934d8e14cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff45102a-4327-4787-ad36-2446a3cbd0cb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ba1a7-3908-40fd-8df3-9302c7c7d7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6e8cdf-d70c-4fe1-8768-d13189f75a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e84bd-30bf-4d54-b4af-6b713d326263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2d2268d-0080-44c5-9f7f-e95c8cfb6ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1066925e-b47d-45a0-add8-6b48dfd21a64",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8be8468-ddc8-4825-a063-ad508c0bdeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424eb299-796e-4f48-9ee6-39759372eba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdcc865-cea5-40af-a2a4-b35b4879c6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82973478-8822-491c-83e3-8ad6ad9006b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738ee990-406a-4004-aed8-7fa46545d81a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85118301-7d39-4739-a626-328927f67136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cf1c3a-1343-4f99-bb7e-043e036b2bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cc92c2-b8c9-44bc-b00f-f937ac4037e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3907bf-d327-4985-aa7f-50d96d5ae816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968aaf5-f697-418d-9ae3-0ebb866416da",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73854a8-f972-4ceb-88fd-ecd520e61ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96534fb1-d38d-49b9-8f24-d9ba80660e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3728699b-3ccd-4876-af50-f8f0b1064e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75487767-c2df-47ee-86c5-51ecc6b8216f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6072051-38a5-43a6-929c-dca19afb5951",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e5d015-0d1e-4f48-b60f-70e3b7f5a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a76f55e-dd27-4842-8950-0517fe0bd694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec718301-c9e3-400d-9d2c-f8c6e679b21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93b047b5-7367-490d-bfc0-b498a7312216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d574729-1a32-43ab-826e-de4bb60c4d4b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d921e9-f410-47e6-a542-98180ad58bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de8270c-7d7f-4568-9f5a-a262d10998be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc90c10-7067-4125-b481-983ef5944f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f736ea-0fa7-4e5e-835d-3224437563d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd77eabc-0660-47a8-ad61-5b2ba5dfc5b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8f9b7b-988c-4f10-a4a1-c0efa012cbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bb9f67-6241-42d0-89fb-e78a3acdf082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2efd61-8846-40fd-98bf-7cb332a80089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13e3fc72-2c52-466d-8cee-009dfae9f656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a29c359-cab9-4e94-b504-9b1f5c91696c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc7804c-4811-4ace-8094-25aba1af10b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7342f11-0753-40be-9f0b-01124ef1f084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29402df3-4ef5-4a26-96b7-d9b7078b4edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "861db03e-1e88-4e4f-9721-98e7b437df3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa27a8da-4d92-4b43-91a5-c939cdb71451",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe2913f-72b8-483f-979e-196344b93bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e6da57-c542-4ff0-8314-a0a4616b89c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516bf9d0-8db2-4d0f-a3c7-130401bca57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa99301-374c-455a-966f-c8da3f7e06df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a85eb4-b7d6-4690-91b2-7e7502c028fa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e561218f-991b-4f59-af1a-bb6d6035fd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa182a6a-5a64-45d7-bfc2-3a7ee97e22f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848acb10-6ceb-4f01-8528-fa6cd0544613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22b180a5-8e69-49ed-8de1-adc190fae604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92577fe-e21f-4f9c-8fbc-4def5c00191e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbb9844-1885-48a4-bee2-478ee7448c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d11946e-8045-4d17-8efb-c94ba0f7714d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e98a27-3965-4276-9787-7de1c4404c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "286e28ba-1405-414d-b221-61e4a5f6bb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac31fa0-0b56-448e-b3d7-f0994efc3565",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee9605a-6f88-45f0-96db-75f4f7c0fb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab241cdd-5030-4eca-84b5-0ee3907df158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be17f8a-a06e-4c77-8923-3f771db3d5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "104f1a5a-b15b-4dd0-8d27-c040d2de12ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0475aeb7-8401-4095-8d67-d37b48eefea3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349469d6-a826-4c49-aec2-eb18c115a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d85f33-4ef0-4b37-bedd-183ee516d511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8ff023-0f2c-4ff7-987b-9c24eddb6129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d326701-3fc5-4475-a771-ff18c6b3e4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b68f13a-1b32-482d-92d1-755afc19a706",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bbbfcf-42f6-4255-9e5a-9563b1bba5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f492b7a-8e4e-4075-b6a6-374a9a016c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681bc068-b1e1-4bbf-99eb-46bf5b166bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeec2f5-d34f-42da-8e28-c5fe85564766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a644dec-0496-4c49-a3ed-5d143c77b871",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1113abd-6263-4aa6-b92c-47e4d445ae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccc1c63-fbcc-416d-a6dd-ef04c7ef82b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4eaa1b-339e-4428-8e40-09aea14e8e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aab727-3802-4ccd-a2da-1e39d999bcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51057e3-8f1d-4472-a556-e09fa8523d4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49ca73c-a82e-4b0e-92a3-ef2f756f1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227e9157-37cd-454f-bf62-0b09cbe27523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfc2bc0-ae1a-43bb-a271-493226b00168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1e284f-4ba7-4819-aea1-8eb067d0ea24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b00471-6bd3-46f3-9ef7-7c16beaf01fd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e511184e-5506-47d7-9866-57c97304169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0224f73-0c55-49de-b6f3-c5e450d5576d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b7340a-719b-4967-9812-383ed9f29ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "174fe6cf-dc6a-4d8f-add0-0808fc9c189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e06206-c8bc-45b9-8c7f-fca6b955a425",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd7d808-4ad4-4acb-929d-ad2a4a04e531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8139cb96-dcb7-425e-bc8a-a594d1d8a391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8504ee83-92f7-4a90-b450-a501f62d0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5465cd-f4bc-483a-b807-e6b135955b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888951cd-415f-4bfc-933f-5ddc1306689a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739b988e-b125-4197-9230-2be4ff872044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64da4d0-1b20-4c1f-a592-e553b33b0dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5b74c3-dd89-4b6b-9888-ebcceca86fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02870023-e129-4729-887b-d2d013751f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dca238-b2d4-4706-abfc-1a3ce854fc2b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466ff950-6831-49ef-acbb-c50ab793615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5578898b-6821-4c73-a6f7-62516fb52f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9217dc1-a3b0-42e9-b519-65ae1eeddbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db2bfce-1afc-4f5a-8c86-b0377dbece26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8406ff83-40c2-42f0-ae3d-b4685b5feab9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e87821-8870-48ea-9806-6e05ef693deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f07b9a-047a-48c3-960c-a8e06c754cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8371841-4610-4606-b2a5-3e190d93b439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ddf191-ae4f-4b60-939a-6c2f8cf7f844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5edc84d-bc72-46c4-a2be-21af53320bf3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb1082f-4d99-439b-8db4-32ed6483db73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85718f6e-5f2b-47bf-9bed-2262aefe9925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1729b5ad-61dc-4656-9e4a-0eb5dafb7cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9696a70e-0214-4401-9f5b-c8481e0d0ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8717d-c7a5-413f-9732-e40c2ce6159d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98208599-9ccf-4c0c-af03-5d7f07b8236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e879cac6-585f-4a5f-b359-9bea8acf2736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d541463-6b20-4652-ba33-d90887b3014d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83dfff2-16b2-4249-944b-04db9cbd1274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25694b92-5202-4ce9-bc9d-f2214bd46d7b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e9a61-cce9-4c77-a0cb-1f29ecd1485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24810e95-8360-44fe-8fc0-4bf7186b30ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2ef259-3154-4b51-b5f3-bf13382e0726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08704081-458e-49aa-8571-4d4248bae15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5655f27-5511-4b15-955d-ef3ab5348091",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccca1ab-44f4-4b11-95e7-dc3d9fc471cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a0b05b-9d5f-4de0-8d36-446afe24c392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d505259-787d-4750-911e-d4bc1fc977a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6062ce9b-7f68-4238-8b4d-f2ae2e216a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a94fa88-ddba-42ab-a016-a37337a480a1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dea8870-51b3-45ab-86d1-e490c7bbb977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee26b0c-9958-401f-8233-b5956c6d3bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ade93f-75a4-4dd8-9357-632ff491a940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a9b948-211f-46c3-ad26-bc8ef5e0ef3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c65e66-6e45-4ab0-8333-a54053253582",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc9e270-665a-4925-bb72-b1240fbb4dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55874287-46fe-45b2-b44d-a6cbe4122518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57745ace-d67e-4581-b9c6-1be6e359856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa99883-073c-4dcc-812d-9609e9fc23e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e41e26-9993-41de-a4c2-34a4e326a8d0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07728d26-e251-4725-b72e-b3a2c4a815e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b386a5-6578-423c-9be0-e17086ea8ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86340da-ff0d-469c-aa08-e475d5c1b4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a848763-6521-4dbc-8787-f3a01e0bd2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07614976-9e9f-47d9-9f84-364c87f63096",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dde4033-ee2d-42df-9fee-e61258d8132c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a056b8-2528-44f5-b6e5-64ce10c55eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915e5552-8fed-418a-8e21-34af7d448aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0aecb20-849e-49e2-b1bd-e17b2e9dce80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bb37bf-e18a-4272-8022-5e77178c323a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a758c3-c34f-40be-b1f4-96e2d082601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9effabb7-3cb3-4d75-b74a-2cfd0a8cbf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82fe502-a2cf-46df-922e-b463e05063ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d23493b-d4d3-46ff-8551-c35fc28276c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bef42b-bdab-4710-8f7d-140807ce3e9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fd18fd-8124-476e-af56-e9121d406e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6dbb02-7406-4dfe-926f-a6cfc3f25826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261358ea-21ac-4fa8-b806-4768c7f3fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "165290e5-0983-4606-a794-8a27e68fd96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f75609c-3b4f-44ca-8fc4-cb2d88e59d51",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0760ea-5c31-4277-b621-0b5aac2fcf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf3290d-856a-4bdc-958e-08cd8f073ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e740d474-fa51-407a-87ac-282762ce693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dad6ce6-b965-4c42-82e0-bbdaf1ed9d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0897140-01c1-4949-8d65-e7c58866360a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dcd0a1-cd12-420f-8ee0-58cfe256f2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0384a093-6b66-4943-a22f-918e73608f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bee67f-b4e4-43d9-90ac-824cf6b4cd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5143c145-c3c0-4310-9d8a-fddb75861559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6cc3c5-3fcd-448d-9659-54a37b6ec23f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3abbe-602c-4329-9dce-75348648e5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d83f0c-61fa-4563-8e7a-5de46ac8aade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956fbbea-3ea9-4d27-b910-ecc5b0006825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44fb47bf-ab44-4f84-83eb-afe81d664007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d6e19f-0814-4988-afca-1ed6f04b9bf8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c9d15-cdc7-45d3-bf83-8827a2b878b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a4ac15-26d4-4b8d-b797-38d894dc460e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d57c178-2739-46c1-88ca-16fa0b2e20de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b79a409-3a84-4de9-97c6-d7b416ad2d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118658d1-605b-46d4-a0d3-f9491b8ad2fd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06d32ad-4a9a-4f48-8103-6047e9138e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c05a96b-b424-4c4b-ae8f-8359cc7574a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df56720b-99ff-4c28-ab53-1daac32907b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8379d16-5230-43fd-a9cb-b0bd5c8b2900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a1038-edc5-4b23-92e1-22f9f45d4ed5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51d77af-5559-4af2-88e8-f8d1ad61e1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fdbf3d-2c3e-46a9-8a6e-ae3e0a6a8562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4ba241-7415-49fa-acd5-26206e7f19bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b7da9c-afc0-4bef-bf48-a302f82ef034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f18533-5400-48ad-be4c-0d17791a5a2c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7999ce-a01c-456f-a4e8-9d70d9c331e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88502622-1f1c-442c-9f73-1e4f96894138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a330a8-36fd-4483-b0fd-1028f1873d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06c8f9d-d7d6-4630-ba14-5d61f3013d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7ce81-8b7e-4098-aa44-73f6399df4e3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65829539-23da-4e7d-a68d-2a7e3c165fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50df71ad-2ea8-427b-b341-15a4cf30db1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a621830-a0d9-48c0-879f-26aa0d24cd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc35ac0-5049-4b03-a88c-6b9615b37d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbdfca3-c7f9-4c58-a740-294adf9b019d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acff3bce-9c27-4b29-84da-d21b7ae01896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a682035-5564-43a7-a59f-86006aaa14b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39652fd9-649a-4d55-9ca9-145502765f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6f3409-16fe-49af-9ea0-33c174928ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f525632c-50bb-4d77-ad3f-8d698ff2644c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d8d22b-0234-4137-a58b-b2c39f6c9bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956d07b5-8b7f-41e4-8156-f1d5c4e38121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8257e17-6e76-4aee-9f90-73246b5e679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8d01ba-e592-440f-82f2-fc26b873e640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ef025-3b7f-4b0b-b7aa-c6b94eca2ef6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2cb0c1-a909-437d-bd6e-00333bd86d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12cb061-8450-4290-a8e8-d3e97f8fb8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd72614-156d-4a1f-9c12-7fcb720f72e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a87b48-d66f-4802-8acf-fe31fb64f142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8641ee58-6720-4287-baa8-226c3198ea0d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bfbb96-68c5-49a3-9fef-d53be09198ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbccef68-9b2c-4d7e-92de-4899f4eabcb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8966999f-1246-403b-8c23-a20d4edaba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e1447e-2663-4d05-bfe3-a88ccd96bd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce8fb58-8613-4090-b806-a4f45330fcfb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d393466-11d5-4353-96aa-71e90a44127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c594c7-3845-4ee3-81f4-6af73380144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a0e0a-c774-4572-b969-39793178fefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace221d5-a1f0-466b-89c6-e07d7dad3aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0dadd1-da1c-42a2-bdfd-9b2c5a6bafc3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9459a3-bd2f-41df-be36-df61b18a7897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3075a7-7424-4afc-9705-4bf8c36b676f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee6ca6f-53d9-4760-99fc-3efaacffd57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38ab3e0-3640-4ad3-9fe9-5aaa24e16029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f00ad1-b992-4788-8097-27113e99e1fb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183c43f7-da40-40ba-a2f0-86c5ce520fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db02c90f-ba13-464d-bccc-bf46301e125d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c2422e-1892-4ae7-b110-17f92a639737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2319e8-74cf-4797-b8d0-17c77f063de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0555179-b1a0-465b-af68-b6770d60d7ad",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05c6729-0170-466f-8c4d-cd84127d26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b8201c-422b-42c1-8f12-e1e259f796cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f895da-e972-4df1-8066-9ddda247bdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4453e20e-f0ca-4d42-a163-542aac4adcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a88346-e62d-40aa-86d6-6391acd34a96",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f667f3d7-0ca4-48b4-b6ce-cf47196d6571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2668a251-96c6-46bc-a394-b5fdf8a71483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3a6b68-c8ee-40f7-ac9f-0f33de2e72a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24f98978-146d-48a3-b746-8633af489723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf040cc-b88a-4017-92ee-095550934568",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f78630-a0f1-4677-bfa1-c1f118450820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555a1ba5-c9b5-48ca-85b7-8be2859522aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39914d8c-d2a1-46ef-b634-bf4581c77719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c90ef3-5a90-4e79-a510-e3bd5461e2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b30258-d692-4fc7-ab5b-15d0caeae7c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d964c5-d73d-4139-ad58-8347d075d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5682b74e-aa75-462f-b721-b39a6bd4a239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14427f4f-c936-48ed-8470-3f44cc5a7bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01fd6b97-3230-41a3-9e64-675274016be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a53c21-a0bc-4b49-9972-c51a0230e96c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b9856c-b313-41c3-8ffe-cb7cdbb2ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69642b9-058a-4866-934c-56baa4490a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd959a-5051-4cd1-a69f-ac799c3d7d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb43150-4766-4d89-91c6-7afaa65461a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15164d95-f560-4598-8290-f273ee461d21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd033dfa-72a2-412f-9a3a-68623151b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee7d079-2059-4601-8248-53de31342794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b311342d-f38e-4d35-b250-0d2873413426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8af1ec2c-8e15-4ecd-a0b8-32278f45b793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de63b92-7034-4d57-b6b3-10d418211cd6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a96551c-751a-42ee-875a-799edf072c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0873dc-ad61-4c65-8e7c-a8eaa8547eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b875f3-5c0d-4bb6-ad65-765578aa680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bff29cc7-c93c-4be4-8eb8-5467cc8c2996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e489c3e0-ad5c-4590-945a-0195b21aadd5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771ff11f-f3e9-4b86-b04e-002db6cc01b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f600ac3-8732-4fd6-884e-f35c4e07db38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0c7b1d-7aaf-4cae-b15d-c9902121f70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3904aeba-4b21-4b25-8633-8af66cda1cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3747ced8-b6da-4e79-9d67-e98e2355ac13",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101ed802-eea2-4011-b758-0552a1b61f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f0d222-4815-4d2a-a87f-fbfbd5157513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1679ea5f-7c25-45b2-b2da-a87a3b5885ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e414a5-e5fe-41c9-a4fd-415734e575e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59939b0b-10fb-4b6b-9109-cc4900e39647",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb8ae24-bed0-47d0-a1c3-ca37ea308858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efbeedd-b444-415c-9440-6ad8667198a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b190ec7-c71c-426b-9363-2a1cb920b412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63abca53-9718-4e32-ac33-7b6963fc8c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb7e63c-71fe-4c1d-9690-134bce48b6d3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178412aa-b2cf-45f3-a8c0-e037029be754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ef6e09-2636-49bb-b1a9-7e78634a72a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81051343-94a6-4472-a356-23bfee93ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd79d538-d309-455f-9ae7-b1b1d07f2e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f380ca17-142c-4e6d-b81c-053fdefb0d92",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32ab717-a6ff-4006-9b5f-b04c8d9f0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b13af0-0b7d-4f9c-a02c-ac2bea0e29dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7314ef3-f30b-4a79-aa46-06e0c8e10b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d643738-a367-4912-a636-bc667b640f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e135bab-884e-4340-b8e4-205558e3f704",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b28a7b0-4d69-4519-8f38-0aa32fa3d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492e0034-e483-4593-8018-a454af169f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f900d259-f5d1-4d07-92a7-c422edf562a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aae98d-2776-4940-8fde-3fd98be36663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed26980-3621-496a-ae69-b3a1840b9d1f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad007b93-49e4-45d5-a339-f247c9cc4166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e350671-2d9b-438e-afbd-8c0eacdb8f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a9da1c-b529-4c04-a98c-dac7178edf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a94f1a5-350b-4aac-ace2-aa13df9a8bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3b6363-a71b-451b-b814-a89cc421d132",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ff9e78-f418-4a3f-b65c-880c501c7b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeeac4c-2c83-47aa-b387-6b8d2f88be90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b13d34-aefc-4df0-ad66-a891bea95a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c6d5d1-18e4-4634-9613-c88a48ea4932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb8b518-e823-4b23-a026-c248d9b634c7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edfc5f9-f77b-4806-8b76-0d69f1962bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3020ce-e0ce-4bee-b32a-b75cfd40f711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde967ee-8cb9-48d1-bb5c-c79a8c1cac36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bb4099-8b5d-485f-b585-a64fbb20b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7531ed3-bc26-4015-a5c6-eed59fd79f12",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c534c0-4bc3-4434-a885-c64fcb1805cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b19dc8c-58e8-425a-986d-73204b35132a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e5265c-7bbd-4f1f-8841-5897130ba443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd11c9b-7a06-41aa-83a5-ef5834d6e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b797df-7418-4276-b561-ef5f12e472b5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24324503-4c54-4f9e-9376-7747a511bc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a801879-3b7d-449f-9233-8e8bce32098e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dcffcd-f68d-4cfb-b2bc-df0830a14c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2eeca20-955a-47a9-a2a7-a1454366f2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26be56ac-3618-4578-bae0-d148a6566b19",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44571a6b-9e92-4202-aa36-5c31a321a4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9cd359-9f15-4063-abc0-8bbe15fd335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64886e5-3fb9-4347-9f44-297703e8e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5533b7-18ca-47be-bc9d-ccb7e20dcad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39803239-f483-4b26-a6a5-9377843af54a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befd165a-f088-44c3-9b84-ad5f835d97a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf3784f-7d42-485f-9365-425cb7fc5739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb8de7a-04c5-4872-87ef-64794acdad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0e76af-4549-4033-9dad-801d42fa3d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73121e78-f2a4-4365-9ba9-b7d032b4749d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d9e42-7f27-4167-b586-09c096f5f1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1cc128-9744-495f-b41b-0712a7cc4cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11808b58-53de-4884-9388-0309b3b63253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccfc4fe-5e7d-406e-8c79-787097db7977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38bfae4-604f-4b9d-8c25-38b5ae7b0514",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8acd53-2318-4ede-aa52-ccfab4d14ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549e3f3c-fca8-4957-bd9b-0e020344340c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb751641-ccb1-4a9b-9d0b-0ae56ad559f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69f4d492-aa23-4e36-9db2-b911cf14630d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc8a0e1-3c7d-416f-a47b-8bca27761616",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fbbf34-d101-467e-b187-bd171bd0729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3f5f69-256a-4cdb-a47a-eb55844831ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6c30c6-3113-4835-9b6e-2e506d68508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea709339-7eec-4baf-b824-260c70bdcf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60611e05-ca43-4425-ab45-500ed7d7b9d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5402d1d9-19e5-4c43-9366-d94217f629d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53767d01-7867-4ef7-be52-f64a118556e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654464d0-b8df-4379-86bc-1c8a16ad72b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f397160-f2ca-4b6e-acd4-e989a40486a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4a5b5c-73a1-475e-9299-16e1bb2ed5a7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44086805-ed42-4006-8db7-c7644b5df411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9d79a6-1986-4f51-bae8-f25c6ff758ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dfcd72-7111-451e-a6cb-f25cf4d4835e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec773e86-b58b-4fff-bae0-67e841ca7ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96189754-29bf-4e26-95e7-099284c83b9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab08543-ca84-4da7-8bfd-e9a5f3559609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1ee6cb-2117-4367-9ce6-c4d81f77f822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae5217c-26bb-4de0-94d7-a81964ab772f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ccdc63-4ac0-4003-a32d-85c85b203f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd40c271-808f-47bf-b449-f00844823f6b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b1fd7e-4fab-4869-a191-3327d8e88710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7bf93e-ee2b-4ac5-a001-e071f1ec66a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fbd9c8-e87e-4c6d-950c-5b4f05ab2369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9add8e07-c902-4fc1-b94b-d3a15d759829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d613a919-986c-4351-9e96-27f931d64fb6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c15580-0b59-43bc-9fc2-5f2ca852e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2046f81f-003d-4517-ae27-9614ec68dedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8a445f-2e42-46d7-93ae-7a43b7310fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daad0764-db97-47bf-99cd-9c344e4af02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d74cdc8-8dbd-48e9-8f76-3b296e779981",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8472820c-3db2-45c2-8be8-94d6458e5778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f999b11-d1db-400e-a927-e7790b200b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c40d1da-f171-4d75-8390-204698559ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc3b747-ebfa-4a8c-80b5-0ba4002563c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fa3519-1305-48ba-9328-f23fca3b5db8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4390345-2423-489d-949e-ac85b33f9042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70302511-f17d-4d20-b279-fa8d9cd3ec5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0601e64c-5ef3-4429-a09e-de01680ed5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b261710-b58d-4369-b22f-6b4f87138925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fda1c4-e539-4489-a4ff-88614fc8b728",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80211d97-67f7-4531-a57f-5b8548332d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55467bad-e823-4eda-af84-8934ca9830cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50970c25-8e26-4d30-87cc-1f24d6365b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c28c8a0a-8235-411e-befe-48c13aeb79fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce952dc5-a898-4fa3-b3b3-15162306d4a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae89b62-0a94-4645-ae6f-6f45cdda3147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1056b7f3-eabe-4ff0-9ede-4215aec6329f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e468f85b-9479-44ec-bfe4-4c698180aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62821259-fd16-478b-afe9-e3c2311c6318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374b048f-bf4f-4dab-b73b-4bc20ed9c51f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3ba4cc-1368-43d6-9322-b3ffc1a33dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275739bb-dc5d-453d-b5fc-482769e39470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74461ca9-d671-4f67-add8-bc92a95c88b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad2d59b-6228-482f-ac11-2cbc3e2c89c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee4e695-fb71-4904-b307-372e9d76becc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c06de2-7106-4fd7-a87a-0e7e808be359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5335a317-2c24-4f43-87e4-bbe7f2aae3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4672f9-e4ae-4976-9458-3af50601dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2e9d6e-56b6-4322-9935-4695e38ef0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a07eefe-ec7f-43e0-876d-5911d84d5ca3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c30931a-ca3c-4f27-ad64-8cf00943242c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c41ae17-4b35-4c80-8386-ebef9f428bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d220ddac-56c4-4719-b25d-b52885342c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a47e805e-85b2-4cf2-8874-7344b921bed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e71488-c606-4985-9b43-c55e866201f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66290883-89d0-40fe-9a45-be2c5b39ed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a067594d-44bd-4f06-92a1-d1c69ed4f6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55e07d4-f8f8-4bbe-87e2-dcc3c2a35519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdd7219-4db4-4942-a67e-44585d6aa127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aacf0db-ff1e-4e77-941f-f5e6e5647961",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06feaa1e-c4d1-42e6-af2a-af138e74e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f7fafa6-574c-494b-b707-fd124cede070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d068d3b-2733-423f-9b61-6bbdad7d26c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f13da499-8ef0-4dac-87c3-34fad8042a3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01de62e0-2897-4a0f-ad9a-921e4589e21e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c468a89-b851-4b4a-b733-f88eab9b0f45",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81507ed5-d21e-47c9-8423-4a129a3c515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a033b3e-5d38-4798-892e-dbfa50b2beca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc39fd8b-71bb-4714-a3e4-9b5a4d459f9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd81f1f-37e8-4d9e-8396-fad97b63025a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11290b71-efa9-4288-801c-7b6c1e2982e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82e4ad1c-bf8d-4884-a551-5ef74de841dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76351f78-6804-463b-b1b3-1ba43f60b188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1ed8a2d-1f67-487d-bf29-fd9ad4403fc7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "735b12db-357a-421a-a641-474b1375c6a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4804bbf4-9052-4d5f-bd76-e1c8a46d209f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8adc3ac9-b326-44f0-9914-0902efbc25ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7888b70-d599-4b7a-be41-10d86c7eea98"
                }
              }
            ]
          },
          {
            "id": "4b9495bc-7323-4569-886f-18f0885603ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "389fd6e1-eb0f-4200-baef-24cf2b93affa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "af86d005-7257-4e44-8a4d-943d5d126bd5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d7bd4e-0288-443f-8eef-3b8e3db9862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b84723d0-0209-45ce-9d25-10a69231a236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef8f0a9-b15e-4ba7-9163-d50d30fe323d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa79ac17-cac5-4d93-9083-2167e9605205"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfef50c1-c7b9-4b4f-869e-ff50cd228dd1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "672f772a-eeab-405b-97ae-3e1164fd88a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4900c3c0-d8b6-4edd-bde8-26d2124640ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f8dfc77-be25-425d-8279-20caecf0d7d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2c60fc7-a59d-48ef-93b9-dd8431dd5a9f"
                    }
                  }
                ]
              },
              {
                "id": "730d2538-1d97-4f80-8baa-446d25f15eea",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acba8e55-15c4-4c0d-84a2-0dc3a2d23136",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb3fca31-46a4-41b3-809d-22c6ee1ef74f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc50a80c-d8a8-4c49-bfbe-cbb354fef62e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d222c60f-ddb7-4b7d-b989-5889c5feb841"
                    }
                  }
                ]
              },
              {
                "id": "d8b8e7a3-6d38-445c-825a-f68563c58a23",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e5a0aa2-4742-4f28-8c6c-031b74fe890c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6127387-2c18-43fc-a046-34c4309a21db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f066d54-8566-4cda-8d5f-e9c94a579a57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05f0aa63-d894-4452-bfb7-15df2c187172"
                    }
                  }
                ]
              },
              {
                "id": "f534128d-c76c-4c60-b2c2-73ef25fcc98c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8a9935b-a310-4fdc-b72a-0e02ab01705c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58c5b38f-fa24-4fee-867a-e1923a3194c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "158e513a-8ba3-48f4-a1fc-6b3eba1c1ecd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c7f46270-3491-49f1-a2ab-93a1dcb27e9a"
                    }
                  }
                ]
              },
              {
                "id": "c60c7de9-b2d6-4c4c-9aba-fba2a2b2218f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45e74c6e-52c9-44c4-99c7-7a0984afda55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e629e4b3-8a30-405c-9f60-327530eeed3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6424647-4bf9-4746-a589-ab041ff43bda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ff01f90-4024-40a0-b85e-8d35a4215012"
                    }
                  }
                ]
              },
              {
                "id": "7c0cca15-1902-4cd8-8b63-52d097f7fe14",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6a3de90-5aac-411b-afe2-b113bc1bcde6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "791a67cd-c7c0-43b6-a79b-a6ad3d5ca65a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f5ddc61-8d84-470a-b388-d5074d476c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a13afedd-dabc-451b-840f-e8e40d40b1b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19a5ddbc-6eee-4c4b-b2c7-99661f7967a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c14369d-ee55-42b0-8e55-e4ced71d3ded"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "023bac8f-89f4-4724-8fb1-5206b3e36159",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1980b276-e5e5-4438-a2be-e35187dd0d62"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ef33d88-c50a-431e-b979-039e6afae1d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fe729e82-d3e7-42ca-b2b3-08cc4a623c21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2119f00c-1ed3-4ff4-b07c-c7508f1fa909",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59e5e817-8eff-4d39-9f9c-85f7a44d5ea7"
            }
          }
        ]
      },
      {
        "id": "95589fb0-2052-406c-896f-8d9920562eda",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "93c1c599-aa2d-485b-bef2-b86bb96e72be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "584fe9a5-001b-4a81-808b-34b0c9826a10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba12843e-24c1-401b-a74d-bcf89694f2ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29393538-1a9b-40a3-b320-2971e282ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490e09f1-f06b-46db-a300-f169b598f571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809ea808-8e9f-4992-a914-e9016b8708c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "185b72f9-cb27-4256-9bc5-7daf19b26a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646536e9-cac5-4542-ab53-056d38badb0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9296174-e757-4623-950b-3470fc4f0f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5217fc32-e232-49ae-97d5-3af261d229fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50e37e9-7d7e-4b5b-81ab-838256403371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcfe89e-2e8b-45e8-905f-255e59a59388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2942cf52-c917-4ae2-977c-d5c789b24eaf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4022507d-abe5-401b-ba3f-203d48541963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d3914c-4e15-4451-a364-ecf9c82c9ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0d059c-d4d8-477a-afaf-fad9548dda72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19cf3db0-92e9-4400-ac00-e2aaae42b86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52b7cb9-1760-43f6-af01-1de85c4a897a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3babf9d3-6bd5-499d-9932-abdd2873daa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7c756f-a372-4a7c-a6c7-48e22f794b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c7b729-1c9f-4330-b60c-4393ac0f5434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1020030-cbaa-4bff-999b-dfbad5e26f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3b258a-1232-4b9f-9ba9-30a98eace7d9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c76286-894c-46ea-85d8-b1e73fb744ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a09324-a369-4b63-ab01-02b3405cc2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03bd4d9-c15c-42bd-8ebb-95f626f0affb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f3715a-9359-44ba-8c55-c392b7a36b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a808e6-14d8-4501-806f-194cee992150",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78614dc-0288-4856-9c6e-63a0ef03b671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a05b66-e81a-4da0-85a0-a19e6c8956e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb2b620-8308-4dbf-b3ca-c39ec5a73c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c32588f-889e-46d2-9400-7a8e2a839076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af93099f-8870-46d7-a2c1-f4db9d456028",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee1a584-39d2-445f-807b-1ace63d7fe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61db4e6-2425-4c9d-b91c-aaaf18fa4750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c687d-00fa-442a-a782-b5df6b4e290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f371e904-1b3e-44f5-8ba8-e5a1999f2465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7b10c0-7621-4e31-aedd-9246fac919ef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42b34e3-ce02-4977-a37f-3d81520570b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12a8f00-80c4-4a6d-8578-79ef88a310a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874b322-a1bc-4b78-920c-47d70c063c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd23b9f-3208-482c-881c-4d043b73919b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d526f8-c5ba-45c0-b0df-811c0d17794d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ab1f7c-a75f-4528-91c5-3d9131eb4281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf33194-d421-41f4-8e08-159f5886ca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3f1709-d3f5-4427-bae3-66e401adf247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9bad79-700f-4973-aaf8-7f54e03dece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c225390e-9bbe-4009-9f34-aab6732f9b05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ee8413-6c1a-46fa-9bd8-1a5a4eb085e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d609043-4e28-4843-8b66-25a1eaf6aa18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e12be0-5844-43e1-b1f4-6c005f49d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6eb0ef-e452-4da7-a20a-bc6a43f1aac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0b5f0d-ffee-4503-ae32-55e018ddbae7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ac81a-f852-4c0e-97c7-d52e80857332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919b152a-5aa7-49b7-918f-a78486b91844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e35bfa2-19ea-490b-9645-09a3ffaa01b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e752c4-9a56-48cb-8ae8-adb31b424453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fadf26b-8b64-4fe3-b2f7-e9fcdb24ec92",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3495d0-546b-46d1-8c07-b64854d3457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38979600-da74-4599-aea4-f46cf28e1710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411f11e8-50c2-41ab-8ef5-1c1c425646c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "094259b4-b4af-4e70-a1d3-0ffe4b54e808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427e2f8d-6bac-421b-b73b-7a07d0188bbd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9bc985-cfea-40bc-87f7-92a51485143c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158b3d1e-1777-4dde-a1b6-c0fe26b93782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41346d3-376c-44a1-965a-51ec7c8675e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0e73da-b56b-49b8-8048-35d84360f5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ff2cb7-42dc-4c81-9f13-fdb0db674a6b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29157d46-655d-4aac-8f01-5200192e2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430780e5-8d68-463d-9234-09342bd3c2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e092d6e4-1869-44a8-b83d-71d1906773e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b7a0ca-822f-4484-bd31-426b33f02966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d88aaa-9a67-4973-bf57-8e8721a1fd22",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4989405-6fba-42ee-a0dd-a4b6e17ee7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af57029d-a327-4020-85a3-f6904f94981b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b31d2-79b9-43df-87d7-64bb35ef6113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5534a150-b8a2-4a80-804a-86101c687db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e75072e-1e4c-4f3a-84ab-8a054d8ce803",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176928b5-4022-4c00-b8dc-6a11a8e4a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d22f31-2af3-418c-b2f4-8b342f10df19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbf619a-e857-4383-9338-f477fe6b2239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2961d73-10cb-4f4a-ab63-88dae659c949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c890d80-c265-43a8-8cef-23016d8d0553",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c8c9e9-28ac-438f-bd05-04e73aa779b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6dea82-7411-49d1-9f62-6fcd9feebbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83063eb4-7414-4545-b896-100150e15c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd69185-9ab3-4170-ae79-74637e0b7773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687df50b-79e6-4709-b220-dfb2655c099b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24cde32-afb9-461e-acd0-37984310379f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9e0356-03fd-46f2-b859-6bd9681ae0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe58a840-675a-49e2-959b-70ed43f9f587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e772b851-9809-41b7-9c68-dbab29109c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481b3558-ba8c-4327-965e-bf07dc0bc577",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544a6ccc-e116-45a6-b6bb-f2796e7219c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061f21da-5e6e-41b6-aa6f-b343e6cff0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1696962f-3888-4cac-b8a6-1738ec3bb651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7b3e90-8845-49b9-91fd-fc32aea465cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d5fe70-df82-4ff3-9cae-cce2f185d172",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e74a493-d52d-4aa6-942c-23a7ab537568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f1f86a-4820-4ff4-ab7d-cba9972dcb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382af43-a358-45c5-bcdb-29af8e7f17c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a7dd64-8b0c-4a34-a122-7715a44d2c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f24cfb-2e09-4585-bd84-4510532e5d6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73be198-6f89-4660-939f-d6d6c25f3b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c425917c-98aa-4c48-a040-149973f02c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015a341d-baa8-48ce-82e2-f9fad5959b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "232d1cf5-e49e-47a5-818d-1dc0efd65969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d6ed9f-9100-44a9-8a4f-0421959e40fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f53c93-0403-44f1-8551-b7b8828371eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69690233-ff03-4efb-8fe0-fd340733adfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f64d218-1d1d-4956-99d7-e771d87b8cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1f94ac-95ca-4973-8e70-ecebdddc91c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a80c54-8b35-4a08-bd5c-39b50bb914ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711bb995-b58f-48d9-b8a6-fe7f98951b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92885580-f60b-4add-9b9b-8eaf8e38f417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6d20a3-9506-4642-a73f-887b14c64cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38541d95-ed65-4801-bfd0-79076db9ee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4271e576-e275-41dc-a6bf-728c71032110",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce36214-c0a0-4a61-af4a-a6047291e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee82fc83-e449-440c-9d20-149a26cb69a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a283a1-2415-465e-91cb-20267d513eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12866e7c-0dec-4a56-9b19-50c541ef549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f6a873-207b-4393-a0d3-94c1a401651a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7030152-ea34-43a7-b1fb-4c42cd1ba6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f3d52d-5730-4c13-99b6-d62d350e9e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a821730f-5ac2-461c-9856-c84199b3243a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5be494-d448-43de-a41a-08b5ed04dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a933f10-db57-4997-a14b-0db4925686ff",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2dd6ef-baef-49e1-b8b4-d71564627368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffa6365-a9f2-434e-93a1-5fdeebc87d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6818f92c-40c9-426a-a19c-98d91eb624a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e560bfe1-3e3f-4838-80bf-139ec3e10ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0555caad-080d-4ccd-82ed-1a439e678ccf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836d24a8-0449-4e15-807b-00f3eacaeb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65fdebc-f62d-459a-bf19-5504812a7212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fd633-9802-471c-99b2-dafbd01cf0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84b65f31-090f-42eb-a066-1f5e83f85b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6bdca6-6e08-4158-ba84-80d3b72545db",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb31f05e-40bf-4016-8992-8d02caf0f06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf47923-b594-48e7-b448-b7f1f19816e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d938f79-8556-4807-86ae-251239fb0b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb72818f-6352-446c-9636-3739de4f6232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f945f5e4-a594-4313-a5f5-60e6925c0bf3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dce06f-f7c3-4aed-9256-9b3850784012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf7655f-7845-4e42-beab-8caf002e364d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146a397-e6f3-41b2-8f8c-b18177e25e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d430db-aa7c-4040-977f-0f82473d11dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e3166-dd00-4f20-a86c-1bb992dbff25",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34efb08-765c-4e33-a46a-a14addbc9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2ac621-651b-4fcd-93d0-f82296137df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfdc067-1a76-417f-8759-5241fd910edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9a28de-4399-413b-82f3-35e96b8a446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1534a98d-5b79-4bc0-8ef9-69c7b3a4b06c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cde71b-a7ea-46a4-a0af-dfdad479d0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4d58b8-e542-4ec4-b32f-667f3520eded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1659a70d-8913-43d6-966e-f555b2e10317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e885f6e-610c-4387-a7f7-f3e29713f73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aba221-e283-4ba4-95d7-84e84d923155",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ef128c-cc69-4efc-90c4-94a890c190f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f4a3db-e6b1-40ae-b7fb-f803c5cf3159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f543b43-2c18-4bef-b5e4-3c3567705711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a4cd6b-6926-40e0-9cc1-c656082d7f28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7bca1819-2d30-4dce-9c9c-4c189e8884a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94705424-4c8b-4442-906b-872e663ff229",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b056f0-7e1f-4763-a749-2a6b9f462073",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a46e2044-8c94-4d3c-b863-ef97234c24e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fce02b-e1b9-47b3-b481-a728169818d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a75460f-eb03-4582-bca3-0946554beb7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed30feb5-daec-4bc4-a306-3a7bd0c872ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f31949d4-b13c-48de-b285-a90cbb62dbcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b0f1cd-cd40-48b2-85cf-cd0a17e401ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71f72ee3-c628-4960-8aca-434bcbbb7ce0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c71970b-162d-4a90-b691-7cb687e1035f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0fc1ddb9-ed31-437c-a622-d75174f4eb33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "622f7c8c-5fa6-4cd6-adc1-37557417c484",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "248feba9-6b59-42b0-9753-eb3a6d09c5ca"
            }
          }
        ]
      },
      {
        "id": "401d968e-dc8d-4c0a-aebf-6fefe7b2bf2b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "872e082d-613b-40fd-8ee8-aa589e92c32c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35f2ded2-076e-41c8-b319-383c13163c32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "192b064c-16ce-4874-9d85-0b7132c5cb72",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cafb5f-b985-4f3d-b6f1-758569a49c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee3a4cc-bab1-452c-8e34-3a0d0acf06dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b816c2-d164-48f7-a2f3-3918fc856ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b4649f-80b2-4f12-a241-d0f312396816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29216e0-7167-418a-97de-197cc1076ee8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca908cc4-f999-4d8b-9890-b38eadbf30c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc62611a-5f46-4745-834e-435f3fdc4d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedc0504-8dd7-415e-b3a8-2de428eb2ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e5d98e-8900-4e50-b18f-61485f8c3a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc63fb2e-a5b3-49a3-b6d4-3d41cec69760",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0386c4f-5e74-4e25-b8a5-4c2177845c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc988af-b7f2-44a0-9183-6d77af53e2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f1b00f-84af-4dea-a605-1f6faacb08d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e75bba-9e0e-4739-9313-6e5a03e1c511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70256128-fc1a-4fb1-98ee-e36005e8cd6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fa6537-4406-4e8f-9ed1-afb96659f2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c3ee5a-6199-4a44-8a33-88f9c34fe6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3312fe-a511-4476-961f-bec988181003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f4567a-4bad-4e78-bd76-14802fa6a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331dc121-d77f-49cd-b5ac-3b1fb444ffa2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc59b41-2732-4d55-9ec8-d81b4e0f4f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070ec6c6-67c4-421d-a8c2-23368df452e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cc1716-9435-4eac-860a-5f5e103e5aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65329db1-d523-4c41-afaf-9c6b91f5eb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b52847-0254-4c2e-bdb5-d86ef3379b4e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed70acd-bb67-47ab-bfd5-bcb655d0289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1f1a81-f013-4990-9f25-e19109b9507b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a22ab5-4bf5-47bb-b2dd-37a059223c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a17e16-0c71-4b20-a110-f05937c9d110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a46f56-f8e7-4fe9-8567-20ec6757871e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a48814-39e4-4943-b7c0-9beb16ba3e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8142f7-1b2c-487a-bee1-4f665b68d42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb46be3-a3f1-4546-9b0f-cfc2827b35b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24e425a-f80c-4c41-9e0e-cc07e3f890c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db48525c-1060-4f7c-b02b-42d37a61de6e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ce5422-d7f5-4b1e-8e43-99f0f6aede90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8549473e-fe49-48f2-8de7-b3f5a0b5706e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b2989e-0c92-4254-b815-d26fca3a58ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cd37b9-5057-4a47-9bd9-7a340e6a29fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd07ad9b-752e-4a89-91a4-3d175ddaebbe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33770f65-2639-4288-9fda-a8430f45ae3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b157cb-ee22-469c-a21d-b44864afc9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c732dc-ab91-4ea6-9ba0-feed23320e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0726ebb-2e12-42fb-81d7-90ca386ee0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b7acd1-5407-4880-9a91-91376644fc83",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eed000c-8853-4676-ae13-ba6409864fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27bb580-6fcc-4fe2-8ad3-348849708ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942592b3-2a4d-467e-8bae-4c6de51b97f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09acb7c-b265-4f76-a0ca-6e42af56a962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5851ad09-49e1-414b-bd16-1d3ec62ac5ff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21828cc8-5fd1-488a-9c30-0fe8d095704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a626c7-f831-4b7b-b952-662f4d9a6064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d0abc2-b308-4ecf-83fa-c5ac06d9a6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d81cdd-948c-4336-83a7-b39daf85c014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d972ba9-9e3f-4b17-97f1-1dcbe9c6dba6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b989f9eb-5708-45de-b422-a31766335a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ad581d-2503-4e3f-a7b0-ff52a4f419d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf392033-df9c-4969-be92-6c2f5d6a7918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ad46e7-f895-443c-8629-86bfdd76870c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7cc022-0b22-4f8f-84b2-c561e22c9b10",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f798b-4408-46cc-9fc8-6a892bbdd54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b9d1d6-c290-4e42-b963-9defe8464c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294c6d9d-4236-4e28-b47f-d0f55e9f02bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad0b12b-43a7-4f39-a27a-981f033a3aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a683b9a3-7a01-4509-88d8-d90b20a96b3f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bc1b95-f739-4649-a655-e2010a9c534a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede19e63-6285-4269-83b2-0d8d37ca96c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5815654-f0d3-4d41-a453-d98d9a68bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f47f30-538e-49c5-8540-dda129d7a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637976e7-dd4a-422e-9031-b0b27f3bc72c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1c8057-296f-4126-9e56-4247f8323f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659cf6d3-3a65-48c8-9a34-254e238ee1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4156e3-483c-46ca-b63a-644d84990f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6ec5cd-d57f-44bf-8001-bd7804507242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87245e7a-31d0-476a-bc93-8c4c8ced0c1e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a0345b-1471-40cf-92a6-784d94bebffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d218041-e96a-48ba-ab32-3281d7ffdca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c1616e-5df5-4b57-9f9e-1759c75cad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c213dc-b145-4bdc-8208-06ecb5947ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8eb095-6b2d-4fc0-a4c5-7d86d6bcf072",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5adf561-e929-4d1f-8267-94f275b41e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb634d4-0bc3-4467-96ce-2c846fc6723f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d430abe-61c5-4ec8-9f88-8b7d52465b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c4af6c-6886-4046-b832-7b66ce7d1753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce247827-242f-4626-a669-6e33d1897901",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e996f16-2e05-42a6-9f3b-b6bc77ca786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c39904-6e4b-4e97-a075-017322fbd7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c661f3-b49b-471e-a8da-4f1406e9853b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a2508b-6f0f-4e51-b3e9-c1f70bceabd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2dd8ea-65e3-462b-872c-69bf8e69d248",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0b81b9-eb39-4010-9985-bb05160bc360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3d31f1-27a8-4c78-8581-b67488c13b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94657813-7adb-4d7e-86a6-9041e2125c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02b9751-8a43-4a50-a815-0e7b8f061b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c3d47-6488-4c47-ba89-657e8493d567",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d93b79-8c92-41ee-84f7-b69940e416ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d3ab3a-3880-4058-9707-01a81decc54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e56513d-752f-49ca-8468-f8c6abb55ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d286092e-4b49-46d2-917d-7025acdc9059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb944f12-9de1-43a4-927b-7f547315cf9f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adb81a0-966c-4b3b-8382-719f764b8221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78338b91-5d2b-4d9e-8243-a3c92f7e5a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e8f6ec-458d-4d66-9493-4882d5e5050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0e1e1d-2063-4fa7-844a-a7924163a16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7d6186-22e3-4451-a171-7dedb8202162",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b6688c-d1e0-4637-aaae-8293de6cac61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b725957c-a55f-4732-93d4-91f6a1c4c070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f507065b-cdd0-4e38-b288-630a69d3148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae45353c-f3ee-4256-9ce4-156f015161ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031a6df9-2bd1-4911-91da-99bb71e27a82",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92262ba-53af-4553-90ea-d488d8abad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599ddbdd-3ceb-45d7-a60e-98c7866eed8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cf3ff5-7286-4308-a14b-58338bd33cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "227217b1-3fcd-40c2-944b-183edc29b833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb25231a-b972-4bf8-b712-174a18b01dd2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65047250-d436-4ed0-ba3b-be743e8c4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b69145-9261-4884-96c1-5211ef78a4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e07f3b-f6fd-4564-9803-a2a0142c44d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbbd3ad-fa75-469e-ad86-1e2713eb0703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4345941-a7c3-4525-9eb2-450c18e6c5c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59567ad-935c-487a-8230-548321e86195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4e3525-8945-450d-9393-7328087de144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6edc840-53ce-408c-a204-b44565ee198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9967ff79-cf59-4879-9bb8-bacd699ed918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93b138d-606b-4e26-a009-14f15b8dfe9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa5b6a-2cd4-4268-b47c-c6df1b3d7443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0023889-12d7-4550-88cb-9a044f756064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8995b2-03dd-4fbd-aec6-7df608ae35e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d5c8bc-cdc4-4b3a-bcbd-6fdf47d9a9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478cfa6c-a6df-49be-ad42-3824c1489177",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbdb950-3b48-49ed-980b-fe3e75847c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40394c06-7e84-4cc4-9776-2d0d115040fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d360da-5e3f-4d70-930d-8728495dd4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ab4913-0742-40d9-b0d4-3940d4c9b5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85ba4bf-0fa1-470e-b30b-b4d607ad623b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faff2c2-f7e3-47c3-b97d-0db4a7e14052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c16fd13-505e-4831-b388-ca716db80ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7db77f1-3cd9-41c5-82c4-bfe2e9b7e990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbdcb5a-8177-4cc8-bce9-ec49d92f82dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdef117-f4ca-46a0-9651-3f83bc33bcdc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100adf6e-f5e9-491a-a4f6-b5930b2134fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e5d4d6-5221-4894-9659-293538362004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e78a204-201a-4d36-856f-311d0b5abb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0bd618-b1e4-4649-9203-ed9887b7ac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3c87a3-6399-4261-a40f-9ffe8c555ea8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb2dfbf-6cb6-4867-9d26-0328d3949644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31040ed7-aada-4b4c-9949-39036b1c4a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c12057-4e67-4643-8550-2faeda7e1f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e237cbe7-772f-427e-8d74-f6f6bc196cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4b8e94-d71f-49d1-b66a-844a222f6a03",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e086c1-fd45-41e2-a66a-d8f80bb1be72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3152363-f52f-4ce0-97a4-4569422828d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4491c37-aa47-40f4-81e1-405a85097814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a471b765-dcd0-4229-a3c1-6a713e51e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d56b41-1eac-4ab3-be8f-526ec19379a3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0314a6d-eb34-4061-9bbb-b6f5d00a6b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111ea7dc-6eba-4889-b58e-dffc151594af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8bff22-ddb4-4a50-a608-ed58392817ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57fed3ad-351a-4205-9512-b160c8508d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52479362-2aee-40fa-b18b-8a58f640aeef",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f474d7d7-554f-40b4-9a25-41a9a099accc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02842df5-2c7e-4a34-8a23-0b9895b0d609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a3ba72-82d9-4d53-9f5d-f684e80e6690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc8e44d-c200-48d8-b8ba-7e3f32415bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9bcb05-5125-44d0-818b-41cc4b7c91c4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a032c-940b-462c-a680-4f391b69e315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9237c04a-6214-40b7-a878-c161bda2a23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0429e29-e841-4f59-a6a4-4c00a459a53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd2b0b4-2623-4698-88b4-152715a2a976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c039ea-2445-44b3-bf78-27977ecb5f2a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdaff79-aa0e-4bb7-af82-19fdab636600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a05c9f-00ba-430c-b8fb-e9e2d8cd5d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2567b6a7-4053-4b41-a5bd-88b49fbb74de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "936cfeaf-ed5c-4089-ad14-8ee759952eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3b5a5f-6322-46b5-967c-4f5a03804db0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5232b9-fb14-4e48-a758-544f14f1531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0652c119-13c3-4d6b-ae5b-0c175ecdcffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dcdcdb-33ad-4054-8b9a-9a96c31caa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1125e108-f985-4533-b04a-e9251c62abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ada17a-9b88-4ac1-8d5c-dfdd02b15f0c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983003ad-8704-43d7-bb2f-1e7952d64be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76977e32-5aa5-40ed-a298-97de0b6d52c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f737fca-b0f9-483f-8df5-7a287a40bf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "837f2b2d-8006-4e5e-819a-338b756f3d74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31b1e3ff-46eb-43f3-9443-192deba1042b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a7363f1-1d83-4056-8d4c-304cbd806ac6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8467b629-03bf-48f1-800a-c024c9358a61",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "593bd9f0-bb02-4735-a85d-1365f33c8d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34bf1f7-83c4-4329-a40e-4bb63e5123c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77df91f3-143e-4474-bfc4-aa75ea095128"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42638dca-dc82-457c-b0cd-fe5b35e47b2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef8db38c-1c30-4a1f-ad03-abfd8df2288a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b4dcbe4-d9d6-44db-b57b-9743e650951a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "228453d0-2063-4af7-bf35-5251f748f1c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5308a9f6-2c46-470e-86cc-fe596e73cb1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a33a98cf-0bb5-4071-9165-6bae197b718c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "360a7b8a-b984-4879-8e83-b21d9e77fa4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8851ad09-d602-43ed-b95e-41f2d47d4f17"
            }
          }
        ]
      },
      {
        "id": "069e9735-8a0e-4fce-950d-902d0e104419",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5b0987ba-5b01-4a62-811f-de68ab172fe3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "446abe20-fc0c-42b7-94fc-35992a814dc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "590ccb45-e537-4d7b-991e-a1041a5a73d0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35eb926-6b20-477d-851a-e334f8db2948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bd4b79-33bd-4d29-a75f-6f1c8288af43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ecade9-4613-4809-be18-6b94fff39c65",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2801698-33dd-42d6-9c6e-65af69bf4a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fa0881-d318-496d-9fc5-fe59985a751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d75641-6440-49f5-a26a-1816c6ede08e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642a0ada-bedf-459a-997f-81410784216c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb56f4f9-f8dd-45bf-a079-33870930e142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a26f9c-eab4-4b86-b317-43e80a271398",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e979ba3e-9c49-4eac-a228-c55a5876a73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489b208f-e208-4bd2-97c4-9b193ef33791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608bfda8-c47e-487f-ac0b-f468609803b2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee3ee4a-6f6e-46cd-9f5d-33676cf6bbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03f58ea-9cb0-447a-8722-cd53e54b8055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88529796-44e9-46ba-81ec-badc180ad2bc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd52167-5750-4283-b075-24e9f123d73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d381177-c22f-4d5d-93b4-2c19ac2b96e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc195d01-61d2-4c04-a6ce-0c6805135111",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9f6b95-0b6a-463c-afc9-6d2033e55dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38339d05-8d56-4a94-ab9a-4831d2abdfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d967ff-1df8-44d7-8891-0b3e3f91dc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0233775-d4ae-49eb-8c4f-0621d2e29b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d0da59-e6c4-43ef-bb7b-ba4eb8de2412",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c70a3d2-3396-47ac-a2f9-86663be70c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3443a51-2339-4dbe-a56c-c65ca474ef0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be833bc1-ff54-4189-96fb-05a27dbacb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8facbd2d-448d-44e8-a3d7-1005519cadd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28516abf-4bb9-4120-9888-b2a3ec4ae6f3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6e922e-67b8-497c-9577-9a5c7b6a7e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b27de7-e0dd-4a3e-9b1f-2f13dcdd4e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38af8e1e-6d04-43e7-a8d1-9d966d241cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8f1415-56b2-4a71-aff2-ca43e65274fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fce9e35-ebb4-4f57-8b01-8489e4318196",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66fb2a2-1db6-41c8-b7ae-59c78da606a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b926a2-d32e-4be2-882c-181b192a72e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b62958-b04b-4d54-99ce-3e3859ad96ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72b875b-64a7-4601-ba6d-53fdd7238f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d99e0b8-3f44-444f-aec3-e0625c56752c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f3e1c2-e4ce-49d7-ab00-3910e6d66ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790b74db-6ac2-413d-bcef-0901d5eb03bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ed0d3-b51d-4809-b42f-d9f9483030d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c51dfba-521d-42c7-b77f-ed1358ce2ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f25e15-53cb-4e70-9496-51e48e47b4df",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0660d4f1-8d44-4463-b3b2-ad57d2e2e2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55d176f-31ef-40ea-9c22-1ba4ac05db8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef48ab5-6397-4555-a2e9-003fd3d4e643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f58482-00ab-4c86-a3dc-2032a7877f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03db0598-2735-4cbf-88ff-7e87ce9259e1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30c5633-1684-4b7e-925c-90c29bbbae0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec8fd3e9-fb19-41c9-9ce8-19fee005957a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9105531-0229-4dfa-ae3a-e35503320529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db5b555-5fb7-4b38-a631-ba02171ec02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85de175-66c9-4078-9678-35372ff05e7e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badf28b7-5f95-46bd-bc78-64b2c4b18f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057d3b81-787a-4d5c-92e7-2472f5c00d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff470f7a-6991-4522-aec6-c36f3a5cf44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2b2b90-6407-4805-ab7a-5dd6bd943616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a060322-11d1-4842-bf19-a84d6e7a1a45",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fac180f-17db-401a-a9a7-00d70e81d17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad94add-8e5a-4206-9931-b42533b9db09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b539bebb-47a1-4e42-ac14-8d0273e2832e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d41ede-59b6-4ac1-8722-eef732a835f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6ee0ef-3805-4d3c-b281-4a1800112154",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64335323-1c3e-470c-afc9-25ee795a6d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e04882-973a-4b28-9e2d-c967d722c733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad1f058-ca84-41e4-b08d-c12fcaa4d723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b3e43c-a0e1-4898-a5b8-420959d0a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b314951-1147-4191-b238-afaa6f681631",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e946bfc-0cc1-4e30-8216-f150e1670a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3e15ce-e4c8-44b4-bac1-6bbdb9ed05e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83c9eb6-96b0-42d3-a05e-5ae87bae1cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fb6966-6d25-450f-95c3-83abc3bd5bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382aae4-ff6f-49f2-a80e-f3377f24bf85",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca8b8c4-b3dc-4d7b-88db-bbaec9d5801a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c028b4ce-cbcb-4122-8c45-b06c88cb03cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8b19d7-d34e-4e32-bee0-be9e1ecad1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb2781-dec0-434d-badb-561d4c60136e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030991fd-9512-4190-8cb6-baba9d368ead",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebd0500-dfe6-4835-9d2a-929988404d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634c511a-b2ce-4c13-9665-f8ac21aca7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7e2d2-bef4-45ce-b41b-bf81d1b0984f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7976c6f-d899-44de-8d95-e21bbc09eb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03631b6-c13b-4cd4-9dc8-6e8451bd9b08",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6074b5be-21a3-497e-99e8-6b43091491b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0481b2-df4a-4858-ba79-1ca36a4d504b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a799d10-92dc-4a67-b6f6-4db3c5988c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa56e9f-2c10-4fc1-869c-1485b7196a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3860fda7-9040-4aac-9cbf-35f01c8a4d5b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa985f8c-05bf-4281-930b-3b7afee9c921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9695bd-7ce4-45ac-85c5-8323bd39ebca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38b0fb7-ced6-48d7-b919-29abcff361a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16552c3-b93f-48b7-ac29-263e25c9a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e986ac-c505-4095-939e-0a731b59786f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef760a27-8a91-42be-bdbb-bbc61b37948e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f0dbfc-a935-4fb1-a51f-a8d34c7a3564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5bc6d0-bdc1-4b09-a737-85d12f77a603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec15d95-8f8b-4735-a97f-dd12324570d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed34d45-75d6-43af-b253-64cfb496fe0e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce33a93-482c-4304-93ef-6aba5d1430bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8233319-6572-49f5-845d-ddbcb02f512b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1b323d-aa28-4526-bb9a-4b397ba6841a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75987e3b-d649-4e33-adbe-61aa945b4e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f70cf4-49b2-4fb6-ab38-7074057549b3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ead316-99da-494b-a4a3-92f7647943dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6848bf90-d19d-4816-a90c-dea79363fde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e457a24-57f4-4e14-ba7f-724279ace825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaab994-9d5e-41b4-a68f-ba31e553da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3000b7a7-fa10-4c47-b144-57d61dfee12a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2855de8a-2982-4652-9761-48ac9b025ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1bcf6a-b0f7-4a06-8f22-205e927dafad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f605e56f-d118-48bf-a649-f33dcdb8e2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4058dac-5800-4dd5-bd21-8bbb4d76d49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f635f-b24f-42bb-b0ea-402889d7ee29",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f491d4e-5cf4-4b6a-93d2-232edfd88335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a7bb14-4d06-454a-8227-c6af16fd2747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be942947-bf8c-4164-94ec-36555cb75591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baa550a-e5b6-4278-bc40-5bca429f54f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b702075-3a52-4bbf-9eac-835a7bfd3495",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb1f8d2-e532-451a-b04c-ecafa08d86dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11326c39-a43e-4941-ba1b-9b1130b57f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ce7778-8b7b-4215-af4f-392213860639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d0eb6e-1b77-4638-9f93-ba24b7f42140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106cfdf1-fa7c-49ec-ad02-d7be3b7d0b8d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf3217c-84b9-4fbb-812a-9f37b1d051be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58fc215-894e-4c55-8d1b-2f5be5a33211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d2bca6-44fe-49ea-9991-c252f1c72017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0d6357-951b-4c75-b7c4-898422f67e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148aa75b-d4ef-41bf-8d97-780bb7acb9b5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffada816-d2af-4f09-9ab3-768b300e2a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5b187f-6314-4696-a3f8-3d91a1d5f98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed02efb-aaaa-447f-a029-127b49a9e5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24f6052-8771-4fe9-89bd-1e8aa634e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87fe2c6-ac11-4b69-a9f5-ece06b0f412b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93cd326-32e3-4545-af87-9afa22b86577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82cd70c-f224-45cb-a4bf-6376fbafe898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3ae4b1-2fca-480b-9d04-9bd3eec719b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75379af-8e32-4c97-ba04-8c83013eac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b279df-f9cd-4ad7-ae47-3da13d06a28e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5327a070-c0e4-4a20-b937-0344bf5d55d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe49a59-c9ec-4133-ac69-784a4aad5416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e58e2f-5a14-4d21-9f35-55c39f760674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c1b9ce-a8f5-457c-984c-432459a4721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59602be-39b9-47f1-9c56-a34f9db9d945",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfd9f9b-7694-4d10-8a34-067cfea2b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a4a658-c519-40a0-abc5-c8ada8f390b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfa92e9-13fc-4946-9579-2abc36bfa91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7337e0f9-470e-4ec3-a773-ef7916c4fd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d48a18c-3382-4c2f-bbb0-8a1350e50d02",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5308d4b1-7a18-4ac3-8d84-417a795f9156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0801c68a-0d42-4186-985b-d27342a4e500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaaa65e-f7ab-4c3d-bb31-5bab6b68532f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d69061-0eea-4125-a48d-a6be26dc381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89843bab-e191-4886-9474-04b47128d18a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43890078-ecfa-4fa6-a42c-5d88fb36904d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c09cac2-950f-4b91-a743-b4de419463d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a805ed-30d5-4ade-a768-7f1b2c520cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46ece25-2d54-478b-9209-a34c08423cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ee3a0b-ac1c-413b-870d-d94203dc3631",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab981b3e-06e7-4ea8-99a4-226d586a4288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b313f2-3143-4b6c-86c8-e9edab15fe5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f619f8b-62fb-4c08-bcd1-42642129cbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490fffea-bd7c-4d86-8041-8c2ee10de416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef2ad6c-9121-442b-8b56-e45f7a237f52",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e610ff6-6e8a-4276-8a9f-a271fb571cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5a670a-608b-42db-b556-09fb92564dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a877217e-8b78-4069-bac3-9fd41d96dbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcb7050-0e32-49d0-a894-a8ae92aac61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df030926-8fb1-41fa-b741-347ccacec38d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699668ce-50b7-4af2-a9e8-5c79324029da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b918f0e-050a-4f35-9a7a-f3d4bc0d0705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55c8c5a-7ce3-48c5-b839-1486f944620f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c516859f-5ba5-4b81-a3f5-f8cd67f5ff6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c21913-fd64-40f2-b830-c43b9e2cd4f4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208dc813-b4c8-4ad5-b171-a8c44ccf6d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87011fa1-f11e-41e7-a707-c27317de4a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb88553e-71ef-43e2-a3c8-a1793f2ff4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cfea35-1e5f-4b9d-9065-a03534d8766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cce42bb-0359-41e7-91ed-89a04ca043fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705b18be-15c6-4246-9ade-8b842b6a373d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9d52ab-b218-449d-b1fb-ff108ffaa8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80d481-5b6b-4dac-964d-25770957cf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f624af1-4846-4922-8788-10078549c09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d62a8f-29e1-4268-a88e-fe991c032ed5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a83a68-7399-4e51-a321-513fabc2c313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4605ce91-ad0f-4212-9011-217c9afcfd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeffb635-6810-4a70-9043-2d4bdd3946bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1261c7-63bc-4947-8da1-456c2a87c21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd63ded-e2ad-4c7f-9342-5d11ee7a07a0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06e5f10-36b4-4221-a648-cf0ef442348f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a6d1cc-f603-49cc-ae87-3de74ae15d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c44ca35-7b1d-4d5a-b40c-70f48650881f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e47743-ba6a-4b2a-beb0-4892356f2a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c871eb2e-822d-485f-a670-3047e536df76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ead5d8-4e76-4b81-b18d-3932e0992d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9df23e-0fd6-48fb-b810-7f28580aacd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f07775-586b-469f-9125-0d9e12c49a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4136dd-d133-4b53-9107-f29bb9b1be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03355c02-d1d2-4493-b66c-ee49df0f8f7c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0dcbf-f381-4d3e-9b14-2598e1ca62ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49af1b0e-aa56-42dd-bec9-586638c832c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad8fbf4-d473-46b5-81ae-63726491adfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ee6701-9508-4cd8-b275-3cccadb59d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28280ba6-b0ab-4bc9-9936-fa0801e95c63",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b646367-9625-4aa3-ae77-73d685cdc678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b40d29-26e1-4712-9ae0-6e4e3f0fcd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158a0ec6-2e99-46cd-a117-c1c3ba4a796a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375c1a92-499e-47ac-b2c9-16ad466581e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dd8ca5-4bbc-471e-9851-08711e627588",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d0d1c3-83ee-4839-a6d8-d2ea87e93476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7eb3a0-d8e0-4752-8329-797033ee739a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76429942-f40f-4f9f-811e-0123df74b1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98b211f-be7f-4566-a2d8-36fcd8bd0190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcc3065-7d0e-4238-a1e1-6fbcbcda0e75",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd35e3c-dfae-4105-be46-05e63a50a02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87594121-ed38-4d94-9fc5-3473c11cbf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b85116-6586-4ef7-8145-12464af59a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b3f9fc-b807-4420-8165-7666ba2d953f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b137120-7999-4785-8a6c-b2ae54dbf15d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef1a91f-a02a-4af6-adfc-236b58fbff32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3057e4-34e9-45ee-9a77-73f5ed3dc490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5050694-23ab-4e5b-8055-78d73e39874f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860b9629-34de-4b08-a0de-a128b4b5a645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b40f17-4f38-4304-9bcb-b34520140310",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f12825-67a6-45ab-aeec-c66941236969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dc1acb-4dcf-462e-b646-e795a56d86dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5318b73-ca31-4ae6-a577-0c1f0bc29043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bcf07e-2e35-4501-9673-25f12580e6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9aa51-5fd8-4f19-aa48-9f7dad93c222",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8ddab5-f2b1-4620-98d7-224487028fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfee19cc-a9d1-476d-83e2-e803fc2be960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc77a14b-3288-4d17-81cf-f8691c53655d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f135b4-c09b-4ba7-8474-f82616138c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffa97b5-6760-4ffa-bb8b-4d0088c5570c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bd9862-994d-4987-9c73-642f6eb3b3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6812f6e-481e-47cf-92e1-6bd42040f7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb26111-8c1f-40bd-8f36-4de0dd8123fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47f27c2-df0f-4a1d-afed-127f902291b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebe0ab7-c4d2-4dc9-94ff-cdf611c6bdb8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e674b54-b853-4395-b450-c94ef8f51494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976706e7-8c4b-42cb-88bc-8494795cd5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872d6ec4-c300-458b-b09f-62f4294e510e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3a3bd0-874e-4123-ac03-4e8729bb2581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345e3c87-38ec-4a17-ba77-5792ef5ce8bd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96adc464-31d0-4372-a2e8-62ab7df8321f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbfb1a4-2848-4214-9cc3-4f22e268b750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f7cb90-883b-47f2-b90f-9b1b9f437d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e62c16-6085-4c89-baee-14c4be4b4156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1d9472-fa6b-4182-88f8-3f2623ce2a8d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8419c5-068b-4fae-866f-d940ff422298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c5a623-f07d-4d36-9b6c-7ec4d62d1b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ec409-5f3f-4a10-b8ee-cc91f5665773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d60ab5a-5df2-4fcd-b1b0-bf01259bfe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1368a86-004d-440b-a694-9673ebae54a3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae94516d-1306-4d82-a060-f3ebf4476325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ff94b9-198f-4f2f-b878-fd7891d08d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba335f0-3478-4c95-94f6-c25caaf98f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72896ac0-3cdf-4a50-ba62-11da1a3f6dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d50744-dd25-4998-a917-05cd74694441",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50f5c7c-6b5e-4d6a-af85-8b0966a4b728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd540a3-2557-4ccd-85f5-5adf303c801a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15f5c31-c2ed-4504-b6e4-18f99c220c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f65ea44-1436-42f0-980e-8bff4e6d7c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6da3aea-12f8-4bba-8d06-0667f4e20208",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e60def-e501-4361-90ae-152ebbaeb5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d329ef-ef25-4d39-a985-af6cfd8a0ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9120aa-a8f7-4a93-89f3-59f7f548288a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7f7904-c325-4dc0-8a37-a10d7eb65b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663601c5-9bca-469a-ad02-af551911930b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b342f5f4-831a-4853-983c-88353726ba5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2e5d5d-10e5-403e-a81e-2cb3023f5092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e4fed6-2fd2-4353-87a0-fdcfb0ddfa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27f2974-f50d-4966-b669-d86b0edd92f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31863fde-9847-4385-8e2f-d682fbd459e6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93170325-090a-499a-8cc6-43f550c5c2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d777507a-71ab-47a4-bd1d-26693d60397c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2cb000-ae58-4961-8c04-e5ba10bc2a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ddb4c9-6010-4665-afa7-0052c5544c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25fe2aa-2f8a-4456-bab0-19a96a7cb0e8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34929787-5439-45b9-be4b-2b1a7f8bad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c133cd10-d766-4e76-b5aa-a8bb02a83975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5be601-72e4-4919-a524-a9d67c205048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e43e78-7799-4013-82b0-705829442cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e90b00a-b077-4cd6-a1bf-5a60adb004a4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eef2f3-5f83-455c-bae3-fe9d2225eb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734ebc4c-8f18-4724-a884-1ac98c869feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22731eb6-05bf-47f1-8997-65e56d9e3af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0630f4b-bfc6-499a-8605-017db04ec8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f719582-fdfb-406e-95ca-32b3adf15843",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20dd4ea-6749-4707-8635-ad2dfb17bfab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88530272-c960-4799-89e1-f06bd16f8000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a102ba79-457e-444d-a524-63d0f716b481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0a28e1-2c71-4322-a129-2066abe2d294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd6d36b-d033-4321-a1bf-6318a69cee22",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb445a06-64a0-41b7-ba89-275377921b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b2a17f-441f-452e-9edf-3d5df8182543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ac5c04-8b10-4871-baf8-4c1bcdb6d88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd23bb8-bd71-4e73-ba84-99fcc37f7211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168612d7-5de5-4d74-957f-5ec766faa87a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc7b46-94b9-475f-93e8-b75bd49350da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd770ff-768d-400b-827f-45f904335865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba99813-d81c-49a8-831d-aef0922d11f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426b3e9e-1ac2-4105-9dce-0d5c9ba92b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e033909-ee5e-40b4-a1c6-98a80a9f99ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b7b739-a772-4cd6-a2b7-80863bd0f917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe9fa5d7-a064-4160-bb35-0f81f31b0adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3119d719-b4f8-47e8-8e83-c6f6205c598c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f080630-7728-4ea8-8873-21e6b560e3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e767767-f51c-4f53-a1f3-f3e9e24e1e08",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856c4901-6142-4434-bff7-c20395ae959f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3af3d9-f08e-4ea5-a8f1-e36906d173b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40940de4-a984-4785-bbb8-a01673854ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1affc29-d1a9-49bf-83ae-627963f234b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f296982-6224-4dc6-ab6d-a97a12587ae6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e1b47b-bcb0-41cd-9b28-bbbf36091221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d33a672-f9b2-4343-99df-75ec01cead6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c08b70-7701-446a-97e9-58c10f2d62d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008afde0-1c05-4ce3-ad5e-311d7a0d631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8adbd-9c91-4781-ac54-ea84c3ab0634",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0ff7cd-722a-49c6-8d74-d0eefb9c611e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85624dc-8fcf-4ec6-9806-80d654e746e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3621f1-03c4-4701-a1a3-ae85fce3a9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad267af2-ff60-4482-bc42-517a85d59fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34801beb-331b-4a79-b0af-667eeb1ec475",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e095d311-845a-43fd-9955-e827b794602a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3df8e3-51b6-46ab-b0da-d6412ed43382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df12d90c-7463-4087-8cb5-426a9eabf5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b65c488-18ba-49d0-a37d-26d2f34144e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7d6ff7-c698-4c47-9d77-090027d162df",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36573c70-7585-4f78-a16a-141317ce7934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d6bfc4-cb45-48c7-82a6-a9efa3b9beca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbcd1c9-2f0f-414d-813b-f6af45fb4d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6475f475-7203-4d75-8dbf-7ffb7a54b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038d5b7d-13ab-41b5-9344-0ecbce8d6c08",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fbc919-069d-4434-86de-a7d5074de8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6574315-a1ef-428f-b9af-a5689e62588f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4299be05-f397-4035-aa55-1de92df18a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51fb3b3-68a8-4733-adf0-9e145a7f42e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e1b6b9-397b-47aa-ab5a-88b66b052ede",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9401a73a-0b2b-42a6-a14d-3d403490bcda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070d3573-b0ad-44dd-8000-850b5e6c2034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ed8ac2-e457-4a9e-89a8-8af91c1dcb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cab6134-69b0-40fe-96ec-4a68cd76de41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1a82bb-e0c6-4250-bbfa-b556ed1ac6d7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04150143-b306-4d53-8bd5-76392b9455a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d46dfa2-3756-47b7-8bef-d8dcbcc39ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db7bf9c-afb0-4aa0-a9dc-ec28d42b008b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6002fa8d-4fa9-4dbc-8d3b-1819737a4e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbc7f67-6b8c-4b0f-93a6-45e94622b1d8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a238692-2859-4a01-9eb7-da6290640b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8427c13-e951-4cb0-80f1-d389b444c195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9797659e-4c46-40c6-a467-8a4b49cda0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3285edef-3b23-4d32-8f09-dc75df66eb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b20001-b2c5-4f0d-a6b1-142ab58a69db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3dda93-bbed-4b70-9eae-6d55066aa4c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8caff6ef-8478-4bbc-864f-d9466d310da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a93c21-5c2c-4e47-9302-e11811a3845c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4908345c-66fa-4c6b-b484-13ab2c44318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f289699a-c8d6-4ab9-9613-2b9e9a12e74c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b662de-1e3a-4609-8a43-30f230ac0575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c09f86-02fb-40a7-9009-cd0a306f493d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b57024-a0d8-41f7-af96-55d4bfe5b4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ba46c8-d382-45d0-8ea8-e0490e584730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b186d1a-4a8e-4bab-a4f4-435d3785a008",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453fbac9-c16a-4aac-b2a2-bc306ca3ec74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a5af06-9389-4ded-bfb1-3a79a5783c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c525eec1-a920-41f9-aaa8-326b9ea46f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87def926-7220-4346-8b93-0e7aa59b49ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89812520-4d7b-4a99-8b2e-eaca58ac05fb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef28241-5906-4f87-afee-7ae245599c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2c17e9-6ce7-4616-9d2a-35250e7686ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae888c-90ea-4d7c-bb27-52ef0397f763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f098ac-c282-4666-891f-f0d1b4cf0746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fb99c4-6263-4d2f-8ab3-e6a25808967b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00fafce-f8b5-4479-9216-6054bf77c7be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e8cb975-e1c7-4e14-a3bc-4352319f57ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d20ccc4-fc0e-476b-9df2-bc5158c32bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee63c842-f752-4195-93e1-02d23a865eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc552873-2f38-4c34-9914-dd76ea2c4040",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916d0ac1-d7e6-4edf-9e6a-dedd4a84ce44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b1901b-c10a-4ffc-be73-2122be8a84fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69e18be-daa6-48cf-b68a-5ff6f0c4218b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3eacc15-add5-44c8-8d06-1862ed02639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca333330-f05e-4774-bbc5-f9b2c2e72c54",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8f498e-07d5-4ee6-93cf-68199247aa63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1816b0-3689-4086-9410-bb7551de4b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee527f06-d626-472c-8f96-11971107708d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2475cf82-e6af-4c02-b320-8d5ac170ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f41554-9709-4d04-a567-1308520f77ea",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0abd35-9441-471a-843e-8e3a34eb6fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dcc6db2-1939-44c9-9b93-3e96f32b279b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15a7b78-6391-4729-8676-081e9e684c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9a7a11-91c0-44cf-ba76-766e2e801e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7667401e-49d6-4212-b571-063d52bb2993",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5782bc11-984d-4fea-ab7a-75e3f934c8e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074e49be-e365-4332-b351-bfa3698b1f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bd0c7d-8ab7-4692-99b7-641f8ad29952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352abaa4-cf4e-4131-a60b-fa2150d6e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a6edd0-63d8-4a61-967a-dc5e2806340f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865b666d-deae-4079-ae23-746a0507a0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307224c8-f5d6-46dc-b623-11852093b14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff949eb-8764-4835-8378-2f45152fb092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e362b4-c5a5-402f-b7d5-d7049d58691f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0a6ad7-e697-4d9c-b51e-2c7f1dd0aa69",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78700217-03c9-4f50-b522-1f6337318e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86593977-7e3a-4713-932d-524e92a3233c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db58073-8a82-407f-a43d-7c8c23a5391f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2486a53c-771b-4537-bd03-c27a8baee127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf553b3b-ea6f-4a91-addd-4f07cde4efb0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ebbd74-cf85-4ae9-bf8e-c7bfc835050a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddcb2164-c6ad-4ec4-8c60-c351ba023588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7286e176-f0fc-49d5-ba41-d171afc82c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8119c404-b651-4b10-9654-c76248789e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa41de-840b-4a5a-809a-53f604195be7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a761c6a5-48bf-46e1-8075-0af5dedd3241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77de295a-35a1-4c8b-aea5-df056f02270a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daee340-6a48-445c-81ce-c4d9fd6eabce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b6512f-f9e3-4a8c-87c8-6e03e53dee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef16c69-eabb-474e-b4cb-f336608cf7fa",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e01b721-d724-4ff0-bbc0-bbe1f4eb0c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a39cc8-c13d-46fe-bcbc-83a6378bfce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04528d93-ba40-40ea-8e4f-8ec5e29bfcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49405a0c-3b01-4224-b0ca-26c4b2efeb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1858bb5b-d687-48dd-98ae-9825126e5265",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b21266e-6e5b-441b-a44a-a24c2f66afa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1c92369-0098-43a6-9897-41d55d82d957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9798b736-1c9e-4136-ae33-2606e7444bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d49054e-919f-4f2a-af65-20b37d0da68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b98847-c647-4f64-a6cd-81bd1bf129b2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed476b38-845f-4aab-81c8-6b09ef84a4aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea61975a-7389-4e83-badc-e07e1bf359b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4211e3-368a-4fca-82bb-4c72c7a6d3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdfa8b3-ed6c-4673-a46f-b47036869850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b2e216-14d3-4223-ab7c-bc22185e57d1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12926cf-48f9-49ee-b072-27e0e0fe9f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e4e0c5-a9fc-4e1a-9751-fd49acb9f2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b2eab6-dea9-4d04-ba2c-55869cec600e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7b7585-6214-4fb3-8333-a3a859a14f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3a1c92-8dc3-4ced-ad9e-4bdd06c7909c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c442e62-0afe-47c4-87ab-46eb5b1d5ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463ba5cb-b741-4a46-a9c7-5f77e5eac46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26677291-e7ad-4ce1-877e-fdbc87b51661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436d6b58-3a82-49e4-b02f-a9d76c72a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc363b50-86e4-48ad-b28d-a5a4f2e257be",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b740b532-e05d-49bd-b4f9-8b4197452376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273f7e47-934a-46fc-a206-a6d1f8cb561f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bb634e-bda7-448a-9c73-e3788005b27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb159f0c-3bd2-451c-bf09-baed555c4a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9432cf0-62cf-4d76-8a16-0159e6d02e16",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f15cf-1d84-4ccd-84db-63a4d4a18518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c737ae74-e9db-42de-8bc6-421ad11d5bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61538575-90e3-4ef1-a78e-285fabca4bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887480e0-3b9f-4ea3-b7c8-9fc52a175748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3847a1-b97d-4901-9a2b-07f240502ef6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca1bb30-e865-4a9b-a97e-eb75c7ba1794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a4d119-69db-4bf7-aea8-ff273c5af136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fb6bbb-827a-49e5-8542-fe6f73dac6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4076b4ad-4c8c-4035-b0a8-94f421c91d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d97893-3ea1-4119-80c9-1b25426a2984",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec843ddc-2a6a-42f9-922c-6141b1596eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a1404e-5849-4639-a3d6-3913144a4d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8021cc4b-2ee7-47e8-a8d5-dae8fd4a05f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55406528-6a4b-42ac-9049-e0ba9942f54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a4b919-4188-4c33-837a-5d2e57a30473",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a2600e-5304-4a1f-bc3e-fb06d944fe20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c918a39-4cc0-4da8-b247-f1021d288080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683eae04-a2f5-4042-98a2-e80526a54ace",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf073c83-8f5d-4039-871a-5f9c6ffb0f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3193a3f6-8895-44ec-96f1-9d803d788a75",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1491bfa9-8b09-4fb3-bca2-216b7536789d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfda9333-3a9d-4f9d-ab46-90c9d3506b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b33bddd-1cb8-4c99-bdd9-78a878dc7262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a756a195-a670-4811-9883-4d6b609848cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3fed943-f8cc-4641-884b-0035b6f7047c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdf9a0c5-92cd-4720-8a2c-2e3f653ef586"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "643845b0-934f-44b3-b8e2-15e784c3f106",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e534a674-ae36-4314-aaab-21d5e864888f"
                    }
                  }
                ]
              },
              {
                "id": "55194f5e-eb4e-42cb-992b-a567743d67f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "583cc0c6-8580-4288-9763-77572def224f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b40b69-078b-4200-a111-ff0dad50c14c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "95f4375b-5719-484a-8a06-5b6953c2e481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eebbd7e-1901-4241-94a1-d5ecb7283ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1471892-9609-44ab-9b9f-137253cbfa50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fabd344-b4f2-4d52-b903-36b0008cf8bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afd00481-c236-4455-b832-a4f8cc2872ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c856e9c-f2cb-4b62-a6d2-1fc3e46eeafe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b825d350-3e4a-42a8-8726-98151389e4ae"
                    }
                  }
                ]
              },
              {
                "id": "056b2bd4-46cd-4821-bee8-2512ce7de0a8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f59f7654-68a5-4b2c-b94d-da45738e1b7e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757d8eb6-c162-4e13-83f9-0dca1ac18ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ef44c350-e6b9-4c1b-93d8-18f7813ec276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da46692a-c72d-4836-9344-e091cca5ee22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a32d30-b00f-4c88-9e10-de0ea22ab2a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6be16d1-3af1-4aed-a9a5-b7b89a2574e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39c9c31d-6e30-403a-99af-13941ca2050f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b72ed57-f75f-4683-adfd-5cd4f68c6b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ab3d175-e897-4eb0-af53-ad1566305b1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdccbebe-0a97-4ec5-8064-2cb68a76ac4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a73c86f-22da-4dc0-a270-3bbb40830bc1"
                    }
                  }
                ]
              },
              {
                "id": "1e9b5a95-72df-41ea-82a9-764945926751",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d95ad05d-01f1-4e77-9909-2fe9b5b8dba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0820aa5-a328-4e5a-b389-510dda897cba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ee6d4e5-3dfc-4c09-87c0-6d1f12fd9689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3dfd746-3155-4331-b74c-2bede162e1ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "511879c5-2230-4344-8e94-2b54af16e522",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "60d30b14-57fb-42bc-9e54-8384e332a694"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4fb84da-92d0-4bb5-9de2-fb3ab6799782",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e32720d-ef1e-44a6-b0ee-9db39d02a902"
            }
          }
        ]
      },
      {
        "id": "b2f0a239-5d6a-4dc1-acbf-18cad482cf74",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c9992d0b-1c32-4f2e-88d7-da4d16cf1da5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f082d58-333d-4ecd-9ec4-58615644cc1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65a620ef-c5a3-4982-a83b-cf8253734bf1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3f3899-ffff-48d0-8bde-6cd59e7d307a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a396a5cc-f9d3-4853-ba45-f4d0f11734f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2520e250-cd45-4d63-9bbb-6b35dd05f33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02ff223e-9d6f-4f7c-841f-4e9c34d054b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1698c68-e3e8-4dd1-9a18-821782dbbaa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eaa5539-0ba7-4877-bb24-ad3eb3139561"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0be240e8-7380-4d25-be73-3940b7f04d7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97188835-bb2b-410b-863d-9b5a35126f80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d48ad922-f296-4a8b-b6de-4a1b10802dd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1741c3b2-3d73-4cbb-b7f0-ad2af6c8b71c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8238b27-5d81-46c6-869e-0621b2e99fb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f8ef06c-797a-4c33-9b2d-2de613aca27b"
            }
          }
        ]
      },
      {
        "id": "417a7ef1-7cde-4652-8bc0-c620a7e1b253",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d0189abc-a0a1-4271-99aa-61f740b41e1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dbabd45-c5e0-4b7d-8b58-d0c4daeffcf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "351c53ca-e583-44f4-85d2-b1f2f36702e9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df67993-6abf-43b3-9dd0-0b50ff45f689",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51844aea-6176-498f-b304-afbbe6ed7483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487ee4a9-ce27-490a-a1cb-bee2a3babeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5658de1a-cde2-4cec-9cc8-10a54745a084"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41dededd-77b1-4450-be7a-8091fc588cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ab1bf15-f0f8-4a87-8ac5-fb5f1ad2b912"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c11fb73e-f8db-43d1-8ff3-405d35fa2873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b7d58a9-756f-41ac-a26a-9c2305fde2ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6222a2e9-f4ca-475f-bec4-45637dddaec2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25e37e39-ea1c-4546-9a88-185cc15f81ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48d1dfbc-56db-4e44-bd49-cbe2b1493e39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "684ee646-b427-462a-aa0e-794a4ca4a7e7"
            }
          }
        ]
      },
      {
        "id": "ce694260-7167-44e0-8752-25b5c339c87f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fbed8e3b-56dc-4b39-9173-7e91ec18e163",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a50c8f68-74d8-419b-80a5-1d05d61489d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18d2b843-f7af-4238-91c4-a6bde3ee51f5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d02b54a-306e-4bef-bdc6-20a908882c82",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee9160c0-65d2-4598-a7b9-65323ff73833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7197f0b-7849-4bb5-9ef1-05e02d46f7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50bd1df4-23be-4811-afa3-1b65fef14237"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c5177ca-237f-42c3-a146-ea52862826b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18191c3d-1f30-45dc-8bae-7d5095f8cb07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94fe5053-ac6d-47db-a817-8bf90508c155",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cd3aef8-7f4a-4e22-9d15-b8dae0d99835"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "247c59af-62ef-44e3-897b-33bd550e74b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b59c8a49-d594-4504-aa5b-95f13f094df1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fe0f6a7-3123-4392-a193-3ad188f5edb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa0e9c27-7165-4583-964b-02a0ccac27ff"
            }
          }
        ]
      },
      {
        "id": "e7126863-c4ae-40d5-9453-2c9e52d1ec9d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cff82edb-1adf-4ec9-8f06-42088ace7c71",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c21169f-5831-45d8-b1f9-210889c0d6bf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55fcff76-703f-4282-a1d5-0f1567e7dd7a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2e0bde9-89b8-4d0a-b1a2-ac07bab134e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4af805cd-4f11-4eb6-ba59-0f89145a334c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 252.11228070175417,
      "responseMin": 6,
      "responseMax": 9813,
      "responseSd": 829.2173532747549,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698280368860,
      "completed": 1698280455107
    },
    "executions": [
      {
        "id": "d78dc98a-8fa4-4bc2-9079-234ec63d8d4c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9c8a645d-5b7e-484c-a5a3-5b0ba4f17a4d",
          "httpRequestId": "a4cd85e4-7a5e-43b7-9254-8ea3553f7710"
        },
        "item": {
          "id": "d78dc98a-8fa4-4bc2-9079-234ec63d8d4c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1f54bd2a-7aaf-4838-af3a-acaf444ddc4b",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "b73d0681-c9ac-49d0-9a43-1e2e93251be0",
        "cursor": {
          "ref": "c476d459-4030-40b6-a2a1-35a55d63c2e6",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab31be4a-80b8-4c77-95e8-1e1fde4d7b99"
        },
        "item": {
          "id": "b73d0681-c9ac-49d0-9a43-1e2e93251be0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8763d477-b80d-48df-9fe2-a16637b08f07",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8e6a0957-0c80-471b-b7d2-f38c17e967c7",
        "cursor": {
          "ref": "fb1eab3d-7190-4e41-92fe-1a2368bf8539",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4078649f-00d2-4a6e-8f9a-44babb9bd7b9"
        },
        "item": {
          "id": "8e6a0957-0c80-471b-b7d2-f38c17e967c7",
          "name": "did_json"
        },
        "response": {
          "id": "e221ee06-f16a-482a-837a-b4a03b15a334",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3e9680-f5a1-4503-80fd-6080fd6760c4",
        "cursor": {
          "ref": "7f9cfa85-25a7-454c-98aa-03528d0a0568",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de87bc26-5cfc-436b-b89c-9c25be98c747"
        },
        "item": {
          "id": "2f3e9680-f5a1-4503-80fd-6080fd6760c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "dbb53b47-541f-4313-a4ff-847ea7ecb8c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4144,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3e9680-f5a1-4503-80fd-6080fd6760c4",
        "cursor": {
          "ref": "7f9cfa85-25a7-454c-98aa-03528d0a0568",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de87bc26-5cfc-436b-b89c-9c25be98c747"
        },
        "item": {
          "id": "2f3e9680-f5a1-4503-80fd-6080fd6760c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "dbb53b47-541f-4313-a4ff-847ea7ecb8c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4144,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827f3d82-2e79-4bc4-866f-b36182d86335",
        "cursor": {
          "ref": "c7c4e6b8-e050-4bd9-af2f-bcbfad87073f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b43f213e-0f7b-4596-81fa-fe49b6c4f20a"
        },
        "item": {
          "id": "827f3d82-2e79-4bc4-866f-b36182d86335",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "50206295-c3e8-4f05-b01a-08575d9addb5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 90,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3a690f-ff16-404f-8e57-202ad993c873",
        "cursor": {
          "ref": "04ad69ab-03a5-4d29-9e85-192e17a25282",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ea11e213-2008-4e17-bf51-6f4ac3f614e1"
        },
        "item": {
          "id": "0b3a690f-ff16-404f-8e57-202ad993c873",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "330c936a-238d-4716-b672-741b0578923b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 211,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dca60b-2fdb-42b9-94b1-c2e14b49082e",
        "cursor": {
          "ref": "a75fab5c-cb7b-4bca-b9df-e05fbd3bab77",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e3269355-2db9-4bdd-9f08-0734fc3dbf37"
        },
        "item": {
          "id": "10dca60b-2fdb-42b9-94b1-c2e14b49082e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fc5e78ae-d46e-4683-8735-19dbdd8f05f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 259,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e50f4dd-b7fe-4edb-84b3-105269f36d93",
        "cursor": {
          "ref": "4dac1470-1a19-4fc0-a6aa-74aca19a49d3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "91852fec-db6a-43b1-ac9a-eed038c056c3"
        },
        "item": {
          "id": "3e50f4dd-b7fe-4edb-84b3-105269f36d93",
          "name": "identifiers"
        },
        "response": {
          "id": "892b6d48-daf8-4e1d-8c8d-738e9fcdd99f",
          "status": "OK",
          "code": 200,
          "responseTime": 376,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739a794c-9d13-4e8b-8c78-69cfefa00319",
        "cursor": {
          "ref": "93b2f4ef-3be8-48d1-9e8b-38667b2b79ee",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "355b21a4-1030-49eb-8aa5-c2536db8d1ae"
        },
        "item": {
          "id": "739a794c-9d13-4e8b-8c78-69cfefa00319",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "14ce493c-b057-4ecd-ba77-95767ebf2ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78897267-8a3b-41f0-90d6-61be9703ce31",
        "cursor": {
          "ref": "8749dbc4-a410-4168-8f08-3a4a86f55b1e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fc394cb6-2b7d-4b0e-a6e8-1591037ea20b"
        },
        "item": {
          "id": "78897267-8a3b-41f0-90d6-61be9703ce31",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4e77cb03-4db7-42fb-a39f-b1ca270d5804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1403,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acf6458-08b8-450a-a91d-f58c6e48e4b3",
        "cursor": {
          "ref": "83aaf241-12cc-4f77-bc34-8aa6dd8feda8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "248c74df-0097-4e76-870c-2a7e8e60ba50"
        },
        "item": {
          "id": "9acf6458-08b8-450a-a91d-f58c6e48e4b3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8617fa84-6706-4676-9dda-bf7f2f12fba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1006,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f494bad0-bc8b-42e4-a044-2a55029e9396",
        "cursor": {
          "ref": "02f33c24-ccbd-4835-8baf-f16fd9091963",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fc978679-4a2f-45cc-81a6-dcd7e26296a1"
        },
        "item": {
          "id": "f494bad0-bc8b-42e4-a044-2a55029e9396",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4e65d1be-643d-4ad2-959d-9d679b6ae5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0557748-7a61-4e8e-95b8-f8c8ac40062f",
        "cursor": {
          "ref": "22f19c3a-e38d-45be-b303-d25a386f7e00",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4e9f49e4-b473-4394-bee8-71e2450ac5ae"
        },
        "item": {
          "id": "c0557748-7a61-4e8e-95b8-f8c8ac40062f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "65695afa-6c33-4aab-a0c1-1eb151b29266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41a0353-649a-4d8f-9fa0-713d2801e157",
        "cursor": {
          "ref": "977f3c18-79d4-48e3-ac0d-10210e38d7f3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dff53914-e149-4531-9e57-e4852da74957"
        },
        "item": {
          "id": "f41a0353-649a-4d8f-9fa0-713d2801e157",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ef2555f9-c380-432e-9856-89b89162211b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f0e13-bfba-4482-b645-9a8e28ee5930",
        "cursor": {
          "ref": "eef41276-cdba-4e1d-9b06-ba5283f58f4e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bf202292-e6f3-4cca-9a84-ace18ed89eac"
        },
        "item": {
          "id": "795f0e13-bfba-4482-b645-9a8e28ee5930",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ffb6a207-41d6-4987-bb88-693a2bdb7b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dfe15c-ccb0-4911-b9b2-c8e947afbdcf",
        "cursor": {
          "ref": "8ed3f182-a2a3-4759-bce0-3f56e8465d3c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "54297ae3-d6aa-4128-a3ac-e143d04fb1e0"
        },
        "item": {
          "id": "c5dfe15c-ccb0-4911-b9b2-c8e947afbdcf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "25c468eb-68b2-4950-ac30-244b593d3543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b50bcf1-f776-4ca1-94b5-353a871ab943",
        "cursor": {
          "ref": "fc9db487-23d4-492c-ac43-c4436aaf5e4d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "186ef4f7-844f-4bd5-b110-3c2f1f971f56"
        },
        "item": {
          "id": "2b50bcf1-f776-4ca1-94b5-353a871ab943",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "63c0677a-5df7-4029-8b9b-3b2d9567f42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff45102a-4327-4787-ad36-2446a3cbd0cb",
        "cursor": {
          "ref": "c095c63f-7efc-412b-a4f3-eaa71e3730fe",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f64ea115-7c44-4a11-b65e-2aa6bc3cb059"
        },
        "item": {
          "id": "ff45102a-4327-4787-ad36-2446a3cbd0cb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1148981e-1197-42df-930a-8579dddcf279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1066925e-b47d-45a0-add8-6b48dfd21a64",
        "cursor": {
          "ref": "06a30362-cd22-45cd-97e3-2bdeca726fa5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "413833ad-3b49-4b2b-8f85-5381b85df0e1"
        },
        "item": {
          "id": "1066925e-b47d-45a0-add8-6b48dfd21a64",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d0a063d2-812e-4426-8ef2-ec3039891511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738ee990-406a-4004-aed8-7fa46545d81a",
        "cursor": {
          "ref": "a34c000a-b93a-4a4b-aceb-6543b9e48dea",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69ca4b30-ce84-4be2-8a1a-e1247a743026"
        },
        "item": {
          "id": "738ee990-406a-4004-aed8-7fa46545d81a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a9b5f5ed-89c8-45bc-9a08-c3a9f8267aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968aaf5-f697-418d-9ae3-0ebb866416da",
        "cursor": {
          "ref": "adf660db-6b39-405c-b9db-10139acbfa78",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ba031e86-75d6-4b9f-b1a9-7c4563652671"
        },
        "item": {
          "id": "c968aaf5-f697-418d-9ae3-0ebb866416da",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46e7a3e7-d91f-4379-a56c-1cfc7152db01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6072051-38a5-43a6-929c-dca19afb5951",
        "cursor": {
          "ref": "f1b0a268-4cf1-4671-8b60-c6a89e39c920",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "66d67145-e55c-40c3-8f18-bbb5368aec34"
        },
        "item": {
          "id": "d6072051-38a5-43a6-929c-dca19afb5951",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cccf2690-acfd-4b64-9e1b-7e108a8cf16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d574729-1a32-43ab-826e-de4bb60c4d4b",
        "cursor": {
          "ref": "fa6ec66d-3461-424f-b1ba-473e45a568df",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99bb67ca-0fa2-41d7-bfbe-2835e1302a21"
        },
        "item": {
          "id": "0d574729-1a32-43ab-826e-de4bb60c4d4b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cd487353-5335-45f2-a9ea-255add273f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd77eabc-0660-47a8-ad61-5b2ba5dfc5b3",
        "cursor": {
          "ref": "710e0745-5897-42de-bef5-7827781495d5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1e22622a-1e01-4963-a268-8f0ce577c5bb"
        },
        "item": {
          "id": "fd77eabc-0660-47a8-ad61-5b2ba5dfc5b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e80c003-88ec-4da9-92a9-0c98377df7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a29c359-cab9-4e94-b504-9b1f5c91696c",
        "cursor": {
          "ref": "7b7dd24b-ead8-452d-85cb-0e93ede1fe83",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5bcbaf31-3d01-4098-ba4b-d9285c7112db"
        },
        "item": {
          "id": "7a29c359-cab9-4e94-b504-9b1f5c91696c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3c708c61-256e-4e0e-8816-2c79cbc4fa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa27a8da-4d92-4b43-91a5-c939cdb71451",
        "cursor": {
          "ref": "328a70f8-4e34-45a5-8139-9c8f7f26634f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e94bf9ce-396e-4297-acff-3252b7851b69"
        },
        "item": {
          "id": "aa27a8da-4d92-4b43-91a5-c939cdb71451",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1d26b6f6-c7cf-4d11-ae63-113e37d0b143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a85eb4-b7d6-4690-91b2-7e7502c028fa",
        "cursor": {
          "ref": "c0adc8a4-742b-4235-b3cc-0efe9533c3f9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b25fb046-351d-4103-84aa-0a98330c9c53"
        },
        "item": {
          "id": "93a85eb4-b7d6-4690-91b2-7e7502c028fa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "44961911-5a72-4254-a627-46e836a403aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92577fe-e21f-4f9c-8fbc-4def5c00191e",
        "cursor": {
          "ref": "a2ab1b28-7cea-44df-a3c0-08bd697e4f49",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fb641e24-d4a9-4695-ab38-19866c4b4823"
        },
        "item": {
          "id": "b92577fe-e21f-4f9c-8fbc-4def5c00191e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fcecf3c2-ae3b-4fec-8e8c-8f510f0f90cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac31fa0-0b56-448e-b3d7-f0994efc3565",
        "cursor": {
          "ref": "a7fafe51-33af-4cfa-ac26-e3450c53ad2b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "591b16da-a019-402d-a5bc-65f552ce3e39"
        },
        "item": {
          "id": "3ac31fa0-0b56-448e-b3d7-f0994efc3565",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e416b34c-bb5e-4205-abad-72bc7364d77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0475aeb7-8401-4095-8d67-d37b48eefea3",
        "cursor": {
          "ref": "02bb1a25-d06c-4a68-a683-b8d1574d50f7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc10c764-e670-454d-b098-b13e196f0ef0"
        },
        "item": {
          "id": "0475aeb7-8401-4095-8d67-d37b48eefea3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "36c9362a-468c-4fd7-9073-00132a7ca905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b68f13a-1b32-482d-92d1-755afc19a706",
        "cursor": {
          "ref": "7bce20b1-e9ef-4580-ac23-0bd9d79fc070",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "856a380d-ae65-460f-9c1b-db3c98c471e7"
        },
        "item": {
          "id": "7b68f13a-1b32-482d-92d1-755afc19a706",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "df52d181-3f1a-488a-9492-8dd4e2a465f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a644dec-0496-4c49-a3ed-5d143c77b871",
        "cursor": {
          "ref": "21d22e97-aa11-4440-9765-7728ab32f273",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f3617707-bd10-4f1f-b078-32f95d63d12a"
        },
        "item": {
          "id": "1a644dec-0496-4c49-a3ed-5d143c77b871",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "902f5ed6-bbfa-4e5c-83a1-1a1f392c43ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51057e3-8f1d-4472-a556-e09fa8523d4b",
        "cursor": {
          "ref": "d4484197-8ac6-4a61-9518-1011cfd9e1e7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5b0e4cdc-b79f-4773-acce-b6378ff0c67a"
        },
        "item": {
          "id": "c51057e3-8f1d-4472-a556-e09fa8523d4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9473ae4a-f539-47ef-b84e-ab7c3bf231ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b00471-6bd3-46f3-9ef7-7c16beaf01fd",
        "cursor": {
          "ref": "4966d365-e316-44e4-b16c-fea8ec134c03",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "52e3e518-2487-47fd-a33d-3de2b129cbc6"
        },
        "item": {
          "id": "72b00471-6bd3-46f3-9ef7-7c16beaf01fd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c96aa8ab-d70d-4c89-a52f-731f76cea75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e06206-c8bc-45b9-8c7f-fca6b955a425",
        "cursor": {
          "ref": "8196a93c-aab4-4379-afa9-54c0fef489aa",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c59b8ea4-3afb-483b-947d-25bd9b4c1b56"
        },
        "item": {
          "id": "69e06206-c8bc-45b9-8c7f-fca6b955a425",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aa7b0ba1-e25b-44f6-bc49-9a0fbc3d9157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888951cd-415f-4bfc-933f-5ddc1306689a",
        "cursor": {
          "ref": "d596b480-c8b2-41c2-8687-c79ac35c7abd",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7c796300-6a87-4327-aeab-d5fa596dfcc4"
        },
        "item": {
          "id": "888951cd-415f-4bfc-933f-5ddc1306689a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "db8f2afb-d232-4642-a3ae-12f50cd934cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dca238-b2d4-4706-abfc-1a3ce854fc2b",
        "cursor": {
          "ref": "2f21aada-18e1-42db-9e45-c46d97e85d9f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b8e4bb32-eeaf-482a-afd1-271332fc233b"
        },
        "item": {
          "id": "12dca238-b2d4-4706-abfc-1a3ce854fc2b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67256e59-2097-4e47-a54e-ac97d111ec67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8406ff83-40c2-42f0-ae3d-b4685b5feab9",
        "cursor": {
          "ref": "d35603a8-5545-417f-8c13-a817b3fbf62b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb1ae667-f5f8-4119-962a-d746cb3a6f59"
        },
        "item": {
          "id": "8406ff83-40c2-42f0-ae3d-b4685b5feab9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "facc7021-cb08-4840-9049-3b7cca32daf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5edc84d-bc72-46c4-a2be-21af53320bf3",
        "cursor": {
          "ref": "05434d6f-287f-4f61-90e1-d2c26a2688ab",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a9201cf0-506b-4825-904a-20b36b36aadf"
        },
        "item": {
          "id": "e5edc84d-bc72-46c4-a2be-21af53320bf3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2853e4c8-dad5-4ad9-8f2b-d1e9ddd75fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8717d-c7a5-413f-9732-e40c2ce6159d",
        "cursor": {
          "ref": "12f460c7-d125-4bec-a0b7-046d56a10357",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ebed6694-19cd-4929-9762-f468acc3f07e"
        },
        "item": {
          "id": "05f8717d-c7a5-413f-9732-e40c2ce6159d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f23621ff-b0ad-4ccd-ae2d-4f8b57ea6bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25694b92-5202-4ce9-bc9d-f2214bd46d7b",
        "cursor": {
          "ref": "1c553411-d58d-4ca0-966b-8bf37145346d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f88297f-bcdb-41f9-845f-ac8d0f817e00"
        },
        "item": {
          "id": "25694b92-5202-4ce9-bc9d-f2214bd46d7b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fe57a2ba-f468-4b4d-8bc7-f18bcfd4237b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5655f27-5511-4b15-955d-ef3ab5348091",
        "cursor": {
          "ref": "9544070c-6105-4d64-bfe7-9fd867bbce9c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d6df845d-008b-4f55-b6a5-4de3bfde7771"
        },
        "item": {
          "id": "e5655f27-5511-4b15-955d-ef3ab5348091",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7793c5a7-efd6-4c77-8646-4123a465f44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a94fa88-ddba-42ab-a016-a37337a480a1",
        "cursor": {
          "ref": "7487400f-03b9-4d5d-89d3-a9a683e5af9a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "848fcfe1-2428-4fe6-8bf4-3d78e6911094"
        },
        "item": {
          "id": "7a94fa88-ddba-42ab-a016-a37337a480a1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "725b8e14-0b21-4c6c-bb2f-637a73e60afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c65e66-6e45-4ab0-8333-a54053253582",
        "cursor": {
          "ref": "12e434f8-302e-4916-a242-b4f1eb0a4c3f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4f0ff8d3-a5e8-417e-9928-7c6469cadd78"
        },
        "item": {
          "id": "b4c65e66-6e45-4ab0-8333-a54053253582",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4e91da02-fd57-4fc5-b088-d2aac9e6c429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e41e26-9993-41de-a4c2-34a4e326a8d0",
        "cursor": {
          "ref": "33035caf-d044-4bef-bcda-d0e3b683d718",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "72b315b5-6529-413b-8f75-47b0eb101ac1"
        },
        "item": {
          "id": "f5e41e26-9993-41de-a4c2-34a4e326a8d0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9745cf9b-2980-4f6f-8817-788df2be3726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07614976-9e9f-47d9-9f84-364c87f63096",
        "cursor": {
          "ref": "bb5b1e1f-4775-4376-b66d-703c52357d69",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f8756000-33c7-4d66-b302-b75802a8eaa7"
        },
        "item": {
          "id": "07614976-9e9f-47d9-9f84-364c87f63096",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7fe56a6b-0ff2-4179-af13-0b2c9e7327e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bb37bf-e18a-4272-8022-5e77178c323a",
        "cursor": {
          "ref": "cf6c4a45-a677-4bac-b4ee-cd111b2180cd",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "871706f7-1f5c-4bc4-8f21-e20acf175329"
        },
        "item": {
          "id": "28bb37bf-e18a-4272-8022-5e77178c323a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "735b8286-ada9-4ae4-8349-7d07be2e0d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bef42b-bdab-4710-8f7d-140807ce3e9e",
        "cursor": {
          "ref": "833231a7-727b-4f96-b57b-118cb475d13c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6a844c13-d1e0-42aa-8005-ca7051181765"
        },
        "item": {
          "id": "f0bef42b-bdab-4710-8f7d-140807ce3e9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e2a71f4d-e56e-472a-83e4-fcf2d28d16e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75609c-3b4f-44ca-8fc4-cb2d88e59d51",
        "cursor": {
          "ref": "6190539e-f983-40dc-a5d8-c825cc6b07aa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "239c4d3e-7081-4e03-a0d7-d09791f35d0b"
        },
        "item": {
          "id": "1f75609c-3b4f-44ca-8fc4-cb2d88e59d51",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ccf193f9-588c-4cc0-a55a-725566febf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0897140-01c1-4949-8d65-e7c58866360a",
        "cursor": {
          "ref": "cc10c391-60ff-41a0-adcd-64f26bb6ed9b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e9da9856-11fd-4a14-919a-e1f594b64adb"
        },
        "item": {
          "id": "a0897140-01c1-4949-8d65-e7c58866360a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ff27aada-00cf-46b5-a723-36595810bea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6cc3c5-3fcd-448d-9659-54a37b6ec23f",
        "cursor": {
          "ref": "47b332a8-80ee-45ae-a311-7005bab21704",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8b41f56b-f192-4506-bbb6-06c67756d664"
        },
        "item": {
          "id": "0b6cc3c5-3fcd-448d-9659-54a37b6ec23f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "433d4976-1e88-4c6e-9bd9-1d0a7d135be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d6e19f-0814-4988-afca-1ed6f04b9bf8",
        "cursor": {
          "ref": "dfb1ea2c-6e12-440c-807c-a82e3b00ec3a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eb8ec671-2d18-4ea3-84fa-af602d503bcf"
        },
        "item": {
          "id": "99d6e19f-0814-4988-afca-1ed6f04b9bf8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e38082e1-d435-489a-ab08-193e586148ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118658d1-605b-46d4-a0d3-f9491b8ad2fd",
        "cursor": {
          "ref": "fe6f6efa-4306-4a27-848b-0a90614baf96",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "650c3c94-1889-4340-9929-7022b3ec7435"
        },
        "item": {
          "id": "118658d1-605b-46d4-a0d3-f9491b8ad2fd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "46cc8b2b-da17-48d2-824a-efdf530ff0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a1038-edc5-4b23-92e1-22f9f45d4ed5",
        "cursor": {
          "ref": "fc74ab31-5208-427d-85d8-db2d3336553d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c5f589f0-57cc-4462-971d-19bdf9ff0ae2"
        },
        "item": {
          "id": "0e7a1038-edc5-4b23-92e1-22f9f45d4ed5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b71a7667-8533-4742-b95b-252f5d692533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f18533-5400-48ad-be4c-0d17791a5a2c",
        "cursor": {
          "ref": "504179ee-1dd2-4fbb-a63a-cbaeffde51fa",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a55ebc58-4e8f-4e49-af08-e1945d63a4de"
        },
        "item": {
          "id": "98f18533-5400-48ad-be4c-0d17791a5a2c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "82fe9d58-4263-48cf-b25c-1514f13e4044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7ce81-8b7e-4098-aa44-73f6399df4e3",
        "cursor": {
          "ref": "2ff46751-e941-440a-880f-de3c1e8a3557",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e9f49a7c-fcbe-4779-8fc2-056c83cc37d5"
        },
        "item": {
          "id": "17e7ce81-8b7e-4098-aa44-73f6399df4e3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "29e0ba3b-3ccd-4162-9f53-d7435fef1232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbdfca3-c7f9-4c58-a740-294adf9b019d",
        "cursor": {
          "ref": "979a1235-0f23-40c8-b1f9-dff103e75b87",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "beeeb869-9759-4de3-8751-5f71c8ca2b5c"
        },
        "item": {
          "id": "adbdfca3-c7f9-4c58-a740-294adf9b019d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "83cb64c7-d008-4801-9f02-9819b1561e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f525632c-50bb-4d77-ad3f-8d698ff2644c",
        "cursor": {
          "ref": "bf06753b-b3d6-43cd-8343-965a2fda4e31",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b7b7a33b-6ef9-4996-8ed3-0088ebb90b47"
        },
        "item": {
          "id": "f525632c-50bb-4d77-ad3f-8d698ff2644c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ac53c3dc-a55f-489c-b0d8-6fb5da7ed72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ef025-3b7f-4b0b-b7aa-c6b94eca2ef6",
        "cursor": {
          "ref": "0a580d80-9e2b-47a4-ab8c-9479c32c6ba0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5c6a1452-1258-495a-8ca3-8acbcd71396b"
        },
        "item": {
          "id": "a45ef025-3b7f-4b0b-b7aa-c6b94eca2ef6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3f300c41-e945-434c-a092-f7520e953cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8641ee58-6720-4287-baa8-226c3198ea0d",
        "cursor": {
          "ref": "6e7a82c8-27a3-41b3-8321-68cdca371a34",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef6d7831-0b78-4362-949f-0f8e9b3a81da"
        },
        "item": {
          "id": "8641ee58-6720-4287-baa8-226c3198ea0d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ebaa54e0-9cc5-49ce-9d02-8c23e9b8ad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce8fb58-8613-4090-b806-a4f45330fcfb",
        "cursor": {
          "ref": "e6e272a0-3748-492b-85f6-c2f0fcc5ddf7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2ef0e83-0859-4a1d-bb20-f728d3853cc3"
        },
        "item": {
          "id": "fce8fb58-8613-4090-b806-a4f45330fcfb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c852a686-6b0d-4547-ad3b-9a1318b029cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0dadd1-da1c-42a2-bdfd-9b2c5a6bafc3",
        "cursor": {
          "ref": "45e309b2-6e49-4d17-8c17-5a1e0599b9ac",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ca087f33-b73c-41c5-801a-9bf2812e6f75"
        },
        "item": {
          "id": "2f0dadd1-da1c-42a2-bdfd-9b2c5a6bafc3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2c861f2c-6cd8-4b2d-b598-9115ac1fb056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f00ad1-b992-4788-8097-27113e99e1fb",
        "cursor": {
          "ref": "211510d2-971f-4120-abcb-d3969dd0381d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e01b4cb2-199f-448a-a102-ae55aa78a32b"
        },
        "item": {
          "id": "46f00ad1-b992-4788-8097-27113e99e1fb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "12ab7a2a-d141-4428-a0b6-745c2c0ea08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1405,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0555179-b1a0-465b-af68-b6770d60d7ad",
        "cursor": {
          "ref": "649f1405-3ae6-4284-9f2a-0e2bb612232c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f46c13d9-6ec3-49d0-9010-e590aa9c4f21"
        },
        "item": {
          "id": "b0555179-b1a0-465b-af68-b6770d60d7ad",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "61ddbbd3-4cb2-4899-b732-c2e1e30e6a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a88346-e62d-40aa-86d6-6391acd34a96",
        "cursor": {
          "ref": "729067b7-86bd-475b-91e9-d9ab2b4fe5ae",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0ce9e8e0-788c-41e8-b555-273de8c49db0"
        },
        "item": {
          "id": "82a88346-e62d-40aa-86d6-6391acd34a96",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "db69166d-4162-4eae-9322-29893aabfee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf040cc-b88a-4017-92ee-095550934568",
        "cursor": {
          "ref": "49d0512f-dc54-46a2-858b-a3c499b6ce4f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7bde9f48-69b6-45f6-ab2c-620bb674db53"
        },
        "item": {
          "id": "fcf040cc-b88a-4017-92ee-095550934568",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec8ca75d-8721-4f38-8079-27e3395f9925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1259,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b30258-d692-4fc7-ab5b-15d0caeae7c1",
        "cursor": {
          "ref": "b207fcf1-f7a1-4ea8-8da2-4ccee75810a1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cda3bb1e-add8-409b-b5c2-2c67333d8816"
        },
        "item": {
          "id": "e2b30258-d692-4fc7-ab5b-15d0caeae7c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b7b0bfe3-9e27-4643-b892-cd461d2e5b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1584,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a53c21-a0bc-4b49-9972-c51a0230e96c",
        "cursor": {
          "ref": "eab31051-613c-49d6-9cc3-d595299460a4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "12dd49e2-3fcc-40ff-9309-dcaa75d26686"
        },
        "item": {
          "id": "d0a53c21-a0bc-4b49-9972-c51a0230e96c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c62acb0e-b274-4568-bde9-45390986bb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15164d95-f560-4598-8290-f273ee461d21",
        "cursor": {
          "ref": "211d222d-600c-450b-ad6b-9adb0715b9b8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d999fa32-cc45-4060-bc5d-dd56ee608022"
        },
        "item": {
          "id": "15164d95-f560-4598-8290-f273ee461d21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bc4bec68-5be7-48f9-9b75-daf1e91ad545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de63b92-7034-4d57-b6b3-10d418211cd6",
        "cursor": {
          "ref": "d52a9907-c97c-43a8-8439-26f0d5919d04",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "08608465-7cea-4a32-bfa5-ae28b62abd1e"
        },
        "item": {
          "id": "7de63b92-7034-4d57-b6b3-10d418211cd6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "38312a5d-b00a-4fb5-b562-ba0881350465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3336,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e489c3e0-ad5c-4590-945a-0195b21aadd5",
        "cursor": {
          "ref": "0903fb66-e759-435f-afa7-522bf38a736d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0da79007-63e5-4bfa-967e-fe164a0f13f2"
        },
        "item": {
          "id": "e489c3e0-ad5c-4590-945a-0195b21aadd5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "34bf8d93-5b52-46ff-8e9f-5813ef56365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1162,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3747ced8-b6da-4e79-9d67-e98e2355ac13",
        "cursor": {
          "ref": "c6251f98-30e4-4dd9-8f7d-3d81341f533e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f685a1be-79c6-47fc-8645-2f90af961c7c"
        },
        "item": {
          "id": "3747ced8-b6da-4e79-9d67-e98e2355ac13",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0735f8b9-6de6-43ad-9a45-678be890e49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59939b0b-10fb-4b6b-9109-cc4900e39647",
        "cursor": {
          "ref": "63a83cfa-4372-4796-8897-e9eebc0bda61",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6faf1b1c-ce78-4eda-83f2-875bfe2934f0"
        },
        "item": {
          "id": "59939b0b-10fb-4b6b-9109-cc4900e39647",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "68b6765c-b9cb-4ba0-8db9-3a9258506668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1905,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb7e63c-71fe-4c1d-9690-134bce48b6d3",
        "cursor": {
          "ref": "7f109c6e-aab3-4f56-ba6d-02e18f47969c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fc6b17d8-1f5d-4d18-aceb-1bd737dbeaec"
        },
        "item": {
          "id": "ccb7e63c-71fe-4c1d-9690-134bce48b6d3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7e8090f-003e-46fe-9e4c-fddbcad42fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f380ca17-142c-4e6d-b81c-053fdefb0d92",
        "cursor": {
          "ref": "f7bcff46-34d7-4633-aa89-a0bc2e0dcf94",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d2305b85-400e-4ed0-af25-73ef20d16d60"
        },
        "item": {
          "id": "f380ca17-142c-4e6d-b81c-053fdefb0d92",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "85640f61-c7ea-41d7-8f2b-a1ca664b47b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e135bab-884e-4340-b8e4-205558e3f704",
        "cursor": {
          "ref": "c130476d-25f1-491a-abbc-c35707be482e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f376840-23aa-4d88-9c95-180ba94946f5"
        },
        "item": {
          "id": "9e135bab-884e-4340-b8e4-205558e3f704",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b163010c-6971-448f-9122-65a0edacd8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1240,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed26980-3621-496a-ae69-b3a1840b9d1f",
        "cursor": {
          "ref": "6a091308-adee-493c-82c8-60f6908dbb7e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71ebd14b-2692-44dd-82ed-92f443ff45ad"
        },
        "item": {
          "id": "fed26980-3621-496a-ae69-b3a1840b9d1f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b2199894-bd87-49e5-8896-f04bc0ada23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3b6363-a71b-451b-b814-a89cc421d132",
        "cursor": {
          "ref": "be82ff0d-14dc-4c15-a926-fe6c9272f570",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66453139-28da-4593-aa1c-1b77d3a34903"
        },
        "item": {
          "id": "bb3b6363-a71b-451b-b814-a89cc421d132",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f5eafac7-5a8f-4467-853b-6bfcbc9b79c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb8b518-e823-4b23-a026-c248d9b634c7",
        "cursor": {
          "ref": "9d0ade1c-0655-4aef-b3c6-89a82276231a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "661b4f72-6757-4236-94de-e194e5c5f10b"
        },
        "item": {
          "id": "3cb8b518-e823-4b23-a026-c248d9b634c7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "91a92cca-3379-4faf-bc75-9a84b1dbfbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7531ed3-bc26-4015-a5c6-eed59fd79f12",
        "cursor": {
          "ref": "1e8dbc26-ca24-41aa-9f21-dc3a3a00b7f0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "427dc2b7-6aae-4d47-807a-6ef0d2078244"
        },
        "item": {
          "id": "e7531ed3-bc26-4015-a5c6-eed59fd79f12",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5d61fbfe-455f-41a7-9ff6-813947d93229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b797df-7418-4276-b561-ef5f12e472b5",
        "cursor": {
          "ref": "e35c5c56-5b36-4d8b-822f-3236c532d4e4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4d835e5f-c14c-43ce-8e94-0f541a313077"
        },
        "item": {
          "id": "74b797df-7418-4276-b561-ef5f12e472b5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8f61e178-35db-4f1b-a4f0-2088f62514bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26be56ac-3618-4578-bae0-d148a6566b19",
        "cursor": {
          "ref": "f173f796-8a24-4e70-85f3-b2bd2d26edeb",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3243d20b-06d6-49ca-a497-9b327b83332a"
        },
        "item": {
          "id": "26be56ac-3618-4578-bae0-d148a6566b19",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98f651b7-a62a-46ef-b4c6-0885aa2c1f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39803239-f483-4b26-a6a5-9377843af54a",
        "cursor": {
          "ref": "098e57bd-2f8c-4fe2-8632-547b4321e2c8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0a86ae9d-4338-46fc-b95a-d4c335c37906"
        },
        "item": {
          "id": "39803239-f483-4b26-a6a5-9377843af54a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b0e1bc1f-7bc5-4d61-8356-b89ba6d47a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73121e78-f2a4-4365-9ba9-b7d032b4749d",
        "cursor": {
          "ref": "d6d1891d-73f5-4801-a826-0ea928d87673",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ea406be3-aa14-4a4b-a0d0-910991bccb1d"
        },
        "item": {
          "id": "73121e78-f2a4-4365-9ba9-b7d032b4749d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dacdd781-0730-4513-a1f2-0996a9333054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38bfae4-604f-4b9d-8c25-38b5ae7b0514",
        "cursor": {
          "ref": "dfdd817f-a06b-465f-8da6-d633da30b119",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "09f39ff3-68a5-4218-9fa1-165f29a473a5"
        },
        "item": {
          "id": "a38bfae4-604f-4b9d-8c25-38b5ae7b0514",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "144a067e-a172-4bd2-9e3b-3e25982d3356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc8a0e1-3c7d-416f-a47b-8bca27761616",
        "cursor": {
          "ref": "4c4b09d9-1a4c-4060-9cc0-bb23cbd7245e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "227fa30f-2308-4226-8693-adb5a3eaa713"
        },
        "item": {
          "id": "edc8a0e1-3c7d-416f-a47b-8bca27761616",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "effd552b-9d7e-42f3-ad50-bc299aaaee57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60611e05-ca43-4425-ab45-500ed7d7b9d1",
        "cursor": {
          "ref": "30f3ee5d-8258-401d-a4b1-f4af92a07eaf",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d695da8-1d04-44b8-8b06-4e6c546a45bd"
        },
        "item": {
          "id": "60611e05-ca43-4425-ab45-500ed7d7b9d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "94fa502b-f71a-4323-8efc-2bb58ff9c516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4a5b5c-73a1-475e-9299-16e1bb2ed5a7",
        "cursor": {
          "ref": "37411bde-11ad-47c4-8fba-d32b7d6cfbcf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3548acf-f5d9-4a03-a19d-b7936877b60b"
        },
        "item": {
          "id": "ac4a5b5c-73a1-475e-9299-16e1bb2ed5a7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1bf2f3a3-0c76-45a8-b7af-11032592b94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96189754-29bf-4e26-95e7-099284c83b9d",
        "cursor": {
          "ref": "c40f672f-119e-437f-95d7-4cf9dbc68cef",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ed9f67ee-6a62-4ea5-aa19-970a4c98544b"
        },
        "item": {
          "id": "96189754-29bf-4e26-95e7-099284c83b9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4d4ce897-6f16-4aec-a2e8-95c151aa60b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd40c271-808f-47bf-b449-f00844823f6b",
        "cursor": {
          "ref": "dd0e495e-6dc4-4493-a787-59dded9961dd",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ca82298d-5d06-4f56-ac9b-be48262a4e5e"
        },
        "item": {
          "id": "bd40c271-808f-47bf-b449-f00844823f6b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c5b91cde-da2a-4810-b973-05c9c005db95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d613a919-986c-4351-9e96-27f931d64fb6",
        "cursor": {
          "ref": "6f6a4cdc-1d88-4be9-994f-ae8ebb4af81c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0839a32-dec3-4ec0-b767-aae2ace32ef2"
        },
        "item": {
          "id": "d613a919-986c-4351-9e96-27f931d64fb6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b8fae8b-0d52-4bc5-814a-fc3a3f469e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d74cdc8-8dbd-48e9-8f76-3b296e779981",
        "cursor": {
          "ref": "f079d62b-5022-47e4-bf18-aeef4381bab5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "097f2af2-5b0d-4e4e-9cf1-e83681db35ca"
        },
        "item": {
          "id": "1d74cdc8-8dbd-48e9-8f76-3b296e779981",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fee6429e-6a09-413b-8a17-0a69b4a29cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa3519-1305-48ba-9328-f23fca3b5db8",
        "cursor": {
          "ref": "e30dc582-b9fd-4b2c-92f6-ad2a43a813ef",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bf3cb60b-34e9-4c58-88b6-646d51d1fadf"
        },
        "item": {
          "id": "f2fa3519-1305-48ba-9328-f23fca3b5db8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c1f7abc4-7ee5-497e-b77d-6581422b3f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fda1c4-e539-4489-a4ff-88614fc8b728",
        "cursor": {
          "ref": "2dcf3bc6-db8a-430f-98d3-853ef5a02dc7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0a3ea644-8a13-43ca-a997-8ca3bcfebb4c"
        },
        "item": {
          "id": "c8fda1c4-e539-4489-a4ff-88614fc8b728",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0f42a2a7-b400-484f-8961-bc646bd17c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce952dc5-a898-4fa3-b3b3-15162306d4a7",
        "cursor": {
          "ref": "6d330db7-2c9b-4184-a5ce-4cccc0e3a6b5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bd349b60-0215-4b2f-bf1f-25630838e174"
        },
        "item": {
          "id": "ce952dc5-a898-4fa3-b3b3-15162306d4a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dfa086f8-7b6f-440f-81d5-a2f7faf747e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374b048f-bf4f-4dab-b73b-4bc20ed9c51f",
        "cursor": {
          "ref": "f94fae1b-5dd3-4864-8d19-c19be4c8b940",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c9070eaa-d6f0-4314-8769-b4c33e77e1db"
        },
        "item": {
          "id": "374b048f-bf4f-4dab-b73b-4bc20ed9c51f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b0ddf121-4d75-4df1-bd61-34ecbfdfe53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee4e695-fb71-4904-b307-372e9d76becc",
        "cursor": {
          "ref": "ceaad835-9b3f-42ee-ad0d-50740f44a419",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "467edc8f-f5c6-4e2f-bd43-cac7624f8b74"
        },
        "item": {
          "id": "8ee4e695-fb71-4904-b307-372e9d76becc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e47be9cc-ccad-4aa3-92ba-e3ef8733c578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a07eefe-ec7f-43e0-876d-5911d84d5ca3",
        "cursor": {
          "ref": "6e8f05f3-19d0-49aa-b995-e3ceaf537efd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "60ea046e-c38f-48f8-bd02-f09ff0a2d5d1"
        },
        "item": {
          "id": "9a07eefe-ec7f-43e0-876d-5911d84d5ca3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b81aee99-4033-4978-8610-99bdcee9b698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e71488-c606-4985-9b43-c55e866201f5",
        "cursor": {
          "ref": "61e97467-c48a-45be-a6bf-0f42669202cc",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c511e3a4-235c-40a1-a2a8-762f5e64bd08"
        },
        "item": {
          "id": "25e71488-c606-4985-9b43-c55e866201f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a77d046f-a1a0-4dd7-8487-620271bc8e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aacf0db-ff1e-4e77-941f-f5e6e5647961",
        "cursor": {
          "ref": "adbec966-3ef6-4a42-8215-6169dd65ede9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bd70dae0-033e-4d1f-9fcd-21e2df052d6b"
        },
        "item": {
          "id": "9aacf0db-ff1e-4e77-941f-f5e6e5647961",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "789c8864-a974-4ee2-b6c7-2f2d63da3ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c468a89-b851-4b4a-b733-f88eab9b0f45",
        "cursor": {
          "ref": "2c8ac32e-6ed7-48dc-b8b8-be4d9d7b2939",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "52280290-3359-4c43-8460-c43120d40846"
        },
        "item": {
          "id": "3c468a89-b851-4b4a-b733-f88eab9b0f45",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5f1ef7da-93da-478f-bc25-75168e7d25ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af86d005-7257-4e44-8a4d-943d5d126bd5",
        "cursor": {
          "ref": "83b21916-d3bf-433f-a3b3-2231efe55f13",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4405246-fc18-43bd-9f6a-33a16d8c49b9"
        },
        "item": {
          "id": "af86d005-7257-4e44-8a4d-943d5d126bd5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9b2d73f7-fc0a-45f1-bddc-822b4c7213bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bfef50c1-c7b9-4b4f-869e-ff50cd228dd1",
        "cursor": {
          "ref": "e28d89bc-09ed-47c5-8fc6-20275ea51452",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a96a4d6-110a-404d-b15e-e050eaaca800"
        },
        "item": {
          "id": "bfef50c1-c7b9-4b4f-869e-ff50cd228dd1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "316183b8-961c-4f48-a320-f247ba6f78bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "730d2538-1d97-4f80-8baa-446d25f15eea",
        "cursor": {
          "ref": "59b3732e-eb71-4cb9-aaba-a26355593ef8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4dfda5bd-e72b-4b75-8ef7-da02ba7d3600"
        },
        "item": {
          "id": "730d2538-1d97-4f80-8baa-446d25f15eea",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "87f1d23c-2ffb-43d5-9b6b-bbab847ec13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d8b8e7a3-6d38-445c-825a-f68563c58a23",
        "cursor": {
          "ref": "9340eec0-832f-4e67-a4d1-9296fd8382d8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ab38382d-9c6e-4e0a-8d72-c23259bdac45"
        },
        "item": {
          "id": "d8b8e7a3-6d38-445c-825a-f68563c58a23",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6886e75b-6d47-4dda-9617-f26aef3d1e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f534128d-c76c-4c60-b2c2-73ef25fcc98c",
        "cursor": {
          "ref": "0cbd5d1c-8c65-4d2e-ab3f-d20087892a8e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "868b3f21-bb88-4318-9d5b-177186c6b2ce"
        },
        "item": {
          "id": "f534128d-c76c-4c60-b2c2-73ef25fcc98c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8accc539-c65f-41b5-885f-3971b0805514",
          "status": "Created",
          "code": 201,
          "responseTime": 6567,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60c7de9-b2d6-4c4c-9aba-fba2a2b2218f",
        "cursor": {
          "ref": "68f598b0-e09f-4bb6-b5ff-2436ba7789f0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "abbbbe3f-6da7-4578-b0a5-1bdcccdf5087"
        },
        "item": {
          "id": "c60c7de9-b2d6-4c4c-9aba-fba2a2b2218f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "74565a9f-ffc5-4cc8-8b44-20880a72921f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7c0cca15-1902-4cd8-8b63-52d097f7fe14",
        "cursor": {
          "ref": "a2ee223f-40ea-4e9d-9f00-ef841460d6f5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "72b3deba-d504-4bfc-a0ea-c0c7680ed31e"
        },
        "item": {
          "id": "7c0cca15-1902-4cd8-8b63-52d097f7fe14",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "63eec920-af63-430c-83bc-b53a10a728cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ba12843e-24c1-401b-a74d-bcf89694f2ac",
        "cursor": {
          "ref": "47de5cb2-66cd-4531-89df-c54eb672a564",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ee2ca0f6-da7e-4f86-ab7c-bee1834ab17f"
        },
        "item": {
          "id": "ba12843e-24c1-401b-a74d-bcf89694f2ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f57dcee8-fe34-4fe5-9d4e-60942957ccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646536e9-cac5-4542-ab53-056d38badb0b",
        "cursor": {
          "ref": "ff5590ad-e6fe-4d4f-aaa5-9972b4f924a1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "134dc0bd-5d31-4a99-b1ef-0b0055050276"
        },
        "item": {
          "id": "646536e9-cac5-4542-ab53-056d38badb0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b210fb09-5aaa-4855-9ee3-a4d9309413d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2942cf52-c917-4ae2-977c-d5c789b24eaf",
        "cursor": {
          "ref": "fa9d175b-7cfa-40d3-9bd8-9f931f9b5e30",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "80c0cb81-44d0-443e-9e08-67da87c0476c"
        },
        "item": {
          "id": "2942cf52-c917-4ae2-977c-d5c789b24eaf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f57341e-b9f8-4775-ac04-44d12a0ea3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52b7cb9-1760-43f6-af01-1de85c4a897a",
        "cursor": {
          "ref": "f298d0aa-992f-49f6-b38b-bc7b65bed970",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "54056f9e-1bad-4542-aa56-102fb8809f95"
        },
        "item": {
          "id": "e52b7cb9-1760-43f6-af01-1de85c4a897a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b77ef3b3-1685-41b7-a0e2-f69d85368d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3b258a-1232-4b9f-9ba9-30a98eace7d9",
        "cursor": {
          "ref": "a7330b6e-ad6f-48c2-a679-f629caca1309",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "742bf851-02d8-4c39-8a15-f3427ddd0905"
        },
        "item": {
          "id": "cb3b258a-1232-4b9f-9ba9-30a98eace7d9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0e73c27f-d020-4d12-95ad-ca12585e54a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a808e6-14d8-4501-806f-194cee992150",
        "cursor": {
          "ref": "e2e829de-4622-4bfd-b66b-74277a7b6986",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bec02a57-17c2-40b3-8dbf-b10bfa235028"
        },
        "item": {
          "id": "69a808e6-14d8-4501-806f-194cee992150",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "260d23ae-e784-4f1d-8f16-a0738f38ad3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af93099f-8870-46d7-a2c1-f4db9d456028",
        "cursor": {
          "ref": "6de3e4c1-e4ce-4d93-a3f3-ddd3cc5afa32",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e45c5e6-eede-4e55-9e31-f334b1cc14a2"
        },
        "item": {
          "id": "af93099f-8870-46d7-a2c1-f4db9d456028",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0f5b7a8-0f16-4a59-9ba9-5b532f711de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7b10c0-7621-4e31-aedd-9246fac919ef",
        "cursor": {
          "ref": "5384d94d-fce2-427d-9856-a9a5a6328860",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd55a36b-9489-4c9a-b2c4-8e7ffec6982c"
        },
        "item": {
          "id": "ec7b10c0-7621-4e31-aedd-9246fac919ef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "455caf3f-b4ce-4e98-98b2-18e32296540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d526f8-c5ba-45c0-b0df-811c0d17794d",
        "cursor": {
          "ref": "8dd60bb2-6415-493a-bbde-0ca488af50a5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f45a612b-4b4a-4882-b3a1-17a6ea0e9f42"
        },
        "item": {
          "id": "81d526f8-c5ba-45c0-b0df-811c0d17794d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "327b50ad-d70e-44f0-8b34-a012f8d7fdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c225390e-9bbe-4009-9f34-aab6732f9b05",
        "cursor": {
          "ref": "7444d193-299d-46eb-90f4-dd14f4e8709c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5da33712-cc50-47e7-9ab9-174841a7527b"
        },
        "item": {
          "id": "c225390e-9bbe-4009-9f34-aab6732f9b05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0ef969d-c5a3-49fa-a554-81297bdce725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0b5f0d-ffee-4503-ae32-55e018ddbae7",
        "cursor": {
          "ref": "819cfa7b-135c-4c0e-8cd1-dd09ec10649f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dd65c6c0-2009-4d41-ab3f-0bf79a1327df"
        },
        "item": {
          "id": "ec0b5f0d-ffee-4503-ae32-55e018ddbae7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a6313dfa-ff45-4c00-b954-17ec0d356b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fadf26b-8b64-4fe3-b2f7-e9fcdb24ec92",
        "cursor": {
          "ref": "07acef74-61e7-4ecc-a3d0-e032d3928cbd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d8414d5d-24db-4ec5-82af-8f279b21ecdb"
        },
        "item": {
          "id": "1fadf26b-8b64-4fe3-b2f7-e9fcdb24ec92",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4247c86-2788-4403-aa6a-5f46a11253bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427e2f8d-6bac-421b-b73b-7a07d0188bbd",
        "cursor": {
          "ref": "40db7c2c-37e5-4840-93f0-3c1bfa035460",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "01a4512b-fea5-448a-afca-fbd1c63f01a7"
        },
        "item": {
          "id": "427e2f8d-6bac-421b-b73b-7a07d0188bbd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23b85e23-0d95-412d-9d8a-cddc779acc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ff2cb7-42dc-4c81-9f13-fdb0db674a6b",
        "cursor": {
          "ref": "03fda366-8b64-4f37-a63d-6276eba64946",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "089f913d-4c8d-433c-9ae7-0a61a417e3dc"
        },
        "item": {
          "id": "91ff2cb7-42dc-4c81-9f13-fdb0db674a6b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fdab8a29-52bf-4413-8d91-dc54419699e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d88aaa-9a67-4973-bf57-8e8721a1fd22",
        "cursor": {
          "ref": "5b5963d1-c4fc-48a8-9f59-0a616dd63e99",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ca937eb-d7b0-45ba-aa03-93961295bc02"
        },
        "item": {
          "id": "c0d88aaa-9a67-4973-bf57-8e8721a1fd22",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a497af4c-155c-402e-b42f-709dcae217ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e75072e-1e4c-4f3a-84ab-8a054d8ce803",
        "cursor": {
          "ref": "9c86ba6d-8f71-422e-ab08-47ef601936d5",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "138f186b-8525-4d37-a5db-5f55fde8662b"
        },
        "item": {
          "id": "5e75072e-1e4c-4f3a-84ab-8a054d8ce803",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09af4123-71cb-4552-8721-10b2e5d14b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c890d80-c265-43a8-8cef-23016d8d0553",
        "cursor": {
          "ref": "68fc687f-310a-40d1-b928-6c8c911499a8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7bb108f2-5f32-40e8-bdba-6e0b9b7ba308"
        },
        "item": {
          "id": "5c890d80-c265-43a8-8cef-23016d8d0553",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31b05e08-259b-4955-a2cf-83521df7f93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687df50b-79e6-4709-b220-dfb2655c099b",
        "cursor": {
          "ref": "41278e67-6153-4c6b-8795-a6bd6d625020",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cf9ab0d6-89bc-4ca7-8f86-34b8a6634ef4"
        },
        "item": {
          "id": "687df50b-79e6-4709-b220-dfb2655c099b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0ab16bb1-5774-46bb-bd83-780d628f1fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481b3558-ba8c-4327-965e-bf07dc0bc577",
        "cursor": {
          "ref": "5140d856-176c-470f-a518-2d8e7bdd369e",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fc06d50b-c30c-4add-ac27-0c65b2de54f3"
        },
        "item": {
          "id": "481b3558-ba8c-4327-965e-bf07dc0bc577",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dbb2f087-41b7-40d7-8d36-0ad96fdf31da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d5fe70-df82-4ff3-9cae-cce2f185d172",
        "cursor": {
          "ref": "a43fc2dc-37da-491f-8985-2ed0ac864950",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8688d658-f59f-4f7e-bbe0-3191c04cba7d"
        },
        "item": {
          "id": "94d5fe70-df82-4ff3-9cae-cce2f185d172",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e11ee63-07d2-4e2b-b705-ec5b9ce183f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f24cfb-2e09-4585-bd84-4510532e5d6e",
        "cursor": {
          "ref": "2d0a4dd9-1336-4590-af6d-8f40fbbc414f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0586229-31fd-4127-8ec6-31834cb59915"
        },
        "item": {
          "id": "b7f24cfb-2e09-4585-bd84-4510532e5d6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3b3c863-26bf-441e-b34c-91e8da4babb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d6ed9f-9100-44a9-8a4f-0421959e40fe",
        "cursor": {
          "ref": "56821ac4-74a6-4c2c-aa04-dcb417638131",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "182615c3-25b7-4681-aa36-4662f4483272"
        },
        "item": {
          "id": "20d6ed9f-9100-44a9-8a4f-0421959e40fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "705fe02c-1560-4768-bf1f-008458d8dccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a80c54-8b35-4a08-bd5c-39b50bb914ae",
        "cursor": {
          "ref": "806c93ab-2e6f-46fa-b9fc-e34e3723327b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a576180-c15a-44c0-af6d-4ee39263f29a"
        },
        "item": {
          "id": "55a80c54-8b35-4a08-bd5c-39b50bb914ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "14a76728-1a95-4733-822b-edb7ceb08598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4271e576-e275-41dc-a6bf-728c71032110",
        "cursor": {
          "ref": "a2e3590e-00a2-4638-baf4-bdf1bc61ea31",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c508a950-2a9a-42ec-a752-adaa59a29276"
        },
        "item": {
          "id": "4271e576-e275-41dc-a6bf-728c71032110",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d4e5ef5e-4d17-4b8d-a3e6-51daded15dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f6a873-207b-4393-a0d3-94c1a401651a",
        "cursor": {
          "ref": "47295f4c-c5a5-449d-b68a-158d829a4d14",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0313ada3-1b6b-47b5-840b-b02b501c341a"
        },
        "item": {
          "id": "43f6a873-207b-4393-a0d3-94c1a401651a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cbc46fc7-a362-487c-bb42-67b5ff2a537f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a933f10-db57-4997-a14b-0db4925686ff",
        "cursor": {
          "ref": "ffd2d70a-7261-4fe7-9232-077749a5ee89",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "399ccf22-5757-4fba-a225-61f35d76af73"
        },
        "item": {
          "id": "6a933f10-db57-4997-a14b-0db4925686ff",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e1d409a9-832d-4ee9-805d-23c27fe56d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0555caad-080d-4ccd-82ed-1a439e678ccf",
        "cursor": {
          "ref": "87002e0e-26cc-4715-a480-c5c089016a34",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "08884829-9deb-4e05-88dd-e65babecf4c6"
        },
        "item": {
          "id": "0555caad-080d-4ccd-82ed-1a439e678ccf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "355f6ae0-1064-4838-ae6f-264b35497dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6bdca6-6e08-4158-ba84-80d3b72545db",
        "cursor": {
          "ref": "137e187e-82ca-4b5b-be48-4b96bc84b907",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "33fe10e6-318f-4202-8fe8-8581050e5bed"
        },
        "item": {
          "id": "0e6bdca6-6e08-4158-ba84-80d3b72545db",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0f39ee69-11a2-4ec1-9897-3387472ff357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f945f5e4-a594-4313-a5f5-60e6925c0bf3",
        "cursor": {
          "ref": "484631b9-45b8-47b0-bcff-f4c81fa04f67",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c857494c-56ed-4465-91e2-d13266821850"
        },
        "item": {
          "id": "f945f5e4-a594-4313-a5f5-60e6925c0bf3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dac2cb8f-adcf-459b-914c-707532952585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e3166-dd00-4f20-a86c-1bb992dbff25",
        "cursor": {
          "ref": "829516e5-8564-407f-93a5-214cdb7abe6b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "76b96424-9403-4d98-93bb-45806ec015b0"
        },
        "item": {
          "id": "7b5e3166-dd00-4f20-a86c-1bb992dbff25",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d55ea78-0897-4c4e-bb88-95c10431c96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1534a98d-5b79-4bc0-8ef9-69c7b3a4b06c",
        "cursor": {
          "ref": "8ddc7522-722d-4fb1-937f-335f933cb7d3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7756102c-09e7-47ce-ab90-e938359971d4"
        },
        "item": {
          "id": "1534a98d-5b79-4bc0-8ef9-69c7b3a4b06c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dbd3a91c-acab-4fa8-9cc6-36fdc3a31825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aba221-e283-4ba4-95d7-84e84d923155",
        "cursor": {
          "ref": "64247090-9302-47a7-9b61-5c687cd075b5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2dd2ce0d-7f2b-486b-80c2-1db4887582e7"
        },
        "item": {
          "id": "05aba221-e283-4ba4-95d7-84e84d923155",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "026a65c2-946a-41ad-9fc3-d2c45d6b90be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94705424-4c8b-4442-906b-872e663ff229",
        "cursor": {
          "ref": "56eae4b4-041b-466b-9244-0530f53fd62a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f069026e-067d-48a9-a445-fd31aa99f510"
        },
        "item": {
          "id": "94705424-4c8b-4442-906b-872e663ff229",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "44068e6f-8911-4472-8de6-9337463a81b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192b064c-16ce-4874-9d85-0b7132c5cb72",
        "cursor": {
          "ref": "2020f91b-6533-435f-8cfa-c3f05efa2684",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cb5827bd-13d7-4ca3-8ad0-ad9d4974470c"
        },
        "item": {
          "id": "192b064c-16ce-4874-9d85-0b7132c5cb72",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6922f575-b42a-409e-a2a5-c49213f33a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29216e0-7167-418a-97de-197cc1076ee8",
        "cursor": {
          "ref": "9da8a4f2-364f-4ff8-8eb0-fb5e7b3bbaae",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bfcf9be2-8061-41f0-8bbf-676765c70eaa"
        },
        "item": {
          "id": "c29216e0-7167-418a-97de-197cc1076ee8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d13695a3-1863-4231-9df1-f75e2f01898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc63fb2e-a5b3-49a3-b6d4-3d41cec69760",
        "cursor": {
          "ref": "8590c2a0-bf44-4b25-a4de-133d0d6d2a70",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5d6fe553-569f-4fa1-9ab3-45aa9643ba77"
        },
        "item": {
          "id": "cc63fb2e-a5b3-49a3-b6d4-3d41cec69760",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "545e34b4-63f8-4a20-9bfa-992976e42add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70256128-fc1a-4fb1-98ee-e36005e8cd6a",
        "cursor": {
          "ref": "bbce7a18-e871-4a33-818b-100fcf1d7783",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2e25d0e8-f0a6-43c3-b7fd-1da54fbf56f7"
        },
        "item": {
          "id": "70256128-fc1a-4fb1-98ee-e36005e8cd6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "93086a82-50fa-4b1e-8cd1-8c776e08c315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331dc121-d77f-49cd-b5ac-3b1fb444ffa2",
        "cursor": {
          "ref": "a6d3292d-77ee-4004-a334-91d27482008b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d0e39c1c-6f3e-46c7-99dd-2c001b6c135b"
        },
        "item": {
          "id": "331dc121-d77f-49cd-b5ac-3b1fb444ffa2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3710f4a-5ab6-41ca-a938-ad064a4b2c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b52847-0254-4c2e-bdb5-d86ef3379b4e",
        "cursor": {
          "ref": "d91ced36-bea8-44da-9da2-20ff9dc9c0b0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "77890fb2-500a-43f5-9302-edf399fece2a"
        },
        "item": {
          "id": "b8b52847-0254-4c2e-bdb5-d86ef3379b4e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ab78db9-9e75-43cd-9c65-e041f1603672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a46f56-f8e7-4fe9-8567-20ec6757871e",
        "cursor": {
          "ref": "1c3b1061-3a6c-4a4c-81b1-08d4999b52cc",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fa6eb1a9-1ac5-4d78-b375-a89217b5c083"
        },
        "item": {
          "id": "59a46f56-f8e7-4fe9-8567-20ec6757871e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da5f9080-ad78-431e-8e74-a606be4a3736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db48525c-1060-4f7c-b02b-42d37a61de6e",
        "cursor": {
          "ref": "86d6f074-616b-4231-85b1-3c8584af5e09",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7a4201e7-cd48-47d7-b9a1-893bc98493c0"
        },
        "item": {
          "id": "db48525c-1060-4f7c-b02b-42d37a61de6e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "94371a47-43a4-413b-8590-7a16bc1766ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd07ad9b-752e-4a89-91a4-3d175ddaebbe",
        "cursor": {
          "ref": "38de4704-0611-4233-af35-eef4ce217f0e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6371591e-edd5-4c34-8cca-7c0c0e75f448"
        },
        "item": {
          "id": "dd07ad9b-752e-4a89-91a4-3d175ddaebbe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "032c4188-6bbf-4e9b-b0b2-d7de8fdced40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b7acd1-5407-4880-9a91-91376644fc83",
        "cursor": {
          "ref": "84d8cbfc-1807-4f87-ae9c-ae13698129a8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "77555854-cfaf-4de3-bf49-8068a3c4f5ea"
        },
        "item": {
          "id": "e2b7acd1-5407-4880-9a91-91376644fc83",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d649fdc6-b2f5-4f18-9eb4-9157602852b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5851ad09-49e1-414b-bd16-1d3ec62ac5ff",
        "cursor": {
          "ref": "230972f4-947e-46c5-a252-3c0d904f3178",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1b93eb45-7ab6-4ad1-9e86-6df66c61a3ea"
        },
        "item": {
          "id": "5851ad09-49e1-414b-bd16-1d3ec62ac5ff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fa45897a-d1ea-4d90-a09f-6bbf67fa8cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d972ba9-9e3f-4b17-97f1-1dcbe9c6dba6",
        "cursor": {
          "ref": "9f1abfb8-dac5-4362-b3b0-eca226e793c9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da9cb6d1-459e-42ea-8842-53eeab653d3d"
        },
        "item": {
          "id": "4d972ba9-9e3f-4b17-97f1-1dcbe9c6dba6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "556b04c7-30ae-4003-acf9-f49334d53af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7cc022-0b22-4f8f-84b2-c561e22c9b10",
        "cursor": {
          "ref": "0516994a-0b28-4dad-bf6e-ee1e77e6e562",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eda4bc4a-00b6-4990-a7b2-88c3abc39778"
        },
        "item": {
          "id": "ca7cc022-0b22-4f8f-84b2-c561e22c9b10",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1af8338-043f-4c36-8392-ec3b0d39f6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a683b9a3-7a01-4509-88d8-d90b20a96b3f",
        "cursor": {
          "ref": "d20499de-fe06-433a-9700-a0a50f6ce894",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "408ebe45-8d0a-4687-9134-f6c64d0b4438"
        },
        "item": {
          "id": "a683b9a3-7a01-4509-88d8-d90b20a96b3f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "69281e02-2e5f-4c23-87cb-75277f6c707b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637976e7-dd4a-422e-9031-b0b27f3bc72c",
        "cursor": {
          "ref": "4c888e01-537e-4b23-acba-751ad036e451",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f21467e2-0595-4ad6-bfac-2be61f7d4ea6"
        },
        "item": {
          "id": "637976e7-dd4a-422e-9031-b0b27f3bc72c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca2efe2e-44df-4691-97ce-70dff3642c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87245e7a-31d0-476a-bc93-8c4c8ced0c1e",
        "cursor": {
          "ref": "3b16af2e-cf82-4db7-9665-088d5825bb48",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9552924d-6e33-489f-b15f-cd2d69cafeae"
        },
        "item": {
          "id": "87245e7a-31d0-476a-bc93-8c4c8ced0c1e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cf02e5c2-4c16-43a8-a751-1683df1417ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8eb095-6b2d-4fc0-a4c5-7d86d6bcf072",
        "cursor": {
          "ref": "08f801f7-d731-4d56-b021-f2b6c2797350",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "59421e51-b368-4d6a-8ae2-70c1f9081ee7"
        },
        "item": {
          "id": "0c8eb095-6b2d-4fc0-a4c5-7d86d6bcf072",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "27a9eb5c-303a-4b6c-ad29-1e375f0140d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce247827-242f-4626-a669-6e33d1897901",
        "cursor": {
          "ref": "9e6878be-50d7-471f-b67d-88d929e9a350",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe3dfcae-223b-4357-a188-3e765807deb1"
        },
        "item": {
          "id": "ce247827-242f-4626-a669-6e33d1897901",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31aa3247-574e-4719-804c-a13d0e7a8e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2dd8ea-65e3-462b-872c-69bf8e69d248",
        "cursor": {
          "ref": "63072c2e-be06-4db7-b46f-acaa0ffded35",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "42c59f9d-e789-45bc-955d-353acaf37b00"
        },
        "item": {
          "id": "8b2dd8ea-65e3-462b-872c-69bf8e69d248",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f192adda-3cc2-4880-84ec-c24dea9a4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c3d47-6488-4c47-ba89-657e8493d567",
        "cursor": {
          "ref": "e9a08d27-337e-484b-a916-48a771bc4231",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d1801196-f2f5-4a4d-b049-f8fee4300691"
        },
        "item": {
          "id": "bf6c3d47-6488-4c47-ba89-657e8493d567",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b7e814ef-1f03-4a56-851b-abfcb64a6500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb944f12-9de1-43a4-927b-7f547315cf9f",
        "cursor": {
          "ref": "c7980a69-52b9-4eb0-bf50-d18d4f8133e8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f45850c2-20d2-4d5e-b58b-ed942ccc7786"
        },
        "item": {
          "id": "bb944f12-9de1-43a4-927b-7f547315cf9f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e8f6dadb-596f-4b72-b611-8e25e3a12254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7d6186-22e3-4451-a171-7dedb8202162",
        "cursor": {
          "ref": "be1e86ce-55ef-4e1a-a19a-cd39b9ae5eba",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9d48fedb-b3bb-4491-b56b-166d511d9d85"
        },
        "item": {
          "id": "db7d6186-22e3-4451-a171-7dedb8202162",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "99a8c842-1bf6-4d52-85aa-108830431f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031a6df9-2bd1-4911-91da-99bb71e27a82",
        "cursor": {
          "ref": "d6f791c5-7986-42db-8452-6a72d6509e9a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9bb66bd8-6705-4363-bab1-9b5dcb6915b1"
        },
        "item": {
          "id": "031a6df9-2bd1-4911-91da-99bb71e27a82",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "67d3036a-b97f-481f-9751-4b4de3961bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb25231a-b972-4bf8-b712-174a18b01dd2",
        "cursor": {
          "ref": "05088edc-2ff9-468d-ae39-54524373dda9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c00105c9-96f7-4e38-b7b5-bf0963bdc2d1"
        },
        "item": {
          "id": "eb25231a-b972-4bf8-b712-174a18b01dd2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a27daba1-3ef8-4ff9-a6a6-16b8d2be18b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4345941-a7c3-4525-9eb2-450c18e6c5c4",
        "cursor": {
          "ref": "fbb71686-e9b2-422a-9acd-c170bed974cb",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3827047d-4e51-40be-a16d-4c90b4e78cfc"
        },
        "item": {
          "id": "c4345941-a7c3-4525-9eb2-450c18e6c5c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2d5650b5-8caf-41fe-8edd-c253cfabe1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93b138d-606b-4e26-a009-14f15b8dfe9d",
        "cursor": {
          "ref": "09c5353d-2c30-4ede-8bba-0336b8f81acd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1da90b0e-bd1b-4d15-b59d-1861239b48cd"
        },
        "item": {
          "id": "d93b138d-606b-4e26-a009-14f15b8dfe9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6632f361-4817-4cf5-9054-cb6897066373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478cfa6c-a6df-49be-ad42-3824c1489177",
        "cursor": {
          "ref": "808ee0f5-a9f6-48c0-8c0d-d51861c5fd73",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c5f03cd6-df6c-4502-b1ab-54079f2f17c8"
        },
        "item": {
          "id": "478cfa6c-a6df-49be-ad42-3824c1489177",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6d661201-aa96-4419-9408-3343f5ed3079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85ba4bf-0fa1-470e-b30b-b4d607ad623b",
        "cursor": {
          "ref": "e61849d0-dfda-43ca-a8cc-53a9ce18ad91",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2eebb2c5-37f9-4061-b78f-7bfe34056853"
        },
        "item": {
          "id": "f85ba4bf-0fa1-470e-b30b-b4d607ad623b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "edf0d0aa-7736-41bc-a9c3-bb62fd9973d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdef117-f4ca-46a0-9651-3f83bc33bcdc",
        "cursor": {
          "ref": "fc019062-35d6-45e9-91f3-b01d13238676",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ace7543-2005-4b52-a02c-cf3ea444f2c2"
        },
        "item": {
          "id": "1cdef117-f4ca-46a0-9651-3f83bc33bcdc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0fe84c26-4af5-4c76-9ecc-4717d445edac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3c87a3-6399-4261-a40f-9ffe8c555ea8",
        "cursor": {
          "ref": "5317ec8f-e167-441a-8ed4-71c84f65c451",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fd8bf4eb-64c0-483d-a2d8-fd8702ab38ef"
        },
        "item": {
          "id": "5f3c87a3-6399-4261-a40f-9ffe8c555ea8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1a7d8210-6ed6-4e77-ade5-b3b20c634d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4b8e94-d71f-49d1-b66a-844a222f6a03",
        "cursor": {
          "ref": "71ed4111-56e9-426d-8276-28d0724f553d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6109cb37-62c0-4b2a-8d26-f17ab96ab186"
        },
        "item": {
          "id": "fd4b8e94-d71f-49d1-b66a-844a222f6a03",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cfce5332-27cd-42c3-8743-e96045006dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d56b41-1eac-4ab3-be8f-526ec19379a3",
        "cursor": {
          "ref": "e7c97080-9825-4e65-89d6-9526c55cf636",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82f11c9a-f804-4f5b-822f-e6a33c900cb4"
        },
        "item": {
          "id": "28d56b41-1eac-4ab3-be8f-526ec19379a3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ce194a0d-4de8-432b-9051-725b15954602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52479362-2aee-40fa-b18b-8a58f640aeef",
        "cursor": {
          "ref": "539cc651-256b-48fd-871e-33aa45ca7d7a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b74092e4-18b8-4539-afd0-0fe236b40d2a"
        },
        "item": {
          "id": "52479362-2aee-40fa-b18b-8a58f640aeef",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ac36bdd3-4b1d-455d-97f4-b0577fdf281d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9bcb05-5125-44d0-818b-41cc4b7c91c4",
        "cursor": {
          "ref": "1d9c285f-abb4-4bfe-93a7-2db7e101d494",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d4c6738f-0650-41e4-8423-59b6008d0072"
        },
        "item": {
          "id": "4e9bcb05-5125-44d0-818b-41cc4b7c91c4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "405569c1-2fd2-42a5-b0f6-6de9ead462b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c039ea-2445-44b3-bf78-27977ecb5f2a",
        "cursor": {
          "ref": "7ff478e0-b167-4a42-9100-f1ea847124b5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f478b89b-9fcd-4f5a-ad10-e184733924c1"
        },
        "item": {
          "id": "c0c039ea-2445-44b3-bf78-27977ecb5f2a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "76220a60-3930-4753-9bce-77970a6ef0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3b5a5f-6322-46b5-967c-4f5a03804db0",
        "cursor": {
          "ref": "4351e7fc-8bcb-4451-993a-75f9c702867c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d7c8fa83-19c7-4404-b506-d0e8e7b23b72"
        },
        "item": {
          "id": "cc3b5a5f-6322-46b5-967c-4f5a03804db0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4132ae2f-482f-461c-87ea-fbfe0c5d3f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ada17a-9b88-4ac1-8d5c-dfdd02b15f0c",
        "cursor": {
          "ref": "99b080ff-7e1a-487b-86cb-08c097886586",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "de8f3101-6f6c-48bc-9921-fd1dfd0104e0"
        },
        "item": {
          "id": "90ada17a-9b88-4ac1-8d5c-dfdd02b15f0c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "058e67f3-2481-444f-94f3-af73447c0ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7363f1-1d83-4056-8d4c-304cbd806ac6",
        "cursor": {
          "ref": "17753b67-0f1e-4020-a040-8f0fa8913584",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "80029e09-6211-4733-9d0b-2d67259d4cd7"
        },
        "item": {
          "id": "1a7363f1-1d83-4056-8d4c-304cbd806ac6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c2a4cf4f-a281-446d-aca3-6348005adae0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ccb45-e537-4d7b-991e-a1041a5a73d0",
        "cursor": {
          "ref": "776e7700-daa6-42c5-9e9d-927921b3d785",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "51ad9434-59e8-4152-b52e-4745def59e02"
        },
        "item": {
          "id": "590ccb45-e537-4d7b-991e-a1041a5a73d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aa709912-d410-4043-8de5-6aaed8b45f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ecade9-4613-4809-be18-6b94fff39c65",
        "cursor": {
          "ref": "8e11c761-ffb0-4ebc-bef7-51320abd7a11",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "00630e70-a73a-4f9d-aa48-c02a463c13ee"
        },
        "item": {
          "id": "e6ecade9-4613-4809-be18-6b94fff39c65",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "17884d24-b08c-4665-ac7d-2b484691fbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d75641-6440-49f5-a26a-1816c6ede08e",
        "cursor": {
          "ref": "5e42b811-9f78-47ca-89ec-e8dcb8db82e7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f3f65c70-a64f-4b5d-bb42-5c034440e44c"
        },
        "item": {
          "id": "79d75641-6440-49f5-a26a-1816c6ede08e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9287b060-77bf-42ec-9a9b-1ceac14ed971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a26f9c-eab4-4b86-b317-43e80a271398",
        "cursor": {
          "ref": "1417543a-6c5a-4f78-bb57-b8186acf7b80",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "90ba320b-857e-49cd-a7d0-7dc261435e3b"
        },
        "item": {
          "id": "99a26f9c-eab4-4b86-b317-43e80a271398",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f17f5e8e-0f1c-42fb-a530-0d0c7411edaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608bfda8-c47e-487f-ac0b-f468609803b2",
        "cursor": {
          "ref": "a695abdc-4756-4ad6-b7bc-80633e4f8f07",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "326692ed-5d29-45fd-a90d-749628e7999e"
        },
        "item": {
          "id": "608bfda8-c47e-487f-ac0b-f468609803b2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "678707b9-830f-426e-ae97-a4fcdfdf5ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88529796-44e9-46ba-81ec-badc180ad2bc",
        "cursor": {
          "ref": "fbe1d240-e6d2-47cd-bcca-5ff1db7376ed",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "aceff166-8455-4b4f-adc6-68df97a46bfe"
        },
        "item": {
          "id": "88529796-44e9-46ba-81ec-badc180ad2bc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "17197cbe-4d75-456c-8abd-9b43a25ec140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc195d01-61d2-4c04-a6ce-0c6805135111",
        "cursor": {
          "ref": "c75ca2b2-10e1-4aab-bfda-6be47d605a2d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "50ccae66-6bb6-4f07-8d03-fde0e69fbdc9"
        },
        "item": {
          "id": "fc195d01-61d2-4c04-a6ce-0c6805135111",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "de4c8fc8-8bc6-49e3-a69d-30f4c0ed461d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d0da59-e6c4-43ef-bb7b-ba4eb8de2412",
        "cursor": {
          "ref": "de753fa7-14b6-4f8d-a85c-1700b083436f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d634e73d-8ad5-4ce9-9402-7d7128b857fb"
        },
        "item": {
          "id": "32d0da59-e6c4-43ef-bb7b-ba4eb8de2412",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7691d246-c4ab-4bed-b999-341adb9c9d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28516abf-4bb9-4120-9888-b2a3ec4ae6f3",
        "cursor": {
          "ref": "a8635691-63b1-422f-bc38-e25ac0135902",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4923795c-1452-495e-884f-f733077bea15"
        },
        "item": {
          "id": "28516abf-4bb9-4120-9888-b2a3ec4ae6f3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "526042da-cc0a-4ba7-bdd5-d9984bb340a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fce9e35-ebb4-4f57-8b01-8489e4318196",
        "cursor": {
          "ref": "e2c58dce-3fb6-4442-b814-c6e4a81cae7b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9350b370-7d76-43e7-871f-689ff8c6949e"
        },
        "item": {
          "id": "9fce9e35-ebb4-4f57-8b01-8489e4318196",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e936424-edee-4385-b0f5-a61daef6cf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d99e0b8-3f44-444f-aec3-e0625c56752c",
        "cursor": {
          "ref": "4390bb7b-0e36-45b8-8566-ee6ace858e32",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "808e6d34-8a6f-4c2a-9712-fa5f81400322"
        },
        "item": {
          "id": "6d99e0b8-3f44-444f-aec3-e0625c56752c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dd243112-280a-45b4-9df0-1fe11d58437a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f25e15-53cb-4e70-9496-51e48e47b4df",
        "cursor": {
          "ref": "ed251a87-8da1-417f-835f-30543773674b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6f334f3f-d460-4e7c-975e-5f8a4ac9bc86"
        },
        "item": {
          "id": "66f25e15-53cb-4e70-9496-51e48e47b4df",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e6dabc93-ef0d-4485-95a3-db5e20226af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db0598-2735-4cbf-88ff-7e87ce9259e1",
        "cursor": {
          "ref": "34bf29ce-099c-48f9-ae75-b26dd10e7508",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "affcf6a0-2159-4687-927b-517826436e1d"
        },
        "item": {
          "id": "03db0598-2735-4cbf-88ff-7e87ce9259e1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86148b51-804d-4a1a-9323-8fcc7baea09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85de175-66c9-4078-9678-35372ff05e7e",
        "cursor": {
          "ref": "3a6bf390-ee54-4872-b97c-9b846efb7b20",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "93aff8cf-063f-421e-832d-bbf5d6076122"
        },
        "item": {
          "id": "b85de175-66c9-4078-9678-35372ff05e7e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bced7457-6656-4ddc-8a74-70940b1ca45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a060322-11d1-4842-bf19-a84d6e7a1a45",
        "cursor": {
          "ref": "8a2a6e81-d12d-46a6-8b34-76085f85a737",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5fa5789f-d1b1-4357-8210-83c8d05e8bc0"
        },
        "item": {
          "id": "5a060322-11d1-4842-bf19-a84d6e7a1a45",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b9c4eda3-b42e-4f78-816d-a77946dd059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6ee0ef-3805-4d3c-b281-4a1800112154",
        "cursor": {
          "ref": "7238c6fd-e095-4779-a39d-ead372b3de51",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "554f7c0f-6e21-4b22-8ddf-320ecba7004f"
        },
        "item": {
          "id": "9e6ee0ef-3805-4d3c-b281-4a1800112154",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4a22a97e-8fff-4eda-9bae-767912f8bd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b314951-1147-4191-b238-afaa6f681631",
        "cursor": {
          "ref": "bef5c270-567a-4210-8d68-6e7ccc08f311",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a6bf7328-1279-4964-9734-6ea24c0ba9c4"
        },
        "item": {
          "id": "0b314951-1147-4191-b238-afaa6f681631",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2eb0434e-d381-47eb-b2e2-cebc95b149a2",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "b382aae4-ff6f-49f2-a80e-f3377f24bf85",
        "cursor": {
          "ref": "ecba08f0-c21b-476c-9a0a-45e48a6e9306",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3346aaff-9f2c-4197-bd59-4c71ac619ee1"
        },
        "item": {
          "id": "b382aae4-ff6f-49f2-a80e-f3377f24bf85",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cf4fecbf-b098-4187-81d1-17a8ef389ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030991fd-9512-4190-8cb6-baba9d368ead",
        "cursor": {
          "ref": "ee1dfad9-2367-4f78-87eb-e4eb593ff0a3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6cdb1c92-eab5-460b-bd4b-b90caf058028"
        },
        "item": {
          "id": "030991fd-9512-4190-8cb6-baba9d368ead",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d8a5e9ad-5fea-49a2-a549-514ebd7f925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03631b6-c13b-4cd4-9dc8-6e8451bd9b08",
        "cursor": {
          "ref": "306c055f-9749-490e-b799-1f49b5118997",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "49fbc3a7-d65f-4040-ab40-e5d7562e80ca"
        },
        "item": {
          "id": "e03631b6-c13b-4cd4-9dc8-6e8451bd9b08",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9234210f-2f1f-4408-9649-94fc907191a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3860fda7-9040-4aac-9cbf-35f01c8a4d5b",
        "cursor": {
          "ref": "69f233fe-41e4-4f04-8c2b-7593d0518db8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "33750f30-f206-45fb-ba3b-1238985c5463"
        },
        "item": {
          "id": "3860fda7-9040-4aac-9cbf-35f01c8a4d5b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "86c48e71-e4a3-49db-ac2b-16fcae88bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e986ac-c505-4095-939e-0a731b59786f",
        "cursor": {
          "ref": "1ae48aa7-09ef-4a63-8bd7-c13c8304b57b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fa303e68-ceae-4bf9-817b-f10f2533f9c7"
        },
        "item": {
          "id": "83e986ac-c505-4095-939e-0a731b59786f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b16cebed-4bf5-478d-826d-0674799c90d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed34d45-75d6-43af-b253-64cfb496fe0e",
        "cursor": {
          "ref": "43d58af9-3305-4b49-96ed-9b3073bc6179",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6782d67a-e18f-4c6e-b4c7-618d7290d338"
        },
        "item": {
          "id": "eed34d45-75d6-43af-b253-64cfb496fe0e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "75ace5c8-7271-4a3f-8950-78413bd4019e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f70cf4-49b2-4fb6-ab38-7074057549b3",
        "cursor": {
          "ref": "60a3655f-c27d-4d97-900d-d9365162d8e6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "700f0e06-0c0e-4c48-9e7c-a243b1de89d0"
        },
        "item": {
          "id": "c6f70cf4-49b2-4fb6-ab38-7074057549b3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "20a67064-1b78-4182-a298-03926684e648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3000b7a7-fa10-4c47-b144-57d61dfee12a",
        "cursor": {
          "ref": "9187a756-f545-49ff-834e-07dc821db0f1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f1ace90a-9b70-4f44-867a-6ce7a7ec3263"
        },
        "item": {
          "id": "3000b7a7-fa10-4c47-b144-57d61dfee12a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "58d33ae3-2fc7-4240-9c03-b683aec1bda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f635f-b24f-42bb-b0ea-402889d7ee29",
        "cursor": {
          "ref": "8a800c31-ac33-4a00-8234-6931c2f8ca84",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "14a484b3-47d0-49b7-82fb-5fe3006dc64b"
        },
        "item": {
          "id": "dc0f635f-b24f-42bb-b0ea-402889d7ee29",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1741ddd7-19ef-408e-a09c-fed28664b00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b702075-3a52-4bbf-9eac-835a7bfd3495",
        "cursor": {
          "ref": "f2e23f42-1523-4f35-8d2b-cc6bf6fa8471",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "67bf52f3-ede1-4824-a78f-d8b769ac0612"
        },
        "item": {
          "id": "1b702075-3a52-4bbf-9eac-835a7bfd3495",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "947689f5-1ed5-49bf-8e57-8cbb5d23f403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106cfdf1-fa7c-49ec-ad02-d7be3b7d0b8d",
        "cursor": {
          "ref": "1a3994db-0d2f-4caa-bbdc-d706fffbd1ea",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1bfced21-a95d-4b60-ad04-8e256bc9766c"
        },
        "item": {
          "id": "106cfdf1-fa7c-49ec-ad02-d7be3b7d0b8d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b8927701-bf7b-480a-8f50-40a29fb91515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148aa75b-d4ef-41bf-8d97-780bb7acb9b5",
        "cursor": {
          "ref": "c395c1e6-7e2a-44c1-b22e-da241f0fdd07",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e639e729-df6e-4ba7-8350-2638e2fcd5e2"
        },
        "item": {
          "id": "148aa75b-d4ef-41bf-8d97-780bb7acb9b5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "631a9b4e-2b12-4119-96b1-9da3df06de53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87fe2c6-ac11-4b69-a9f5-ece06b0f412b",
        "cursor": {
          "ref": "3858fd22-a67e-4104-b074-c6f91e2526df",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "051e827f-60cd-43bd-a486-ba5b8fb650f0"
        },
        "item": {
          "id": "c87fe2c6-ac11-4b69-a9f5-ece06b0f412b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3959e9b5-35eb-4ad8-be42-5d18d1903b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b279df-f9cd-4ad7-ae47-3da13d06a28e",
        "cursor": {
          "ref": "ab395a37-d757-476a-a27a-1f075d81856c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "43622ed4-e6ca-4502-b43e-3258edba9bea"
        },
        "item": {
          "id": "54b279df-f9cd-4ad7-ae47-3da13d06a28e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "22ee2e81-85f7-463b-82e0-c5f37238fe49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59602be-39b9-47f1-9c56-a34f9db9d945",
        "cursor": {
          "ref": "7ce01f63-9a2c-4dad-b6c7-bcf0d34bec47",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "13aa33c0-91b1-40e4-b067-40c737d15268"
        },
        "item": {
          "id": "d59602be-39b9-47f1-9c56-a34f9db9d945",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0bc5ce6c-765d-410d-bec7-ed828ad73be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d48a18c-3382-4c2f-bbb0-8a1350e50d02",
        "cursor": {
          "ref": "81008492-4f8b-443f-ac2a-91c95bef3aed",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d68d113d-25d3-47ff-8e54-6821d70e7ab8"
        },
        "item": {
          "id": "1d48a18c-3382-4c2f-bbb0-8a1350e50d02",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0b6e039f-5503-4e23-af91-083b14e2a0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89843bab-e191-4886-9474-04b47128d18a",
        "cursor": {
          "ref": "83af4583-aa68-4d29-bb62-83c087d3a6bb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d8eb5808-7a16-4434-be14-cdf38b794d93"
        },
        "item": {
          "id": "89843bab-e191-4886-9474-04b47128d18a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ea25ea29-11b4-474f-9f14-f76ddeb69f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ee3a0b-ac1c-413b-870d-d94203dc3631",
        "cursor": {
          "ref": "4c96260a-c990-459d-ad2c-b426e095529c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b489a8b6-dda9-4f70-b3e3-e30cb2e5215f"
        },
        "item": {
          "id": "31ee3a0b-ac1c-413b-870d-d94203dc3631",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f644bb3b-91ca-4d69-b638-16651a42dd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef2ad6c-9121-442b-8b56-e45f7a237f52",
        "cursor": {
          "ref": "a0b6ed23-9340-445a-a084-ef2cf9ffce9d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e3a8dd83-d48b-4ce2-8b25-de72288516be"
        },
        "item": {
          "id": "cef2ad6c-9121-442b-8b56-e45f7a237f52",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "10187c2f-df62-42c9-94b0-1f91821d6200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df030926-8fb1-41fa-b741-347ccacec38d",
        "cursor": {
          "ref": "de2278d4-3d22-44aa-9056-6543ec0ad67a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6353fe49-00ca-487d-8ae1-84a02784e09b"
        },
        "item": {
          "id": "df030926-8fb1-41fa-b741-347ccacec38d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "def61661-7625-4794-9057-681ea55fd6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c21913-fd64-40f2-b830-c43b9e2cd4f4",
        "cursor": {
          "ref": "2d5c4f78-71e5-4227-8a15-d4c52977f001",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8744d611-2303-4b4e-ba47-e1002e9d8638"
        },
        "item": {
          "id": "29c21913-fd64-40f2-b830-c43b9e2cd4f4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3fa4cb17-62bf-49b9-8067-b776a7581c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cce42bb-0359-41e7-91ed-89a04ca043fa",
        "cursor": {
          "ref": "88324a66-cc0b-42cd-89e1-397effd803a6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "997b4cdd-54d2-41ad-a594-e884c6b87a55"
        },
        "item": {
          "id": "0cce42bb-0359-41e7-91ed-89a04ca043fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8c925632-8079-411b-971f-9840cd13f321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d62a8f-29e1-4268-a88e-fe991c032ed5",
        "cursor": {
          "ref": "03c132f1-f21e-4eb6-a988-320365ada7ea",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fe866e17-a1e6-4d8d-8344-14dc580db966"
        },
        "item": {
          "id": "b5d62a8f-29e1-4268-a88e-fe991c032ed5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d3a74043-e028-40a0-905c-12f4a53648e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd63ded-e2ad-4c7f-9342-5d11ee7a07a0",
        "cursor": {
          "ref": "2457dff5-854b-431c-98fd-d471990b777e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "931bc55d-3e40-4d49-b534-3e282593d7ac"
        },
        "item": {
          "id": "3bd63ded-e2ad-4c7f-9342-5d11ee7a07a0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "70de1f22-896e-44f6-90e6-e11220be617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c871eb2e-822d-485f-a670-3047e536df76",
        "cursor": {
          "ref": "34b773c6-56ff-4b02-8b6b-ff4be28526cc",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2f8c4d0e-411f-4a54-a20b-4069d68cbc6f"
        },
        "item": {
          "id": "c871eb2e-822d-485f-a670-3047e536df76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "41459a03-6934-4ac9-a666-8c507889016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03355c02-d1d2-4493-b66c-ee49df0f8f7c",
        "cursor": {
          "ref": "a3ef8abc-743e-4976-9eea-4a24e0cc986c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a34a2459-c07e-49cf-bf49-28d1e077670b"
        },
        "item": {
          "id": "03355c02-d1d2-4493-b66c-ee49df0f8f7c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "348e956e-4953-4f78-b179-c1d08620a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28280ba6-b0ab-4bc9-9936-fa0801e95c63",
        "cursor": {
          "ref": "e91770f1-bd47-45b8-a194-bf778dc1134f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "60d28931-27f2-44cc-a593-230efc57aa57"
        },
        "item": {
          "id": "28280ba6-b0ab-4bc9-9936-fa0801e95c63",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7629c6e7-d1fc-4936-9538-fb452d804faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dd8ca5-4bbc-471e-9851-08711e627588",
        "cursor": {
          "ref": "d3910e05-2ca2-4cbb-8abb-a339feecf0f9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6545dfa0-6b74-4ac9-b516-0e0a46e939f1"
        },
        "item": {
          "id": "54dd8ca5-4bbc-471e-9851-08711e627588",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d50de899-f88c-47d6-90f6-9e07807b7d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcc3065-7d0e-4238-a1e1-6fbcbcda0e75",
        "cursor": {
          "ref": "bbedfaf2-5b84-4986-917f-5d7935515784",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9842c26f-435b-4e0b-97f6-d708f11ea8fe"
        },
        "item": {
          "id": "9bcc3065-7d0e-4238-a1e1-6fbcbcda0e75",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b94ff86b-936d-4364-baff-3583001cf2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b137120-7999-4785-8a6c-b2ae54dbf15d",
        "cursor": {
          "ref": "360c6c74-5349-49f4-9447-90ec3823bdfd",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7ed35ff6-9886-4c3e-912b-b52667a4db75"
        },
        "item": {
          "id": "5b137120-7999-4785-8a6c-b2ae54dbf15d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "63d2711f-996e-4268-acf4-4208aaafd671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b40f17-4f38-4304-9bcb-b34520140310",
        "cursor": {
          "ref": "e8149289-c5c5-4b19-b5bc-1666993fd594",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7a83904c-e92e-49c1-a271-b13ddae1eb98"
        },
        "item": {
          "id": "72b40f17-4f38-4304-9bcb-b34520140310",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "40dcd35e-b72b-4b82-bc67-277ea3763928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9aa51-5fd8-4f19-aa48-9f7dad93c222",
        "cursor": {
          "ref": "987c38a1-6960-4bf7-9ea8-5b62707d3ef5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3297d0a6-fad7-4be0-9c5f-73ea7284e610"
        },
        "item": {
          "id": "46f9aa51-5fd8-4f19-aa48-9f7dad93c222",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "babe991c-93e7-4911-8d36-5b374d485bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffa97b5-6760-4ffa-bb8b-4d0088c5570c",
        "cursor": {
          "ref": "c139c2d1-1611-4625-9864-b37e381433d2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "24ed9e61-c2f8-41df-b3b3-4e09e1cfb328"
        },
        "item": {
          "id": "4ffa97b5-6760-4ffa-bb8b-4d0088c5570c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "62d71eae-b2e1-44b3-b155-7a4eec231460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebe0ab7-c4d2-4dc9-94ff-cdf611c6bdb8",
        "cursor": {
          "ref": "797e8ce1-1608-44f4-ba19-d806e16d1441",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6aef157e-7aa2-46ec-b488-31d2b2e6cdf3"
        },
        "item": {
          "id": "aebe0ab7-c4d2-4dc9-94ff-cdf611c6bdb8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bfd7308f-f8f7-42f3-a6e0-a8a89e634ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345e3c87-38ec-4a17-ba77-5792ef5ce8bd",
        "cursor": {
          "ref": "a839f757-195b-488e-9ff0-83f10babb1f2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2e6959ee-bd0b-4ba1-9c9f-cf6ff092cfe6"
        },
        "item": {
          "id": "345e3c87-38ec-4a17-ba77-5792ef5ce8bd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "115ad080-32cd-434d-9ce4-0304a0b19655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1d9472-fa6b-4182-88f8-3f2623ce2a8d",
        "cursor": {
          "ref": "4b53ed03-5f55-4e3a-acf3-2934fa0899f6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8941944b-84cf-4add-a43c-33c9d9f70b0b"
        },
        "item": {
          "id": "fb1d9472-fa6b-4182-88f8-3f2623ce2a8d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ab0f750b-c034-4630-80c5-9e3532843dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1368a86-004d-440b-a694-9673ebae54a3",
        "cursor": {
          "ref": "2a30f283-d4e2-43af-877d-1c51fe8476e6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e3cdb733-47a9-48ea-bd2f-1c8f48a64c43"
        },
        "item": {
          "id": "b1368a86-004d-440b-a694-9673ebae54a3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eb22a06d-6823-4c37-8e06-73e2a899045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d50744-dd25-4998-a917-05cd74694441",
        "cursor": {
          "ref": "3aaa1c2e-7a60-4316-810e-66c64bbeae9a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ccbf3427-34de-40ba-a862-5ec0958a0b0c"
        },
        "item": {
          "id": "08d50744-dd25-4998-a917-05cd74694441",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eda971bb-49bc-4438-92cf-750eabbdc7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6da3aea-12f8-4bba-8d06-0667f4e20208",
        "cursor": {
          "ref": "62020516-9660-4995-8c74-d0fa0e968fa1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d710cf0-71b9-4996-b41a-e751b05794c9"
        },
        "item": {
          "id": "c6da3aea-12f8-4bba-8d06-0667f4e20208",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f001855f-5526-482f-8c5b-90e5e6e94a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663601c5-9bca-469a-ad02-af551911930b",
        "cursor": {
          "ref": "438e4ed5-f5bd-47d8-bec1-a88c27e4b070",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c1866280-c37b-40b1-ae21-15024af292b5"
        },
        "item": {
          "id": "663601c5-9bca-469a-ad02-af551911930b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cf640a64-223f-4478-ad29-2d8544b3291b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31863fde-9847-4385-8e2f-d682fbd459e6",
        "cursor": {
          "ref": "6cc5352c-0287-4404-9acc-c0a00dd15cfe",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8727135a-f6d7-42f7-bc27-58c413e2859a"
        },
        "item": {
          "id": "31863fde-9847-4385-8e2f-d682fbd459e6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bb421f96-f196-43bb-a9c7-969483c751fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25fe2aa-2f8a-4456-bab0-19a96a7cb0e8",
        "cursor": {
          "ref": "8908ffa8-1356-4ddd-9d1d-5c1add320025",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f8f98031-dc54-4b6d-9511-05fdaa37b5e1"
        },
        "item": {
          "id": "c25fe2aa-2f8a-4456-bab0-19a96a7cb0e8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "56519827-a1dc-4dcf-bf75-c650b6f40ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e90b00a-b077-4cd6-a1bf-5a60adb004a4",
        "cursor": {
          "ref": "16cb8559-76a3-4dc6-a88a-d361e9d61e7e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "27861541-f1b6-4a8d-90db-029fc0959c18"
        },
        "item": {
          "id": "3e90b00a-b077-4cd6-a1bf-5a60adb004a4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d3e13815-7ed1-4ce2-ae0e-73d13aa53d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f719582-fdfb-406e-95ca-32b3adf15843",
        "cursor": {
          "ref": "20984d06-ff01-43c5-b75c-621b1a4c8c8e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d18bbe7b-5a0d-488d-acb5-4f88a6096404"
        },
        "item": {
          "id": "7f719582-fdfb-406e-95ca-32b3adf15843",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aa9bad6e-4b1c-4872-962a-bd9c0f785975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd6d36b-d033-4321-a1bf-6318a69cee22",
        "cursor": {
          "ref": "00ec574d-1c77-412a-b857-0b73e28e4035",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2b4bb89e-5f5d-44b6-abf6-3d14671f28cc"
        },
        "item": {
          "id": "3dd6d36b-d033-4321-a1bf-6318a69cee22",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3ba6d489-e07e-4fd5-9191-1543caa5ca86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168612d7-5de5-4d74-957f-5ec766faa87a",
        "cursor": {
          "ref": "6f5caf00-b0b0-4a84-84d0-32d8fc6ff5bd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e125869c-048d-40d0-ae0b-07d9b8110baa"
        },
        "item": {
          "id": "168612d7-5de5-4d74-957f-5ec766faa87a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bacaa70d-8b6f-4d32-9005-07934cf22fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e033909-ee5e-40b4-a1c6-98a80a9f99ea",
        "cursor": {
          "ref": "cfa4ffca-fee3-4e90-a607-287985acf7bf",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c5b2b766-5a99-469e-a793-aa6b900ce49f"
        },
        "item": {
          "id": "4e033909-ee5e-40b4-a1c6-98a80a9f99ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c31d40d-336d-4bcd-8d94-ecf22ba424b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e767767-f51c-4f53-a1f3-f3e9e24e1e08",
        "cursor": {
          "ref": "b8af6cd4-6405-4049-8444-1a335fe69473",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d76f3238-149a-428b-8ca5-45b9c7eec85f"
        },
        "item": {
          "id": "0e767767-f51c-4f53-a1f3-f3e9e24e1e08",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "497cf7ca-a401-4995-a806-24d8495af95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f296982-6224-4dc6-ab6d-a97a12587ae6",
        "cursor": {
          "ref": "de67cf07-2128-460f-9f36-ab00fb4593c7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "80f3e4a3-456b-421f-8e66-ae3ee1417225"
        },
        "item": {
          "id": "1f296982-6224-4dc6-ab6d-a97a12587ae6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8cfb9796-376d-408c-a211-11ccaf79f5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8adbd-9c91-4781-ac54-ea84c3ab0634",
        "cursor": {
          "ref": "0289cfd6-b193-4ea0-8fa3-a96dc54b73ea",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2eac784-7813-4672-b8b0-d1b7a51425cb"
        },
        "item": {
          "id": "e4b8adbd-9c91-4781-ac54-ea84c3ab0634",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bd13544f-058d-469d-9794-3f40fba57481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34801beb-331b-4a79-b0af-667eeb1ec475",
        "cursor": {
          "ref": "a4927b42-80eb-48bd-856b-a7db381a75d4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "977f608c-9af8-4572-8e8e-4d678408782c"
        },
        "item": {
          "id": "34801beb-331b-4a79-b0af-667eeb1ec475",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "12acd487-1bbf-4f81-a037-c2550a02a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7d6ff7-c698-4c47-9d77-090027d162df",
        "cursor": {
          "ref": "747ad27e-7988-4ca1-989e-db9fc4a540fd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68b1d9f0-29f2-4339-8b49-cdaa141e7155"
        },
        "item": {
          "id": "1d7d6ff7-c698-4c47-9d77-090027d162df",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "db2a4aca-b751-49fb-b443-1b84d236f3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038d5b7d-13ab-41b5-9344-0ecbce8d6c08",
        "cursor": {
          "ref": "1ba32f36-a23a-44fb-a07d-6161036743f1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e83d7abb-7e3a-4bbb-9390-7299266c61e0"
        },
        "item": {
          "id": "038d5b7d-13ab-41b5-9344-0ecbce8d6c08",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "94b1be65-e29c-4f46-907c-445f744447a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e1b6b9-397b-47aa-ab5a-88b66b052ede",
        "cursor": {
          "ref": "b01cf138-5a57-4a70-9dfe-faccffdd5532",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "805902f3-06da-4937-afe3-536337443d11"
        },
        "item": {
          "id": "d4e1b6b9-397b-47aa-ab5a-88b66b052ede",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0751fb07-df9e-42d2-a0b5-446f06292ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1a82bb-e0c6-4250-bbfa-b556ed1ac6d7",
        "cursor": {
          "ref": "87dc54c1-a867-4f1c-880c-612f3e081ada",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5bdc0185-fb4e-4512-a24e-c5555c26bae6"
        },
        "item": {
          "id": "2f1a82bb-e0c6-4250-bbfa-b556ed1ac6d7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "58004b1d-8aa0-4e3e-be5c-4d9b7a10c5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbc7f67-6b8c-4b0f-93a6-45e94622b1d8",
        "cursor": {
          "ref": "24f23ed5-8abc-4a67-a518-0aac48fc6306",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "18aeef17-1ff8-4b0a-b817-d00826344743"
        },
        "item": {
          "id": "fdbc7f67-6b8c-4b0f-93a6-45e94622b1d8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e8d16336-b2d2-486c-81ed-849348e8bf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b20001-b2c5-4f0d-a6b1-142ab58a69db",
        "cursor": {
          "ref": "c019750d-3925-4bf0-bea7-1a766973b3ef",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ddde64ce-5726-41fe-bde0-802613119878"
        },
        "item": {
          "id": "30b20001-b2c5-4f0d-a6b1-142ab58a69db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "96d0f6d8-d672-49e9-83b4-e17532d061cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f289699a-c8d6-4ab9-9613-2b9e9a12e74c",
        "cursor": {
          "ref": "dd9b96d7-0133-46d5-acd2-98b52c75185d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bde484ed-a5f6-4e5b-ae05-d2e51ff0c0a0"
        },
        "item": {
          "id": "f289699a-c8d6-4ab9-9613-2b9e9a12e74c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2fb79387-55ac-4cf4-a3b0-6180ec3a3c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b186d1a-4a8e-4bab-a4f4-435d3785a008",
        "cursor": {
          "ref": "23c54c7b-b439-4090-a927-0f9ddbaccde7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6b279bb5-4e82-4aed-ae5c-bc83b41dec3e"
        },
        "item": {
          "id": "8b186d1a-4a8e-4bab-a4f4-435d3785a008",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "556b18db-1043-4c81-98f9-e1fce797d40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89812520-4d7b-4a99-8b2e-eaca58ac05fb",
        "cursor": {
          "ref": "e8e2a753-fb8c-435b-9af6-be3256844ddf",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a83559dc-361c-430b-9b12-732fd5c1fbca"
        },
        "item": {
          "id": "89812520-4d7b-4a99-8b2e-eaca58ac05fb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "254e89a4-4bf2-4818-9382-5d146948ff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fb99c4-6263-4d2f-8ab3-e6a25808967b",
        "cursor": {
          "ref": "0dc6284a-4f47-48a0-ba4e-ca569b71e432",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b6f6bf1d-b351-4308-a05b-fd0583fcd14e"
        },
        "item": {
          "id": "a5fb99c4-6263-4d2f-8ab3-e6a25808967b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0c57d971-faa2-4f96-9db4-ffb76dfc8899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc552873-2f38-4c34-9914-dd76ea2c4040",
        "cursor": {
          "ref": "fef1ea86-8f06-445b-aabe-ce3ad83bd417",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b3243f4b-7b58-4d33-b47f-8fe3ea153b4d"
        },
        "item": {
          "id": "bc552873-2f38-4c34-9914-dd76ea2c4040",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16baf521-6209-487d-b9b6-6e0a6b9f1271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca333330-f05e-4774-bbc5-f9b2c2e72c54",
        "cursor": {
          "ref": "a72c6532-58f9-4c52-b52d-dc4d94569e44",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6d30c688-ee55-4fde-93e7-bd0cb806446f"
        },
        "item": {
          "id": "ca333330-f05e-4774-bbc5-f9b2c2e72c54",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8f78e9ab-768f-447f-a119-ecafa8a5e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f41554-9709-4d04-a567-1308520f77ea",
        "cursor": {
          "ref": "45ba3fb3-a510-446c-8a79-6319b602f0a4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b439d8dd-a99b-41c8-9bc1-402e33f7d2d1"
        },
        "item": {
          "id": "06f41554-9709-4d04-a567-1308520f77ea",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ec0daa69-e1d0-4aef-8f5d-0292ebfbc3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7667401e-49d6-4212-b571-063d52bb2993",
        "cursor": {
          "ref": "41af6718-f219-4a9b-ab75-a98cff6cb8f3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f75cb300-4a61-4beb-8442-cebbd68e5eaf"
        },
        "item": {
          "id": "7667401e-49d6-4212-b571-063d52bb2993",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1a77452d-eae1-4038-a954-a045b344fc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a6edd0-63d8-4a61-967a-dc5e2806340f",
        "cursor": {
          "ref": "f1dfddf7-5fef-4745-88df-c71eca30c0a4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "846c263d-0c29-4250-8bbc-b89e417cd8bd"
        },
        "item": {
          "id": "e1a6edd0-63d8-4a61-967a-dc5e2806340f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3c30989d-ed33-4703-af0e-53c1f7c06370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0a6ad7-e697-4d9c-b51e-2c7f1dd0aa69",
        "cursor": {
          "ref": "adba8aca-64ee-424d-a3c3-c0073abd1535",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2df3bc80-6c06-49d4-b97d-1f99d906d194"
        },
        "item": {
          "id": "3d0a6ad7-e697-4d9c-b51e-2c7f1dd0aa69",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d83bb96d-b5d2-4205-a599-84a074d39f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf553b3b-ea6f-4a91-addd-4f07cde4efb0",
        "cursor": {
          "ref": "a40fe665-5362-4468-a68c-acab60f9be02",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a94be16f-9c60-47c0-a9e5-91b3309c782b"
        },
        "item": {
          "id": "cf553b3b-ea6f-4a91-addd-4f07cde4efb0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "48865baf-df54-45b8-89b5-bbdd7f8a764a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa41de-840b-4a5a-809a-53f604195be7",
        "cursor": {
          "ref": "dd68db9b-c15b-4e4c-a22d-c196fc78ca88",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a3908c59-dec4-44d1-88bd-d0f45e1c6436"
        },
        "item": {
          "id": "7ffa41de-840b-4a5a-809a-53f604195be7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "63167965-cf28-4b19-84b9-a40adf821743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef16c69-eabb-474e-b4cb-f336608cf7fa",
        "cursor": {
          "ref": "e554a3d7-6d6e-4be1-84e5-a726008b9fe5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "39059d0d-9da8-48d4-9e6d-9346f3a095f8"
        },
        "item": {
          "id": "aef16c69-eabb-474e-b4cb-f336608cf7fa",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "abe9d0e7-7d66-4d86-800c-038b8655bd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1858bb5b-d687-48dd-98ae-9825126e5265",
        "cursor": {
          "ref": "a7bf9dde-f37d-42ae-9f7a-83719ad6e18c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3ba5e5e8-1946-470e-b173-0e0337b19c03"
        },
        "item": {
          "id": "1858bb5b-d687-48dd-98ae-9825126e5265",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ac5d7292-8941-4867-8f95-479f071fa218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b98847-c647-4f64-a6cd-81bd1bf129b2",
        "cursor": {
          "ref": "ccb41ad5-b6b9-4ec2-8221-a9aaf694472c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b7bb40db-042a-46a1-b859-c4676ded58ec"
        },
        "item": {
          "id": "44b98847-c647-4f64-a6cd-81bd1bf129b2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ecbfceb-2332-4ebd-96d8-193610b58715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b2e216-14d3-4223-ab7c-bc22185e57d1",
        "cursor": {
          "ref": "419f6430-5ebc-4d60-95c7-5e5c6623af5d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d7a4c95d-16fe-4501-9039-59a291bf5338"
        },
        "item": {
          "id": "87b2e216-14d3-4223-ab7c-bc22185e57d1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1f9bb9ca-922c-4617-a702-2c0dbbd77e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3a1c92-8dc3-4ced-ad9e-4bdd06c7909c",
        "cursor": {
          "ref": "88ac2a75-4d3d-48bd-91d4-8ef2ea25c2f1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "276970c1-0926-437b-8028-a6b46a04f822"
        },
        "item": {
          "id": "8b3a1c92-8dc3-4ced-ad9e-4bdd06c7909c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23b45f53-4243-40c1-8b0f-a0132d3cef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc363b50-86e4-48ad-b28d-a5a4f2e257be",
        "cursor": {
          "ref": "d63e1cac-75a2-4bab-9a39-636998eecd40",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "099d4ac2-c946-4f1c-822d-8ce93089a8e0"
        },
        "item": {
          "id": "cc363b50-86e4-48ad-b28d-a5a4f2e257be",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5a54e94d-8ce6-4eed-af4d-3a718713399d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9432cf0-62cf-4d76-8a16-0159e6d02e16",
        "cursor": {
          "ref": "9edadf86-fb64-4d10-acde-047b81935ef4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7131d8fa-92b2-4b9d-ab77-c409c9154a7b"
        },
        "item": {
          "id": "f9432cf0-62cf-4d76-8a16-0159e6d02e16",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "06780052-f256-4589-b2d0-48c60739d506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3847a1-b97d-4901-9a2b-07f240502ef6",
        "cursor": {
          "ref": "72fed76b-365c-4800-b83e-688c618537f0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c462bc21-f665-43f7-b06b-43a6604b50a1"
        },
        "item": {
          "id": "7c3847a1-b97d-4901-9a2b-07f240502ef6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a42c01a8-3414-4087-a65d-50c728a3d0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d97893-3ea1-4119-80c9-1b25426a2984",
        "cursor": {
          "ref": "21500435-ae98-4b7e-a4cf-507c7b4e4050",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7d6ccf91-f8b4-4e54-9b8f-83c1f24c851b"
        },
        "item": {
          "id": "89d97893-3ea1-4119-80c9-1b25426a2984",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8602d318-f812-4e49-b64d-3c79170fe3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a4b919-4188-4c33-837a-5d2e57a30473",
        "cursor": {
          "ref": "7e75a149-5dc4-418f-856d-0959fda91a3b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1c8ebf51-fabc-47a1-b217-10d3d3f367ee"
        },
        "item": {
          "id": "92a4b919-4188-4c33-837a-5d2e57a30473",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1b328b2d-a42a-4f36-ba9b-2eb3d9c2d417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3193a3f6-8895-44ec-96f1-9d803d788a75",
        "cursor": {
          "ref": "185c0dc9-7ebd-4e5e-96c3-f9f6c4bdedde",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "14dca874-5373-40bc-95f3-52f59a299b9c"
        },
        "item": {
          "id": "3193a3f6-8895-44ec-96f1-9d803d788a75",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8d8c5366-fc73-4037-92ae-de31f3e45a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583cc0c6-8580-4288-9763-77572def224f",
        "cursor": {
          "ref": "b96fe33a-f4b4-49af-855e-1f2c8612cc49",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "21509e8a-fa77-4ee9-a5c5-470c7aa7bb4f"
        },
        "item": {
          "id": "583cc0c6-8580-4288-9763-77572def224f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2546f0af-6c61-4dc6-8b7f-87e350855bce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59f7654-68a5-4b2c-b94d-da45738e1b7e",
        "cursor": {
          "ref": "c66fc4aa-e5ec-4919-aeaf-b8c97c6fc358",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8e874dfa-5e08-4a2c-88f6-98b581ab5da6"
        },
        "item": {
          "id": "f59f7654-68a5-4b2c-b94d-da45738e1b7e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0f356a42-1871-4a04-a76b-dad7f54451d9",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c9c31d-6e30-403a-99af-13941ca2050f",
        "cursor": {
          "ref": "d3f69351-66ac-4ef7-9df2-e1e7d48bb43d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "38e4c262-59b1-4183-b609-0391313f3021"
        },
        "item": {
          "id": "39c9c31d-6e30-403a-99af-13941ca2050f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "08ccb05b-9625-4427-8837-71cbba3d8d86",
          "status": "OK",
          "code": 200,
          "responseTime": 3238,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9b5a95-72df-41ea-82a9-764945926751",
        "cursor": {
          "ref": "7c891554-bb57-4ffb-ab00-0fa7516858f7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1cbf26a5-0f20-4911-8115-d5e4fe26674c"
        },
        "item": {
          "id": "1e9b5a95-72df-41ea-82a9-764945926751",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "47318152-4cc7-4dcd-b3e1-2844103c35ba",
          "status": "OK",
          "code": 200,
          "responseTime": 2721,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a620ef-c5a3-4982-a83b-cf8253734bf1",
        "cursor": {
          "ref": "41ff3511-a164-4a90-a444-b5879a0cd10d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e8afddc2-d7bd-4d93-8576-a1cf8ae6d33f"
        },
        "item": {
          "id": "65a620ef-c5a3-4982-a83b-cf8253734bf1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4840e974-35fd-4af9-95d0-d840a4dd75f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a620ef-c5a3-4982-a83b-cf8253734bf1",
        "cursor": {
          "ref": "41ff3511-a164-4a90-a444-b5879a0cd10d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e8afddc2-d7bd-4d93-8576-a1cf8ae6d33f"
        },
        "item": {
          "id": "65a620ef-c5a3-4982-a83b-cf8253734bf1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4840e974-35fd-4af9-95d0-d840a4dd75f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351c53ca-e583-44f4-85d2-b1f2f36702e9",
        "cursor": {
          "ref": "e9952e2c-d7c1-4eed-ad40-49d4930773cb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f3685ba0-852b-4a90-a92b-e4fd4c5858b0"
        },
        "item": {
          "id": "351c53ca-e583-44f4-85d2-b1f2f36702e9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "85aedc23-4081-4ae6-8ce9-cab79d789732",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d2b843-f7af-4238-91c4-a6bde3ee51f5",
        "cursor": {
          "ref": "66273d26-7f76-4814-8627-f8c1237f52e5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e15bfb97-edd6-4983-aa50-53d2662fdce1"
        },
        "item": {
          "id": "18d2b843-f7af-4238-91c4-a6bde3ee51f5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac7f9882-cf51-4563-8338-3172c5664bae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}