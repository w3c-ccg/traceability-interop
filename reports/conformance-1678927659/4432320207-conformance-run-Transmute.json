{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f4d12408-d5da-4992-9192-81b62eca6b75",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3e158c81-6ab9-4477-b516-240a9b3b6dd1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03bc63a6-c573-4644-914d-d3aeae2f0b0e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d0fae1bb-230d-4b53-abba-b71503ddb0f2"
                }
              }
            ]
          },
          {
            "id": "49352482-1350-45a0-9b2e-b9b2677fb2aa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dce5af0d-78dd-45bd-82eb-8d7a6e692483",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a49a723-e3f6-4933-92b6-358a739f946b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "472f808b-bf7d-4978-81e2-4dd47f265d2b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d18fe527-088e-4e9b-af62-5af87ff13bae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da7202b9-481c-42f1-a6af-3e2b0085994e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11582a8b-53c0-44ee-a4d4-5c560c0e7b60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e218eb14-a872-4a81-a46a-f54804185722"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1f56d9b-f1b1-407b-b15c-64331f845904",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc605b87-b33e-4c61-98ff-ec6ce55c6d24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "419dd60d-4283-4a14-8489-b5b49fb0e5b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83bb5559-06b0-4a0c-8cb7-75a7d310db5b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b81e059-26cc-4b73-96d2-5eab93da2791",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "543d4e90-0c27-4b3f-bb65-060682f71f65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ee9c1a8-b11f-4a3d-ad2e-ab92b966e604",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d613ded-3c15-411c-b202-90634953797f"
            }
          }
        ]
      },
      {
        "id": "28acf91b-4553-4f8b-95c0-56fe2a573aee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f2292ece-6443-49ed-8007-59f5065e6826",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b74ed77f-d453-42e2-85aa-280dbb3adca5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8369bfb-2c15-438d-867f-06354b8b0767",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5c2706-8295-4528-b190-a6e878715972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "152b158b-a4a3-4109-8416-39471cb0a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239a9201-64ae-4991-b8fe-f85aa143f972",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4fea62-a280-49e6-a819-6b379c727523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dc0dca0-07d4-44cb-8573-f23fd5db733b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3320f94-453a-4f5f-b27e-91d872ab364e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce40b64a-c1a7-4eb9-a7b8-ad793d97ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab6e71fc-813b-430f-adf0-623159ad06c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1b25e06-d2d6-4a89-80ed-97cdc72813ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c36fbb3-8fe7-4702-ad11-c7f64e5b94cb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842fcab4-e752-4b35-ab74-af06578791fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f496774-6407-4525-ab5e-9c0cc4d0111c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073372f9-815b-4993-8f85-65aed5ac844e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b80bca0-18f1-4437-b8b1-27f694dece06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37dc2c-40e3-4385-a082-422114d62e54",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18a49d6-4b92-4b3b-9a4c-597e3585e885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fad91724-2a08-487a-9b30-c2ea27f9e2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93801da7-fa2a-4538-a3d1-cc39b7f412a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ad591781-79fc-4c52-8ee8-169a17eeb9ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc0a85e6-690b-4d27-b577-f2c0dc915195",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c46bd88e-7605-4dae-a708-fcb593826a47",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d854c0cd-6327-443b-a31e-a26320b06801",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "236cd717-7434-4956-a954-33d614962532"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38dc6ee9-fc5d-46fc-93c4-06043e3de26e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f3f0cca4-c21c-4a7d-bc72-0db4832c9544"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e1157d9-bb6d-4280-851f-874797b4d433",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1597864-c207-4771-b77a-a075c63e25df"
            }
          }
        ]
      },
      {
        "id": "3e09b47c-b5b3-4f8f-96e6-b3dc2340bfda",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7ccdfdf9-5805-4648-91dc-8c3f7882b284",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c3b8291-7f5c-4ce5-b9a4-44acc604a786",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "261b0a47-0afb-4e8f-ad34-96ba5b3040c3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9683b1e2-8626-4e27-87ed-084116d23e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b5c293-0871-4e80-8a6f-70bb3865cad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ba5bdf-60c4-4646-8e1c-49c8f1bfd387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87ea3ebb-4a30-455f-8790-e665d0e22840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4822b914-6791-4cc8-b7b3-bc5e781cc3c6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c1e231-f5ba-4a7f-b5a8-9118e3f4b671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5dd624-8511-4fbf-b7a6-ee4e97746bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d4167b-e8a9-431d-9d40-441fb2c7d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f636704-1017-46a7-a301-63344fd039e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74b0643-9c0c-43b5-866b-c6442623129a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29b89e1-ea11-4f3b-a73d-fd31b7687485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f78e63-0aa0-45d4-9ad0-1da36889e8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7264cb2-fc34-4ca5-beef-aa00697f02bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c57cc0b2-f738-4c97-8cc9-ab430d71f90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd9cdfe-6341-465f-93d0-6abdcefee0ae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb45d88-0d82-4b40-a923-b76bdf75dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172f54b6-4016-4e5b-8d6e-147868531891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eff8d7b-5edb-4f3f-b10d-bf78fde37bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad70366a-c92c-4f00-9f32-27d7399a0efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66423337-f543-433d-b35f-99c4a3f0f6d1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d197aba-a523-4d50-a03c-4579890dc296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d908f243-43fc-477b-88e8-9cff6d783e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2797edc-2f35-4608-8bce-01526c1b1786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "952dc9da-53ee-4f7f-bb9b-ec0621143e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473a945-78cc-443f-b97e-3515f047ebb3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cbc245-86ce-4cf6-bb68-38c566bca2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4cca7a-d5e9-4e32-9896-ab1ac980a1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7715a4a-c7a1-4698-a807-de284395d4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5e21993-2e38-40f4-9aa0-5873b8bf9ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803525ba-6efa-4871-9563-4d56ff7cdbcb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0067198a-900b-4c05-b655-368a376f12be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a28965-2c4a-4970-8a02-e2db3df9281a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003adc8f-fa18-4575-9918-317464660221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bac8ada3-d2db-4101-8a4b-7ea854775a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f322f192-0964-4ca2-81f4-9b600a7e6ee5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e671e17b-4469-4865-bf29-ac72d5d45ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e2efb9-4a73-41e7-8194-1e63967b87b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6023b347-441b-4399-99e0-266fe404b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfff272a-5d6a-4dfe-a083-b0e728f42c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307e5e01-36cd-4bca-a7bb-8d815f261fc9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de24002-46b3-4fb4-a3a4-b762ab4d8f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc7b003-7edc-40ea-b26e-bfd6f8945fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2c70a4-23ed-40b0-8a66-06291afed896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93744a6c-9628-473a-acfb-89cb86eafc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca43374-daaa-4164-9f06-893866d267b9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3673cac7-1a23-4a5b-9ab1-0fde72335371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0b1ecb-5538-471c-9c42-950f8c11776d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571a7375-7787-4186-92a4-8f0ea6366edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8773a104-5360-4363-8893-e1b963b0c29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829ce393-7d31-4546-b0f4-5dc8d82edd26",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121b33da-583e-4f03-aa2e-72002610f188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eacfada-edbc-440c-9a90-0294c2525d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594735a-11c5-42a1-8935-f10cd3844b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f7fecb-7ab5-4c36-8812-17a89eb675c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78786eb6-de48-452b-9645-84a4264556a5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81728e4b-7b3a-4b87-afa1-c9fc326bc7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4268d9f7-6dac-49d8-8b68-c812ae7c291d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dcfebd-e47c-4abd-b545-cdd9291f716c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7baf66-c90d-4a31-8ecb-d3f1141d81a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b8c278-b872-47ad-af91-605262f2c2c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ccb0ba-ae25-489c-952d-a607a4aac7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf482b30-e2dc-43ea-b2ce-709c83c57817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716191bc-3acd-4626-aa3a-a7ca37bfbd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40913ca5-a80e-4ee6-8af2-fa212438ce72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09077c3a-10af-4d0b-ad00-69705cff604b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef09eb7-bf81-4e09-980c-bde01673e53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af181b1e-17f2-44d2-9603-1372195ca876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cf498f-26ff-4010-942e-724955466d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea9f7b04-d5e1-45a6-921e-85cdc91adeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff700d0-4b8d-432e-b43c-bdc7582faf62",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba535052-36a4-421a-863c-5474bc175e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fd88f1-7b93-43d0-9945-b5f4b2005a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39114e3-b49b-4691-a7b6-f2d4c5a7c537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ab91680-03aa-4741-b618-4e061f3bb781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387f3db2-1555-4b9d-a9ce-1dca430f2dc6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f94e4c-7247-4586-9cfd-52200147cf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddebaa77-7b05-4913-a2d3-38018c994e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42017f7-f363-4d72-8330-cad155dea7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282e49a0-e9d5-4842-a33f-cb4cf56a4348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59570cf0-1838-47ce-99e2-33a51c048699",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ceae27-c654-487a-876c-db236c83ac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daabad84-4d1d-4b5c-8f2c-e5948af8ab87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a55a950-2e32-4765-abe6-d28a0e6e3695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "520e19e1-dc33-4857-a292-0870a44b91ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4685c960-55ee-479e-acb1-7eb517ab56df",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe02538-6535-4b5e-9917-631d013ae4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b287082c-4954-4fa5-a3be-dc4fbbce6dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930f09d4-1ec1-42a7-bc31-5fd990a9c627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f24fc89-3127-4d19-8fdc-5ed63111ac5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a9e1d1-c5bf-4caa-af7b-94acd8cf8539",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14260192-df94-422d-b335-a7b267413b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdab432-3fef-4177-b8ec-659ef259e816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e99f67-5aee-4cc2-ba22-c578db9011b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "982b1d95-2ae1-483b-97d5-2f364fdc1293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1df8ab9-51ec-4a71-b026-e56fd4e4e6d6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff6135-e035-48a1-86cf-e7f6a725a73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165a9e7a-bf85-4fda-86c0-54084342935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e2f28e-5c2c-45ed-979a-fe008daf804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85334f57-5bfb-4500-917a-fb7f8ddd6f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d80ff7f-55b1-4683-aa14-e390ca5d1f2d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e967445-066e-4796-9155-21799ca20bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6129257e-1c18-43cd-8bd2-3836c7901f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5be604-c3f6-4fd7-9010-5cd723e6bdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9edb12f-5675-4c49-9638-77249545194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde0cf48-e1c5-4d5f-9760-c77767c7a426",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f476621d-152b-49f2-b924-a24b467a29c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690be6b1-887b-4c5e-80b7-bf5871d8d262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ec1f0f-34f7-4e9e-bf64-48eb5415df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55294a5d-1dc6-41fa-a2c2-c979752fda28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf47089-02ce-474e-8205-a8bb84a4fce0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77c20c-5104-4cc5-83e7-40e9ac8204bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec39687-3c85-4ee4-a1f5-9561c11cc055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba60f664-e92f-4b90-aad8-ca61afeb44a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e0492a-92a1-40b7-b35b-c67f363cff7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c270bca7-a76e-4357-b852-546f99112fed",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b65fc5-7f5c-41c3-a806-8009ea9b93ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30cd60d-ee37-4789-a5e7-3f8ced4436ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fac9f27-38cc-4b52-baa3-2b13e30c1c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52b9327-c794-4268-8a7d-997f1b5c825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1fd9ac-ce20-4206-9a51-5da8cf85658e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04fd876-82dc-4229-a705-6645e466c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3afacd-efee-466c-b9ee-e5a776994f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fd0b6a-40d9-41d1-afab-18aca7c42d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf23d3b-f93f-47f3-96c2-b31b111abdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7e1101-825c-4bba-9669-a65f2abfd202",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e28152-4e30-401d-9bcb-a4ad266f502e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6592fa75-4b8a-4a4c-a29b-5efbd2c8b3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbfb2b1-5f5e-447f-99fc-75a7ccd38736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "336d5a48-c7c1-43a8-a32d-50b2ba13b3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e28f6-ef6b-4da5-acff-4356b0803c35",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a87ca10-9c1c-4cd1-90f6-45ed9dfbadf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ba9139-9068-48b9-8b8c-b2832680c3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f38c2f-472a-49db-889f-c61f0bb8c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b95129-3921-4f61-a6ae-6b14773a2962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a92ad9-0bd4-46f2-82c1-765698c9f8ef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2809617f-b64c-45a7-b6f7-7936f1f6ad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb980d2-f2b4-4719-8544-495c661cd5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e770c74-d141-405e-90fd-61055d8b843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ebce0f-792a-4ca0-bb0e-d54ad552c1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17392073-acb2-4483-97bd-d1d2dc4e9a1e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf29c4d-2b00-4fc3-8679-d9a661272ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cbd18e-48a1-4d9c-a2af-16ef69a73831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc63292-ff7f-46b3-ae6e-29bb5710c462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4778d21-3426-4c6a-9857-043d235e6881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c2a522-974e-4a20-988b-1664e7e5563a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebc4bfe-092a-41b3-aa40-c6581a860921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3487127c-b0a7-4540-ab89-cb1f75f2ebbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825de72a-de31-4721-b915-c44721ef2568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1997759-5b92-4ae5-8187-599bf30bbe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd039446-6e4f-4f82-86a2-f849d70d3c57",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f74227f-213b-412c-bdeb-6a7288d01f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb9fe29-c500-46c5-be92-b2ad91936a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d296f54-9598-4d76-a998-f30a3f9dac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb7b425-3fe8-4f86-ac58-945e42aed7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c08e2f-2020-4bf8-9499-2c043cd80aea",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36c99fa-2291-46b7-a008-ec4845b142e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab05f546-089b-4d74-a08f-3df11c683c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e91188-aa31-4186-a49b-b55a9b5d9a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3700966-a527-4820-a5a3-3c439b0dc8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c090364-4e5b-4c56-96a2-a54e6af1bb63",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff794d69-31b8-46f0-a92a-b01b3677795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a7f38-25e2-4e38-99a9-1fd6f589b472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7050af54-5a77-43b6-a755-756f4495866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb08cbee-827a-47fe-b86d-a5f9cc601319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95fdcd9-d20d-4bff-bb36-e7de1453f4ec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0054d6-55d7-4816-a14c-4873f7863ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2ba329-5a26-4535-b7a7-11ab4624c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1bef34-c568-4238-8dca-74846c962de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149d57eb-5deb-41a9-9d8e-251a5d70f31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b15fe0-d61d-4163-82e6-0ae0f83ea96e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7802cd0d-9b9c-4077-a202-62e4c6255f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43cf29f-7e11-4665-bcbf-815dac070966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4439c86f-f7d0-42fe-8920-f880bcd2e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d7179795-b674-4934-bbc8-e2f8af715694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b057e2-610d-4f77-b00b-8c48ece73b5b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99127f05-5f15-4afd-a6f3-4c379ba9e687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "247f0aa2-9466-429f-906a-7acd749b4b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092a0bf0-8169-477b-8097-223588eba623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a8466c-af8f-4511-9fa1-2b655375fdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916069cc-9710-42e8-8810-a5284946276c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257b470-7fe5-4361-a125-b804f4f37670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56196f13-4390-4969-9d3c-d6fbe553c790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7018e91-1b77-453c-b79d-94d89ae001b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b27eaca-785d-4389-88b4-823492c22bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac88377b-c34a-4211-b554-e85e5dc9a371",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcbe04c-ae41-43a9-8ed8-007237c0c293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd76722-3960-4114-8bbf-44d7237be081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13093b0-f4fc-4593-bed5-20b6cd280a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d437a685-59c4-471f-bfe8-5bf3fa80b180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d596996d-2728-4406-957a-819d4d41d4a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb7844-0ebd-40ae-aa1b-07b8add5bbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d93977-fe59-4516-b747-9bfd0101e086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed42d949-f326-49a8-95ad-b7a94fd8a781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7f5bbe-6e17-4c30-8a7a-838e5ab7fdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f75ff6-3b3f-4cf5-80eb-ec648db002dc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d6523-847e-4af6-abd8-73782abf9812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737e39f9-0f84-4471-bdf4-cd2000a8a69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336353f5-ff96-40dd-810a-843f3ad010f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "210d32da-9422-43f9-9ecb-4d989c7dc0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbc0f08-dd19-4559-b12b-5f98d629f62c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2c959b-27cc-44e6-9546-1af879d96669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b86a4f-e46c-4142-9472-6039afb1f38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe432ec-07f6-4ec9-89f1-93bb330b39d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "833986b0-4965-4c45-a739-9f9c76bd47a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ecde4-336b-455a-9864-b1710180674c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd282ac-3cb4-41fe-a0a8-3e548e73e687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea74478-efa1-436b-9bdc-a41136a82f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea67ea3-aed6-4131-8122-c796b11c5a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bebfce57-2b3c-467e-add4-63f758336007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708b5ff-9d2b-4a95-9144-b586857828b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cf6e2b-2cc9-4f6f-b7b1-8cfaf72f9f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fff633-b0a5-44f4-9a83-c7106144d391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fbfac0-1efd-4e25-808a-26c372c623f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac4f8bc-629d-4c08-80b0-f3557bbdfd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c84a5ee-43ef-4263-94f8-5eb756a121b6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835c574a-07d7-4b3d-8dee-fbe464019127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9ed3ef-c137-4f52-9e36-0ee65045957d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7bbe79-b28e-4a26-afa6-f49586b3ab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64dd773-5590-43e9-8ec7-636d424f11d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619dcd70-dac8-4667-89cb-e6c022d69369",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15628af-9ed6-4587-acab-714f8aa3459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726ca602-2c08-477e-a337-33f9c9425fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f111290-351f-44f0-8058-9a1ac3c53eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21294cc-6785-4356-89c3-8defd1f14ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4b0be-6a8c-4097-a77c-3106291b7df2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7325f437-f69b-440f-9d06-b92fb280f392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9983dc4-e1ff-4927-8fad-df5a1b73449a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad3c910-6741-448e-ae9b-fb13bb69d117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9d3dee-387f-4ffb-a705-b0cdf5d5d4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dffac2e-2e6e-4633-aa08-8613f7f566c6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6bf855-b9b9-4033-8046-725ea34c3586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b762456-c9bc-4e97-a18f-0a932d44a68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034d7475-8b2b-4108-b18a-48ac802beb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7326bb-2db1-45ab-bbea-193e597c72c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b54986-dcdf-41d7-a932-6a543ecc9ca7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570619c3-3d77-48d8-bfa3-75907ca22b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b5e5dc-62dd-428e-9e9d-156d1268c982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febe3257-5468-482b-8952-06c6940a4f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fba2cee-0b1a-4a82-883c-c958f8718eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb5e09d-0eb9-470f-8f21-8bc9364020f5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d0457e-c659-4bfa-9709-e5ee66d24114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ce4108-b880-437d-a0ea-2627567f7b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff89f4a-c2cb-4838-8c79-73938fd31b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72779fb9-2dfa-4658-b1c3-2b94af817e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317b8be2-290f-4c51-a996-46b7f8e230ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda810cc-f5cc-4d86-b2a6-8c832a550ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11364384-37d3-4716-8fa9-f8c94daa74a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b3b262-5520-42c6-8280-715bf0e5adcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8499a596-89b3-49e3-9c0a-415514d7e6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f751fc2-c353-41bf-8784-08bb06680267",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db083cd-3a40-43cc-9c03-540bcff30cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98e97be-8ea1-4f24-bce6-dc32a45ab488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5f257e-1b98-4293-a772-02afbd69f11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b83fff2-e754-4871-a805-ee77e6e4f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eaaa21-ec68-412e-a4ab-3c31ad0b85dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2fafb2-fd4f-4eeb-896d-393d8cdc2dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6780162b-32da-4964-a93b-e1a8eb6198d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2ccdae-02e2-47a5-853f-ee7e7289cd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9ca007-a104-472c-a376-200f28beab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba13485a-bab8-4413-865c-d3435f25c939",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e3c2c6-0d35-478c-b766-a18a2e047d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8765b284-dfc7-4582-ba3b-60f8281e8585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ce7c0a-7340-40fb-b099-56d135cbef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2acd37f-00e8-4530-84ff-e58b7d36ecb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c1d117-f2e1-457a-aef4-8c80f05e29b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45d01fa-e5c8-444d-9820-9d254c4df46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf1df34-a852-4d36-a502-ae94245e4b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ec46b0-6a28-4ee6-94b4-f7fbe6b06b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d0a675-a3c1-49e0-806e-ac5c138184a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a71eb9-8d7d-4264-9448-12bf97792bb4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e000c2-592b-4279-a4c7-d98dc5aca08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950391de-384b-4ae6-b019-31b00f7e9741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8414c44a-392a-4072-8ff5-771580cdf8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9df6fe4-d46f-4707-9379-7e0a42d965ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44be9205-1d2e-4647-9fb1-dee9b1100c68",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8395b3f3-d4d3-4f53-9c03-aa5d38d13cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf5bb71-89c4-4550-94a6-0d07763beb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f64cea-2ee4-4f07-bb10-ae3c867be5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "68e00440-224f-43f9-ae10-074d0fe9ae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc54f957-514c-482e-98ba-b4d4c5ee42c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d586e3db-6ed3-4c95-ba2d-461e528096ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46808c7-bd0b-42f2-8ad9-743cf9749cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b088456-b75a-4dd0-bfac-706860f86748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e31dc9b-d45a-47da-acb1-121c1a51a53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0bd382-518f-4b3e-a17b-ad2eadb31f53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2487d04b-5571-45f7-8ec4-d54d379eafe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cd6b0e-b827-497a-95db-d198e29d83c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f00455-a974-4b27-bd91-031d8db81dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ea4302-5ee3-44c1-9a4d-86690ecffffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8e25fd-3cee-4c0e-9117-0aec9193e397",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4465f2-5ae2-46b5-a529-667092b009f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4abff0-2e7a-49aa-a754-03dcb4feb527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0c9c8e-10d5-4597-9130-f35fec435e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3d04b8-b8f7-43b3-955e-d5850f576bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7317f2-f42a-4c11-af96-6422340e21fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9346d5c7-5f14-4de0-9e27-bc4e374791b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48113c2a-6722-490d-8e16-f53affcd7ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddd67fe-4307-4a9c-b240-1ee541c73e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc57fbc-8a51-416a-ace6-b3ef0d56a6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5263a57-dc75-4833-9316-3b33fa937b1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbdb473-0d23-4b07-8b1a-ddf68ade16ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8406b97-1545-443d-9779-aea68c28fcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62ee411-3778-4db9-a1e8-c552d82091db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee12ffb4-0f97-4e10-a372-4984336cbd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a72ca43-6633-4411-98b5-7a8af24e923b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd429e74-f164-403b-8d4e-dfdb806134fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d4629-0a37-4e93-9636-6e57b4b3fe5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3fd3ed-f99c-464a-a29c-ddab5011da36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "904d7515-589b-4b30-afb8-e29cdcbb5ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8716d9-df78-4e04-8966-c98e1c057f11",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4fb21b-2642-4feb-bf1b-4c72fbf46936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0992e06-18b6-4726-8dea-6873e6ed8dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ac2431-681b-4c5d-b7ff-029533a0f7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15b47f9-60d9-4ac1-b9e8-188020426603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e2533f-6443-41a6-ada0-3781648dc680",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bbd97f-0aab-4257-9097-39dcf6aa97ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e639a8-db19-4ed8-9389-5aa9fe914577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfaf094-9042-4bdc-9b66-f24b63f4221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db71227-0888-4a69-a589-8388a9fd05d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d4fe6e-ec8c-4c90-8eef-b62dcb9d9ac0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1270a1a6-1c65-4de7-a93f-5a94285dadce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92fe2d7-d125-436b-86b3-d078014a2236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84beee4d-1c66-4810-bb8b-72a1b19df5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7559bb00-baa2-42f5-91ca-fea7e01b94a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66732bdd-77a3-4191-8d26-788fdd641765",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7660edf1-f3b5-467e-8eda-cfba8c1b7225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d55e489-113e-4330-b2de-706d510d246e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a555898d-0d20-4793-bc2d-03c7de4410c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64c2eb2-8990-43af-8049-d9248d13d9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539864f2-def1-4b5f-9b4b-3ba91c9adaf6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cfde49-c797-4827-9f0f-4d0639380dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe0e102-f947-46d7-874a-ddba7051976e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d141e81-e3a1-46b9-a3e4-5d1919d56fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25b6526f-a1ad-49dc-8220-b049b33183a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccdbf62-d31a-4adc-9bdd-cf3943c802d9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b68690-f20f-4dd8-8d0f-a2e711cd7428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec25b1b-0109-4576-a87e-f8862f847f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bb9b0b-c710-46f7-84e9-e9b94e14f534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f9e8ef-116e-4d5b-a73b-d7b932fd22b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d04d97-e0c4-4213-a7a7-f96ed913cdcc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985c05ea-8170-41e2-8169-e0ac743a253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6706e27-356c-4255-a543-5f4730e4a07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d3e41-f229-4119-892e-a324eb8b9cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc786a84-839c-4674-8042-f14e8a29440f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f20227-46ee-4146-ac80-f28a7c861b46",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f463635e-8dfe-4c9e-853d-51acb51f8edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2407c895-dd05-4a96-b35a-8401a5fdc7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b988821f-60d0-42dd-baf1-bfecd7a6a082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87a30db-70d8-404e-b943-35dea4d107bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecd72cb-a56d-41ae-9341-01e230b70c5b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6802d6ae-7686-4314-a94c-9cb17ef322ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713fc619-e1ef-4e6a-bfff-d6866f9929fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa16f81-7320-4c3a-8412-d4980d5dc806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabf70e2-1a33-45fa-ab4d-69d988b77754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c7a52c-85a3-47ab-9bff-77af6ab7b82f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9151109-fcc8-4287-b167-25216a2a6a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9b94d5-950d-434e-80c3-77192b1cbfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cdc240-76fc-4fe6-bcfa-f21d8da06637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "672a0dcd-8113-40d6-ae6d-c96088a76430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ccca88-2434-47d6-be4d-fe4ebc41706a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56965d7f-1ef6-4fe7-971e-5da962f70394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b03b9f4-7c4e-4d7c-b194-3102abfd665e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e8bfe5-0dee-43c3-b7f6-289d6825fc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac653e2-fb2b-4005-981a-9092f8a4a2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89da461c-1e37-465c-8faa-76fbc8a53921",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145ab7b7-4c01-4947-a561-b07ee541e4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac93c9cf-d85a-4fc3-9f6b-07ba4c510271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94f7e76-9987-47fe-b72c-ec1de8ebac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5324930a-9d5a-45d5-b297-e2836101b004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281e7c5f-ca9c-4adb-b615-a9e2cf9bc393",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52354378-ad52-433e-94da-fe1ed911c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2e5c58-587f-4de0-9d04-534a7d192a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c8ff9d-c888-4bc2-835d-9990139aba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad325e5e-c436-4f0e-b597-8d1422070ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcb797d-01af-493c-a828-de672dd2ce9c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dac4b00-e6c7-4809-b15d-72b8865efdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22632564-7d51-4262-81cd-cb97993f894b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44febcca-5dd7-4244-acc9-bb9635a9c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11daadd2-9551-4cf9-80fc-dc5fd1e9f44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a56668-a5d9-4b6f-852c-f7fe518c2919",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24763ddc-d534-4e1d-8713-575b3b35841b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dac4816-f28e-4d45-8130-362fa5a74dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe176b1-feb1-4ff7-b902-cc3ed81d9232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20051521-bd60-40f5-b3f0-7f8b5760bbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93411b8-047a-42b8-8499-3cff8126438c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b97087-e040-4135-918c-1b11f8cf6592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fe2db8-2e92-44fb-a65f-025b44c6daf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3276063-231a-4e64-9191-6a5a037d53f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff7244f-a25d-4cc6-890c-ecb17278328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc91f2d5-7285-4051-bbcb-d02aaef6afb3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d699afb0-7f91-4717-9812-99196aed5e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d054518-7bd7-41cf-9975-bbdc7bbf071f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b790fc7a-ce9c-46cf-bfeb-24588e1d7e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa88bf0-1919-4b75-ba55-886258c0bb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf60e26-33e2-4744-b6c9-00cb1b1fbc61",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e921f784-f77c-4d8c-b1a9-3752712bc772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fa8675-278a-4160-8ea0-24b92a8303b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bffed5-95d1-4bfd-97f0-9afbc1ac0ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1936c1d9-d884-4544-acec-8fe236ece131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f1fdd-41c4-451f-9f7d-248c3087c133",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210aec8e-304d-48c6-ba38-d8a8dba03716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c7ffdb-4a0e-4b53-81fa-0187cf3b4ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3debbdf-06e9-4bb2-beea-885cdc839eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a140be6-b2f3-4c50-8956-10c1b8bebdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3605f3a-f5f0-4d98-8c19-e405e7a5d820",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdbf349-bbb7-497b-b4c2-7c5a3c23e77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2134ba79-6a61-49ef-acfb-0f06a497a2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c424363-dafd-40ad-bc9b-c5b1b7df1a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c806da-766b-42e7-a737-e602f26e8365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47522e60-710f-4514-a8ca-3c188384885b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f219b179-f2c5-4ca8-af64-902af619cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb6df06-c5bd-4d14-a5ff-9e31f4091f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00db8fad-ae33-4600-8d92-97ef159fdc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b5799b-b90e-4158-983b-b5ff5857e136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1680c4-22e9-4ad7-91e4-874458ca1032",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21d0c1e-960c-4914-8bd1-6b4e9b76ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47839fcd-17fa-4915-9fb1-1bc0b1060117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e69b444-bc37-4ccf-848e-9839f83c3404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed68f86-978c-4b59-aad5-4798643a13b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeb4ed3-3f09-40c3-80a5-4d70d7b50026",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b843fb-c58e-467d-8d2b-8e713c6f03dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5057626-1d23-4fcb-90e8-c7f4e13d9a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b212ec-9620-439b-9151-572729f4a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f648b250-51dd-470c-b1bd-126aad371099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b144f7-0c8f-4a1b-9dad-2bba4da6d919",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f02aeb-3c67-4235-9a80-aa6b9291d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67b6c40-9a67-4d87-b7a8-517c6c35469c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b26bbf-ef7d-4a3c-8c84-f8e56ee177ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc06bdf-e1e1-4533-91db-668ee8c89675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49da380a-4e5c-43a5-8ffb-c181c59dc02e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9981418d-906c-41d1-ae3e-784e645b37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e89b1d6-43a6-4d84-af5c-38303631edf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1af8d5-9e68-4713-b6a4-0dfd3b42694b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ac6502-c5be-4a2a-8172-ea759870a868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741e38d-a2e9-4597-9788-d671abae7a88",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cb966c-2ef1-4f48-a876-2e3e187a7d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d7a9a7-e468-4c83-b175-232701dcdc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b55537-7bb9-44cf-9979-e051f1c65114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaef1e8-6050-43a3-9eeb-9766fe29a151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a2b3ed-1421-4210-9879-0c9c14f0f35d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173b7835-e434-4fc4-ae11-9471c549dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213cab44-a701-4ec4-92e6-c40633f1b05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77251013-97ad-44ac-a795-fd2b61ef6e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d82c03-6eeb-42ff-abc7-8054579686b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e652f85-7d2f-415b-872e-d9f08974c894",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ed53a6-ce47-47a4-a086-f7656bbeb40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a782247-6c6b-424d-aeac-8e3cf61a5576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde05ca0-69fc-4e1a-8487-ff0c1411211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66f3a0a2-3a75-4c0e-8f0b-439750f0aeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0e5603-5898-453c-a238-16bc768f59f0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae7c232-858c-44c2-aab8-fb3905a5aaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6fef48-de91-499b-a331-900785b0bb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d91294-5e65-487c-8eca-338edb65d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b458e6-303d-46d1-b28c-0458a96cd605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3516bbf-cb34-4891-8236-5e3a2ca4cc60",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0519d2d-00c2-4d02-99bb-76106fb355e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "53c82054-d923-4493-8c6d-c794547ef539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2672f4e4-5e46-48af-92a9-6583805095fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd28c87-d629-4445-a997-43cdb7d4ea52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69922904-c555-4134-a00c-51116c5e7fb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21b0dfb3-3689-439a-896c-84e3534a0cd1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baecf4b1-aee8-4209-90b8-1f1ef80ae936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d637161c-0fc9-4fc0-a54e-2adb961c1baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b724671e-a67a-49d2-9c22-40fe2cc37e62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9978d000-2de7-4a34-9fd0-7595fd0b4f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebc0897-8043-4ebd-8e67-669f9b9c1a24",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9055fa5f-ce29-42c7-8412-9e1c13f297d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7bb07f1-be09-4e8e-98cd-89641af755d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd06e36-30bd-4231-af61-1f9e130a645a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5a7c931-f4a2-4961-9976-bfcfeedde7a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fb75993-9382-4e61-ad4c-581ea6c838f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c27c43a-f437-4254-a3be-9d35244d7276"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bc380e1-bd0f-4d10-894a-06f50cc89d7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f29f3055-b71a-447d-99e7-20b95ff0d8a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca511040-93a0-46ea-b0d9-8cc994f2810c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fac3585-5a16-427a-be74-1a7f169ed361"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "207f9e6d-089a-4fbb-a47d-4774e227c0db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41f7ae56-7d13-467b-9fea-e5a3e7f3ac39"
                }
              }
            ]
          },
          {
            "id": "7441c649-f648-45e2-b0db-b1d683e72ef3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "792e08ca-80ae-4767-aeb8-a0f3e6b7e005",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6210f36-ddfe-4cd0-b99e-1dda19889cc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "649f1ad3-260b-4f19-8fff-fa5d688ae3c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd40203c-7c4e-40ee-ab0f-c2d41a52a281",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b7c2c67-7937-471e-9eff-61e493a43509"
                    }
                  }
                ]
              },
              {
                "id": "84e55e83-fe85-46fe-8ebd-734fe6184a1e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d54c4731-0ad0-4bee-a308-b7979bef82c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45674940-d88d-4c20-9de8-1d60d677a2f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ec63e7c-4f18-4d48-b7b8-cba1c91c526a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddc63d4a-4fa4-4f1b-856c-539485c88e7b"
                    }
                  }
                ]
              },
              {
                "id": "768d230e-7d4f-4c99-8b52-9a323d7b2ab6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c03efd-761d-4d5f-93f2-ef623f80a63b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e00983c3-4ce6-4742-ba39-1cc34a99c466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "812f37de-c476-4d76-9c9d-5c2c9bf8573e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e183f36b-fea0-4e9e-8831-1de06da3b160"
                    }
                  }
                ]
              },
              {
                "id": "e70fe749-e130-484b-963d-774258e3c610",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc05f127-3a32-422e-b953-e1bb0b4205c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e9217cd-cf2a-485f-86ec-af7fe3249cec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d7821e6-9242-4e25-a348-198fc22ed07c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "053a44e2-5f05-4f62-bc39-aa9eefa330c1"
                    }
                  }
                ]
              },
              {
                "id": "c9d44edb-30e6-4786-93f6-e8e3c398605e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2d723a2-7bff-4169-b309-01bb9e1ab859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52d5f9b2-840d-494f-90bf-ff769789c9ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6611fe8-d270-4961-9aeb-bc36ff5a3af9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6efb1b3b-f154-43ad-a336-46fbceef2e45"
                    }
                  }
                ]
              },
              {
                "id": "799d75c7-d85d-4b0d-b427-ab0cb713cbe1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31753964-2dc5-4792-9523-1f3116d612d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9d814ad-eecd-43f9-961f-56a186992205"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47d3db0b-802c-43ed-9439-d770f8ce56c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f35c5e1-96be-4e00-8c92-651bdf67d832"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "554a4b20-b309-44d5-8eb0-b617f0c7af19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2b1a8f2-cada-4559-bbdf-75e3c2fcfa0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ac29997-168f-46e3-94fa-743a310b6ff5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f010464b-339a-43ba-9bfe-08bad01ee6b2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d861698-4a44-46a3-a99d-8fe18d1075c8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ed505814-9ff1-4a2d-8d45-b697b9da21de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0132e714-ff96-418e-ac7b-e53e10da2015",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e83465fe-5073-4fab-a2c7-a06d55ff0c92"
            }
          }
        ]
      },
      {
        "id": "5eeb8589-d473-4422-b4d6-553d2d8f8d6e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "af5db99d-818d-42e3-9c8a-2c919bd219af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6090800-2de9-4dc9-af4b-2eb75f3443c6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08fd760a-d725-494b-a8de-cbf1ec6bad83",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226ebfc2-1a4d-4760-83df-f9b26cafce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62b01be-e157-4ffe-883f-29de775fdeaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64103f19-c530-42b0-9bde-5c30aea58f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbeba8e-612f-4f4f-89d0-000b1edd42eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0001e3-2e11-49cd-9455-bcf7e30c7714",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad22e18-afdc-45aa-854b-dc54edfb16da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5523ed9-6fb4-4dfc-8a8a-e71558ec99a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2924e5-c6e2-480e-8f94-0a7d702f837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c8a663-5237-4f1b-a223-e1ae4e71e66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c9a973-9776-47af-b196-72d6f077ea8c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9a9df8-d171-43b7-a9dd-7f3cfc4237a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf0bf2c-2f5c-420a-83c6-64f0b04914fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c05c4e0-4c69-4c4d-b3c6-93f49363d594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6727351-c4f6-4f67-9ded-f683ad8619d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0fc282-deeb-462d-9884-2f516b1e4324",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ffb89-2388-4833-b0e3-56b6d2a13552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a699fcb3-24cd-4cbf-87e7-ece809c659b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07963d33-0c05-497f-bf63-6d93f0921c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a96547-c820-48cc-a924-964f8f5e014b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c032f-bb0c-4bd0-96f1-2a77f6278b13",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec8a4a8-7b9b-4c3e-ada1-f3bc58f556f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6da7e75-e4b3-4541-b332-179cc78f87c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc23a00-6487-4e03-a3dd-d0178ce35bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a89a51-3dba-4351-8f2b-e39f0453087b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0ccea3-e220-45e6-8905-08143f707f3d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d6ed4d-1408-41db-9736-c226487b63e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1188763-3af7-4ecc-8a7d-d6ee69bf1d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6522a8f2-a39f-4acd-a565-93293c183382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f02b1ba-2f10-40f5-a666-61f0091df744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47c9b57-c2d3-4db7-8dee-8a0e8c16d1d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb8eb20-4347-40a2-98a0-c68bc1a88dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5930cd24-95b8-4849-87e1-1586a577265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0886b861-9c6b-498c-8d0d-fad92e8decb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "443ed260-dd55-4de2-8611-78d238e96e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a43796-ee1e-462b-b4b6-46c06227061c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d51d6f6-2023-438d-a27d-62ce8c43251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c38da6-5d1c-4d95-85e8-e87b6d337e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90012eb4-40de-4d45-a1e2-511afbaa42b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c695b742-5cf1-43ce-bbb7-2dfe11861a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c4d265-047e-42fb-964d-6526edc0675e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44ca3e1-4a4b-4144-89d7-9077bf5f7967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110bc97c-4092-424f-9992-9b71ff4cc700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c28a2-ef6c-445b-b62a-c86fe255fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "495ca455-52c3-4626-8742-35623c3ce99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0a4357-3105-4dc4-b1d5-ca521c0207a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3b9680-77bc-44ff-9d03-f690aa50ccd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2898408c-f9ff-49cf-8a63-290a1bec0966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d9f36b-35c4-42cf-ab01-778a6e644447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8331865a-0b18-4365-970d-e6284f741612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca71f897-ceaa-413f-80a7-0a926f3215d4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a38eafb-1d9b-4a89-8f8f-0635c80d599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafa6729-7789-403a-a3f8-595a47d16d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb82485-fb2b-4ce6-b1b9-a137e309974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2505bf7-12d0-4d2e-91f1-ab50f1931ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6e41f9-9cbf-4147-8603-e271be232a7a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c37f70-e84b-4c1f-9512-6af2515b0dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436ca1a3-c80f-4e9f-a4cc-03dd7fd9da4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259960a6-e5f1-4ccd-af47-de4aa45ebb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d52fa5-61a4-46cb-86e4-ca44a63484d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e25657-4450-449d-bd2d-c57bea175030",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734a3f43-1b7f-43e6-9c89-7ac0fb35dd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cdb310-f1a4-43e0-856f-26c3441691c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294796f2-40d0-4fca-abca-fc131774d3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "457465ca-5710-4a8d-bb15-164dd1236727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcbef99-81c0-41db-9474-087febafbfea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acaedee-3911-4aa7-bc3c-1e141437d7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d8e79c-6697-4257-acda-c0b573ed63f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7253243-2787-4da0-b95d-d2a298874dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab545870-3c89-4601-9267-cb8bc86ff4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda6ec50-17db-41f0-8488-2ccc34432b50",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddb1819-3e19-492f-9abc-d9a93941a1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f46bac-42ee-4486-aafc-b29291494dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5ae279-3a08-4f2e-97e1-30096781d2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e89e32-e8bf-4298-a7e6-4ccd0db0ab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46060ca2-dea8-4a3c-9711-02151a6f7842",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a2ec4f-e424-4b8f-b20d-a191f929d52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c4384e-ca5c-4a87-b354-4b619a8ad1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6b2ba-06db-498e-b167-dd96d232e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1b0c31-0ab5-4329-9361-b2463ed67717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf21df9-a965-425a-92d6-0288de076ee3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d866fb-6807-49ad-bd2a-edac40136544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c902200c-bd97-480f-b6fb-93ec0586d63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43b4f27-6cf3-468a-9f83-0e04b7ebc675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "356d9475-1dc8-4f97-af2c-6ec91016e9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8732e5-8ae6-47e3-b103-2a3aecb995ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ce3a1a-b6bc-43fd-b45d-87fc443686a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a216b93-c1fe-4274-a075-2322c2ed69ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddeeecb-4ebd-4ede-84c4-156d95aab80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec806822-2d76-4d7a-88bc-e2019a26123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09026df0-990d-4352-bdc4-47bce7bfca6a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac96d384-2ea3-4c4e-b855-11a22ee44e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d862b1-eca3-4f0e-a4f8-1845f0e194d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323cfa43-9030-45ad-be35-0278f325fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e979a46-ca10-4f10-aa4d-474b4ca00d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602d22f1-871a-4d13-b565-fd7bce41970e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb39a613-fc93-4c3a-b396-d431fc1b9aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e299c3d9-cbf7-4199-868f-ed61023a7d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef9a979-f9f3-4ff0-8476-918674642064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79c77ac-f2e3-482d-a40d-a5e638d17c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a16806e-3952-4c80-8ef9-ed0bf3099495",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a9802f-9120-4045-b955-e68b751fd05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69121244-d5b7-4064-8804-a2fb78a7ef88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057b588f-9359-4cc8-90bf-7c9a552c2c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa198b4-8e08-4af7-894d-97e5b70a300c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa32436-24d0-457c-acfb-6ecc1c7a5e87",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdef6b3-67a5-470d-a580-c60c89cbf73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1aeef7-3e47-4a05-ab8f-d7ab704c15e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf4d94-a83d-452b-a6e7-8747c8e8913a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fa6ede-4633-4e7f-80bb-05b542a053f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eebccdc-464e-44a7-a1f5-c799386af53f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13221554-c6e5-41d6-ba9b-b63309b6dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f26497-5421-4a0a-a057-4535c1689a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb89b3f-5d2a-4374-8f68-9724bfba3d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a76bed-ac97-4c27-9d26-d206d86b492a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1ef4a8-45cc-4132-b13c-58dfe5dc121d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b907a89-6db8-46e6-bc85-a8d6ac83317e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96932483-a43b-4c49-aad7-d627b1466598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fa6468-548a-477e-93d0-a6e3f0600aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb69218f-2f90-478c-8d60-c83e0a7a6bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ea1666-2f0d-4b83-bbeb-284f6334b962",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fed691-118e-4d70-9c1f-665592fa162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bbaa84-40ab-4261-9777-8c0a67f8d62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef3c3b-1108-450a-829d-bb4fbf29bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94fd8bbc-fc6d-48ef-a808-01b62bc03740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee0937-0392-4ca7-bb0f-245f19e147b3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95f2bfa-53ea-47d1-96ea-ec9311821f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f9aceb-5382-4d88-86f1-a20e535fd247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4a4475-3e13-4429-b52f-4958af946f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bffb5fc-598c-4f32-a015-28dc76a9bf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4584e543-1ffd-4f6f-b75f-694cf2176b3f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06506dd-3453-4bfd-989f-0b10758c5754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6524f941-9207-4360-b296-24bd79e7b25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fa8de1-a242-48e6-b117-60bdde97eada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7961d37e-e383-46a7-98cb-52612d646a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c69fc5a-5d1a-4bf6-8cbe-6d375f8dc02b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be53ce1-18a5-4995-b0d1-ec0fab872c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129c14b9-f6a0-4a1c-9937-4c01c23b4eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df68c5-873f-407a-b8f7-6610e25d41ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be808775-e762-43ef-9d40-2333578ea15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadb78bc-622b-404f-ab01-5b97272f27c1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766dfcad-9da4-41fb-8d7b-6a0521f6a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0606382a-a118-4118-872a-78e2b9050223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afec5278-1f5a-4625-8eec-adca83fd8042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1e10ba-41f1-4d5b-8769-493e120a6265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21997854-2904-4506-8a95-ad16fc924ef2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e6844a-2b18-40e3-a11c-c7ffc26b899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465fd2e6-e778-43d1-b896-42f310906c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f181fc-8eda-428b-92b2-8c767511ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "294162ef-e34d-4460-9cf7-c3461cd1b0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f23937-f86e-4882-afc1-da5b24909d89",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5117a8-941c-4775-b85d-a69f4ae55837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a514e3-5840-4fef-8d3b-392d9c61b48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57af575e-8114-49bf-bfba-4fc33638f98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d18e58e-0190-4367-a0ed-86287b6f85ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251a2ecb-dae7-47be-80b6-82f94d6a6b89",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c30a09-093e-46a5-931c-29704ace3a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dbebcd-a968-4e76-8b05-85b683dabdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef1f70a-e6a0-42fd-a3b0-e4fd764f324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "750efae9-b4a7-4185-badf-230d2409fc13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a069d984-b19d-4ac2-a2b2-8ae0fe418dc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c055c99c-3d41-4b44-b3e3-8d51ff5e51e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eeebe6-207f-4db7-9d22-5639eb2b560a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2db22a7a-09d0-44d4-96a9-c8cc065a766f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eb26c5-5334-4301-b58e-05f6e5b01aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0401a53-4849-4c51-973d-8fac6f9387d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db528c-6c6b-40bd-96f6-b6845664f713",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd09025c-0522-42c4-afdc-c3838af7283f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccd0e77-1c0e-48a0-a9d9-a9a457f3f5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef4a4c6-e23e-4cfe-b4b8-b5c7fc90c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4026fe55-3d7c-444d-9496-88f6acde017c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd01befe-266c-487b-8b30-f0cbc3c6a334",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f39857e-5c4b-424d-a73a-a9ff8c18403e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5904a62e-f7e3-41bd-b9ba-7056f18a583b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "990b0087-8d3f-4b54-9473-fe6352eda3db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53246ab1-5f1d-497e-87b8-bd014e47dd2f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60f0bbaf-8293-4a6e-9e9f-a03e68044465"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6879786e-16c5-43a4-b367-cc8c016a2e84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad27a0ef-a70e-409f-89ce-f71a6d838dea"
            }
          }
        ]
      },
      {
        "id": "465958bb-89ae-46da-b844-56c7368a76d3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "01986adf-d473-4052-95fa-0dc65c8b277f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30277fb0-16ef-4055-84ce-1e04d1bb2924",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "381d0ec9-67da-4bbb-bc1a-d9f1b7b15446",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d92e535-5d8f-41d9-b1cb-a0e96daa3893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b7573b-597a-4930-b61d-0f8ca4dffb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a745e0-1397-4f12-9dc1-cb7203876ba8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f71dad2-eb37-4567-a0f3-fa6ded80b617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75165dae-7062-4d1b-95e4-29a664cdad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dbeca6-6c60-4b1b-ad1a-b462857c0c24",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4497d0d-1d98-4f53-bfa8-37c5e9d22c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d61e41c-a7ba-4b25-80b6-e8636cb82256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5625a2e0-0740-4da2-89ee-277c9a662033",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ba51da-f052-4708-ae12-0712776bfdfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91db363-aeef-466d-86f9-e8a0e5e8ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b418c5c2-c5c2-485c-be8c-b8cc496497dc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27b7498-6fd5-4744-ab4d-db73809806d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a32eb6-fbbf-4e08-b835-6d51f08f3584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a52cd2-5766-48de-bd1d-a1ac8f24246f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d80ac-ced5-48b8-a450-b15a06704d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69ef415-812f-4c5a-a790-b903e25f2141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6900aab1-70c6-4e62-b428-68e6018ebe47",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fa3bab-8328-4e25-98fd-57a7fd6c0068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de27c0e-d335-4a50-92f3-64b228cb2d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc4015-0fc1-4067-ba03-79aecbba0f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b07732-fbba-44a9-a934-067d1536704f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4776fda-f934-411e-aef6-0407952ac174",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5e6986-f20b-4fdc-9c83-4a056c7504fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ea4ddf-b02b-474a-be31-cb629b859f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad0799b-09da-4f27-831d-cfe68b41d588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ac5026-836c-4332-8c2d-a8f3df60e7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba36e2f5-88a7-444b-b484-1fe7e1e306ec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3df3446-69a8-418d-9576-41d4bf36cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37ddca1-9ab4-46db-9ab7-a699cd4d7646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab9a166-a49c-4fec-8d7d-c97cb0d3bff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4bea9c-c872-4bae-87e2-256ce92391b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f81bab-fa20-4063-ba4a-e43c237e15f7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581d544-dc62-4053-85e8-c95b30379557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49631b7b-82e2-458a-8a43-655c8817ca7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b464e2-beaa-40e4-86c4-b26d6648c617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b833504d-e330-49a1-bde5-d73c4a019534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824a2eb6-7250-48b0-a16a-ab63c16e3e51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b704b792-ac27-4ea3-9570-6917eb986d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c37b3a0-e38f-4acd-873d-c3186d217d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c776619e-9add-4676-805e-c13e93db97a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909576ad-1764-411e-853f-bd3f37733198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342476e0-ff57-47b9-b09d-b7ae3cd4e43d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e18078-6533-4107-8ca2-470042cde279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3877176d-6bd8-455b-9a8f-0c76ece2d8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ca1fb5-3085-4d51-a027-aabbdf9804a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d410280-0f27-4006-92a8-e0209787350f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673e323f-94b0-4c1f-8ee2-f9ae318322d4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f326dfa6-8f06-4393-8df5-e1cc0659dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6157b49c-7efb-41f9-8356-2d8a644af443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8556a76-9108-41ea-a186-d8326b7df32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af248736-a5e4-4b64-8ff6-75b0e53daa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc42b61a-2940-45f0-b93f-3232da59151b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3d5e04-2f60-45f1-8af3-a78ee926b235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9e0438-0475-47a9-8523-8529e0f239d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af0977d-f23c-4b24-aed3-4c3b2ed74868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6022076f-9f6e-4362-b0fa-5928545207d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908847c4-a2cf-415e-9c30-d75ad8914292",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f840320-af5c-4db6-980f-7cc97b6e02c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6cb62e-40b4-4e0f-a2e1-387708d8377a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3c5985-b4ed-4e5c-b097-3a11a5cd551c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32edf06-5907-423e-ace3-4ab4cddfbac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d2f5b-9b68-46bb-b329-fbaf1ec5b5d4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dec74e0-ad6b-4378-a514-f00df7cc85a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8844b8-9d2a-4b16-a56f-892f050db074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa66d8fd-508c-4046-9e42-b77f3ebfea79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a59604d-04a3-4813-912e-50fa28b851e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2d02d4-66c8-4c8a-91a6-36fb1257dbe2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5f36f-cbb1-44fa-9387-752e73bc9aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0996bb79-1afb-4790-9533-db3c25d908fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1d6208-b61a-4cf7-8c01-49eea18d3acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c118421-41bf-4cdc-a684-d9f1ef699e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b30203-5595-43f1-bb40-af20165ad0d0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da5d9cb-76d5-4249-8c3f-1d807e1097c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff1c09b-6b6b-4910-872e-0e0207838a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb470074-02b8-41fb-bc6f-ea7380d3f79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6780482-8f33-4e53-b265-5ecadf9ece35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e794ffe-acf3-4a7f-82ce-a550024ecacc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b776e2-0486-47af-be6f-8fd81f06c90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19a6cfb-09ab-4b9b-b57b-19621742e886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fd5129-5c80-4f6f-9d68-a3c1073808ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe6f865-4c78-4aff-9ce3-3a51315b783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baeaf00-cddf-49c2-92b7-701aa505ddee",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265c5f88-bcf7-47a8-be5f-714ca0f20074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86cec4f-b97a-46bb-914d-15652f739951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba45da-091f-42ef-a229-cd312ff7a8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf10d817-8bc4-4722-b1d5-1c3dc36c95a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fffdb3-9024-408b-a3af-6aea20decd38",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b93783-8563-44b3-a161-8e4c048c1be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b038902-df14-4ade-8e7c-754315f1bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc33290-d81c-4b64-afb4-5bc32b4b7a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09897a24-362b-4f4b-b6a2-fd920c5485d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5860803-e7c3-4a3e-8203-71958a2956b6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4553369-dbb1-4faa-b76f-adad884ea5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b94626-0a9b-469b-9689-6b754759dca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaffcc3-d5de-49e2-9a59-d13f91eec773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8385a8af-c52b-414b-8ef7-47a586b56322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bada0ccf-0079-4207-b354-97482b2c26a6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e15f15-2c9d-4da2-8f0d-f50a2b93a7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236fd479-27d4-4bc3-bc5f-6db64144a1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6f4c83-420d-4adb-8072-f6e671fd5862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3318ea-6ad3-459f-8e58-e4d7f877ca91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69698ed7-e2fd-4141-9f15-4f5116d56c6f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2ccb28-e7f2-4c63-a446-726b2bfddb85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f034368-fed2-48b8-bb6a-4680e0516ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5ce43a-d9ad-42e2-8517-9ef93f178122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9111ae4-4bc3-4964-ac42-288349b47cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ca8861-dae9-4ff6-b272-d2f29e5d8bf0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f564b351-fcfe-41e6-b67a-7e19cde559ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a38f7c-f359-4c3e-bd07-d2884c20bd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d949512-45a9-49f0-8a05-007f4e1e61e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2099a3-384d-4105-902d-a6d5609dcd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747396c9-9377-42d8-b591-50dad20188c0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17e7503-2b39-4658-91c9-8512a075f048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1318d0b5-8ee9-4486-8641-ec710c6e78a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd403a5-0212-44b4-b429-64166ce9b87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2259ba84-3034-4d62-bac0-269cea050284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8be701d-d680-4b6f-bfe6-0e2e351c63b1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44434793-ec3a-4f95-8144-7ef059cd8c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e90ec1-35a2-4dd8-b5ad-b80a6296d51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee11fbf-0300-465a-9ab4-248c7d4161e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcecc8c-f1d4-4153-8613-c8afd8211c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3c78d3-e05e-491b-8956-e0a27b1c3541",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345b9570-eea9-4cfd-b22f-cb830e282d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4617bd4c-9eac-4f9e-b2da-fbdd0941769b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0af33-d635-437b-9d96-747e8c8c761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7e17c3-50eb-4ca1-9ca9-34a5ceeb975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e8f5e6-c530-4811-800c-36f153bf46d5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56c4adb-49cc-46a6-8819-a52b5a9afa25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb132fee-9d41-490c-8f15-d988ebcbafc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896707cc-ea87-4459-8973-0d3660621c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6901ff90-332c-4dbf-99b7-65726d771959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25337927-d7ba-44ed-80b5-170a84564b40",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c0fb6c-a032-4d6a-9a6c-531f25ef90c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f90494f-2df3-4259-b2ec-af6a7dcdf944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7765afa0-1155-4ae3-a8de-519ca97e1968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aa89ca-a46a-4b60-b21e-e40064026306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1a1f57-50dc-405c-844c-35b4bc1e5100",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585a9201-8223-4d92-82a9-db38d4b5b214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085bd6d4-518b-4b7d-ab22-f73ae5e5c2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6e355-7864-4468-8fe3-bbad89a561f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f649b30-5d50-44ca-a973-e07895261951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a33516d-872d-455a-bc16-4226ae6b9816",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd591dce-8043-4ba6-8715-fb8483ea7716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3fe442d-5e55-415a-893a-bb300351ab5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626fa275-787c-40a4-8b9b-7c5e3050c681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a11e584-3912-44bb-b4ef-b9f3a07ea495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f32c60b-ebe1-4a6e-b824-4e4f3a218cfe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37ee16b-f2d3-4c88-b58e-f157d10a3c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be237d1a-0ab5-47f1-8d16-5d28bbb43888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5672ddc-a103-41d2-95a3-895729ad56f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db198af-6edd-4892-a732-e074c3b62517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f624592b-cfc9-426f-a40f-b996bb3be2a9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c861f74-f742-4a0e-91db-0d3fedea990f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c81282-7d1d-4095-80f7-36716797ea78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6b00bb-56d8-4553-96c1-481b6d17aaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093518ef-43d7-4de6-b274-beb57728b706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19b9e35-bf27-4e7e-995b-33a37192c2ad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a789c01-d057-4a68-a743-25deb075825f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f45cf82-71f0-4221-9278-d8b5a0f93880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0371e1c-bdd5-4589-b0bc-92a2cbf40e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c970f0-c3a3-4969-b814-070578db6b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5903aec-4d4a-4046-bbb3-da5e2d23f8a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce9719a-ffe1-4b70-bf13-c26c768ba202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5e608c-317c-4721-94f5-90d028d3fd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a607b49-bd2f-4902-94b5-7bcf9fa53ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a4be1a-2625-49ff-9a97-7f2b375dd2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204fdfa1-3e2d-4423-84c9-7cf129662580",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c743f4cc-a69c-4b14-8af1-34da062ff857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23e4992-664c-44f2-a22a-7cf6ad233aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff93ad4-427f-40e2-874e-dc4f0beee260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d091b8-0aa8-431c-aac9-ae61738e3863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a354e2a9-dfb1-45f2-99b5-59298e2c6249",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bf4717-6661-4b31-80cd-e709a70bc747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aeb4956-8e35-4026-a366-a53a96251bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afda0caa-3305-452f-b75f-a1047dfae2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f245d221-2bdf-4116-9020-4d218c33d2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f336fbc-fecb-414b-b72b-feb38a96b599",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adccf921-1958-46a0-9e80-09af738d4464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce048c4e-0952-49ad-ad2f-f2944e174290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a15117b-5248-461d-ae72-d1c04e59df05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878f1318-32b7-4f6a-a0f5-2e83a9ceb6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd54229-6509-46c2-8746-61f84a9de367",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24044e6a-e65a-4582-bbce-2109d4249bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299b5a43-5806-421d-8b38-e84eb7412b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331fe445-b8a1-462c-ae0f-cb7d30cc63dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ac546b-ca09-484c-a40f-b590726182b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63106ee3-d84e-4a5c-959f-44448b79f3b0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8af82-1c75-4868-9a05-94d030eb4265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf6e772-67fd-45ee-9e65-45c49832e15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e4de3a-eec7-455d-be40-e5dc581add8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6b96b7-3380-43a0-b874-c9361502d255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e782e3-9146-4620-b964-1494024dc2e7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fea7943-10e3-47f7-9938-633786c70f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829f6d9e-95c9-4002-8191-4cbe22ae7c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d6b25d-27a9-43f2-b6e6-c39ceb981e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90551a0f-0109-47b3-9247-0dcb1d63ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4520dae-04b8-4e59-8632-b59e5689e21d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fe5496-84d5-4b47-b5a7-bda05bcb807a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58f0933-b84c-4c14-8b84-e5cfd6c73d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1187fd8d-c12c-473c-977c-1c089da8ddbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06113bc0-978a-44f1-8cbb-885101550509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7052411b-0790-4ed3-a4a6-1692d48e6994",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db52f88e-790b-4ca9-b993-8dd65c8ff4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd557bbe-62ba-4029-adce-b64d9fd338d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369ddd4-f46a-4d44-837c-8088730f4967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f333362d-d5e0-4357-8b19-56305ad23ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce88ca4-5ce6-4d87-9acc-c9b2a6418946",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b38fe4-90d1-4cc3-ae00-90787cafa241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d95047-603a-4d94-9cbd-16f82f098042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af4849d-1549-48cc-a449-8ccef58c15d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728cdb99-0234-4969-b270-9d8836ff436f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7aa472-1edd-4806-8f3c-9ec458a57b30",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4d4275-71d9-484c-85bf-7937ad5a10ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83a1db1-86be-450e-b377-3288716d94a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff69832e-dc2f-462a-950c-e6eb92e04013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef75841b-a13f-4f44-9653-3edf3ede7e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4748eee4-5ffd-406a-99a9-d760bc434fed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9480f5d5-150d-46f6-bcb2-62cd62049b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb24b50-e2e6-4eef-841e-697a961de4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d883725-6d23-4e41-bc35-e5e0d0639b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd72ef3-c1d8-40b8-bdcb-8c3cc25578c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee96c7c1-619a-49fc-ad86-c5ba617d5bd1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0618295c-a7b1-4943-89cd-79be17c8b0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fea8c1d-51ee-4004-9a75-412c9e104758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65754030-8ab1-4924-ad9b-a63e1a191eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b952cb66-af1e-40e7-91fb-06e211a47ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c6763d-ea1d-444f-8502-2fe98232b879",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88821b83-4074-49d3-8f1d-6710dd05ff27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706ca644-80c9-45d2-8f21-0a969105d5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8525848f-9afe-4def-a089-968228061f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dafbf72-6dce-4e1a-b371-fd4983cf47fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580403d4-4b32-4d24-8a49-cd2a9cd1b651",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206487c1-44fc-4d30-aa58-23fefb6943e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e78c7b-b633-4c07-9a2b-9494fff9f814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e53f4d-55b6-427a-8924-351a7c8e9e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b038e5-96f9-45c1-a325-5b72ff1c2058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717ea5a0-fce6-4e3f-8e73-2a7d559c650b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda10173-cd9f-4fe3-be9b-a75ebaaa47a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0444dc-78b1-493b-baf4-d7a872171337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a9b42a-69f5-4dfd-b3bf-96f50dbfb941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4970836-591b-4f6e-9dbd-4fd6519dae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b37b3f3-0c18-4459-8083-e994359c16d4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea09de06-e873-4839-9215-98167517dcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b7afc1-39b5-40ec-b569-14e498527eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc344e3d-4312-443a-b503-3a7098e2c588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73053dfe-4f96-4453-b5c6-cc04a623b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ca37e8-0b76-4fe2-8936-e0215b4fe65f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebf36ff-e1d4-444a-b05f-d3b642417a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1347f170-d571-4cc8-9ad0-04e6eabd84b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689afd9a-8030-41cc-a61e-bc08cf5306a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f211d82c-e442-485e-9c91-86f87a20edc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07fe1ea-de4f-4899-ba0a-55d941841801",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71aa34c-554f-4c19-a956-4f021050ef11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b67977b-0a3f-48e3-8921-8d96494b83d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ada9a6f-4990-45e2-bace-7d0abf304635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fc8c19-1ed5-45dc-a721-fbdf17a1d0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67254c95-94e7-4a2d-acf7-0c950d10ed91",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9706efd9-3dbb-4993-8357-d5389470def8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdf9dad-c01e-43be-8bb7-f9026fa74d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ec2ee1-9d01-43dc-8ce0-2fb41d87cceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7127e583-24cf-4d01-9fef-dd3e6c6c1ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeb3f47-f1ad-4225-ace7-3630980c46b8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41823b4c-a31b-43e1-a32a-ae32666f788f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b0d920-2cab-4bb6-a0cb-21e09de07d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642fcb38-ceb0-4bd9-a9e2-14f662e50287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9045d523-0092-4b85-b81d-6249270956e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f051ea-05ae-48f4-b218-23f044470991",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efc2b8c-490c-4907-9918-8db9ed0bf0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267f4a37-81df-4ef3-8ae2-1e21cd89c3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904cb392-965d-42c6-8797-fed4aab7365e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6a4305-9433-4ba2-9a6d-722715bd35e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf05d73d-eb8c-444e-a66a-72d50d75aa7b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2720fb-0c5d-4d3f-b6c1-76a067ed5fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782adcbc-4103-4367-95db-87f9dfbd924b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6a1059-da63-4cb3-969d-186911943f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98930aef-15d7-46e7-a5e8-0cd64bad3c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1d39ff-939c-4c59-81d9-63c432f0a0a0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f189ebe-65b7-4439-9486-b371e8e38299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d4bcc2-902c-4ccf-be07-f51f7f8c24fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a47e61-a735-4444-afd6-d4ed38264aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10743c61-b621-4107-bf66-c683b8237e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53984d7-9e62-466d-a482-5cbfd8699526",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f177e46-7c23-49a6-a489-231d68e5d807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccc8365-1595-44ad-b6e9-c4f1d17a6c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025790c4-0406-4a86-a3a0-fa2f0be88d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2423406c-7502-4c0f-ac1a-26212f7fcaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bfbe7-2bc4-4b17-b18a-3c9cc50272d5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7fb286-d270-439a-b607-e5a0f4b8adff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56f7b19-d483-4643-9def-1027db262124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3809e158-43f3-42e2-bb47-9bfa64a7ee60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7934f371-ad61-46a0-a273-6bd2e128a683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5f2fd8-b248-4a2d-b3b5-cad7a06dbaf9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87af46a3-0d23-4103-b7b3-ab7576bf7961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cd6860-0f50-4e07-b4c2-ae018fc6716e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc51e1-42d7-41a4-b99a-609ee23f16a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f47cb7-b9c9-4c65-90b0-56405663ff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6b3988-23e4-4e0c-a7ac-c5d26245c33a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef78766-578d-4d07-97fd-1656f8208c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a79d35b-f58b-4253-990f-60bb83a32f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3698ea67-01bd-44f8-819c-3f4cd2ec539c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c00bd7-6e4f-4390-b6b9-04c60b13c2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b34222c-cd62-4833-960b-2359e2c428c1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43fb08-5037-4f5c-a9c5-123f9e33de6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ad2998-83b7-4d91-8265-eff8040ac0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a27a24-b5b1-459c-8953-ff7a39ee9131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8417088-259f-4580-9031-b323c0db3ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc31040-8b70-4f20-a49c-4df0263ae82e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f65fede-c7d8-492d-97a1-41f558890f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53fbf1c-b384-438a-bbad-1ef8e0d343de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ae2efb-ea28-4d03-944b-1292023a4950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b6272a-81c4-4581-9b91-d31f48657149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bf0deb-fdcc-46ce-a074-2127f7c86d3e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc4e474-664d-4752-a98d-d082dda5ae34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487eefdb-f07a-4117-a8db-991ff8b4ae80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763945e6-0013-4fb4-9e2a-04395cf44e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ae6859-9ba0-4ddb-bad4-ba9fe814991d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4634df-f852-4c4e-9602-daefb3f08063",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4c32eb-ac5f-48fb-af06-12a4bea9f0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a594e5-bd13-4d2c-b954-4e75885b66cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0479a360-8437-467c-b9dc-c6a66498ac69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd7d11-200b-475c-bb95-36912ca87218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e991db9-30bc-48e5-a23f-ae4eb02ea522",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf3cb1b-c380-45d2-a22b-b18d1b9e6897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e42384-02c5-4f04-bb84-79b5704a82d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d38d480-d180-4cbe-913f-ea8c4062309e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd35616-c64e-4165-a514-566774807a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c23044-2c90-4845-88b4-55cfd5c92c58",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa03da68-27d4-4f16-b3d7-2b9725d46110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6f62f9-a8be-4c5e-9f2e-00ab4be3f71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0859a950-1ea7-4ce2-8faa-25f915da403e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f647bd7a-ef38-45ab-b1c8-9dfdcf2245e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e9d0e8-6e1d-496c-8e08-1cfd8421fd87",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea77ed1c-d958-4989-a5d6-4cf95639cefd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb0ab3b-e60b-43d5-95e3-69f7becbf14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caef54e8-afa4-413c-9eee-39f354299abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283b03dd-d29f-4dbc-ab80-41fdb848e8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0640aa-613e-4e47-9292-ea927d7459a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df419c1e-2949-4ab0-803b-fff33ab1fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a02c19-16d8-46a0-98f9-823286c3fe78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43597551-4dd4-4440-baf0-9368c01d9bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0628a5-01da-4302-b67e-0c5c66053c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798fe8d2-18e0-48f4-b19c-9637cc1eb8f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3561ed5e-6d72-42bd-9470-320bc3a50f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5673caeb-06ce-4558-8db0-cb31d99584e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c9ecbf-10d4-42ee-94f0-185c28039c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e312a5f-93e1-452d-b5f3-e156a7e371de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da41cc4c-02f5-482a-84bb-0212b492f005",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5b40c5-4b4b-4959-a3dc-5fd0fb449c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f39df2-3057-45f4-bcd3-536dfc5752a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560eabca-b8e4-4d9b-9038-c04d3feae2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e89a8cb-2e5a-4946-87b1-56a2a6fe9bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb42fed5-26b2-40b5-8fbc-510b1f2f008d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865098ce-33e4-422c-ac12-adb116a6ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a2a153-7c1a-4156-8083-f5ede13b5fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dc7ebc-418e-4cc7-ac5b-4cd0456b4966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c316770-f52f-4a42-aa72-51724d17846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb4a84-54a8-453c-8c93-87b143b55857",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804bd9b5-76f2-4ac3-a7b5-9ad1333f3859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee0408ed-85b1-44ce-b489-f4e24ffc2ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecbcf24-8039-4e60-88f4-998f5b9e2c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07aac8f8-2c98-4419-8891-76db4ff7ab88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bace8e-8fcc-45b1-b465-af9c365ee6af",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13114bf-1304-4179-b2bc-efd9036a02a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ea99b7-ef02-425d-9ca0-e0c9d937bbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93815837-6734-41b1-a198-b502cb77e0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ccfb9b-66d4-4bb2-b9e5-4a90ab7e39c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52e6d67-59f3-4db1-8ab8-25533063a640",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c65ea66-380e-4f30-9e27-70fcf6aa227f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ba72f1-e9e2-4814-bd0e-da49a1b9dc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5addbb57-0616-411d-8cec-0edd29e9d6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dd2035-0eaf-42d4-918a-8b4307d0561f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f0d013-b61d-45bf-b9ad-805f415ee6b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b946dda-371c-45f2-a787-c480fda91066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a3c03d-97a4-41e0-a678-db79e7dfe917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57468a0a-966c-475e-8291-2ce806c0c29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783f221e-213d-426b-a7d9-fc8fbc002415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf150ab8-af0b-4ff5-b791-9f8e9daa41db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec5cdc3-ed78-4a8c-a2b9-a719dede1c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da3fd32b-4677-44c4-be67-4895e53dc125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f321f5a7-ab48-43ab-854f-8f358914a3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7a3e23-f9c9-4d8d-877d-cc8e7e739e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f9c395-a476-4db9-a37f-739340d95c53",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf6d20f-b021-4fb8-8383-3a5847325578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a41804d-7b28-4af6-9f61-348dfa35db70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e62501b-d7ad-4289-9789-a9f7e0996028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949924a2-9a83-47eb-b3e1-2980c64b0749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5350740d-7efc-4f50-8130-b9df521c88e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df2a197-5121-44b5-8d93-be057a997c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c4c253-a4f4-48ba-97d1-4285c470389c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d819a3-136b-4996-8c36-a79b70dca4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0802440-9626-460c-bbc1-b900bc5a0ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90e8e22-4186-475b-b165-f95f102f1fbf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b12153-eae1-4299-bcb2-47f40cac354b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a38376-bed6-4fc8-b94f-ea61cb0d87ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d310ea-1df0-44cf-a924-6e3be942672a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bb5699-8ba8-490e-9ebb-dc53c29b1fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c23ea6-5a4d-4e32-b351-7967bb9fd26d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a7a346-fbd3-4012-8aa4-a582b2854612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13736ae-c063-476d-9038-eac876496455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4579bb3b-35e6-474b-92b3-8828859269e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1a12a3-ec17-4ded-967c-1ac76707f286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f569bd-bfa8-477b-98c0-c9c5eace68b2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d83f2a-054a-47b9-9693-6b1416bbe5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca2a67f-cae3-4aa7-bb6a-4ff6c48e021f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81365bd7-832e-4a04-a893-61cb7b141ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83c49ae-fe58-4337-8158-fc7022eb08bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278dd77f-a8f3-488d-8879-73db160b42dc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b48758f-12d2-4291-b40a-0851d244b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ece5c9-44e5-436a-a673-6aa79280af8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa957d8-abe2-47f9-bf0a-e7d7d8d326e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5fc7ae-cf52-4559-ab8b-1f857684e492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf7fdd7-98f1-4dc6-a2f7-3f82c8b02e99",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fe458b-f440-415c-97f7-7779db674732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6dcf252-b05f-485e-a8c3-5f52089ace19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dab975-4e62-4afd-90a9-dda7bf56bc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d442c4c-3b3f-4f11-bc17-9337c6f52a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8986a4b3-b5e7-49a0-a671-ed62f4b836ab",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95daf181-5277-4376-92b5-5b8773831ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e077eb09-727e-48c5-81de-49fa4b759848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8516be5-f801-4435-86b2-4778ca95dc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183faf14-a946-498a-9ac2-1a16902f9368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f492c944-254e-4a7e-8bcf-d50a7314fd76",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9d75f6-6f76-4a24-b22f-63d2ee945cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a872e6e-a4a4-46e8-9faf-cf700a886cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a517ceaf-0db4-470c-aca4-d565f16c9dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaedaa2-18d4-4d3e-8a63-db28ea8482ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c4036-5f84-43ef-a39c-1bdf42c0a634",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbdc798-2187-493b-ac33-b19419b188c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce94dd20-b32c-47ef-b59a-987cb20e9b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c16a5de-076b-4348-b838-d852f946fc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6667b9c-8152-44b6-ab21-fa9495f607d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff3b3af-a497-407b-80ee-dc694fb56775",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c67cf-f94e-4209-b5d8-5dfdaadae946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2332709-89ef-4c41-a97e-bf3a6cb2bf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ecb9d6-d085-4b22-b47c-978571d04555",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8137b3dc-ad8c-467a-a846-d18f1b0b5688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de57b6bd-69d8-4299-b7a8-85f7393c8121",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd03832-3a83-4ae9-9f88-ef18e9b62235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ebd9086-a828-414e-915d-83908dba4f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79778d78-c87d-4157-b397-d98fa4528d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10835f91-91c3-4a41-a7e8-64f4c7788f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13583680-5b4e-4e0a-bb3d-10b8d1fce125",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309709c4-42df-4cbe-b141-b4b248b383c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e259e2e3-dbe0-4fc7-b359-a7e44793c203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f98209f-e8a0-4169-9942-789e3873bb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a097f9-574c-421c-8ef8-638b713c2cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d302f2c-1b6c-47f2-8f54-a971f4e557fd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64add6d1-3263-410a-9551-64dec85cb420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f983014-8ca2-403d-8d7c-39cf07e3c8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aea6626-ac20-4d91-985d-bbe90f5bff4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1cda92-8776-416a-9113-878f5e063906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe3690-4511-4374-a777-b114da2d0dd9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc2340a-c361-4c7b-8964-102fdd1db5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1be059a-14c4-4267-b0d2-db17969d3fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd5e9f5-70d0-437d-a5dc-03479c1d970b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71881152-02ce-44ff-abda-9a657303bc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf687f2-ea22-4d12-a417-afa47a11e547",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f2a6b1-1c6a-4960-b451-8e9ce1e0fa69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5de1d9-4a14-49aa-975c-50d21b73ccf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd347184-7c50-4c7f-9373-9bcf22694065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e161ac-ba08-4410-9958-d27a9e8f13e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81cb0f0-d69d-4a88-8c5d-651223dfdd29",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dda55ba-caca-4a22-8f5c-60a7005e1414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b2fa70-6589-4d15-866b-419b23dfe89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44323116-ed80-450b-8452-5b520522fcd2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471548a6-e352-4f15-9211-a1eafb39bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7e92c3-e737-415a-b226-db674e939e86",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5511fc-1b11-420e-8a3e-e9de191dc235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b363cce-9266-48c8-a0cd-15075c44f380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd9a24-39ad-4787-8c89-3e8baefab2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cb3dfb-9237-46ce-8a58-9bdc2bbcb062"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "542cbddc-d609-4b6f-bae7-bec93ceb6b61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "193fd231-2ab3-47f3-9dc1-fb1f315e3b1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d18004ec-c15c-4748-8c6f-c9e459b59339",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e9a3cdc-b3d0-4003-bb60-b4e298859b3e"
                    }
                  }
                ]
              },
              {
                "id": "0bb0bdce-81fc-406b-93c1-aff0aca571c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e60ca7a-3c1c-4ce4-974d-2ea6d5317d79",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f24eecb-d77c-40ed-86ae-27ddbc09ea41",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c818b26d-f959-4140-8309-b154a0ffccb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0de103-0fde-4bb6-a790-e9d7fc82b376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9566a15-114b-4dab-b793-9559c07723e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f27102-05da-4eac-ae63-0f77a530b2c2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f9e2bf-55cd-4d3b-a496-14bf46b7a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "32f120cf-d948-441b-b42e-f60a5f79bba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c063e1-8c8f-4d5f-a224-02dbb6fa3da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f54850bf-151a-4fb8-b836-319bf8798700"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8398f71c-952f-4435-84f8-57bd3b06a054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e34b4e85-e272-4c90-868b-b49ce52d7af1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03658886-09e2-4b39-97f3-c27b86e2d477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "716f1de3-2692-4bc7-9ef2-7bd08ad209fc"
                    }
                  }
                ]
              },
              {
                "id": "7fe73f13-b5f6-490a-bbab-6573ac7d838e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d83a8b56-d11b-4874-bb5f-eba6eb6d7f6d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a33a7d-1a80-4333-8062-637939a5cea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b97c184c-0b7b-4c43-9455-16ef218f04d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf7d829-03d3-4a31-a3dc-3713ccf3b1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f836b0-60d7-429a-ae4a-4cf2989cce6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29b95321-54c5-403d-8e76-3b498ed599ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17825354-f5bd-4db2-8909-62a91091f682",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9152690-ef3d-4294-9566-526e4019e61a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d84855b-3bb9-44fd-9f1a-03cf83f0b731"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7354e9e3-c7fe-493d-8d55-5e6b65184533",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "728337da-3cb6-40e8-8439-155aba62e36c"
                    }
                  }
                ]
              },
              {
                "id": "cfee8c00-12cd-48ca-b1ad-94f5768a04ea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2ae1a3a-99ff-48b6-a15f-f440ebeba50b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b6fce04-d248-4732-9dd5-c96f67c7eb0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "341a806c-1ba9-40f3-8a89-a9e62b43e424",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e18f5fd2-4518-4fb3-9348-7417071c2fbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ad5d54e-3881-45fa-8275-f3c83b9e5224",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f41bd05a-bfe2-4bb2-b9ec-0ae6e6cf5df6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41552b4a-e7c4-46b3-b9fd-3b9b60237962",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6095173a-c12e-406d-9dc2-8a1000924520"
            }
          }
        ]
      },
      {
        "id": "a88d30bd-8122-49c4-8206-25f35852810e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d70f714c-738a-4e91-b9af-84c59f9b3635",
            "name": "Negative Testing",
            "item": [
              {
                "id": "531941d3-3f20-4e52-9f3e-129fa94ef1f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ca12e-7597-4087-9b8f-dcf91a85a980",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a46a2b3-dd50-451e-8132-38a16ae5ebff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd79b71-25ca-4efa-9f7c-f40063b89cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0faac6d8-86ff-4458-ab06-5fcfd48b25da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbf032f-6736-4c5d-948f-2b4de0d58b62",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82d90b3-709d-457a-8a4a-bb4a153283da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "404537f3-27c3-4706-9d1f-0a9c141a9e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a6979b-f6e3-453a-a544-134eb6edde88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "058ab4d6-9b25-4bfc-bba1-680ef22342ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8d302e2-aaaa-40cf-b32f-82f48fcb17d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d66f803-afa8-4743-a5a5-02daedc99b3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42fb141c-1427-41c1-a7e6-cc51631b8336",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30648a4a-a8a7-4717-ba7f-921bb1607c7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "250316f3-53a7-40a8-aa79-89455b1b6676",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b19b037-a1d9-4d17-a0eb-55c6b637b66d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bd3bbba-0174-4c1b-97a0-732315da1aae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fda621bf-6a36-47d5-b6e1-d684d8ab0732"
            }
          }
        ]
      },
      {
        "id": "0f7052a9-9fd8-4e88-8ea9-a48283ddc440",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "424b37dd-9c17-48a6-b863-80ecc8e1c342",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b1c7e98-6ddc-46c7-8c03-40d8875bf9eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b9a2a3f-60dc-4721-9b52-d63a18de333d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae0a32c-1464-4c58-ae7f-5f4fc2e2e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce498f86-4af1-46aa-84f7-5a0c4824bba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3301a669-e25f-4f35-94f9-9f7a57986c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "035f39a5-21d2-40a7-9eed-676b822a32c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7005ae1-07b4-4a69-aed3-bb4ac8521550",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80023d5a-c116-4895-9701-fb566845dd82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "27639682-3a5c-49a2-bc8d-0cdaa458409a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fe01b1-7142-4535-a5fe-c1493f889201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50d6b10a-a496-444b-adc4-490f67297769"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4533c867-5f9d-42c1-b971-e85d2990163f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8ac8bca-25dd-4a2a-a57d-c1b73a7d56a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59539a19-cb92-42ae-8b33-df8890535552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae8207cb-ef71-4a0c-b74c-f148a6d1044b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a16a989-ebc2-4e9f-8028-e2113d5d07f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f06d0a77-32de-4cf3-aed0-a58910191bbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7ba80be-09cf-4de2-85fe-492254c31241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4b22822-2a53-42d2-9792-25ece9ed4245"
            }
          }
        ]
      },
      {
        "id": "b9754acd-e043-4ee7-98fa-e6f5ae67d708",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b270787c-6b96-4e4c-b936-de7df00fd506",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa9664b9-eb39-470a-9535-87ae0dbd2e9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31c49636-ca86-4b50-b925-f3456b1481a8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b26886-6173-4619-a270-1bb188606f98",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5da305d3-8166-4821-8143-eaa5d0a0e389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53031be-3d59-4e31-98ac-1b1f7f65f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0018c7f2-4424-45dc-951d-6c28055fe579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a77a22-e777-421f-a4b4-a75a699cc7f7",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa65d81-bbeb-4b6b-bbca-d8cbb6d0597c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b38cedd-eaa3-4c2a-936b-cfe8a0dc1807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955b6f4e-e084-460a-bc04-b5477e605eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "febf4bab-b6b5-4b56-8fbf-b28d84634e46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8e8d282-603f-41f1-9e40-94511bad6534",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5187fc5-87e4-4ad7-aabf-cdec541477f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f85877c-547a-47f2-9193-779504458488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bef0675-876d-438f-b9f9-d96120b4889e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b58dd80-86be-4ed1-81fe-627e43bad994",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd4bfb22-047b-4653-9125-5ed77d507d7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a1f0100-2f49-48ab-9122-3bdd2316c13c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d72ad0c-56ce-43d8-9faf-750732721a8a"
            }
          }
        ]
      },
      {
        "id": "c1a53e25-dd41-4fa9-a034-a60d6b29fe26",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4d17bb6-df62-45c0-8181-529df2ce3c95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92490b48-8858-4e48-ad25-7a5be70fcb91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a4f83c21-7962-4963-ab4f-53e604067fbd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53a1291d-a329-4e94-8963-c0bc4e4c2804",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7874fc9-bf3e-4b27-8789-05dc63f7e15d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 653.0961538461538,
      "responseMin": 12,
      "responseMax": 6440,
      "responseSd": 720.6422471981116,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678927313026,
      "completed": 1678927494995
    },
    "executions": [
      {
        "id": "3e158c81-6ab9-4477-b516-240a9b3b6dd1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de1f6ed7-16f0-40f1-b280-c11f20eb53fd",
          "httpRequestId": "ea4210e9-5048-4021-8df9-41e1fc72e171"
        },
        "item": {
          "id": "3e158c81-6ab9-4477-b516-240a9b3b6dd1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e54ecee8-7ee9-4459-b7dd-17951da20afe",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "49352482-1350-45a0-9b2e-b9b2677fb2aa",
        "cursor": {
          "ref": "54313573-ae13-46c4-9ca6-a7e9b13bd70e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3caa774c-390d-4fe9-be6c-129078bc9dd2"
        },
        "item": {
          "id": "49352482-1350-45a0-9b2e-b9b2677fb2aa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a2a0e12e-4faf-4ac5-9235-8bb8d4ee8c25",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "da7202b9-481c-42f1-a6af-3e2b0085994e",
        "cursor": {
          "ref": "43a6f9d6-ed7b-4615-9fe5-e61ee8b37133",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "196cc57f-5093-40de-8d4c-65afd049dcf9"
        },
        "item": {
          "id": "da7202b9-481c-42f1-a6af-3e2b0085994e",
          "name": "did_json"
        },
        "response": {
          "id": "faaee3ca-48ff-4bb1-b53a-62e65d72706d",
          "status": "OK",
          "code": 200,
          "responseTime": 1042,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8369bfb-2c15-438d-867f-06354b8b0767",
        "cursor": {
          "ref": "745e11d6-61bc-424b-866f-f9a33f1275ea",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5733dddb-ad36-48e9-bcd3-5b351f0abeab"
        },
        "item": {
          "id": "f8369bfb-2c15-438d-867f-06354b8b0767",
          "name": "did:invalid"
        },
        "response": {
          "id": "f84c7b5c-d905-4863-ba23-28241c6b0016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8369bfb-2c15-438d-867f-06354b8b0767",
        "cursor": {
          "ref": "745e11d6-61bc-424b-866f-f9a33f1275ea",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5733dddb-ad36-48e9-bcd3-5b351f0abeab"
        },
        "item": {
          "id": "f8369bfb-2c15-438d-867f-06354b8b0767",
          "name": "did:invalid"
        },
        "response": {
          "id": "f84c7b5c-d905-4863-ba23-28241c6b0016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239a9201-64ae-4991-b8fe-f85aa143f972",
        "cursor": {
          "ref": "9c8d90ad-16f4-4394-ae7e-0a94db692644",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88bc2191-cbfc-4f79-b547-a7460182cf61"
        },
        "item": {
          "id": "239a9201-64ae-4991-b8fe-f85aa143f972",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d1283212-be77-4c2c-8bc2-bcb5b481c222",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1403,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3320f94-453a-4f5f-b27e-91d872ab364e",
        "cursor": {
          "ref": "f3acfc4c-485c-4876-8b54-05c4852b6743",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "931d751d-a79f-4010-b71f-b2a9c9cdaae6"
        },
        "item": {
          "id": "c3320f94-453a-4f5f-b27e-91d872ab364e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "774ffd04-6eb6-41a0-9fe7-d76520bcfc41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 560,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c36fbb3-8fe7-4702-ad11-c7f64e5b94cb",
        "cursor": {
          "ref": "733be284-c436-4d59-b121-509233e99de0",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8cd56775-cdce-45d2-af9b-ef767a8932ae"
        },
        "item": {
          "id": "4c36fbb3-8fe7-4702-ad11-c7f64e5b94cb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a8939115-844e-459a-bde6-26710ed430ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37dc2c-40e3-4385-a082-422114d62e54",
        "cursor": {
          "ref": "dc624408-d309-4680-9ac2-b50ca76376d7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f620458c-1fe9-45ae-9b51-5cb389f644b6"
        },
        "item": {
          "id": "fe37dc2c-40e3-4385-a082-422114d62e54",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9dfa303c-53f1-4df4-861a-22fcbc1a28d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37dc2c-40e3-4385-a082-422114d62e54",
        "cursor": {
          "ref": "dc624408-d309-4680-9ac2-b50ca76376d7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f620458c-1fe9-45ae-9b51-5cb389f644b6"
        },
        "item": {
          "id": "fe37dc2c-40e3-4385-a082-422114d62e54",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9dfa303c-53f1-4df4-861a-22fcbc1a28d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46bd88e-7605-4dae-a708-fcb593826a47",
        "cursor": {
          "ref": "6c1fe927-412c-4e78-9602-6599921d5c4c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0a2bbe49-9e70-4284-8947-39fc863b9f0f"
        },
        "item": {
          "id": "c46bd88e-7605-4dae-a708-fcb593826a47",
          "name": "identifiers"
        },
        "response": {
          "id": "b778210c-0597-43e3-8263-86b31ad14f29",
          "status": "OK",
          "code": 200,
          "responseTime": 961,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261b0a47-0afb-4e8f-ad34-96ba5b3040c3",
        "cursor": {
          "ref": "4b2ecf95-880a-4e9d-871a-764e89acd520",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "532c000e-32e3-4d88-9b49-cf391adc8577"
        },
        "item": {
          "id": "261b0a47-0afb-4e8f-ad34-96ba5b3040c3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6b8f3b7a-acb9-4aea-87b4-a1c65117c564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261b0a47-0afb-4e8f-ad34-96ba5b3040c3",
        "cursor": {
          "ref": "4b2ecf95-880a-4e9d-871a-764e89acd520",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "532c000e-32e3-4d88-9b49-cf391adc8577"
        },
        "item": {
          "id": "261b0a47-0afb-4e8f-ad34-96ba5b3040c3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6b8f3b7a-acb9-4aea-87b4-a1c65117c564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4822b914-6791-4cc8-b7b3-bc5e781cc3c6",
        "cursor": {
          "ref": "28decb36-c1fb-4035-8033-df1522db3bce",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "04721eca-0e43-4f9f-a848-e3c3f53bee81"
        },
        "item": {
          "id": "4822b914-6791-4cc8-b7b3-bc5e781cc3c6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c5cc7d06-8c9a-4953-b238-38eb4fdcbd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1116,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74b0643-9c0c-43b5-866b-c6442623129a",
        "cursor": {
          "ref": "8277a120-b944-46b0-ab45-2d53c4c6863b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e0ae17ba-240d-476f-80a0-d70290faad48"
        },
        "item": {
          "id": "f74b0643-9c0c-43b5-866b-c6442623129a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "17fa94e2-d897-4e89-8f3e-3c024efb6cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd9cdfe-6341-465f-93d0-6abdcefee0ae",
        "cursor": {
          "ref": "5a5bf7d2-fbce-464a-ba87-0263a2cc7af7",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "07afa761-d2f6-41c1-9bb5-26b89d8bf635"
        },
        "item": {
          "id": "cfd9cdfe-6341-465f-93d0-6abdcefee0ae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "45adddd7-cd95-4687-a3d0-4b71a939a494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66423337-f543-433d-b35f-99c4a3f0f6d1",
        "cursor": {
          "ref": "fe900eb3-4e2e-42e6-9e7e-8d568c593241",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fbe0e677-08a8-41de-ae3c-0c662154217a"
        },
        "item": {
          "id": "66423337-f543-433d-b35f-99c4a3f0f6d1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e2c72b04-7fe6-4db5-ba58-d5b6936565fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473a945-78cc-443f-b97e-3515f047ebb3",
        "cursor": {
          "ref": "58f6ebb8-a6ba-4c59-9d8a-d76c39d69d05",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "90a7bbbd-7e1d-443b-ae4a-f7bd89afb9c5"
        },
        "item": {
          "id": "e473a945-78cc-443f-b97e-3515f047ebb3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fb3d09ff-4b88-4b96-b51b-1f0a49aba8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803525ba-6efa-4871-9563-4d56ff7cdbcb",
        "cursor": {
          "ref": "65d04c56-23aa-4a69-b2ef-42665ea5f4ed",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "42385772-e351-4dc7-943b-19dad8e7779f"
        },
        "item": {
          "id": "803525ba-6efa-4871-9563-4d56ff7cdbcb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4567f242-c9a8-44ca-8360-14efd4f7b241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f322f192-0964-4ca2-81f4-9b600a7e6ee5",
        "cursor": {
          "ref": "3a9bd53c-ad1d-4420-966e-a91fb6db6876",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3bea17a9-5f18-4ab6-9895-163c8059e0aa"
        },
        "item": {
          "id": "f322f192-0964-4ca2-81f4-9b600a7e6ee5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "81814a0f-3a36-49cd-94a7-a0fba480c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307e5e01-36cd-4bca-a7bb-8d815f261fc9",
        "cursor": {
          "ref": "e3470841-4513-410f-b8f6-0f6312872d83",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4402c8c-7d7b-4f37-adb5-a48b735eb0fa"
        },
        "item": {
          "id": "307e5e01-36cd-4bca-a7bb-8d815f261fc9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c86128e0-c9f2-4a28-93b0-32cbc55a69c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca43374-daaa-4164-9f06-893866d267b9",
        "cursor": {
          "ref": "e855b8a4-9724-4184-95dc-2eb2d91abdba",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "44cc3fed-0c6a-4851-a6a9-3539d78204b6"
        },
        "item": {
          "id": "aca43374-daaa-4164-9f06-893866d267b9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e223eafd-7c68-4741-b8e1-cffcd25d4344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829ce393-7d31-4546-b0f4-5dc8d82edd26",
        "cursor": {
          "ref": "e0e643cf-993b-4ffe-a376-6560b9e3a227",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "85987cd8-0ee3-4425-ba30-22d54fce81ea"
        },
        "item": {
          "id": "829ce393-7d31-4546-b0f4-5dc8d82edd26",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ae559239-c803-4232-a28a-b53892c99968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78786eb6-de48-452b-9645-84a4264556a5",
        "cursor": {
          "ref": "19d54985-c793-4ab6-99d5-f79aca59f03d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "53fd2372-1f05-4342-93d6-f8dd104e1ae8"
        },
        "item": {
          "id": "78786eb6-de48-452b-9645-84a4264556a5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "60f3b4a6-ab3a-49fc-a8c4-7ccac5c12ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b8c278-b872-47ad-af91-605262f2c2c3",
        "cursor": {
          "ref": "329729a1-c492-4226-b14b-f8c1c9db078d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "22d80e03-7d5f-4e37-8570-61503b41adfe"
        },
        "item": {
          "id": "e7b8c278-b872-47ad-af91-605262f2c2c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "69bfdbc4-2772-4ddc-841c-1b30c73c7aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09077c3a-10af-4d0b-ad00-69705cff604b",
        "cursor": {
          "ref": "ed270f94-9d65-46fb-bb4c-5a695da55538",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1d0bea83-d2f2-42e8-bea9-ff56fe625e34"
        },
        "item": {
          "id": "09077c3a-10af-4d0b-ad00-69705cff604b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7382b9bf-52e4-4e75-990e-6051d29a15e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff700d0-4b8d-432e-b43c-bdc7582faf62",
        "cursor": {
          "ref": "5968f005-44d9-4fe1-be42-196e92f33ee8",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7c6a8e6c-d5c1-40e8-b5d9-cac8831c41df"
        },
        "item": {
          "id": "fff700d0-4b8d-432e-b43c-bdc7582faf62",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "65f817d8-e4f9-4a25-bda0-25f50fe2f66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387f3db2-1555-4b9d-a9ce-1dca430f2dc6",
        "cursor": {
          "ref": "740266a8-2100-4d2c-bab5-d28c9df2c9bf",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d4046098-cc5f-4299-a909-d33510e86a4e"
        },
        "item": {
          "id": "387f3db2-1555-4b9d-a9ce-1dca430f2dc6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "73027b2d-102b-4fa9-bd55-dd5e2a41d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59570cf0-1838-47ce-99e2-33a51c048699",
        "cursor": {
          "ref": "65f4d313-4dc3-4874-af73-63e0b13ad1d5",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b0e516ad-c93d-4df5-b8c6-50d1a2f8e524"
        },
        "item": {
          "id": "59570cf0-1838-47ce-99e2-33a51c048699",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "18a8bdd5-5a2e-4692-b979-979311b85cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4685c960-55ee-479e-acb1-7eb517ab56df",
        "cursor": {
          "ref": "fea16b59-4f68-4cb4-b9d8-76dc23f29328",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f8106df-51a5-4130-9b71-e1817701d6ec"
        },
        "item": {
          "id": "4685c960-55ee-479e-acb1-7eb517ab56df",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e00a9eb0-4ea8-4798-b524-282517c89796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a9e1d1-c5bf-4caa-af7b-94acd8cf8539",
        "cursor": {
          "ref": "1304a4fb-8bd5-4e4a-a3d4-e38be6e41fc9",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1dc54704-231f-4840-aa00-6a63caa30d62"
        },
        "item": {
          "id": "66a9e1d1-c5bf-4caa-af7b-94acd8cf8539",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8eb32b59-8a4a-4108-97d5-b54be04a3567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1df8ab9-51ec-4a71-b026-e56fd4e4e6d6",
        "cursor": {
          "ref": "f7821f89-1ea8-4b8a-98a3-a5dbfec52684",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7561b3f9-6f9a-4cd3-9b8c-bbbea1425477"
        },
        "item": {
          "id": "c1df8ab9-51ec-4a71-b026-e56fd4e4e6d6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b0f9dbcf-fee0-4f4a-955e-e5aa2ce17bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d80ff7f-55b1-4683-aa14-e390ca5d1f2d",
        "cursor": {
          "ref": "4b58223a-4894-4b90-8473-eebd75752b80",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bbd67b0e-631d-43f7-8eb0-002b4a597987"
        },
        "item": {
          "id": "2d80ff7f-55b1-4683-aa14-e390ca5d1f2d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fe35fa44-b74a-490d-bdfa-bd2f26110e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde0cf48-e1c5-4d5f-9760-c77767c7a426",
        "cursor": {
          "ref": "48ad62ca-7796-44dd-8601-f992c205cc78",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "658e6d8b-03e6-4bb3-821d-5fad4c979ae1"
        },
        "item": {
          "id": "dde0cf48-e1c5-4d5f-9760-c77767c7a426",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c9b3203c-6d44-4d37-8153-241cce2361d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf47089-02ce-474e-8205-a8bb84a4fce0",
        "cursor": {
          "ref": "bf547132-d233-4e7e-9b7b-85b1b72d9c45",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "01e09c98-2cbd-4ed7-91c6-6305449fe9e1"
        },
        "item": {
          "id": "caf47089-02ce-474e-8205-a8bb84a4fce0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3817e489-1ab6-424e-b2cf-d16b38aafb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c270bca7-a76e-4357-b852-546f99112fed",
        "cursor": {
          "ref": "c8b2cca4-d3b4-4d49-bb46-7ea10e9f4ffe",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d2b0e51d-219a-4def-b3f6-d750b3e25cfd"
        },
        "item": {
          "id": "c270bca7-a76e-4357-b852-546f99112fed",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "490a7fff-9d45-488f-82c5-50b5209959ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1fd9ac-ce20-4206-9a51-5da8cf85658e",
        "cursor": {
          "ref": "01d27107-dc9f-4c09-9a8d-b63a286712e9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bb88b113-206b-46f1-806e-86a709568f4d"
        },
        "item": {
          "id": "5c1fd9ac-ce20-4206-9a51-5da8cf85658e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "942f5204-61da-4623-9a2e-c6ca36388e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7e1101-825c-4bba-9669-a65f2abfd202",
        "cursor": {
          "ref": "c64f4606-a8e7-4a84-b2cb-3192372ad0ea",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a276f3eb-d51c-4088-b93f-ffc0489be6b4"
        },
        "item": {
          "id": "ea7e1101-825c-4bba-9669-a65f2abfd202",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "21ef7997-17a5-4388-8922-ba49dffec6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e28f6-ef6b-4da5-acff-4356b0803c35",
        "cursor": {
          "ref": "6112014e-95d6-4d6d-be2f-f4d6b4a01eca",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fd8f18dd-5a7c-481a-afad-8513880079c9"
        },
        "item": {
          "id": "6d2e28f6-ef6b-4da5-acff-4356b0803c35",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a5954652-cecc-442c-a7b2-3fb2479e52c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a92ad9-0bd4-46f2-82c1-765698c9f8ef",
        "cursor": {
          "ref": "d81425c3-5a48-4979-adb3-56a80ede212b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "356abfb4-f6ad-4395-9560-ceebb6e34ef7"
        },
        "item": {
          "id": "55a92ad9-0bd4-46f2-82c1-765698c9f8ef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3d2a8b6e-042d-40fa-a17f-3838ba756b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17392073-acb2-4483-97bd-d1d2dc4e9a1e",
        "cursor": {
          "ref": "c5a59ca1-9b00-4421-99dc-0e56f54cfd5a",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7c16e903-8871-4f9f-8d19-45cefa88fa4b"
        },
        "item": {
          "id": "17392073-acb2-4483-97bd-d1d2dc4e9a1e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "87adf75e-3093-4420-a0ff-3845cc9e213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c2a522-974e-4a20-988b-1664e7e5563a",
        "cursor": {
          "ref": "e6baad6a-399a-4c23-9d77-d86edc48f3f4",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a7f3b757-46da-43b4-b30b-b005372775d4"
        },
        "item": {
          "id": "14c2a522-974e-4a20-988b-1664e7e5563a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca068756-1585-42ff-9cd7-8f81970e971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd039446-6e4f-4f82-86a2-f849d70d3c57",
        "cursor": {
          "ref": "d932e65c-7aa9-4c8f-93c1-17a54da7ae57",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4795b1cb-2d0d-4309-8221-98118aa13998"
        },
        "item": {
          "id": "cd039446-6e4f-4f82-86a2-f849d70d3c57",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6fbfe67d-4015-42fc-b645-cdeb2e8807f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c08e2f-2020-4bf8-9499-2c043cd80aea",
        "cursor": {
          "ref": "666399ce-9a1c-4cad-958f-2b0132dc1178",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "20b05462-e090-4cc7-b96e-a2e6da8f1d41"
        },
        "item": {
          "id": "06c08e2f-2020-4bf8-9499-2c043cd80aea",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4d95fba0-97bc-4540-b8cd-60b8497ad2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c090364-4e5b-4c56-96a2-a54e6af1bb63",
        "cursor": {
          "ref": "4d4fd8c3-6968-4199-be6f-89d47df1acca",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9a1a256a-5aa0-4b35-870f-62faa5af16ce"
        },
        "item": {
          "id": "1c090364-4e5b-4c56-96a2-a54e6af1bb63",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1db02c9a-c5e1-4242-83fd-9ace67cb27d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95fdcd9-d20d-4bff-bb36-e7de1453f4ec",
        "cursor": {
          "ref": "1fe36e58-88db-495c-8386-ddaf9dbedf20",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "51ddf1aa-3c70-4c52-b734-6d5a049a2e13"
        },
        "item": {
          "id": "c95fdcd9-d20d-4bff-bb36-e7de1453f4ec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "30b82931-3e03-4db7-8834-73acd2e61db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b15fe0-d61d-4163-82e6-0ae0f83ea96e",
        "cursor": {
          "ref": "c444b397-b77e-489a-b8c8-bb0834087451",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5c048851-0f4d-4a7c-8961-312ecc8d89ce"
        },
        "item": {
          "id": "66b15fe0-d61d-4163-82e6-0ae0f83ea96e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4426ddf9-669a-47b1-971a-29f5ac2e6d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b057e2-610d-4f77-b00b-8c48ece73b5b",
        "cursor": {
          "ref": "d2802338-669f-40ab-a93c-38cca6553d67",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75622f68-1b3b-468d-ae30-8c99804a154c"
        },
        "item": {
          "id": "13b057e2-610d-4f77-b00b-8c48ece73b5b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "13dac004-418a-4212-8048-a4b94d787fc6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 684,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916069cc-9710-42e8-8810-a5284946276c",
        "cursor": {
          "ref": "fcbe96c0-5d00-4516-9e00-e35a00714a2f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f7e27609-08e3-4f18-8c74-292d488665c9"
        },
        "item": {
          "id": "916069cc-9710-42e8-8810-a5284946276c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4fb12824-9e1d-47dc-b128-38cd513d08d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac88377b-c34a-4211-b554-e85e5dc9a371",
        "cursor": {
          "ref": "facbf7ac-79cb-4cbe-b321-5dce07f5adbb",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6624fb93-b6b5-4040-af77-1e4ef293acfa"
        },
        "item": {
          "id": "ac88377b-c34a-4211-b554-e85e5dc9a371",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1457cd70-4801-4c6a-ac2a-8796169b19fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d596996d-2728-4406-957a-819d4d41d4a0",
        "cursor": {
          "ref": "1d045138-d8a0-4bdf-b47a-393c9e41c4de",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "47f14281-ec04-44a3-ac38-e80be4b1dc6d"
        },
        "item": {
          "id": "d596996d-2728-4406-957a-819d4d41d4a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d6e8bac-6f93-48e9-9fd7-4cf06edfe95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f75ff6-3b3f-4cf5-80eb-ec648db002dc",
        "cursor": {
          "ref": "3df02dd5-05b9-4750-ba62-54b0eaf56065",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bc661276-8529-4c07-a441-432598595892"
        },
        "item": {
          "id": "88f75ff6-3b3f-4cf5-80eb-ec648db002dc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ad29842b-c668-410a-ae2b-aaef1d694f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbc0f08-dd19-4559-b12b-5f98d629f62c",
        "cursor": {
          "ref": "27cc4977-576b-4eda-b632-5801e1aa5809",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "73f16d2a-7aab-41c0-86ba-8db4bf88f06b"
        },
        "item": {
          "id": "3fbc0f08-dd19-4559-b12b-5f98d629f62c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "730d0dfe-9d4f-4044-8db0-02695fcf06bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ecde4-336b-455a-9864-b1710180674c",
        "cursor": {
          "ref": "ee67817d-d12d-4818-9660-56a23c199bdd",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f1741e0-7b9c-4270-af67-e3d23b7bee23"
        },
        "item": {
          "id": "1d7ecde4-336b-455a-9864-b1710180674c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ad9d363f-4613-4ca1-b6f8-7eb044e60e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708b5ff-9d2b-4a95-9144-b586857828b8",
        "cursor": {
          "ref": "ea3f0032-c316-480b-afd5-415aefa318b1",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4e2ba2c6-0123-4510-87e9-776dff598598"
        },
        "item": {
          "id": "c708b5ff-9d2b-4a95-9144-b586857828b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bb3ceb7c-1b8b-4ce8-b890-7a08e0e1afe7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 711,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c84a5ee-43ef-4263-94f8-5eb756a121b6",
        "cursor": {
          "ref": "80fcb389-a289-4704-8bd9-6b24cd3dfd7a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b16fa8e6-8cc9-4dba-b246-0915c9537e37"
        },
        "item": {
          "id": "1c84a5ee-43ef-4263-94f8-5eb756a121b6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a313f4d8-1743-48ad-af5f-d96f9f40b922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619dcd70-dac8-4667-89cb-e6c022d69369",
        "cursor": {
          "ref": "02a1f9e3-7f33-4143-87d2-58de4bcb9992",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6d7dd471-5823-445b-9718-e091c6f7743c"
        },
        "item": {
          "id": "619dcd70-dac8-4667-89cb-e6c022d69369",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d4e147d0-65cf-4f2f-862a-2adbb307dda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc4b0be-6a8c-4097-a77c-3106291b7df2",
        "cursor": {
          "ref": "3e338019-7bf1-48bf-858a-016a7ab5923f",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "847942c6-3d01-4f97-b8e4-947963fbd5a5"
        },
        "item": {
          "id": "0bc4b0be-6a8c-4097-a77c-3106291b7df2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4b77d72e-6e47-4790-bc7a-5631e84c361a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dffac2e-2e6e-4633-aa08-8613f7f566c6",
        "cursor": {
          "ref": "6086418a-1699-49fe-a760-26bbc749f196",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "198facb9-8429-4a03-b2ec-1625556631aa"
        },
        "item": {
          "id": "5dffac2e-2e6e-4633-aa08-8613f7f566c6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b989d1dd-0949-4d75-a8d7-b2802752d160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b54986-dcdf-41d7-a932-6a543ecc9ca7",
        "cursor": {
          "ref": "798892f1-c973-4518-a87f-c73bbff18e75",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d5e4992c-bf8f-4239-9541-01806e390e0d"
        },
        "item": {
          "id": "11b54986-dcdf-41d7-a932-6a543ecc9ca7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ceeb1279-d1a2-4c00-ae88-f7a782463ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb5e09d-0eb9-470f-8f21-8bc9364020f5",
        "cursor": {
          "ref": "fd970e2e-0bf0-414d-a25d-49fac653d667",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7c91acf1-2315-4563-a69e-37acfbb3faad"
        },
        "item": {
          "id": "1eb5e09d-0eb9-470f-8f21-8bc9364020f5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2a9ea1b3-0b1b-4128-ae7a-e669d8ed98d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317b8be2-290f-4c51-a996-46b7f8e230ed",
        "cursor": {
          "ref": "23fa433a-a8c4-4f34-b4b1-ff0d6ef3543a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "158a7f4a-3ce7-43d3-b74c-4b151bf55746"
        },
        "item": {
          "id": "317b8be2-290f-4c51-a996-46b7f8e230ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "af483894-4f9c-46a4-9cac-2006ef24d698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f751fc2-c353-41bf-8784-08bb06680267",
        "cursor": {
          "ref": "0ea0b5ac-5adc-4c25-b2b6-e8d2107fc619",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0701ffc9-abe6-4e57-898d-9fe6f472b97a"
        },
        "item": {
          "id": "9f751fc2-c353-41bf-8784-08bb06680267",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2905fb65-86f4-438d-8505-d362e611e334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eaaa21-ec68-412e-a4ab-3c31ad0b85dd",
        "cursor": {
          "ref": "fd9585a2-59ba-4fdd-9609-1fd9a1a4458b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c5151e6a-581f-4b4f-becb-874e9caff176"
        },
        "item": {
          "id": "b0eaaa21-ec68-412e-a4ab-3c31ad0b85dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e7bc6458-295f-46d6-8b3a-6a7b8a8c20c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba13485a-bab8-4413-865c-d3435f25c939",
        "cursor": {
          "ref": "a2d2d6df-e6ab-4457-ab6a-25b607e7443e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e4cd6534-9e05-4bb2-a1e9-61210b2c1295"
        },
        "item": {
          "id": "ba13485a-bab8-4413-865c-d3435f25c939",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2f47cd7b-3b5d-4751-8031-aada3f324b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c1d117-f2e1-457a-aef4-8c80f05e29b2",
        "cursor": {
          "ref": "7975e3c8-0804-4279-84f0-b29848ecbf77",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d738fe3f-227c-4e2d-973c-fe57a995fcf9"
        },
        "item": {
          "id": "48c1d117-f2e1-457a-aef4-8c80f05e29b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4da6b49e-0142-4916-b535-2cba0acee389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a71eb9-8d7d-4264-9448-12bf97792bb4",
        "cursor": {
          "ref": "ef19f7db-7cf3-4a54-a1d4-13ff4f5f1146",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5faab07a-a178-43b7-84dc-2c3f6f221768"
        },
        "item": {
          "id": "03a71eb9-8d7d-4264-9448-12bf97792bb4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "313bb82e-e045-4ac7-a21f-132f9f1baa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44be9205-1d2e-4647-9fb1-dee9b1100c68",
        "cursor": {
          "ref": "a93d02d9-d8ad-44a7-95bb-b07375115309",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4bf6738-8726-4bf3-9ff6-d28581df0b34"
        },
        "item": {
          "id": "44be9205-1d2e-4647-9fb1-dee9b1100c68",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a4641757-5c11-4bdb-9a08-96703484961a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1611,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc54f957-514c-482e-98ba-b4d4c5ee42c9",
        "cursor": {
          "ref": "df62472f-7daa-49e6-840e-08f5e868dbf7",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "02bb4220-2544-40bf-933c-eed1f95a1a53"
        },
        "item": {
          "id": "bc54f957-514c-482e-98ba-b4d4c5ee42c9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3a255977-7c7b-4510-a522-dca695a8a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0bd382-518f-4b3e-a17b-ad2eadb31f53",
        "cursor": {
          "ref": "c7f9dda5-586e-427d-aaa0-6b52b7102c3e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "683f4b1f-3ed8-4055-91c8-23c0a9a0bb7f"
        },
        "item": {
          "id": "eb0bd382-518f-4b3e-a17b-ad2eadb31f53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "075dcb78-3ccd-4b1a-8919-e09da628a821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8e25fd-3cee-4c0e-9117-0aec9193e397",
        "cursor": {
          "ref": "129b651f-d44f-48d7-8ee6-ee7722a19593",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "462003c3-9fc0-4fea-9ed4-0993825c6d82"
        },
        "item": {
          "id": "de8e25fd-3cee-4c0e-9117-0aec9193e397",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "53279986-7c12-4291-bcde-f4afd70b1c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7317f2-f42a-4c11-af96-6422340e21fe",
        "cursor": {
          "ref": "d4b4750d-000c-4a95-80d8-30da8ecbfd06",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81a9d18f-e8cd-4e5a-baaf-8b79fc08adaf"
        },
        "item": {
          "id": "8d7317f2-f42a-4c11-af96-6422340e21fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7047378b-5fbd-45df-b874-d3229a35b802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5263a57-dc75-4833-9316-3b33fa937b1a",
        "cursor": {
          "ref": "4b6bfb97-47ae-4f25-aa94-4c8707844390",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b0579165-2b48-46af-b6f9-143edff9a2b0"
        },
        "item": {
          "id": "b5263a57-dc75-4833-9316-3b33fa937b1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27c8fcc8-c616-4ed2-9e43-3493c9301e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a72ca43-6633-4411-98b5-7a8af24e923b",
        "cursor": {
          "ref": "db977def-aa4a-4b56-a316-b9646a5c3a0c",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "30bc3f7c-5846-4911-a61c-fd78ec1daa41"
        },
        "item": {
          "id": "9a72ca43-6633-4411-98b5-7a8af24e923b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8d8ae6c6-241c-4133-9fae-bb4341ece6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8716d9-df78-4e04-8966-c98e1c057f11",
        "cursor": {
          "ref": "8de3c4be-d071-4486-8de0-3c4063a9211b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "32a6ad1c-7bf9-47b1-8702-6565992dee4c"
        },
        "item": {
          "id": "5b8716d9-df78-4e04-8966-c98e1c057f11",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "76cb1cab-2b71-4d96-9a71-4d9e4dfe1806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e2533f-6443-41a6-ada0-3781648dc680",
        "cursor": {
          "ref": "b9ff3cc0-63b6-4d82-b3ef-39cae6bac081",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "07c7012d-884e-4e82-8efc-fbfd800c6d4d"
        },
        "item": {
          "id": "f0e2533f-6443-41a6-ada0-3781648dc680",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "29727d5c-2e96-4659-85ee-e7aa02b593ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d4fe6e-ec8c-4c90-8eef-b62dcb9d9ac0",
        "cursor": {
          "ref": "c3592bdb-0e3b-4912-a6e8-37de3c6576a0",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2c1200b9-5c2a-4ae9-9d27-8e23eba4b642"
        },
        "item": {
          "id": "36d4fe6e-ec8c-4c90-8eef-b62dcb9d9ac0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "91b78d5e-982d-4e68-b4ac-49138d478267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66732bdd-77a3-4191-8d26-788fdd641765",
        "cursor": {
          "ref": "6151d465-74c0-4eca-9b39-e27e9a2f5f0b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "777c71b8-4ded-4e9c-9e94-44cfb063ee46"
        },
        "item": {
          "id": "66732bdd-77a3-4191-8d26-788fdd641765",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9c6a6bfc-62a2-49ac-96a0-7cc4b22edf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539864f2-def1-4b5f-9b4b-3ba91c9adaf6",
        "cursor": {
          "ref": "5a82019a-0f1f-477e-864e-9e6163c5e006",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3d348f4e-abd8-4e6a-ae0f-67b041bbb932"
        },
        "item": {
          "id": "539864f2-def1-4b5f-9b4b-3ba91c9adaf6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c54e945f-517a-4e64-926a-a90009afed62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccdbf62-d31a-4adc-9bdd-cf3943c802d9",
        "cursor": {
          "ref": "e46fbdf1-f119-4c8c-9372-095240dfa5a2",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1a46cdc5-45ba-4aee-b156-b959b2989bb1"
        },
        "item": {
          "id": "4ccdbf62-d31a-4adc-9bdd-cf3943c802d9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2458ce67-83fd-4e2d-80cc-350ffe6361d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d04d97-e0c4-4213-a7a7-f96ed913cdcc",
        "cursor": {
          "ref": "9d513c9e-28bd-4717-9d7a-5780784f7a67",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "59d06db9-c4be-417b-a103-d20cd45a8242"
        },
        "item": {
          "id": "10d04d97-e0c4-4213-a7a7-f96ed913cdcc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "87235aa9-07c3-451f-95f1-a9dc842c5e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f20227-46ee-4146-ac80-f28a7c861b46",
        "cursor": {
          "ref": "2c7669c1-c22d-403c-b2b5-8bb987a8979d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "63784df5-376c-4297-ad04-5f47f0f2003d"
        },
        "item": {
          "id": "b1f20227-46ee-4146-ac80-f28a7c861b46",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "47c98fdd-0e90-4f4f-b681-c5d64c5f0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecd72cb-a56d-41ae-9341-01e230b70c5b",
        "cursor": {
          "ref": "11777876-4fa4-4efb-a856-777afa64c6f9",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "57348460-db72-4a49-a7fd-c083c5ea7279"
        },
        "item": {
          "id": "2ecd72cb-a56d-41ae-9341-01e230b70c5b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "234be0e0-783b-4841-8f5e-daa5ea5b62e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7a52c-85a3-47ab-9bff-77af6ab7b82f",
        "cursor": {
          "ref": "38ccaa70-d84a-4c8c-b256-da9ce84b7c68",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb82071b-0b62-4244-ac36-59fe74677703"
        },
        "item": {
          "id": "d1c7a52c-85a3-47ab-9bff-77af6ab7b82f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5117175d-bb17-426b-8b94-b8ef5176a995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ccca88-2434-47d6-be4d-fe4ebc41706a",
        "cursor": {
          "ref": "83346fca-7a2c-4fb0-a161-717eee61fd2d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6fbc42de-96ee-4222-83b2-6f6f9323e29e"
        },
        "item": {
          "id": "39ccca88-2434-47d6-be4d-fe4ebc41706a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a234c83b-0140-4088-bdde-134c62d54fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89da461c-1e37-465c-8faa-76fbc8a53921",
        "cursor": {
          "ref": "cf9eb294-f055-47b5-9195-74179c2230d6",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a327008a-4a40-41f6-b438-1067ea75c729"
        },
        "item": {
          "id": "89da461c-1e37-465c-8faa-76fbc8a53921",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7742e2f0-8cb3-4f21-8e6c-2a44d0823866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281e7c5f-ca9c-4adb-b615-a9e2cf9bc393",
        "cursor": {
          "ref": "aa2e18f2-a2f9-4e8f-b72c-4ea23a3abeb3",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b6ce7326-5308-43e7-adac-61e83c59d654"
        },
        "item": {
          "id": "281e7c5f-ca9c-4adb-b615-a9e2cf9bc393",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bc43aa36-73d4-49a8-a5fe-68a8fc45e215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcb797d-01af-493c-a828-de672dd2ce9c",
        "cursor": {
          "ref": "22d596fc-453b-4599-a338-a3eea478ccc8",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "46cbb3ac-5995-48f8-bcf3-c91f5b867933"
        },
        "item": {
          "id": "0bcb797d-01af-493c-a828-de672dd2ce9c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f8852202-ae64-4bb4-b590-f165ba2557de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a56668-a5d9-4b6f-852c-f7fe518c2919",
        "cursor": {
          "ref": "78ca63be-12fb-44f9-84c4-6ec059a0820f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "adaf4115-7527-4d64-a557-bddf22185c0a"
        },
        "item": {
          "id": "b9a56668-a5d9-4b6f-852c-f7fe518c2919",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "21addd9e-3448-4c81-915f-6dbf1b19c587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93411b8-047a-42b8-8499-3cff8126438c",
        "cursor": {
          "ref": "2e5692b1-2300-4a52-b26e-559c7b8bf78f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ca28c95-056e-410b-a2a1-5e7f40c93a1d"
        },
        "item": {
          "id": "e93411b8-047a-42b8-8499-3cff8126438c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec569b66-a98a-4655-b16c-7981b7612900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc91f2d5-7285-4051-bbcb-d02aaef6afb3",
        "cursor": {
          "ref": "f99ab0b7-367b-4104-97b3-6e3b2e5cf4c9",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4854cafe-40a4-4320-8bab-589cd8445b8b"
        },
        "item": {
          "id": "dc91f2d5-7285-4051-bbcb-d02aaef6afb3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ca3169cc-ce77-4915-b8a5-a2c608a48c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf60e26-33e2-4744-b6c9-00cb1b1fbc61",
        "cursor": {
          "ref": "641f1551-a11a-44dc-b20e-9a0d03b0f015",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c1cd9557-fece-452b-98d8-a97a45496905"
        },
        "item": {
          "id": "1bf60e26-33e2-4744-b6c9-00cb1b1fbc61",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cd9d5e58-d980-4569-8c0d-116dad5d862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f1fdd-41c4-451f-9f7d-248c3087c133",
        "cursor": {
          "ref": "8ad599d8-a610-46c7-9765-c39f787d141b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "07597170-2a14-4ea2-a452-72e4badf1cef"
        },
        "item": {
          "id": "9d5f1fdd-41c4-451f-9f7d-248c3087c133",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2f4b19ae-2002-4f6d-92b7-6d17af4bf17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3605f3a-f5f0-4d98-8c19-e405e7a5d820",
        "cursor": {
          "ref": "36bba6d6-7c04-4980-80c4-a46018bd5845",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "00b0108d-31a4-40c2-9a1d-be9130feb5ee"
        },
        "item": {
          "id": "d3605f3a-f5f0-4d98-8c19-e405e7a5d820",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "648b6f84-4827-4b67-91f8-e39dc7a4f30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47522e60-710f-4514-a8ca-3c188384885b",
        "cursor": {
          "ref": "f7609dab-ffa4-4230-a390-83827cb103b3",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c508e6cb-7e81-4b52-b9d9-000fd785f302"
        },
        "item": {
          "id": "47522e60-710f-4514-a8ca-3c188384885b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6379098e-a86a-45f3-b448-4bf6adc8a8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1680c4-22e9-4ad7-91e4-874458ca1032",
        "cursor": {
          "ref": "320010b4-0281-496c-8f83-5078a7acff92",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0fce90f0-a725-44f1-b168-f46dfd9a5d3b"
        },
        "item": {
          "id": "be1680c4-22e9-4ad7-91e4-874458ca1032",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "58910118-7c6c-4cea-8241-006dd6448e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeb4ed3-3f09-40c3-80a5-4d70d7b50026",
        "cursor": {
          "ref": "9f7fac4c-ddf7-4bad-889c-3d77fe6fb1ee",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c231369-ff11-4349-8b32-c5827031dad3"
        },
        "item": {
          "id": "bdeb4ed3-3f09-40c3-80a5-4d70d7b50026",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d585dea3-e10b-45a6-a224-3b4336e582c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b144f7-0c8f-4a1b-9dad-2bba4da6d919",
        "cursor": {
          "ref": "7c082e59-ac7f-432f-8228-6224fe9445d6",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c400fc06-9dba-45ce-9d66-1d2c83cf6ce8"
        },
        "item": {
          "id": "24b144f7-0c8f-4a1b-9dad-2bba4da6d919",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2a2dcd27-becd-4f87-8b39-75071537d6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49da380a-4e5c-43a5-8ffb-c181c59dc02e",
        "cursor": {
          "ref": "ef7bbbe8-83f1-4c20-9d8f-4aa50eecc6be",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1f1bf1e4-0080-41be-b36a-4bd84206332a"
        },
        "item": {
          "id": "49da380a-4e5c-43a5-8ffb-c181c59dc02e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "752b9407-8d27-446f-a4c0-f087443a0891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741e38d-a2e9-4597-9788-d671abae7a88",
        "cursor": {
          "ref": "69e986a4-6c0c-471d-bdf4-735d2b22e25f",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0feb32f9-0040-4841-b596-a15507a9198d"
        },
        "item": {
          "id": "e741e38d-a2e9-4597-9788-d671abae7a88",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "471365a1-cab5-4e9b-8f39-c3954eb68434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a2b3ed-1421-4210-9879-0c9c14f0f35d",
        "cursor": {
          "ref": "4052dd52-d349-4b75-b299-d6c299d97ff0",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e65b8989-9689-43d4-8380-6ddc66c72116"
        },
        "item": {
          "id": "a1a2b3ed-1421-4210-9879-0c9c14f0f35d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b4af07ed-8e5e-4e79-a763-b4ae984e5700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e652f85-7d2f-415b-872e-d9f08974c894",
        "cursor": {
          "ref": "036c46de-aaea-459f-a6c0-c124b6c23a38",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "048123f9-776f-4776-97d4-e04dc1b42f16"
        },
        "item": {
          "id": "9e652f85-7d2f-415b-872e-d9f08974c894",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7ca9f6ae-bc3d-4d6e-941a-130cb3cffc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0e5603-5898-453c-a238-16bc768f59f0",
        "cursor": {
          "ref": "58c50ae7-1c59-4a32-b0ef-8cb76dab73a3",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fae76faf-eb27-4a21-a810-1774434cb6df"
        },
        "item": {
          "id": "4e0e5603-5898-453c-a238-16bc768f59f0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "15e7f6cd-6d42-42ed-acff-e05fe19ed778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3516bbf-cb34-4891-8236-5e3a2ca4cc60",
        "cursor": {
          "ref": "a40a2d4d-99a5-40d5-84c3-969efd17b425",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f95564be-dcc4-4184-9381-c49a4484de7a"
        },
        "item": {
          "id": "b3516bbf-cb34-4891-8236-5e3a2ca4cc60",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4bf6d15b-09e2-4589-b14d-4990f60d8117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b0dfb3-3689-439a-896c-84e3534a0cd1",
        "cursor": {
          "ref": "6e1faf1a-1bf0-48fc-ac69-6a9c2175aeb4",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "be98c453-7092-4834-8d1f-efc22ef0f31a"
        },
        "item": {
          "id": "21b0dfb3-3689-439a-896c-84e3534a0cd1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "153f24f4-a6a8-4232-9f1b-3b5bdbadee21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc0897-8043-4ebd-8e67-669f9b9c1a24",
        "cursor": {
          "ref": "347e0d32-e36e-478c-838c-c0be8d7c3e01",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a5b7bba6-86b2-4b47-bdb0-e4268cff712c"
        },
        "item": {
          "id": "0ebc0897-8043-4ebd-8e67-669f9b9c1a24",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cfd381e1-edb3-4e5c-8eb0-f801a3d6b9be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 831,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792e08ca-80ae-4767-aeb8-a0f3e6b7e005",
        "cursor": {
          "ref": "d92db6fb-cdbf-4f7a-a44a-657512299d1b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "05c3e503-5647-404b-b5c6-b1e569726579"
        },
        "item": {
          "id": "792e08ca-80ae-4767-aeb8-a0f3e6b7e005",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80089fff-ff3e-4c47-a597-135d9bb18152",
          "status": "Created",
          "code": 201,
          "responseTime": 6440,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e55e83-fe85-46fe-8ebd-734fe6184a1e",
        "cursor": {
          "ref": "6fc3bd6c-0906-4200-9170-5682a458ebb2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a8c94a0-f353-4500-b665-75e06830dec0"
        },
        "item": {
          "id": "84e55e83-fe85-46fe-8ebd-734fe6184a1e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2b88f871-d260-4536-a4ae-2a22614de269",
          "status": "Created",
          "code": 201,
          "responseTime": 4994,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "768d230e-7d4f-4c99-8b52-9a323d7b2ab6",
        "cursor": {
          "ref": "a1f60286-da46-4e8b-9ea9-8ee2be5197f8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2fdfa624-ca73-4162-b438-5ee67c0f9b22"
        },
        "item": {
          "id": "768d230e-7d4f-4c99-8b52-9a323d7b2ab6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17cded70-955f-4d22-aa48-1b4bd05ebd21",
          "status": "Created",
          "code": 201,
          "responseTime": 4424,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70fe749-e130-484b-963d-774258e3c610",
        "cursor": {
          "ref": "2a5d8170-0b86-4849-ae5c-f2742060b9f4",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6b4d99e6-24a5-4475-b9d7-8475a8f34c70"
        },
        "item": {
          "id": "e70fe749-e130-484b-963d-774258e3c610",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bfa2fedf-22c5-44af-b859-036fed416844",
          "status": "Created",
          "code": 201,
          "responseTime": 4268,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d44edb-30e6-4786-93f6-e8e3c398605e",
        "cursor": {
          "ref": "3f39f976-b4cd-4c06-bea7-3db4dc81cc02",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5e687c7e-1640-41f2-af8d-e8338690ddc1"
        },
        "item": {
          "id": "c9d44edb-30e6-4786-93f6-e8e3c398605e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "abfbaaa0-2709-4db9-9ac3-ec4ba9b82427",
          "status": "Created",
          "code": 201,
          "responseTime": 4266,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "799d75c7-d85d-4b0d-b427-ab0cb713cbe1",
        "cursor": {
          "ref": "217b7f14-458c-477e-88a8-1d2bb19e5d99",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "68c36671-a9f5-429a-9477-bbe9c1bee019"
        },
        "item": {
          "id": "799d75c7-d85d-4b0d-b427-ab0cb713cbe1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9ed8e04e-070a-4da2-85ae-4cddaf6064a3",
          "status": "Created",
          "code": 201,
          "responseTime": 5120,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd760a-d725-494b-a8de-cbf1ec6bad83",
        "cursor": {
          "ref": "b2a20421-2d03-4dc1-ab02-50b96737a496",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1bbb2c2-eeb9-44f7-8931-789d759d1d1d"
        },
        "item": {
          "id": "08fd760a-d725-494b-a8de-cbf1ec6bad83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8335f0c-603f-4706-af23-2b5673f4667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd760a-d725-494b-a8de-cbf1ec6bad83",
        "cursor": {
          "ref": "b2a20421-2d03-4dc1-ab02-50b96737a496",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1bbb2c2-eeb9-44f7-8931-789d759d1d1d"
        },
        "item": {
          "id": "08fd760a-d725-494b-a8de-cbf1ec6bad83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8335f0c-603f-4706-af23-2b5673f4667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0001e3-2e11-49cd-9455-bcf7e30c7714",
        "cursor": {
          "ref": "3f8f553b-9acb-4c0b-a744-6b0a77e4189d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a0087dd8-f0d6-4f10-9b8c-5bf2749d641c"
        },
        "item": {
          "id": "4d0001e3-2e11-49cd-9455-bcf7e30c7714",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "482674d1-b435-40fa-89e7-2813755144d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c9a973-9776-47af-b196-72d6f077ea8c",
        "cursor": {
          "ref": "3c320cee-1e27-4cb2-b085-efb17f41f7ab",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "814560b9-1acf-4321-9e42-1d5518955d92"
        },
        "item": {
          "id": "20c9a973-9776-47af-b196-72d6f077ea8c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2bc33f4e-def3-43dd-93a6-92360d587c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0fc282-deeb-462d-9884-2f516b1e4324",
        "cursor": {
          "ref": "e236348e-5a0a-420f-9171-a057d5444fa6",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fe401065-3eef-4cff-b809-9820f426d1ce"
        },
        "item": {
          "id": "ca0fc282-deeb-462d-9884-2f516b1e4324",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a3ebcea-69eb-4949-93ea-a3dfc3373d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c032f-bb0c-4bd0-96f1-2a77f6278b13",
        "cursor": {
          "ref": "5a446a46-256b-4fe4-84a7-7146ec2e1e77",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a9a2de13-f99c-4ba2-b716-2f9bb610bb8e"
        },
        "item": {
          "id": "bd0c032f-bb0c-4bd0-96f1-2a77f6278b13",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "59adb709-7ed7-48e5-a520-aebd924138c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0ccea3-e220-45e6-8905-08143f707f3d",
        "cursor": {
          "ref": "bfa45926-33cc-426b-b1a2-1035d4c212c1",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ec7f46de-9b74-472c-8485-2bdb7f38f6f4"
        },
        "item": {
          "id": "ac0ccea3-e220-45e6-8905-08143f707f3d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fdf70f04-7ac6-4e0b-8c62-846a6cf4d57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47c9b57-c2d3-4db7-8dee-8a0e8c16d1d2",
        "cursor": {
          "ref": "eea3709f-f61c-42bb-8fb4-b4479444a1e3",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b9a6073-60b9-406d-aa24-d625eda2df6b"
        },
        "item": {
          "id": "f47c9b57-c2d3-4db7-8dee-8a0e8c16d1d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a9f172bd-974d-4a79-8172-94135b0c8d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a43796-ee1e-462b-b4b6-46c06227061c",
        "cursor": {
          "ref": "5c0f4cac-7794-4adc-a10d-ca858264ce72",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "808eacf2-276a-499e-b023-fd1c764fee70"
        },
        "item": {
          "id": "09a43796-ee1e-462b-b4b6-46c06227061c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "229870b1-616e-4717-bf4e-3ce17e2ebeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c4d265-047e-42fb-964d-6526edc0675e",
        "cursor": {
          "ref": "0cb02d22-1521-469d-92b3-cf87a6adb92d",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3ca62322-0fa7-4ea2-a873-29375a847bf2"
        },
        "item": {
          "id": "79c4d265-047e-42fb-964d-6526edc0675e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "906685d7-c417-4815-b451-c153735212a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0a4357-3105-4dc4-b1d5-ca521c0207a1",
        "cursor": {
          "ref": "17609534-af42-4050-89f3-087c3e339ac0",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f9dec536-c8ec-4d99-939d-5936c350702e"
        },
        "item": {
          "id": "7a0a4357-3105-4dc4-b1d5-ca521c0207a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f1d4b148-3c37-45b7-bd7a-f21fd4c7fbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca71f897-ceaa-413f-80a7-0a926f3215d4",
        "cursor": {
          "ref": "f1333dde-0b98-4273-91ed-a40501ec8619",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1ca31335-cd07-490e-95ea-675ee27b80f8"
        },
        "item": {
          "id": "ca71f897-ceaa-413f-80a7-0a926f3215d4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d4bbfe42-1fc7-4b00-855f-577a95f18b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6e41f9-9cbf-4147-8603-e271be232a7a",
        "cursor": {
          "ref": "a88b497a-ab12-4a9e-8f73-e0130610e248",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42db3820-a0cf-40d7-be19-05d2505d60e6"
        },
        "item": {
          "id": "ca6e41f9-9cbf-4147-8603-e271be232a7a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5a76f97-e097-4ef0-8a4b-69f546a0be51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e25657-4450-449d-bd2d-c57bea175030",
        "cursor": {
          "ref": "1a952e83-71c8-46b4-ab15-529a95d4cb68",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "30efe88c-c6a2-44af-ac9f-02a74ba6277b"
        },
        "item": {
          "id": "61e25657-4450-449d-bd2d-c57bea175030",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68cd507e-d212-484d-b887-5bc9211718f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcbef99-81c0-41db-9474-087febafbfea",
        "cursor": {
          "ref": "d796acc1-8c10-4194-a05b-676b95ff95c6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2c540b3b-1150-4183-9f19-a5e722ac44de"
        },
        "item": {
          "id": "4bcbef99-81c0-41db-9474-087febafbfea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7e96ecee-9200-4e29-acb2-ea3afa82547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6ec50-17db-41f0-8488-2ccc34432b50",
        "cursor": {
          "ref": "0e09c80c-5b27-4a72-97f8-62bb9db455b0",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "134ec34b-48b5-4503-ab23-1919cbcaa446"
        },
        "item": {
          "id": "fda6ec50-17db-41f0-8488-2ccc34432b50",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9f03afaa-884b-4a35-bfc0-aed32b7e7c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46060ca2-dea8-4a3c-9711-02151a6f7842",
        "cursor": {
          "ref": "6eff6f65-71b8-40d2-b3bd-d6fcc4fb96e4",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6e4b84f5-2b89-49a0-9372-f78beef7b677"
        },
        "item": {
          "id": "46060ca2-dea8-4a3c-9711-02151a6f7842",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a9bf0ab-0e7b-464a-8407-ae32b86caef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf21df9-a965-425a-92d6-0288de076ee3",
        "cursor": {
          "ref": "e2fefe54-6c19-41e5-942b-1df535216ef3",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d7b95974-2bee-4262-adae-3b4492105f71"
        },
        "item": {
          "id": "1bf21df9-a965-425a-92d6-0288de076ee3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b2c645e-8465-4523-9f77-a34bd5e7685c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1141,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8732e5-8ae6-47e3-b103-2a3aecb995ed",
        "cursor": {
          "ref": "1b517090-895b-4a1a-96cf-bdce9f45abe4",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5a1c86f5-b69f-4661-a438-a3ca506c46ec"
        },
        "item": {
          "id": "2f8732e5-8ae6-47e3-b103-2a3aecb995ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "af453b8e-27ee-46ac-b477-1f266c552ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09026df0-990d-4352-bdc4-47bce7bfca6a",
        "cursor": {
          "ref": "a71d6b14-9abb-4b85-ab5e-e7cad1dd952a",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a3b05d4a-58b9-41d8-bacb-7fc22c550281"
        },
        "item": {
          "id": "09026df0-990d-4352-bdc4-47bce7bfca6a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3c1be79f-d5cb-4433-a756-3a2f2a684e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1102,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602d22f1-871a-4d13-b565-fd7bce41970e",
        "cursor": {
          "ref": "bec60de1-9974-424f-bb9e-03ac346c31fb",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "65b3758d-cd07-41ef-8c24-4bc49449cdbd"
        },
        "item": {
          "id": "602d22f1-871a-4d13-b565-fd7bce41970e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1790ae9e-e014-4023-8784-6bdfc5f2b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1332,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a16806e-3952-4c80-8ef9-ed0bf3099495",
        "cursor": {
          "ref": "93a39311-97c1-4042-ade4-727c98ec63f8",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "10572e42-a290-4da6-97fb-48ffec5e71f2"
        },
        "item": {
          "id": "1a16806e-3952-4c80-8ef9-ed0bf3099495",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb5292a0-68ab-4d74-bfc0-2f0a230f67b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa32436-24d0-457c-acfb-6ecc1c7a5e87",
        "cursor": {
          "ref": "b5012829-58d7-4b49-8269-20ffbb9e8c13",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "37a619e5-a1df-4de2-b660-58c586d9c4de"
        },
        "item": {
          "id": "0aa32436-24d0-457c-acfb-6ecc1c7a5e87",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1d339e98-9071-4b98-8f25-c140a5f20530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1648,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eebccdc-464e-44a7-a1f5-c799386af53f",
        "cursor": {
          "ref": "d577e373-5fe2-4118-af6f-abc40e3af87d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c8aa3a02-720f-45b6-a50c-b337f874a3ed"
        },
        "item": {
          "id": "6eebccdc-464e-44a7-a1f5-c799386af53f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f33290c3-61ec-4fbe-8b04-5437138d2b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1531,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1ef4a8-45cc-4132-b13c-58dfe5dc121d",
        "cursor": {
          "ref": "175423f7-14c1-44cb-a9c7-7dd0dba3a611",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "14ffaaf4-7102-479f-911a-d00ee5f1f30d"
        },
        "item": {
          "id": "db1ef4a8-45cc-4132-b13c-58dfe5dc121d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "71fbb942-c152-4768-b2c1-a388625cfb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1475,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ea1666-2f0d-4b83-bbeb-284f6334b962",
        "cursor": {
          "ref": "88395ee2-bf43-4a2d-a026-10d1404e05fe",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ebcb3a73-233f-4eb8-9d8d-c3ff0b745059"
        },
        "item": {
          "id": "00ea1666-2f0d-4b83-bbeb-284f6334b962",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41ab99fb-6d0b-4496-a5d4-12fc1107cc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee0937-0392-4ca7-bb0f-245f19e147b3",
        "cursor": {
          "ref": "09473e3f-0b1c-49e9-9498-3e5542524783",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "172fdb3b-1266-4215-84b3-f3084d343a66"
        },
        "item": {
          "id": "3bee0937-0392-4ca7-bb0f-245f19e147b3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d75d0a63-052c-4b6e-a9d4-ed83f24f005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4584e543-1ffd-4f6f-b75f-694cf2176b3f",
        "cursor": {
          "ref": "e86301d6-d473-464a-a6ff-06cbfebacbc9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7646f19b-c78e-49e4-a840-0756726571b2"
        },
        "item": {
          "id": "4584e543-1ffd-4f6f-b75f-694cf2176b3f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "891534ce-efb6-4e9d-b0fd-1c1882dbb504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c69fc5a-5d1a-4bf6-8cbe-6d375f8dc02b",
        "cursor": {
          "ref": "5afbe76f-8a60-489a-9c7d-36729974a231",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "223154f1-3342-4fce-8b3a-e29802477cf2"
        },
        "item": {
          "id": "7c69fc5a-5d1a-4bf6-8cbe-6d375f8dc02b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d79d483-80c6-46bb-ace0-05a760fcfa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadb78bc-622b-404f-ab01-5b97272f27c1",
        "cursor": {
          "ref": "ff0c41e5-4d87-494c-8c59-d5e1c7fb7254",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "11a9c06e-dfb7-4ba8-98a4-687f0047fec7"
        },
        "item": {
          "id": "eadb78bc-622b-404f-ab01-5b97272f27c1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6920984d-715f-469e-a427-0798772b061b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21997854-2904-4506-8a95-ad16fc924ef2",
        "cursor": {
          "ref": "d91201a5-695b-43eb-acb8-176e47463021",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8dd64c18-521c-48fd-8d7d-7a4cec323358"
        },
        "item": {
          "id": "21997854-2904-4506-8a95-ad16fc924ef2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c25f1518-71c9-43d6-b78e-4430bca9623b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f23937-f86e-4882-afc1-da5b24909d89",
        "cursor": {
          "ref": "e743a685-17c9-427f-bbe7-e0d49436d9ff",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "efbfdb71-505d-4d40-be2c-24736a56f529"
        },
        "item": {
          "id": "72f23937-f86e-4882-afc1-da5b24909d89",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d6fc23e9-c5e3-4fd2-b97a-53b3cc31503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251a2ecb-dae7-47be-80b6-82f94d6a6b89",
        "cursor": {
          "ref": "62d6994b-26d7-41cb-8df2-cc151881259a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eca0f60a-2021-440c-b059-51e4a49a0516"
        },
        "item": {
          "id": "251a2ecb-dae7-47be-80b6-82f94d6a6b89",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e00b1949-b8d5-4f43-b473-06e224da52ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c055c99c-3d41-4b44-b3e3-8d51ff5e51e3",
        "cursor": {
          "ref": "159b2e9d-1925-4a18-a7d1-722990de72aa",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "30ecaa7c-78e7-450b-b01a-9863b3c73042"
        },
        "item": {
          "id": "c055c99c-3d41-4b44-b3e3-8d51ff5e51e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf3132cb-8884-46ba-bfeb-0554ad811ed4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db528c-6c6b-40bd-96f6-b6845664f713",
        "cursor": {
          "ref": "2f981bbc-8e91-48e5-97d9-190fbe0a5c53",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a37dfdfd-9fce-4ccc-af53-27f4fbf8a6d9"
        },
        "item": {
          "id": "52db528c-6c6b-40bd-96f6-b6845664f713",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "039e0860-e536-4dbf-86b5-2ce83cf38175",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d0ec9-67da-4bbb-bc1a-d9f1b7b15446",
        "cursor": {
          "ref": "d63a9be4-abc9-47a4-97c0-bd754395f86e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e0f8304a-bf40-481c-a0d2-a99585e6d1c5"
        },
        "item": {
          "id": "381d0ec9-67da-4bbb-bc1a-d9f1b7b15446",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8ec55c62-80ff-4f50-bccf-679b3adef59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d0ec9-67da-4bbb-bc1a-d9f1b7b15446",
        "cursor": {
          "ref": "d63a9be4-abc9-47a4-97c0-bd754395f86e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e0f8304a-bf40-481c-a0d2-a99585e6d1c5"
        },
        "item": {
          "id": "381d0ec9-67da-4bbb-bc1a-d9f1b7b15446",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8ec55c62-80ff-4f50-bccf-679b3adef59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a745e0-1397-4f12-9dc1-cb7203876ba8",
        "cursor": {
          "ref": "59cd936d-780f-4822-a505-58a732f35adf",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c750e55-caf1-4059-a5e0-f363d820d78e"
        },
        "item": {
          "id": "16a745e0-1397-4f12-9dc1-cb7203876ba8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "45922c78-3843-4de2-8ee9-ea61c1cf08ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dbeca6-6c60-4b1b-ad1a-b462857c0c24",
        "cursor": {
          "ref": "b92c40ef-3e47-4592-97a7-9999fcd60a3b",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c667c597-aa77-44a0-914e-4e3e10a6ed4f"
        },
        "item": {
          "id": "27dbeca6-6c60-4b1b-ad1a-b462857c0c24",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7fcea347-f0a5-4f8a-85fb-4476b92b8fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5625a2e0-0740-4da2-89ee-277c9a662033",
        "cursor": {
          "ref": "bceccb30-91ea-4e08-b6a7-07acc1c599a3",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0cb4eb78-42ae-4333-bf3b-afe9cfb60064"
        },
        "item": {
          "id": "5625a2e0-0740-4da2-89ee-277c9a662033",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf18b626-1a89-42c4-9463-3e54729cc885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b418c5c2-c5c2-485c-be8c-b8cc496497dc",
        "cursor": {
          "ref": "99abb304-765c-4045-928e-7fe58889d460",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "324c3047-1175-47b4-b082-b23797d51a25"
        },
        "item": {
          "id": "b418c5c2-c5c2-485c-be8c-b8cc496497dc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6e406f03-1038-46c5-abe8-dc234ce5f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a52cd2-5766-48de-bd1d-a1ac8f24246f",
        "cursor": {
          "ref": "a3a6e0cb-c338-40a0-90ad-b80f3e28fd6f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9d6b6b1e-165e-4336-b894-1724d4ec0277"
        },
        "item": {
          "id": "e6a52cd2-5766-48de-bd1d-a1ac8f24246f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "60153528-89bf-4640-9d1d-ce8f831abe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6900aab1-70c6-4e62-b428-68e6018ebe47",
        "cursor": {
          "ref": "308d3446-f53c-4e38-9aeb-29b6517f7a0c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2ebdc512-b94c-408c-959c-c9ec9703bd72"
        },
        "item": {
          "id": "6900aab1-70c6-4e62-b428-68e6018ebe47",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ae8b568-209d-4f43-a64d-efddd61de073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4776fda-f934-411e-aef6-0407952ac174",
        "cursor": {
          "ref": "09ad16d4-0e65-4ccc-9edc-1ea8783fc7d1",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7dca805e-454b-47ec-90ab-9766abb75837"
        },
        "item": {
          "id": "a4776fda-f934-411e-aef6-0407952ac174",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2c4dac7-3383-4a8b-adcf-3bff500c3a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36e2f5-88a7-444b-b484-1fe7e1e306ec",
        "cursor": {
          "ref": "2989d151-941b-462f-b306-c449c00739b2",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0aa0323d-2e58-4865-97c3-c7e4ced6cb12"
        },
        "item": {
          "id": "ba36e2f5-88a7-444b-b484-1fe7e1e306ec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2fd70a1b-3383-4c92-94bf-f83851b7c2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f81bab-fa20-4063-ba4a-e43c237e15f7",
        "cursor": {
          "ref": "6925b3e5-3ae0-49b1-b795-5633e4486bc4",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "99f7f427-4cb5-45ce-b5d9-29e8d7c26ea0"
        },
        "item": {
          "id": "79f81bab-fa20-4063-ba4a-e43c237e15f7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2fde9088-2bc3-4345-8b06-1fddf6bae994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824a2eb6-7250-48b0-a16a-ab63c16e3e51",
        "cursor": {
          "ref": "9c49f622-4c65-4ec3-b5bd-6b3f4cace0f9",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "191c1a46-1c90-45cd-ae19-02e0a8139e29"
        },
        "item": {
          "id": "824a2eb6-7250-48b0-a16a-ab63c16e3e51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d43dfe77-43c4-43e4-8a1e-794eb589a8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342476e0-ff57-47b9-b09d-b7ae3cd4e43d",
        "cursor": {
          "ref": "72c32caa-2071-455f-b1a1-1e3d136f53d7",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0bc3c308-bb6f-46f3-8868-5fe7d8a9a86a"
        },
        "item": {
          "id": "342476e0-ff57-47b9-b09d-b7ae3cd4e43d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2c1ebc6a-57d9-4ba5-bc43-dbef6dee07ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673e323f-94b0-4c1f-8ee2-f9ae318322d4",
        "cursor": {
          "ref": "53fe414e-455c-41f7-8fd2-6475cc381e12",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f73b687b-aea5-440f-aa31-0aa2dcccf866"
        },
        "item": {
          "id": "673e323f-94b0-4c1f-8ee2-f9ae318322d4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "171410af-b692-4ac9-b81e-4685e11530b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc42b61a-2940-45f0-b93f-3232da59151b",
        "cursor": {
          "ref": "13f35595-1ed4-45df-9c5b-331a3a3c6a7f",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6a18365e-f6d7-4738-be44-9d8692de9788"
        },
        "item": {
          "id": "fc42b61a-2940-45f0-b93f-3232da59151b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d1e42370-1976-4fe8-b1b2-b36b8cca6b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908847c4-a2cf-415e-9c30-d75ad8914292",
        "cursor": {
          "ref": "192cfa0b-31ca-4767-a6ff-a734961f5198",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e7ccdb1-f97f-4bce-a5c0-5077782e3c94"
        },
        "item": {
          "id": "908847c4-a2cf-415e-9c30-d75ad8914292",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e58b4ca5-8b77-4663-814f-61e79087b8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d2f5b-9b68-46bb-b329-fbaf1ec5b5d4",
        "cursor": {
          "ref": "e020122e-5815-4014-b8f1-1f5e4b4f95c1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "faef5532-9655-4204-9c19-c0e2718e66f1"
        },
        "item": {
          "id": "dc1d2f5b-9b68-46bb-b329-fbaf1ec5b5d4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6f4e5c5b-d270-428f-aa9d-25c7ecef4c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2d02d4-66c8-4c8a-91a6-36fb1257dbe2",
        "cursor": {
          "ref": "a480b76f-d9f7-42e2-a0e5-4d0fd4f9ff58",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6c9a6513-2120-4557-bf2e-6370d5869e39"
        },
        "item": {
          "id": "6f2d02d4-66c8-4c8a-91a6-36fb1257dbe2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "76b6eaa9-269b-4259-82b2-f840ea120892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b30203-5595-43f1-bb40-af20165ad0d0",
        "cursor": {
          "ref": "7ebee879-53f9-419f-896d-0a6879bc4cb3",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4be771e3-b33a-4076-96a5-4fa48b9443ce"
        },
        "item": {
          "id": "54b30203-5595-43f1-bb40-af20165ad0d0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f670a8e9-4cb3-4d3f-b183-3fbaf61ed028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e794ffe-acf3-4a7f-82ce-a550024ecacc",
        "cursor": {
          "ref": "91b7215c-a646-4436-9bd4-2c3124e92280",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d214024f-5ae0-4da5-803e-b085d1388f24"
        },
        "item": {
          "id": "0e794ffe-acf3-4a7f-82ce-a550024ecacc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fbfebe71-4802-43e5-b709-4eacbc42eb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baeaf00-cddf-49c2-92b7-701aa505ddee",
        "cursor": {
          "ref": "9f9e9bca-6aa2-4e6c-922d-668785ad79f1",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d32fb532-92ab-4763-8e89-0f87ce80274e"
        },
        "item": {
          "id": "6baeaf00-cddf-49c2-92b7-701aa505ddee",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "76e4f90e-9dd6-428b-b98d-1f7d5fc6b934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fffdb3-9024-408b-a3af-6aea20decd38",
        "cursor": {
          "ref": "a5d9527a-f22b-4bb3-8121-418321c3d5ad",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1867072a-ed3f-419a-96b5-1b87bfc151d5"
        },
        "item": {
          "id": "c2fffdb3-9024-408b-a3af-6aea20decd38",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a8e2dd6f-899f-48db-8775-a9b2bab33c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5860803-e7c3-4a3e-8203-71958a2956b6",
        "cursor": {
          "ref": "6f637560-1373-40c0-9f50-61d890c78323",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "baf67895-2f2f-4dd5-b293-33cd83985735"
        },
        "item": {
          "id": "e5860803-e7c3-4a3e-8203-71958a2956b6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2cc4949d-4ee2-4987-a537-84a13544f5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada0ccf-0079-4207-b354-97482b2c26a6",
        "cursor": {
          "ref": "43afaddc-bdaf-400d-b714-2a8bcf2e37ce",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "94a8454d-bda0-4634-b653-b00d51ee7d94"
        },
        "item": {
          "id": "bada0ccf-0079-4207-b354-97482b2c26a6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2e0dbd10-c3f0-4681-9de3-966b59fd0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69698ed7-e2fd-4141-9f15-4f5116d56c6f",
        "cursor": {
          "ref": "53d8ada6-01a7-420a-8845-1d7995ea064f",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c5b78a26-60b8-421e-9f0e-528614eaec70"
        },
        "item": {
          "id": "69698ed7-e2fd-4141-9f15-4f5116d56c6f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8830c7fe-75ef-4960-9aad-c7bb7ba8320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ca8861-dae9-4ff6-b272-d2f29e5d8bf0",
        "cursor": {
          "ref": "17a09af9-553d-4ae2-b606-423f89a84a1b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "26f6921f-1ec4-4dfc-baeb-512afb359e56"
        },
        "item": {
          "id": "e8ca8861-dae9-4ff6-b272-d2f29e5d8bf0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e23009c-c238-4bbb-8373-3af56d1d310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747396c9-9377-42d8-b591-50dad20188c0",
        "cursor": {
          "ref": "5ac49510-2074-478a-b385-de275f4e23ef",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f5829c62-a6ca-406c-a31d-dc05193f7016"
        },
        "item": {
          "id": "747396c9-9377-42d8-b591-50dad20188c0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b2bb28f6-b096-45cc-9131-91fe5d876a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8be701d-d680-4b6f-bfe6-0e2e351c63b1",
        "cursor": {
          "ref": "a15b7006-9395-4109-8844-d9943b687b93",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "52ab65c1-b1ea-479c-b15b-65f2b2a7face"
        },
        "item": {
          "id": "a8be701d-d680-4b6f-bfe6-0e2e351c63b1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "07312369-ba6b-4b4b-8c8a-01339b8712a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3c78d3-e05e-491b-8956-e0a27b1c3541",
        "cursor": {
          "ref": "87b48957-f201-4e1c-ab43-c52ea47e715e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "22fdecd8-4ea2-4519-af3c-0b94fd2e219e"
        },
        "item": {
          "id": "fb3c78d3-e05e-491b-8956-e0a27b1c3541",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "47876f91-981c-4d52-887a-ec57ebf74acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e8f5e6-c530-4811-800c-36f153bf46d5",
        "cursor": {
          "ref": "e5497c50-3955-4e5f-939a-2e8f2c899282",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ecc38d55-17c8-4fe1-a4f8-fee0e80e80f1"
        },
        "item": {
          "id": "82e8f5e6-c530-4811-800c-36f153bf46d5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9ee3408f-1068-4a6a-b0ae-c38bd7a31443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25337927-d7ba-44ed-80b5-170a84564b40",
        "cursor": {
          "ref": "a1a79175-147e-40da-98b8-d69771747548",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "02f12919-2bf8-4048-815c-b36edaaadb4a"
        },
        "item": {
          "id": "25337927-d7ba-44ed-80b5-170a84564b40",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0f17591a-f75f-4721-9ebf-e88e517e3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1a1f57-50dc-405c-844c-35b4bc1e5100",
        "cursor": {
          "ref": "5aa065a5-7e1e-4344-bb84-fd607b179555",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f394af65-b98c-4855-97ea-f74aad34c7dc"
        },
        "item": {
          "id": "8f1a1f57-50dc-405c-844c-35b4bc1e5100",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "728866f7-9765-4eca-9f63-4eb27e8dea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a33516d-872d-455a-bc16-4226ae6b9816",
        "cursor": {
          "ref": "0ce52878-12a1-430f-9694-f343366a1670",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b633410d-c758-488a-b5be-fc4aa798017a"
        },
        "item": {
          "id": "7a33516d-872d-455a-bc16-4226ae6b9816",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "46e723c6-d7a9-4222-8069-f164f5ce70f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f32c60b-ebe1-4a6e-b824-4e4f3a218cfe",
        "cursor": {
          "ref": "c62a028c-cf1c-4798-aa23-476da1a91ea4",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b0540234-0271-4c4b-81d7-d6c56d666c50"
        },
        "item": {
          "id": "0f32c60b-ebe1-4a6e-b824-4e4f3a218cfe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "09afbedf-edb8-4dd1-8f56-7051b8514031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f624592b-cfc9-426f-a40f-b996bb3be2a9",
        "cursor": {
          "ref": "56f5c427-20c7-4e6f-8f36-b80016e64378",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fa770a22-84b4-4130-8883-48875be9a89e"
        },
        "item": {
          "id": "f624592b-cfc9-426f-a40f-b996bb3be2a9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f5931c9c-10b5-4d71-a487-dccec10be0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19b9e35-bf27-4e7e-995b-33a37192c2ad",
        "cursor": {
          "ref": "581b1a5f-33a3-47d2-9433-a7cffe575e63",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5aeb6612-6ea8-45f6-857a-e780129cd8c9"
        },
        "item": {
          "id": "b19b9e35-bf27-4e7e-995b-33a37192c2ad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b78ac69d-bf2f-4806-8b41-10edd1baa816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5903aec-4d4a-4046-bbb3-da5e2d23f8a9",
        "cursor": {
          "ref": "eb9cf26d-caed-4e6b-89fe-f05edc1b3004",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "110c2eab-42f3-4d2a-ad7a-92d60e150df1"
        },
        "item": {
          "id": "f5903aec-4d4a-4046-bbb3-da5e2d23f8a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab90f1a0-c68e-4078-b31e-d0177094108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204fdfa1-3e2d-4423-84c9-7cf129662580",
        "cursor": {
          "ref": "2e7bf5ac-9efa-4ef6-b24a-3352e16bea6f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "de4ff5ba-6ebd-447d-8fef-b4fa7c8eb76c"
        },
        "item": {
          "id": "204fdfa1-3e2d-4423-84c9-7cf129662580",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8bef99bd-4e27-4eee-a350-4b40f3a35287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a354e2a9-dfb1-45f2-99b5-59298e2c6249",
        "cursor": {
          "ref": "21b9b650-56a5-4aa6-a367-361a7a21a83a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ae79e949-9065-48be-985f-c939ea0368ba"
        },
        "item": {
          "id": "a354e2a9-dfb1-45f2-99b5-59298e2c6249",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f5432882-0764-4b5f-9e22-5911fc160275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f336fbc-fecb-414b-b72b-feb38a96b599",
        "cursor": {
          "ref": "9c89042e-5e8f-4455-90e2-49e63fea59b0",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b3449380-52d3-468c-b1e5-f7036cc0ec83"
        },
        "item": {
          "id": "3f336fbc-fecb-414b-b72b-feb38a96b599",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b01bfe34-49ff-4932-8dff-157c51ba645d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd54229-6509-46c2-8746-61f84a9de367",
        "cursor": {
          "ref": "1cfc1513-c84f-4cdf-b76e-ea47176efb11",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "987a3fa9-ba74-49ec-91fb-f8865736b254"
        },
        "item": {
          "id": "fbd54229-6509-46c2-8746-61f84a9de367",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e9875bdd-54c9-452b-a308-057fd792d738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63106ee3-d84e-4a5c-959f-44448b79f3b0",
        "cursor": {
          "ref": "6cfab270-67a5-4794-a12e-361555a187d8",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ae86baa3-3b45-4211-9cff-b79df48949ec"
        },
        "item": {
          "id": "63106ee3-d84e-4a5c-959f-44448b79f3b0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "611dda94-7ae1-4bbb-a8cf-57be45405560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e782e3-9146-4620-b964-1494024dc2e7",
        "cursor": {
          "ref": "f3d1a258-8759-49b8-8d5b-220b544f18c5",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3fbeecf3-a13a-474d-a6f8-419fdabb0e39"
        },
        "item": {
          "id": "96e782e3-9146-4620-b964-1494024dc2e7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "364f2244-a09e-4e8d-bf4e-20d6a01e7ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4520dae-04b8-4e59-8632-b59e5689e21d",
        "cursor": {
          "ref": "3d44d0da-b8e5-4e01-b52e-04fdf9bacf76",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "284fc2d4-e3e8-4846-bd00-e6910819dc7f"
        },
        "item": {
          "id": "e4520dae-04b8-4e59-8632-b59e5689e21d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "521193a8-eab7-46b2-a341-dda61d38a4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7052411b-0790-4ed3-a4a6-1692d48e6994",
        "cursor": {
          "ref": "5602aa1e-343f-4406-b736-8de32c53313d",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2c536c55-8abf-485c-a1a1-81cedbb262e1"
        },
        "item": {
          "id": "7052411b-0790-4ed3-a4a6-1692d48e6994",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ffb9569c-35a7-4d92-b826-1096c8ebe20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce88ca4-5ce6-4d87-9acc-c9b2a6418946",
        "cursor": {
          "ref": "8b960223-e727-490d-b0fb-e856cbe9c771",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9ac64885-e33e-45a4-bf0e-5d02da49b579"
        },
        "item": {
          "id": "6ce88ca4-5ce6-4d87-9acc-c9b2a6418946",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "513648d7-3bd9-49b2-8085-3a6ce75b4723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7aa472-1edd-4806-8f3c-9ec458a57b30",
        "cursor": {
          "ref": "acfd2513-823f-4895-a23f-9738c4dacd21",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e7adcaa5-2cc2-42e2-8561-4b0434933583"
        },
        "item": {
          "id": "6e7aa472-1edd-4806-8f3c-9ec458a57b30",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d97668fd-63c6-4661-8a6f-159b5716c0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4748eee4-5ffd-406a-99a9-d760bc434fed",
        "cursor": {
          "ref": "5c66a76b-ccf3-450f-9578-54ddc247f403",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5150e82d-076d-4a0f-9f0d-47d932cfa1a0"
        },
        "item": {
          "id": "4748eee4-5ffd-406a-99a9-d760bc434fed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "046aba79-051c-4570-862d-c1aba7a66641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee96c7c1-619a-49fc-ad86-c5ba617d5bd1",
        "cursor": {
          "ref": "0b2eb000-5340-4086-bf29-8ecd362b31f6",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "14c692f2-6c2a-4c45-a061-4dee1b0ddc83"
        },
        "item": {
          "id": "ee96c7c1-619a-49fc-ad86-c5ba617d5bd1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fd58baef-24e9-4626-8e34-1c6a2770e958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c6763d-ea1d-444f-8502-2fe98232b879",
        "cursor": {
          "ref": "8544cdd6-39eb-4970-8bc9-a9d215ebdf46",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "54dcbef6-8a47-481f-a8f6-1da41f916600"
        },
        "item": {
          "id": "45c6763d-ea1d-444f-8502-2fe98232b879",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "638f9428-092d-4b66-8424-3d0315c35c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580403d4-4b32-4d24-8a49-cd2a9cd1b651",
        "cursor": {
          "ref": "1589f28b-878a-4990-86fc-cedf37581372",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3bca3f62-5219-45a0-922f-e22979781716"
        },
        "item": {
          "id": "580403d4-4b32-4d24-8a49-cd2a9cd1b651",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e9af5e47-2294-4657-9aa8-344257ccf6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717ea5a0-fce6-4e3f-8e73-2a7d559c650b",
        "cursor": {
          "ref": "72059371-3793-4327-9971-4c94b4ae18ab",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2af565c4-3c4a-4015-b92c-7ca48d2a1505"
        },
        "item": {
          "id": "717ea5a0-fce6-4e3f-8e73-2a7d559c650b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bf567002-0812-4573-8f5d-359d8b208c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b37b3f3-0c18-4459-8083-e994359c16d4",
        "cursor": {
          "ref": "47d119be-69a0-4b31-9b2d-3d565aff788e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6be6c55c-8759-49fc-8ec6-04a1434808c7"
        },
        "item": {
          "id": "1b37b3f3-0c18-4459-8083-e994359c16d4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e2f17bc-28a7-4d27-9d2b-1d7d0498bede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ca37e8-0b76-4fe2-8936-e0215b4fe65f",
        "cursor": {
          "ref": "547cd4fa-ee17-41d4-b5f1-b796ab2ac041",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2d25804e-0c77-4cba-8d05-3c509bd57503"
        },
        "item": {
          "id": "74ca37e8-0b76-4fe2-8936-e0215b4fe65f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a9b0bd3d-8d0b-428f-aa68-50bc3273a22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07fe1ea-de4f-4899-ba0a-55d941841801",
        "cursor": {
          "ref": "f87a3436-3117-4799-89ed-a334e53f350c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0640ff57-e9ab-485d-88ff-dfcb14e6f808"
        },
        "item": {
          "id": "b07fe1ea-de4f-4899-ba0a-55d941841801",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e34054a4-0558-4c1b-a4ee-028c47fec1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67254c95-94e7-4a2d-acf7-0c950d10ed91",
        "cursor": {
          "ref": "8c88b939-411e-4fc6-a41e-36754d09958c",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "09840311-eef5-408f-88aa-0aad8703ac41"
        },
        "item": {
          "id": "67254c95-94e7-4a2d-acf7-0c950d10ed91",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b7e299d8-8567-4bdb-ba99-09b80ccff511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb3f47-f1ad-4225-ace7-3630980c46b8",
        "cursor": {
          "ref": "1a917b9d-088e-473f-b28e-e2856a549bb1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "11a47150-c9cd-4a85-99ab-868a6eb7eee8"
        },
        "item": {
          "id": "1aeb3f47-f1ad-4225-ace7-3630980c46b8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6c6fb764-e011-4604-8241-1d4fc546c717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f051ea-05ae-48f4-b218-23f044470991",
        "cursor": {
          "ref": "aa13b088-5482-4ffe-90be-10b692cdbce9",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a9936dd6-eed9-4761-b432-9356551a59b8"
        },
        "item": {
          "id": "f7f051ea-05ae-48f4-b218-23f044470991",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d3307436-0e6f-46df-b589-0cc04cb69448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf05d73d-eb8c-444e-a66a-72d50d75aa7b",
        "cursor": {
          "ref": "040c53d9-8fc3-45c6-9e21-9fc671192b6d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f337752f-96ae-46c0-8f1c-9824c42186ed"
        },
        "item": {
          "id": "cf05d73d-eb8c-444e-a66a-72d50d75aa7b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "24673c7f-89d3-461e-aab0-1953d4e1b2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1d39ff-939c-4c59-81d9-63c432f0a0a0",
        "cursor": {
          "ref": "45b18d39-c7de-4a8b-9f36-c6f3f0369216",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8b2a7f09-f2f9-48ac-b1d4-5331ac221c77"
        },
        "item": {
          "id": "ea1d39ff-939c-4c59-81d9-63c432f0a0a0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "01274362-06cc-4fe2-b042-9847a3d49daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53984d7-9e62-466d-a482-5cbfd8699526",
        "cursor": {
          "ref": "cb0fcdb4-0eb2-45a9-8db9-c3d29acb9560",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "315a3b48-77e2-429f-9de0-3a618b8708f8"
        },
        "item": {
          "id": "a53984d7-9e62-466d-a482-5cbfd8699526",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0ebc8165-b594-47d1-ab38-fe9984572f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bfbe7-2bc4-4b17-b18a-3c9cc50272d5",
        "cursor": {
          "ref": "d0ad0f4e-5a59-402c-ace3-5a2c083f7f45",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e1dd3ca-5fce-4264-860d-a8fe1298095b"
        },
        "item": {
          "id": "a91bfbe7-2bc4-4b17-b18a-3c9cc50272d5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "352b2be9-4e6b-49e7-97ae-85240e838049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5f2fd8-b248-4a2d-b3b5-cad7a06dbaf9",
        "cursor": {
          "ref": "d625a187-26a9-4661-b655-162cb22b5523",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "779091a8-d4a9-4d1f-8d92-455877c2da7a"
        },
        "item": {
          "id": "1e5f2fd8-b248-4a2d-b3b5-cad7a06dbaf9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb066c24-4769-43c0-a137-e0eb14c762bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6b3988-23e4-4e0c-a7ac-c5d26245c33a",
        "cursor": {
          "ref": "f5959da8-b2a7-4699-b945-da38dc488a23",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "51f13415-0114-410b-a0dd-9a0734a0d60a"
        },
        "item": {
          "id": "5f6b3988-23e4-4e0c-a7ac-c5d26245c33a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9dea11ba-bd4e-4bba-8bf4-c22988dc3bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b34222c-cd62-4833-960b-2359e2c428c1",
        "cursor": {
          "ref": "36b746e9-29bd-436a-83cd-2f384ce0db49",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "93288ab9-2cf8-4f7e-ad79-30155d2966b7"
        },
        "item": {
          "id": "2b34222c-cd62-4833-960b-2359e2c428c1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c5be79f2-6793-425c-895f-2dbeb60d6b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc31040-8b70-4f20-a49c-4df0263ae82e",
        "cursor": {
          "ref": "9d984d96-1f5d-43ae-81b9-b0af3118e2f8",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cab68570-2a74-4a85-a6e3-b48f17a315ca"
        },
        "item": {
          "id": "cdc31040-8b70-4f20-a49c-4df0263ae82e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ceb004c8-369e-451a-878e-e3a26807ca22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bf0deb-fdcc-46ce-a074-2127f7c86d3e",
        "cursor": {
          "ref": "a20f6c91-8740-4e4a-9a13-287e222275a2",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b96361ed-0a0c-4ac5-9f05-d635e0ede4f7"
        },
        "item": {
          "id": "e9bf0deb-fdcc-46ce-a074-2127f7c86d3e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "75908933-8ba6-4bbe-8b5f-cfe4f9401afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4634df-f852-4c4e-9602-daefb3f08063",
        "cursor": {
          "ref": "e258ec21-def6-4897-a7aa-04526efdbea6",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a6eeaae8-147a-45c8-a91a-cb741d77c297"
        },
        "item": {
          "id": "3a4634df-f852-4c4e-9602-daefb3f08063",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0bedc108-4015-4e90-b919-5103e1bfeeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e991db9-30bc-48e5-a23f-ae4eb02ea522",
        "cursor": {
          "ref": "ae7d6f1a-964e-4cfa-a967-c8520d83998b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dcb67005-c95a-4c27-a7c7-c07268b41991"
        },
        "item": {
          "id": "6e991db9-30bc-48e5-a23f-ae4eb02ea522",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e1ea1d23-9b31-41c7-a13a-98a9e8b86992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c23044-2c90-4845-88b4-55cfd5c92c58",
        "cursor": {
          "ref": "4936c503-d217-449e-9ea1-9a5d6460173a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7c534af0-a19a-4f49-a594-c095b3759d31"
        },
        "item": {
          "id": "10c23044-2c90-4845-88b4-55cfd5c92c58",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a1b244b8-cbca-462f-9e0f-d7f6996c07f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e9d0e8-6e1d-496c-8e08-1cfd8421fd87",
        "cursor": {
          "ref": "f686281a-a752-4633-9130-f0988bdff5d7",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7d64e9b8-24fa-4911-987e-dce53cbf86d6"
        },
        "item": {
          "id": "b0e9d0e8-6e1d-496c-8e08-1cfd8421fd87",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "02fbd055-bfbd-4264-b7ed-fb22e6a3c819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0640aa-613e-4e47-9292-ea927d7459a6",
        "cursor": {
          "ref": "36a3cda6-6035-4ba2-a383-3aa613749fd0",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3972b6c6-fc7a-4561-918c-89fd69bf3604"
        },
        "item": {
          "id": "6e0640aa-613e-4e47-9292-ea927d7459a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "614fc9b8-5a2b-4c78-81ef-79c9ae050fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798fe8d2-18e0-48f4-b19c-9637cc1eb8f0",
        "cursor": {
          "ref": "f8b9b37a-d34f-4812-8dae-a7916796d8ee",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e618f0a4-c64f-4990-b6db-a407bc8b55d7"
        },
        "item": {
          "id": "798fe8d2-18e0-48f4-b19c-9637cc1eb8f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "61ccda2b-ae3a-4479-8b85-ca55b6e425e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da41cc4c-02f5-482a-84bb-0212b492f005",
        "cursor": {
          "ref": "ec2e1271-6617-47b4-bd66-76c88466a9a0",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c90043b3-c8b9-45b4-be33-e5b7629ba5b4"
        },
        "item": {
          "id": "da41cc4c-02f5-482a-84bb-0212b492f005",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "45eb775c-1ba7-4fd1-b997-ca92be48c2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb42fed5-26b2-40b5-8fbc-510b1f2f008d",
        "cursor": {
          "ref": "50de0d09-71dd-4395-8ee1-9e4faf639cdb",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f6144e93-756b-4c42-9801-8c0201cb13a0"
        },
        "item": {
          "id": "bb42fed5-26b2-40b5-8fbc-510b1f2f008d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8aee63ef-efd5-4618-9451-743ddd2b762f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb4a84-54a8-453c-8c93-87b143b55857",
        "cursor": {
          "ref": "28f42036-8188-4b34-9973-980b31389329",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e162f75f-1898-4c96-93a7-184fc7db6649"
        },
        "item": {
          "id": "27eb4a84-54a8-453c-8c93-87b143b55857",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a9bb25d8-bfe2-4094-b654-763c8c4a8dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bace8e-8fcc-45b1-b465-af9c365ee6af",
        "cursor": {
          "ref": "c69ed352-c44f-40af-8275-0fece4566d76",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "43a3b126-76a0-4f1e-8f22-e83b8da6cc68"
        },
        "item": {
          "id": "e9bace8e-8fcc-45b1-b465-af9c365ee6af",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ee1365db-5a3e-458f-ac13-f56a8d73e870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52e6d67-59f3-4db1-8ab8-25533063a640",
        "cursor": {
          "ref": "1bf3feb9-9bbf-4219-8c09-c7d91d122bff",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d41bf3d2-d63f-4755-b39f-c18045fdcdb3"
        },
        "item": {
          "id": "b52e6d67-59f3-4db1-8ab8-25533063a640",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4b8f8186-f5f1-4e68-83f1-afc8a23f08f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f0d013-b61d-45bf-b9ad-805f415ee6b5",
        "cursor": {
          "ref": "8a58393c-a012-4676-a72a-bb95f3035152",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53d6d0d2-10b7-48ee-a6ef-7f7ef8c3aaae"
        },
        "item": {
          "id": "53f0d013-b61d-45bf-b9ad-805f415ee6b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "519eb7c0-3756-4f6d-a410-78b80df3acc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf150ab8-af0b-4ff5-b791-9f8e9daa41db",
        "cursor": {
          "ref": "1221bee0-b16a-42ec-adf3-7dd8b8c09f75",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0d3f79c-5694-4039-9ff6-4eea5ae4fc6c"
        },
        "item": {
          "id": "bf150ab8-af0b-4ff5-b791-9f8e9daa41db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "052b49fb-0d7e-4904-8c90-ecdf0b5d1d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f9c395-a476-4db9-a37f-739340d95c53",
        "cursor": {
          "ref": "299be9c7-f303-43fa-bd8b-ab7144f523c6",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7dcf7eef-6b60-437e-9ede-63a84bc9dbe6"
        },
        "item": {
          "id": "75f9c395-a476-4db9-a37f-739340d95c53",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c6201dee-9a31-4357-8ca1-70d9d9fc293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5350740d-7efc-4f50-8130-b9df521c88e0",
        "cursor": {
          "ref": "80c8bdce-65d0-45ce-bf38-71a095b4a4a7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7620daea-12af-4a4a-b856-46093ed3dbeb"
        },
        "item": {
          "id": "5350740d-7efc-4f50-8130-b9df521c88e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3ce3485e-b75e-4eec-b002-45d2f34a0804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90e8e22-4186-475b-b165-f95f102f1fbf",
        "cursor": {
          "ref": "a464bf4e-220f-4f2e-a3e1-b1229382eea4",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9cc259d9-0d75-4a6c-bb40-00545180cf59"
        },
        "item": {
          "id": "a90e8e22-4186-475b-b165-f95f102f1fbf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "028a85c4-09a7-400e-9926-3d1e9083ae09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c23ea6-5a4d-4e32-b351-7967bb9fd26d",
        "cursor": {
          "ref": "5538c324-bbbb-4e6a-96ca-8efb0ba2ad54",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "af35005e-b099-4bc4-9835-5c43d2975c45"
        },
        "item": {
          "id": "a6c23ea6-5a4d-4e32-b351-7967bb9fd26d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "78319b5b-1c47-4e06-a0b1-3c0924d2914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f569bd-bfa8-477b-98c0-c9c5eace68b2",
        "cursor": {
          "ref": "78cb9538-61f5-495d-a77d-856a57bf2418",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef2236fe-5810-43fe-ad18-4333dcbf65ed"
        },
        "item": {
          "id": "49f569bd-bfa8-477b-98c0-c9c5eace68b2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "697ea29c-2c53-4cbf-9ee7-4768789334a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278dd77f-a8f3-488d-8879-73db160b42dc",
        "cursor": {
          "ref": "d112b5df-baca-4079-9255-9805573a2b7f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3679275e-10f5-4ce8-a815-28c8f22f055a"
        },
        "item": {
          "id": "278dd77f-a8f3-488d-8879-73db160b42dc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "00fc989c-06d4-4917-bbc2-edb6879103f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf7fdd7-98f1-4dc6-a2f7-3f82c8b02e99",
        "cursor": {
          "ref": "4fed5779-e119-4da4-9f77-dde28bfc5e70",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f64aec7-1b33-41d5-9bf2-7dbc53da3ede"
        },
        "item": {
          "id": "ddf7fdd7-98f1-4dc6-a2f7-3f82c8b02e99",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0a3ae5d9-1de5-428a-a94c-283fd99d06f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8986a4b3-b5e7-49a0-a671-ed62f4b836ab",
        "cursor": {
          "ref": "d304e24f-2966-4869-bb6f-0f84a976e222",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "edbe9e5a-e3a4-4801-9989-509cfa46c2ed"
        },
        "item": {
          "id": "8986a4b3-b5e7-49a0-a671-ed62f4b836ab",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6221ea4d-868e-40a1-8f79-d5196da0c637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f492c944-254e-4a7e-8bcf-d50a7314fd76",
        "cursor": {
          "ref": "22282ca5-4df8-4119-a02e-38ce44bcfe2e",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6011d1aa-f101-4ebd-b537-96324b967c5e"
        },
        "item": {
          "id": "f492c944-254e-4a7e-8bcf-d50a7314fd76",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9c44a7c1-c19a-429a-b3c3-0c2e1fbb4090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c4036-5f84-43ef-a39c-1bdf42c0a634",
        "cursor": {
          "ref": "ec15a63e-6b53-411d-8880-14db4ea8cf84",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1310c993-9da1-489f-8dce-3fc26e361f6d"
        },
        "item": {
          "id": "f94c4036-5f84-43ef-a39c-1bdf42c0a634",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1e2a6545-e948-45cf-a5bd-44a39d18c489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff3b3af-a497-407b-80ee-dc694fb56775",
        "cursor": {
          "ref": "d55657fd-abad-4d67-aa7b-959187810b02",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "76b32c0c-34ed-4008-939e-a8b6c2131773"
        },
        "item": {
          "id": "dff3b3af-a497-407b-80ee-dc694fb56775",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8f526332-d0bf-43fa-a66a-721ee0428662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de57b6bd-69d8-4299-b7a8-85f7393c8121",
        "cursor": {
          "ref": "0a8c322b-149f-4399-9e7b-41c858e5c60a",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "733b9dbb-91f4-4bd7-b472-0129191161e1"
        },
        "item": {
          "id": "de57b6bd-69d8-4299-b7a8-85f7393c8121",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "480e5a81-0cfb-42c1-b60a-47125d58ad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13583680-5b4e-4e0a-bb3d-10b8d1fce125",
        "cursor": {
          "ref": "db13e112-dbae-45da-a973-203314836c34",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0eb11a4a-14fd-420f-ac08-14dc042d33ca"
        },
        "item": {
          "id": "13583680-5b4e-4e0a-bb3d-10b8d1fce125",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a77ed193-2855-4750-a845-a0267252c583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d302f2c-1b6c-47f2-8f54-a971f4e557fd",
        "cursor": {
          "ref": "2ef427f2-a87c-4645-aeb9-a778a9ebb4fe",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "808b6877-21a1-417f-9004-bcfdf3f2f2c2"
        },
        "item": {
          "id": "0d302f2c-1b6c-47f2-8f54-a971f4e557fd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b0e00531-0edc-4caf-a778-1185d3b90673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe3690-4511-4374-a777-b114da2d0dd9",
        "cursor": {
          "ref": "cf449503-e079-4b9e-b2c1-953ebbfde63b",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aeb12834-de51-46ae-a1ea-161add463c24"
        },
        "item": {
          "id": "06fe3690-4511-4374-a777-b114da2d0dd9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "93cbf85d-a180-40d8-8316-6a586cbcfb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf687f2-ea22-4d12-a417-afa47a11e547",
        "cursor": {
          "ref": "3a090635-d7e1-490e-965e-e103ae0720f1",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c2bea4f3-8d79-4c2d-96ca-4961497428a4"
        },
        "item": {
          "id": "6bf687f2-ea22-4d12-a417-afa47a11e547",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "319fb845-20f9-420f-b95f-42302d41c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81cb0f0-d69d-4a88-8c5d-651223dfdd29",
        "cursor": {
          "ref": "52a4a8ad-47d4-460c-83a4-2062b89c7745",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "21ed04e6-d3d6-46c6-8c17-4c6a102e1318"
        },
        "item": {
          "id": "c81cb0f0-d69d-4a88-8c5d-651223dfdd29",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "113b69c9-02b0-4509-a8d2-55ace8e2af0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7e92c3-e737-415a-b226-db674e939e86",
        "cursor": {
          "ref": "d3064c06-05ca-4f15-9eb1-ab927b5d7289",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "837b3c0c-af41-434c-bd5f-91a0974ed363"
        },
        "item": {
          "id": "8c7e92c3-e737-415a-b226-db674e939e86",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c3fda046-8084-465e-b780-d2ae27abe7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e60ca7a-3c1c-4ce4-974d-2ea6d5317d79",
        "cursor": {
          "ref": "ba5090b4-b453-44e6-bb79-07e7be4f3b3c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "87ca47e7-50cc-4528-852b-47787d10a5df"
        },
        "item": {
          "id": "4e60ca7a-3c1c-4ce4-974d-2ea6d5317d79",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a917f679-fd7a-403a-b502-8c5baf8de1a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f27102-05da-4eac-ae63-0f77a530b2c2",
        "cursor": {
          "ref": "dfe38cde-1156-487f-a339-4aed968da0f2",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0faaf5af-c102-4737-bfcc-4555c4d8bd5b"
        },
        "item": {
          "id": "65f27102-05da-4eac-ae63-0f77a530b2c2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b1f52426-1ad8-459a-b596-a8f0817b7ac1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 367,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83a8b56-d11b-4874-bb5f-eba6eb6d7f6d",
        "cursor": {
          "ref": "6e27c5b3-3b52-419c-8b04-0a78719ac5b3",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1857766e-cd08-4a75-91f9-a27de862ca99"
        },
        "item": {
          "id": "d83a8b56-d11b-4874-bb5f-eba6eb6d7f6d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9a70822d-6ac2-47b6-934e-6f054f97f9cf",
          "status": "OK",
          "code": 200,
          "responseTime": 462,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "17825354-f5bd-4db2-8909-62a91091f682",
        "cursor": {
          "ref": "6be5df98-8da8-4274-a653-d352bf48209b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "778fac5b-dfd7-4867-8327-f20b2ff6de0c"
        },
        "item": {
          "id": "17825354-f5bd-4db2-8909-62a91091f682",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7e277b3f-1db7-4f38-9fd0-52c8b24ab3b3",
          "status": "OK",
          "code": 200,
          "responseTime": 2057,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfee8c00-12cd-48ca-b1ad-94f5768a04ea",
        "cursor": {
          "ref": "527613b8-4271-4636-b5a0-0be2b133304d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2815a78a-6ad0-470a-bcdb-7cdf46502c2e"
        },
        "item": {
          "id": "cfee8c00-12cd-48ca-b1ad-94f5768a04ea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e1876d97-327f-4ed6-9184-ec3372611693",
          "status": "OK",
          "code": 200,
          "responseTime": 1805,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
        "cursor": {
          "ref": "fa2cd82f-c183-4457-9e89-b35741d60b77",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f55ed4c7-00a0-436f-8e1a-55d3f93bc5e6"
        },
        "item": {
          "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "79583cce-9b24-4ff7-adb5-4925dbcc4641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
        "cursor": {
          "ref": "fa2cd82f-c183-4457-9e89-b35741d60b77",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f55ed4c7-00a0-436f-8e1a-55d3f93bc5e6"
        },
        "item": {
          "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "79583cce-9b24-4ff7-adb5-4925dbcc4641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
        "cursor": {
          "ref": "fa2cd82f-c183-4457-9e89-b35741d60b77",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f55ed4c7-00a0-436f-8e1a-55d3f93bc5e6"
        },
        "item": {
          "id": "7dce7c2d-3ca9-4eaa-9749-698db009a344",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "79583cce-9b24-4ff7-adb5-4925dbcc4641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbf032f-6736-4c5d-948f-2b4de0d58b62",
        "cursor": {
          "ref": "dba3ffca-9358-4932-9b1a-25f160f9204c",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2fae7ea4-8897-40a6-9422-f011bf19a8e0"
        },
        "item": {
          "id": "abbf032f-6736-4c5d-948f-2b4de0d58b62",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "74c7e897-cc26-4824-bfda-00bc9f1cdf73",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 349,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9a2a3f-60dc-4721-9b52-d63a18de333d",
        "cursor": {
          "ref": "2d51dd15-0c3b-4323-a00b-ae98e43dc089",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8abc5c82-3ee7-411b-b8de-eed0d4cfb31b"
        },
        "item": {
          "id": "8b9a2a3f-60dc-4721-9b52-d63a18de333d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6cf810c6-9b8f-4df5-84bc-a234d3b10823",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9a2a3f-60dc-4721-9b52-d63a18de333d",
        "cursor": {
          "ref": "2d51dd15-0c3b-4323-a00b-ae98e43dc089",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8abc5c82-3ee7-411b-b8de-eed0d4cfb31b"
        },
        "item": {
          "id": "8b9a2a3f-60dc-4721-9b52-d63a18de333d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6cf810c6-9b8f-4df5-84bc-a234d3b10823",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7005ae1-07b4-4a69-aed3-bb4ac8521550",
        "cursor": {
          "ref": "25ecb31f-9913-487d-a7e8-4356d21964c6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e9be00ec-0d63-41ab-896c-442899cdb859"
        },
        "item": {
          "id": "b7005ae1-07b4-4a69-aed3-bb4ac8521550",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b5f35f3d-1053-4643-a982-14c957e97335",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c49636-ca86-4b50-b925-f3456b1481a8",
        "cursor": {
          "ref": "9acef06f-9eb6-44dc-9002-5f7c52adfbc5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c5c07170-00c8-4eb7-8f9f-28ae9d644086"
        },
        "item": {
          "id": "31c49636-ca86-4b50-b925-f3456b1481a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "916434cc-2906-4fa5-89e5-dd6b9447dec6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c49636-ca86-4b50-b925-f3456b1481a8",
        "cursor": {
          "ref": "9acef06f-9eb6-44dc-9002-5f7c52adfbc5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c5c07170-00c8-4eb7-8f9f-28ae9d644086"
        },
        "item": {
          "id": "31c49636-ca86-4b50-b925-f3456b1481a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "916434cc-2906-4fa5-89e5-dd6b9447dec6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a77a22-e777-421f-a4b4-a75a699cc7f7",
        "cursor": {
          "ref": "4a6b3b63-0223-4f32-8fc2-60fa8425c52b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e6001091-15c6-4649-a454-6a0de59fc55b"
        },
        "item": {
          "id": "99a77a22-e777-421f-a4b4-a75a699cc7f7",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9eadb460-fcdd-449e-a321-f34b93e284a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}