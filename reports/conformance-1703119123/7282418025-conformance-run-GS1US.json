{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f9beb809-702a-4dad-9393-c283ed75e203",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d3a2e60-2bf7-408e-bb02-9547b1e061cc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a112cd75-9741-43bf-a381-a037f8928fea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80fcf43a-f5b4-4a6b-9fca-bd6c450eb4a4"
                }
              }
            ]
          },
          {
            "id": "9f13979c-221d-4e0f-aa47-2d79c2a53980",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "289d873f-b906-41b2-b208-376f1002e72e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b42df4e-1090-4c1f-8556-242d054db663"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d9149c6-6017-483d-9d51-bda30635c906",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4dbc51e9-d343-484f-9f8d-6dc90ca605a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f609c91-6606-449f-bbe9-77b20ce740e0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "569986b2-00c6-4cc5-b5c7-c192219c4ab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccb06af7-9bae-4b7e-9883-0b2e04bccc86"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f4cd925-ef98-4587-b33e-29677d9d6b4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b88333a3-5265-4bdf-bbdc-103831132a44"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6147cc0-d402-418f-993d-266062162eca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09d89a10-6d67-49f7-9bc7-e7e09d75ca9b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84ca903b-3895-4d5b-b453-c4cf041caaf0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ecb2948f-adc6-4221-af42-f1d81314080a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a33a215-69bb-4d2e-a9eb-d0cf5e899a86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f504f123-a1ed-4240-9269-01f7d25a6171"
            }
          }
        ]
      },
      {
        "id": "72e0b5bf-24f9-4fcb-bfc0-bbadfbad95f2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "60d16dbd-d022-4c7d-8ba8-6b74daaa4538",
            "name": "Negative Testing",
            "item": [
              {
                "id": "619bdbb6-2f68-46f4-a213-86118f2765ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a0aff1a-b319-4ae4-adfb-c6b13ce884d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87f7949-fc18-4180-a2a4-5ff7f143b1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ddcc5e5-5c9d-40cd-ac19-c31e9ae86247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bab85e6-ea9b-4189-882f-b3cf3202fbb1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6aeeea-5f6a-4e2d-a644-953a5d94cee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fcb8ed2-dcd1-4ec5-aa92-77ab437742fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5109b3fb-5406-4a44-adb0-f3c61eddbaad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a0499e-d3f8-4515-80b8-96418121a470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57926a9a-9ea0-40bb-b4bb-3231725fd171"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d586feaf-4941-417d-89ed-78f7197257aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6333c895-0287-4075-b1d9-a9f947267053",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bdea69-ee48-40a2-88ec-5503f2f0915b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7066a767-524f-415b-abd8-0d0a37958e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d59628-b3af-4349-9c32-62f6b369e61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db963ce-39f0-4e00-abd8-7ff426b7df5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cea40bd1-8c6e-4cf7-8e64-220d8978662b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e10e3eb-ff1b-472c-9843-6bda2603cd54",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fe898a6-c85e-4092-bafb-e6566ca4f3d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "99c095ee-ef8f-4fd9-91f2-2aed788eb572"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c12b7264-1061-4e15-80f5-a3a8695c5607",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "02207864-274a-40b9-b163-c72522e676c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "028b01cb-613b-4bce-9f63-0f0b3eb6fb0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da5169a0-aa88-43fe-b198-0cfa2976a9ba"
            }
          }
        ]
      },
      {
        "id": "62ab797a-4e2b-42d8-92b1-4d2cd708d709",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b935e3f0-f42d-49c6-9c99-d868249ec8f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc3ce482-3174-4b5b-9d7c-a997ffa0097c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f580e401-2129-4093-b11a-53dcd0e88886",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c6cbe4-6ea5-4001-9a3b-0cdbe4856a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e27781-d357-43f3-a07d-a252083e006b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6084470b-ee04-4fbc-aed7-ddc0be3ee542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31372e0d-f845-45c4-90ea-3cb4312e4efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8498c9eb-0183-4991-b9d0-e93b67186048",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3c6b75-46ff-409a-a6fb-92e07507a411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a04ea5-93ef-4eeb-b2d3-8cb3381d7fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfedb27-4b2b-4634-b209-ca6be216e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "518e9752-9c35-4941-9985-980894a97eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2a8037-a97e-4270-a466-e275918f84bf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45c1c6b-b670-4381-904b-893872ff36ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1226b0e-efbf-41da-86fe-6678c9d19a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f75ccbd-a181-4d78-98e4-4b2ac4cd48ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14147db2-d0ca-4517-a924-0a44a0f0eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaed253-df4f-4667-8fb8-365d006a4ddb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83772ff6-dfa5-42fb-8129-2f150c5a8a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537f7822-0655-439b-a38e-424b61ccb87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f90859f-2e52-477c-888e-dce826966b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "699d57f5-4e2d-4c8f-af93-4cc38344a184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1694db-1e27-4b5a-93d9-d32a03333f80",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e324ac-d52e-4a60-8d7a-3d38eef37f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ed3fa0-5836-4d94-ba99-78af9f0f3c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d45335-a07a-471e-98e5-dd47a8ef0c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83cc1e29-4cbb-458c-8fd8-ad508d3809c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d95e6d1-ad8c-41bc-b0f4-478ae29a8e7d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd8ef9f-3c31-416e-b20a-faad7a42c096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feee2e74-efd6-4a56-93b6-2176f90153d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0423ae-8869-4e05-b613-5d62666aaccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f716980e-a8b8-48ae-9d2b-08af4a35376c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705560a7-5932-4be8-a3dc-d782176c9307",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b7e7ba-08d4-4d97-a986-94d661631e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eef77fa-6f60-41b1-8e0a-d5c9bdfa4828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d8ca34-c70c-4ab1-8594-afd1bd2abe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fca92882-e5a6-4a75-9a1e-a623842c8f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b0bc8f-b9ab-4ad0-bc43-94f658917a64",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980775ab-513f-4c28-a62e-fc9ef0c97919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93892220-c117-4485-8e19-c4d6c8732f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223597d9-abc1-47ba-a675-232256667c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c231d031-9c75-45fa-b46c-76d4450ba3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a646734e-986e-411e-8245-6b776801f7cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae897032-97cb-4c1b-a309-8c65e1ece7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bcea62-c0be-4359-afae-175a015659a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163eebe3-ed05-41c6-a94d-08d106486a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61b2ddeb-a910-438a-83c4-c494d0d0907d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292cb98c-f357-433e-8f24-bd4ba80176e4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce4ce2a-d30a-472c-bbb0-4baf8a20a95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff552cef-a560-4793-83d9-e0346a6baccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02486b5-5c7d-4bf8-92ce-27ae33278f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b7e877e-73ef-499b-ab26-f4875850e6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a06c19-11c5-43cc-a272-3a43c381ec8f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204fbc7e-0fe2-4a97-897d-d8e6dc088dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c44faf-0f14-41b1-970d-44699abde5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401b3e64-6382-4f57-b935-6efcb4758570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1995ff8-8f58-4318-b103-66a7bb686be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd277287-0391-41f7-b7a9-34aae3342c81",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e2f911-814d-44ce-961c-a02dcc586dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b666c30-993d-425b-8ba1-78d114f7b1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd300447-f37c-4cbb-b6a1-513c6cfd4e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78fccdb8-18fc-472b-bcce-6540b5fbdc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf62de68-20f7-46f6-b048-7249508b42a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c61cb7b-e014-404a-b7f6-6c8941befcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae73513-543c-4e24-b30f-4c01a5448a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e5e237-34e0-4442-9b65-9c9b87a1f297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea2d8ef3-d241-40ff-bbc0-6a7800d72080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af0921f-ea47-48b7-aaf1-a68f5abff4cf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf62280b-6ca9-45d1-9a33-795200277dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fcec33-1001-4cf1-89d0-82f50adb4c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b4257-9b6f-41ff-9701-9347e8195b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88636548-fb6f-4bf2-a5c2-486b03cfced4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ef4e40-f018-40ff-8637-9d119960775e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a90771-129f-4f44-9cf8-c316744b3339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29e14bb-e12a-4338-abe5-6ffa66c0cb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794ede18-a8d9-4fc9-adcd-6f88d8d27826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcca6ca5-4dd4-4097-b7fc-41e7901add93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862019ce-c91a-4ad0-a572-f97026fa1c7c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd94f9e1-09fd-4fcb-aa81-4c837810a427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913ca0c0-9bc8-454e-a97a-014309489773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432ad542-9a63-43b8-a339-9a4da563f08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75a9f46d-a6b5-4547-a155-d72f10e16e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afab83e-58c4-4fbb-b1a4-83abbf4f52a2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4962c0ff-4e70-42f8-a760-694ac1281be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c80042d-991c-4c35-a59b-568965ff051b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077e3b88-7bdc-4d78-a387-ac93b2105502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcde0b67-2518-410c-98e5-c4a59656b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568733fc-3d66-4fe9-bcd6-0a6279f81123",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559d4b35-aedd-4ec4-97e4-1c02de3b68eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692d9bfa-3cbe-4daf-b1ed-e2df92284786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835acab3-aab0-42bc-a128-05afd584c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3cefa6-0711-4f63-b795-58f0c9d3b0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ab9013-376d-4033-a382-39044fee6a1a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b92765-a811-4e79-a69d-39dae1a5ca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5680558-69a1-4961-97e6-cc9a6b1efabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e3e27a-4c3b-46d0-8f0a-45dd7feff338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3f7702-1b36-46b9-864b-a77186ea6f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5877746f-b6ee-4b80-90b9-cc916c5b670b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f24772a-534a-4320-a38d-34bb17bb1862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a56b8c-8dbf-4661-96e9-9fd42b2e0852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55179b8-ef8d-4fe3-961f-c2cb37963299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9239d7e-1d84-425a-8b25-13637ff91380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e446e44-d584-42e4-b3ed-1e28e8e18c86",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06ca486-5e91-4faa-8802-1d4e1a428850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acab38a3-06bb-4a13-b1ac-f111ece39394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bfa22b-75cd-418c-a275-a65948e30413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd89ec45-da0f-4f6a-b421-8bff79fc9823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324716ec-ae47-4d65-a283-81aad76114fd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eff227-b37b-4a3c-aa1f-da50d39228f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeec1b57-c630-4aac-841f-e72d875e04ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553e02d-f4b5-4d05-9d66-d4e084470253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a29ffa15-b4be-4957-aa9e-9132d38a1f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaf98e7-0057-4632-9476-394f457b2806",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4b4864-aeba-48eb-947c-00812cdce75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ada11d7-040e-4369-aa72-b6a5ca3ed0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b9a3f7-961d-4ed1-b561-d678cb5011c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d342980-26a6-4851-b2fd-672a35b78402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c19c2c-aa2e-4f12-abfa-d5a4372c9f52",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e920e3-a1a0-46c9-b8c0-e54619721f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f50b019-67e9-4191-b55e-9a77628fd84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad99769-3aee-45d2-9dcc-f9083d32acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08185cd-38c5-4a32-91c0-70194b322b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e99e4cc-466b-40a4-89d4-f0006de637a5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdf1d76-b0e4-4839-8e2d-805713b758d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a6c856-6c2a-44ed-9e06-f5e427c581c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89169eb-9df6-4433-878a-fe304746a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eace540-3305-43e7-940b-ae69ed293efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d02e29b-7f80-447d-aced-d66f2c494798",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a75e43c-4869-4138-82f6-2c3474337939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f44431f-9df8-4146-bef6-0d27fcb78b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9ea5d-9f45-4e3e-b880-d3262ee55a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aee2f79-33bd-4c06-94d7-686cf678e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eca2c8-23b7-406f-80a4-6dc5fd30b9f0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6f99e6-2e42-44fe-96bd-98be37824afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdb74a6-f62e-40f7-9764-c30b7567a948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26fa518-d47e-4b22-bad8-9d70de1bcd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e2e5a7-d683-4748-a41e-57ece66df179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbfaf15-1282-432d-8582-04bfb47f223f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e0cfe-cfa7-4ff2-9f44-51c97f92ba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946d1ac8-6060-45b8-bf87-133068dc5978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baf274c-c0a2-445c-a047-6285b7611bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7be222-0275-48b8-82dd-75c6d740002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752587b2-416c-4eed-8606-3a41760e7dd3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b64278-f0ce-43cf-b804-5ca142c6e363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9be8b5-7c0d-4ef5-9448-647ccf3315bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1116ce1f-155d-4e86-a6ec-e2db27b8634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58521861-6e8d-4c0c-a419-2b70e44a5525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e3112b-1d78-404f-94f4-f48629467602",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956a26e-255a-471a-b31b-5634b3ff56e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d10b5ef-dad0-4457-bbb1-1a603b690d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc38e06-7f5d-404a-ad44-379a2408da67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf814e1-b6a6-44eb-8adc-3f914b3a115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb03a54-364d-4877-ae16-b9ebcc9ae249",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e963661-4797-4c28-a04e-cc6da334e77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245b818d-d429-4703-bf3f-9522fb74a00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490e6ed6-789f-47ce-ae41-096236b0e51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0247a4-1c70-4a0f-87bd-8ddcd07bb701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412cf254-7a03-45b2-815a-1bbf58913424",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0894166f-a495-42aa-8177-f138faf62f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c24d77-f4a2-44fe-acda-2a4d7a2bb8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e725729-dc66-4e35-8d4f-51cf93e1e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72068b77-782e-4578-a0ff-de11e49ba965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8c22ca-1810-4288-ab01-dc6fcb10f2a4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb89b9c-dad8-4fda-8433-d6d521591051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8d807e-4996-4bb2-8bd2-9c25fd456be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88274c97-5764-4c82-ba01-68caeb19bf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d952b0-663d-40d7-a1b5-08a1522f7776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bad058-e43a-41ef-91b6-9b565dd06e70",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f25113-cdb7-4211-94cb-02b2ed956474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d841c5-d087-43e7-8425-061823e49e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb705fe-f065-485e-bfa4-4cd154995782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f1ba67-f0d0-4151-b632-e8dd9e030141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fc1c7f-2e86-49d0-a103-c9de98768ec5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac41c207-a3f2-4d7a-99d1-d5d30a5aa1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908c3d55-5a26-45bb-93cf-05f48aba6097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca93835-b3ab-476c-be4b-26b38705218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "841cf27a-69d0-482d-b22a-3383c6a8d4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1264c0-1e6b-40eb-b0dd-170e4020ec71",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fb17b9-d5d6-4c9e-bdba-051eff244883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "813e800e-12c6-4d20-aa88-f8f1048113d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd96f9e4-429b-4ddc-a501-db22105b3b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59f9638c-a7cb-4cb6-9b75-b91d4360367a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e809e79-dd6b-4464-b936-8f3d711b9ff5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63ff002-5167-4f7f-9aae-2059e9f514a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f0294f-5723-4b49-b0e2-c20705498cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0422f3-0491-46c3-b3fb-dba6f40c7b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72b98350-67e2-4770-adb4-c6902995c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e2ff6e-57b5-4467-acb9-f3a9bcd0e823",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dc123b-b039-4d49-bf7b-996e5edd414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e50e09e-283c-4cae-a4f8-06a50a5c1775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e213323a-75e2-4c2e-9f60-f5ea727dd687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68ac02e9-b098-416c-8e87-12c33d9d43e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b20ea2-cea6-4ea7-96d9-8dab43b91621",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe22de1-5298-438b-82a1-0faf76431832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef8f17d-de67-4a2f-8ca5-9fdf94c87477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d3e36b-bbea-4935-89ce-2f2a43128a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b434ed5b-6922-43e1-9e79-da197c44fb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d507f53-5b69-4649-b1dc-53c9ab57c1da",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed976acd-91f6-47b7-b5fe-868c82cd73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda888d2-8d49-46e8-84e6-79be8f490870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073a5c65-3057-4489-8271-feb5e4db5bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "92a5110e-b7db-4c7f-bb68-524a358a2633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572a8c82-6458-4fa9-a64b-c7467bb21081",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e803590-a2a4-480f-91a6-2c61e240091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4f96de-6c8f-4619-8ff7-3cb10b57fc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c5de69-35a4-4a15-a516-cf6c7d760d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f5168b-676c-4e50-9112-111bcb4b5381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3d28c6-9619-48ae-8fa2-23d64528b871",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4534ca32-e901-4da6-93cd-5538b5a79ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc0a716-b2c4-4223-8edd-fdd3053c29ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d56720-428f-4ded-b135-6d7f53b0dfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc7d994-674e-4b93-b2d5-fb295b28567c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d453ba-14b4-4df8-8887-412911026e7f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea03b6a6-6867-4598-9299-0439ddd91da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d50226-b39c-4b4b-988b-2607a7872dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08d2f18-b176-4e22-801a-73477d821fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a39d699-fcff-45c7-aae8-cf918ca6a47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cfd381-a471-4cd2-90d9-bd87e3044bbb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029dca13-0a28-44f9-a79d-139521aa2775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf2d60e-82a8-4451-930d-9d33b7d32a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dfe655-29f4-4679-a6ee-56e29009cb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "763fe4cc-4d0b-440e-8f74-01b974b31e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6652dd-d61a-4213-81d0-6efada07bef1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9027ecd-87f2-45a5-9229-4c99fae1c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefcea2c-fc8c-4e24-b139-891958a5a281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a7b7d8-084f-42d7-abf7-a32941c90d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd266e1f-dd79-4f2a-9210-b12719f40804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50973b82-5e21-44f0-a031-9eb2ca4cde30",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b7b1f5-d2e6-4e58-9e26-4e5536e94872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ef50fc-7824-4d08-afe3-5eec324244c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601fbb91-11b7-4e7b-8d0b-75f0cf4e5e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b40e60-d192-4998-ab85-b392082ff69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a86ee24-a410-45c6-95f6-8d78377c76d1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c069e6ef-2f23-42c1-84f4-1aae3ce98d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957405fe-9613-4153-9391-271254e13294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bb4748-1102-4585-915c-25f27306d619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38583b0-369b-4080-bcbb-438493b2f29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2862771-b361-4ec8-a197-329158fd4b4a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26d50bd-cb10-4e26-a2f2-1ca46a2de72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ad3294-2d5e-46e2-b2ce-28b5b79b62af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae6663b-adac-448b-ab42-763ac7c4d7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbbad89-2db0-4fb1-bd72-1ae92d0a5f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee84dc31-c042-4c35-8779-4626f0bf0b9b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cca4d79-1f3e-44a6-bada-afb9f9d99eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5dd5c0-aec0-47d5-bd50-d99b630ff903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f05c3c-f31b-4c8f-8c8e-74dea2bf604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "becb885d-b818-449d-ba3f-7ad46f0a5d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190d3b55-3b27-4d4b-86ab-03e4f4d794c4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef3054f-3ab7-4cc9-bb06-0ffe7f9d98a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be6d8a4-9947-4aca-b9fc-c51fc92d8522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616b5c4f-904f-455d-8d1a-4e409c80df07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55296299-445d-43fc-a471-78dba2dd3e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa1828a-e32f-4713-bf40-7916bd9562ee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a699114-4ed6-421c-a106-14ad329977c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940918be-1c68-43f3-ba6c-6bba2a7da65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ec9ef3-bee8-4f0f-bb6a-b68444596b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c43452aa-9837-48cb-9e6d-948cdd75c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2137e20e-f85f-4178-9ae0-172479d97ff7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0b43b7-7550-417a-a481-fd483c9a56d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bde529-b5f6-4d01-a0d7-b403970a92e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d7e9b7-3cf6-4ccc-8da2-57c67ababa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdafdc41-6c0d-49cb-b9c8-9327b614ce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c26567-e8d2-485d-875c-8cead8c07d10",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4e546a-84a6-42bc-be0f-2e0a0ae1dda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bb5ff3-fce8-4a0d-bb8e-dcf72380c807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeeda6ca-2b28-461c-8f6c-67be67349d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e456b4b1-2ed1-4794-9ae6-96de55ed4bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08a81a8-cce3-4027-967d-48d605341b74",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d0e9b-2fa8-48cf-b4cb-fd76bccb9192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f18012-5d63-46e2-8c46-51eda9be68b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35c4ddb-68ab-4fc0-b7ff-e7a4c6a9e954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6aab07a-d828-40ad-b082-ad69aab4230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3545d5f3-5a63-4d1b-8764-d51ba71db31c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0f97fd-18d5-4544-90cf-cd0b4d18309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187d629c-9146-481b-a58e-ee3455f325f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9535148-d64f-412b-af10-9a0b1d204387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2b2d5d-9b87-4b0b-b5d5-47b10117d5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321c2e6a-b653-4a1b-9f93-6ff6cc5c2a59",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f309a7e-f945-4da9-8d97-c69dbe132901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00e82e0-abd7-40ee-87d2-7bca69a80a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c8ed88-e51c-49a4-9c2a-69a6455eeac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "df3260a6-73e7-460f-bfed-bc73ec98f48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643e152c-7a58-4cde-88a4-fc5f244bc29f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843cb2de-d3a9-4985-ab64-a492ab91699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec46781-0027-404d-984c-a8cd33e26749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29030b3-207a-4977-aefc-e1eebdd70369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0454083-bd5d-4d7d-b029-c1c8e41c3065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accb70fa-feae-4185-b43b-d104439e9c2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64589bbc-b9a8-41ee-b5a1-c7714add473f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2223c04c-f3a6-4ce1-81d8-7fa15c5cdc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c330a3cf-abce-4c96-a869-3e8c704ada48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b88b8408-2a83-4855-9a41-06dc456138a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb4c673-245b-4a41-af83-65bbfaefa9a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d60e9f-64c2-4133-a476-a809e167bbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eefd73-5c89-47df-95d7-6158fd33ee79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400a4b7-e393-46d6-a012-b2bd2f88ea30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "121dd02e-fe69-4558-8f5e-985ac1722bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13feafb-984e-4316-84ef-507339413cb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed41ec5-76d8-403a-af01-e47a1dd86491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ef1a4c-a070-4576-a2e0-e0c676ac8860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c62d54-06cf-45c1-ac03-1b15cdd20064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c10c6f19-5abb-4226-bb23-6bfbc4eec723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee060b0a-8c98-4fcd-a321-f0d8781751f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbfe2e6-3a7a-4aa8-b61f-df8afa16f8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f81d069-5da4-49e0-82a8-7230fa7c975f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3126293c-e0ec-4079-91df-991bff829fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97fc36b4-9753-4fbe-9752-cda6c5371a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8343452-0cee-49f9-a285-7cfe4784b5ec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11af8974-2e8c-4b2a-b192-ffff8470ecd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8075d8a2-4bbe-49d6-a327-64a474298677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc79f3-c065-4ce5-aabd-3de15916f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "86a06211-8bde-4121-af4c-905a55a2e1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f4a119-38b8-46e1-9e21-3461bed17f1d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5db9c7-b56e-48f8-a308-fc25308aa3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f473de72-8ca6-46c9-972a-c932ad54cb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa15350b-d3cd-446f-bc1e-0e48a8e88c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf23a11-629c-4aa6-bede-3db50d05a1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e951553-ad29-4c34-8e0a-b1f70ca5f98f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3d7a9-d69c-4800-a052-118c6a7fbf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeee7fd9-327b-4226-8a2f-53c1fe8788b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858a1ff0-cf12-4842-952d-db8c5428d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f67b3570-a714-4707-8248-8f97db8cf95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c608cc12-5672-48db-83df-baa3dceace95",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbd1a5d-6ac1-47b5-96f9-b3de1e2b38d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b8be3b-24f5-4eb2-b68d-50c16d32f868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453ab8fb-3b2e-4593-bec0-adcb53d525cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1363b350-5a70-4216-b49b-2c3dd932b735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d60148f-4538-4a15-971d-8e761808569e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a31a95d-e8f4-4823-95bc-2d7d76de5086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb6a6ef-1f5e-4ac4-89d6-19a4198f8ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2d55eb-a80a-477f-a412-b1a8ea51908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b561e082-f95b-493b-85ac-a265962ca094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63891aaf-7bbd-4af6-b9fc-7090f463a951",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d0b55c-3679-4625-a5af-780005e54d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa431523-1f65-4d2d-b7be-20899d239108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d9b6a4-e5fe-4364-835a-b5b8e294120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d659dc3-d7c1-43f8-956c-dcfe7d733d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9837d01-8daf-4e54-a496-ae7a6bc15cbb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd395206-2d17-411f-8a61-eaf3e8017801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f659ed2c-df25-4e11-bf16-a8b91ec9e643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec09114-062f-4a93-86d7-cf3a1431291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "da30723a-0f19-4e15-b53f-6bcc352e16c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00048b4b-00f9-4189-91c9-ec3332597588",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32baecaa-3905-4ff9-aabd-8540cc3e756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb9a92e-bcc3-4fd3-bb4a-754f1dabf047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc80031-45a3-413b-9bfc-ef8881c206a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01806d8e-52e7-4e69-a56f-e3c7f5ad3973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca24993c-e67e-405b-87b9-6924cd7ec4c7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e20749-78ee-4c7f-8698-0d5e953bc74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c9e8ac-0a90-4ab1-9b50-c874849b319b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4d154a-c4af-446c-8c6f-d6aeaa6148dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab336c6-3003-4910-8262-2d640a97d5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c652e7-d11d-454f-ac1d-960adcd07ab3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6a727-fcdc-47d9-b6be-e3496751d3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78097cd-f109-4369-bf6d-3c2631586fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f11c6a-9030-44be-8b88-6609f4330274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26b72cd-ebea-4a56-87b7-483357f9523c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0cf26a-40d0-4d38-846c-f05776723b43",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be04f752-22df-40aa-a055-5178eef001b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5d5d01-fe6a-4f79-b874-e98e0b9c1cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28756281-9434-4595-b657-ff194ea48354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89ffdbe-9d95-4204-81f4-fc008cf4a960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741f259b-a8fc-4ece-b843-7e414efb9ff3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0b10db-f8d9-4a70-9808-fd3b4657e604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad69cdf-d146-48cb-bc3b-85afea43f5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57219d4-0fef-4bf9-8f90-b38f5de1299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b784f329-172a-4410-83f0-d47e74b8957d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d96267a-e659-4dc0-8a91-eb9277ffde94",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dd1f4f-76d6-4f97-8c6e-929599256494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ec2e75-c09d-45d1-adcf-9fdaab1c1712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959763aa-8edf-4c2d-9c38-7f179d414d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c64fb6-31f5-4721-9c11-a569cda5b6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35815d4-4fcb-469f-b84e-a70c59337c69",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c6f5dc-aa1f-4b0b-bf5c-9b0d7dd16462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fa13fa-3222-46d9-b42a-af516b023ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c25aee1-3f2a-4b82-8083-f62c64f056d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b93428f-8435-415a-8d2a-d70474fe2d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78fab0d-cf4e-4726-9e9a-b2373e652146",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069f1334-47b7-497a-bb52-9008754ae805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa76424-879b-41b9-be3c-8952134e7498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa6faa-7017-4f22-b835-e98cee38f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19809471-6fcc-49e7-a5aa-b09d93764865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1111d5a2-99d4-4b5d-b345-a09937ebbb77",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d63c43-7840-434b-ae65-f599e15c7539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875e1144-baa7-405a-9511-86ab8423a735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81b03b9-834f-4ec8-976d-4aa8ccedd980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a6753c-eb51-40e3-b009-b6820aecbf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf6cd67-bef6-4a5d-98a1-66caef171ab2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed15a83d-a8e6-4422-87a0-ae13530ddc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cc3654-8c30-42b3-a27e-97a4cf2e585b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442b0fdc-d3e0-4590-89a8-8b23134bf925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9784a84e-4b7a-4d4d-8956-7f9bbc33f418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c313d153-09fd-473c-953d-6d3af1c53096",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea96b2e-1171-4a4a-8c43-72d85750db2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85941ab2-2730-42ec-8696-e24e762e01a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa357fc-8472-4a0a-ad63-596996d5b809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bca6bf9-b823-4ce5-89ab-d18f07662746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d71d8f-d1df-4192-b905-cc78e2007c6a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe52ec3-05e6-461f-8247-5dc136209725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8d9ae4-b350-4b5d-9869-b3063dcfeb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eecc5c4-7b3d-4008-bbd5-e660460c6b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8023ad-ad76-4b77-9d1f-a18f0189ded6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83578ba-74e0-467b-9bfb-1e2ac13f97b1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630e515e-f175-44b2-b7a8-f25c06007c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9608b7ad-d9f8-4161-9471-55ab6f5580d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e121bbe-2dd7-4e23-819f-e9ffb41597fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e95aaa4-23aa-43c5-83cf-fcf4ed04c167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed23ba0-1765-4994-b001-455bd9975ff8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fdcc63-0c5c-43cc-8062-8161b12c3bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5071bea2-cbca-4a4f-baa6-9459ec8d015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79be310d-6cdf-4a13-8a3e-a01adeda4b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "130b5f14-0c96-476a-afa1-88c909af5d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa6306-5270-4f96-98cb-e87e75c5c1a5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95183fe0-09c3-4b2a-9dd7-8dd43c5085c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de83957b-3dba-45a7-a671-9326bd80b88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b06ed81-9172-449a-94ea-0f60238dd942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a2fc12-444d-4acf-ba75-dedf778fd056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72054525-088d-4e41-809d-a2fa0cc0e7e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bac6b3-7a13-4bed-8802-a3df3d14e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd3d6ff-9f2e-417a-86a9-2c64cba2c117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bf99e4-1269-499c-9a9d-d5d83b9f82a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2830b17d-67a5-4c08-a6ef-c43e843808f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e9f823-937c-4eb4-a1fb-3debbf7d1a89",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de3426f-533a-449f-9b8a-11580a847f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a829f12-0cac-47f8-b794-8aedb67b24d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddd2c82-301a-495d-8465-6a260eb4ae0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "655dc673-224f-4651-b228-fbccbaabc3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0df3879-a802-4a58-85c8-46aa006b0a9b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba90d09-0c46-4039-b192-114b68d3cb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf34d20-cfee-4e2a-8e37-d8087f7af4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b4e28e-7f32-4558-906b-1e46f1f6162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a961e208-f50b-4048-afb8-0c70ecc2f726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0615ed-7840-42b9-a8e3-8c9033968c45",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d43ef9-455f-43a7-a8ce-111761a5780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f65510-5101-4986-bf47-0c40f27e0ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61344c1-74a3-48f2-ba3f-7f54523c90c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "042581d9-56a2-412e-8e18-c13b8075fecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ca89c7-3355-4f81-bb93-41efeb4d57a8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2cb0c9-6aa2-41cf-9122-960f2ba5f000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea76adbf-9f9e-4e8d-9f17-779aa165bd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd13e3a7-f8cb-4d2c-8d06-f49503ba2c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6172b343-b096-4211-92b8-0a67937ea348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a04af10-5ce8-491c-a9f3-af3d0c667288",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c19444-9046-4942-b45b-088ec379991e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9abf783-90eb-4d26-bef8-9f721626281d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcaded5-3901-4451-b43d-4a93d0c90758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8cae9c-9347-48b5-bbd3-211325aedcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004a209e-2833-4abd-bd24-dec8ec0c62b6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c71e893-40af-4e83-9090-80d0cf9046f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d77eb0-5d86-4930-8fde-3c2c3e1dd83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb71127-650b-4a92-872c-f0208df5b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d631b5dc-c86b-41cc-a6f4-09e61d05f019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6538857f-3105-47ad-a574-0507a0307af2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4997c3a-eaa9-444b-9786-ddc4bd1b48a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d8569d-d048-409d-871c-d89e69f0ecb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c7984e-59fd-49c4-afb1-2b3a45646af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f48173e2-adc3-4e9e-9eaa-08f277a3474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8875f0d1-33b3-4854-b43e-369549531086",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c48f93-dfdc-44e1-aba7-c1e04aa10011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b317b7f-109b-4d06-857b-2af3e9af9bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2fbd65-94ee-47c3-9b68-74c6337f9a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "672e80f8-beb6-4799-8289-9802910f9cda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c49356b4-0405-416c-b145-3c046f94b9d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1222bd93-8505-4e09-b9aa-9b1f9f7e79ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d14712-1c1f-47f5-b26c-caadd7e50c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c994c621-d22b-4c61-9c42-7dc03dcc1653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb092b6-eb78-439f-b4f8-ffbc5787b269",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e4d3d3d-995d-40f8-adae-82be2f57ff06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7518b3-aa44-4af2-80b0-535cb3b4e2ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e81b8f9a-f778-4c97-b193-23ab0d5b1cf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20da68a0-a204-4bf5-a0c9-114e4947f142",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca99c7ce-8596-442e-9181-1a011ef03b25"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25357349-2bb8-4431-96de-6daf01842ab3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f8a7232-512a-4c03-890b-17699fdce38f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41ef2041-4e1d-4695-bf41-180923f267a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4620a4b5-cc7a-4e32-96e2-0f31f34ed69f"
                }
              }
            ]
          },
          {
            "id": "8bb70234-852e-4b49-b34d-a0e978e0e278",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc5d7b50-925f-48e6-b1ce-8663c905b862",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "51304dc0-9d08-47c5-9440-32e08e18f999",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b05b5-a342-401c-a4eb-196e5feb67af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfd193a7-11a3-4c59-8fce-ce872ec1ea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1467ebbe-099a-4b58-8a26-8d3ca7a4134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56f982e-7c67-4c7a-a317-8d8f28efecf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21ee10d5-799e-4ee8-a02b-c850a36b0f4f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b5a60e9-9f19-4111-94ce-24cf14210f39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36f3a16b-8964-4955-baed-0c9bccc727f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71cd0c5b-f7bb-403e-bc9a-5ac5083dc1b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb323f8e-2356-4ad1-a0b5-514ddc258c7c"
                    }
                  }
                ]
              },
              {
                "id": "cdfc6c06-40d0-4cf2-8c77-bf5a9c2d03f4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f50de7c8-9a03-4b3f-9f37-5601618dadde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d914ee7-c702-48f1-b66f-d0c95e0abde5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20fde978-fc9f-4269-ac4d-9f795b3a04ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6500b489-22f1-4191-a5cf-872e5d0e52b5"
                    }
                  }
                ]
              },
              {
                "id": "d51c90b0-cdc5-4981-b535-fa9bfbd7da92",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4e1c211-3946-43ba-85cf-2fef902daf5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0a277ca-4928-4d82-b78b-e398e590cfba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab4d9e58-1eee-4a41-bb2f-639c83b9f7ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c99a4362-95c0-4827-ae73-51a24183a4cc"
                    }
                  }
                ]
              },
              {
                "id": "cfd3ed6c-54f2-4ed8-ba30-d5c6fd3420db",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f676612-9870-4b6e-8975-068de2a72faf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e00748d0-bf55-4544-abd3-9abd04fe0978"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d082af3-6537-4891-b45d-ef37fb3e224d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94e07676-0676-401a-a61f-98e6430ee61d"
                    }
                  }
                ]
              },
              {
                "id": "c5f0478d-5fc3-4710-b2ff-b7415ed326c0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd1d0682-83a1-46fa-bc66-c37c2b288c4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "057c53ec-4bb3-41ba-a1f2-47b5b6b8f1d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "406a9bae-c614-4dc7-850f-6ca931eca129",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "edecd978-e37e-4501-abdb-ca66c3741529"
                    }
                  }
                ]
              },
              {
                "id": "aa7f9010-5333-4aa2-bad1-90797772bec8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac9d035b-1e61-4c19-bf2c-d86fbca3da2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "076175b9-29d7-4d39-981b-6fe16bab87f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec1fa37-5a3c-4d86-88d4-7c8f1ea735be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c561d05-d5c5-4fc7-9da7-62370fff2ef6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1f152ee-9c4b-451c-9402-e57e15a34ed6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff2c47aa-5f76-46ee-9569-817c886892ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16c2c611-5f64-444d-a9e0-6d2dc42a1845",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ab32592-c9bc-412b-b78d-d23a5ae19cd4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa1f0ad8-db09-4f9c-9755-603a3cc47aac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "45749382-1885-4e5d-ae85-d52bf406d736"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24dea2d2-9f87-45f6-895d-657367a5ed4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38fe45b4-12bc-432b-8a65-ca6237b916a5"
            }
          }
        ]
      },
      {
        "id": "e2f710db-ad29-467f-b651-caa63224816f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eaf2ff40-1dd2-462f-8f52-0af91118a42d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8857c6f-353d-4d4e-9689-5445281e84a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "908132bc-18f1-415b-a942-103a386dbff2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a772ce95-6b31-420a-8b56-33fdc48c8f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf620dd-3eb7-4d48-bfa9-f7a6491372c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b29bc7-64a7-47ae-9bc9-32f52f4f8fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d134bd5-e140-4214-8c5a-a14e179f9057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5470106c-f07d-451f-8e15-fdc6905ca360",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb3e6a2-443d-4c56-bfbc-45d8348b33eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540d16db-c31e-4f14-b127-6aac33f2bace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3410f664-58f2-423b-9ba9-996242ef6813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66681e64-e61c-4244-bba4-20e08a6485de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9616011f-2ead-4132-918f-601f1a2e9d03",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62a744f-22f5-45f8-9335-eeb958bfe12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12081a8-5c76-42d4-96c7-b9e0749cdb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76763bff-0eb1-42cd-a569-13b031fe35e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "910cb268-3f46-4198-bf48-4578296ad94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd070a7d-52fd-475e-be02-c5459276eb36",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c8d38-b297-4f19-9d2e-236952858529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b92286-81d1-46b8-94bc-bc208f7dda2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cb9733-4b0b-4a42-b005-b9725c7edee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e38a435c-a07e-4eed-adf5-bd39b26861a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6933de-c420-4b28-bb55-8cc7d156200e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a18b60-26cc-439b-b5f6-c2e7e12ea0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a4e7b6-92dc-4712-a135-864b786a852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a673ef-e748-4914-bdb2-96b6e9d18787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "148ebea3-9ea6-4f82-93aa-42faa43f4282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083053ff-65ac-47e8-a24e-c8380cabc8ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c38d0b-be54-4692-a8f4-48372d3077b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb657bb-9533-4da8-a5ea-3dc7f0e0cec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c6822b-ca2f-4ad8-ab10-1845bd0f298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "414567b3-8150-40e3-b892-5f47ed7a1482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11a2221-8523-473f-bba2-b436bbae32d7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9306c72b-e45e-4157-8582-c96a29a265da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e47785-946a-471d-a9e5-e04d78d06780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21174cd4-1042-46a9-bacf-20531dc708be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19955a8-90b2-4fd3-ba8a-931c8febb1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b522342e-e0cb-47b8-b2d2-3517f27832c8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0083ae3-1ae0-441c-88b8-6565be0cb957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46393253-9f8d-46c3-962c-6bb0766ccfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dd615a-8021-417a-8914-7f601bd0e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5df617-d84e-411e-9e5a-f380923d0a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a48767d-1c14-4832-bd0e-024c69b9bc73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dca7a29-d1b4-4e2f-8ff3-e3d0ec77643b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa155d18-78ce-45c1-be5c-199fb3b791cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fffb880-1de2-47a9-b525-bc83bf259491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cb8ddb-b4d9-4b41-9bab-a82de46050dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586857cf-8bb9-442c-96e6-42f9b98596b2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0da1b86-efa5-4b2a-82fa-fff9199f1426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18056301-4068-44b6-9bf2-1825cd8830e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292273d1-0302-4082-bf1c-6b7f0cda6841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5231d74-0573-45d1-9c71-8e39984016ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3af43-0c91-456a-893a-3da90d4f6da2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a47ee-c48e-487e-840e-ffd2603c95b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dfe5d1-8f0f-4f5c-affd-5ce8764fb803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd734ca-ba3a-4e11-85ec-a3096e9f4697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc84203-5b4e-40ec-afd1-0bc161ffe2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f820084-c601-4452-9bd4-49c39252c793",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd878b8-adc1-414e-ab04-20ee71be8a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2c35f3-bad9-4469-bd0c-f6334919e485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8acf93-6001-4f68-91c2-e25712215852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5606aca5-5f50-4ff1-9edc-00281a139a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb50a951-256a-4035-8698-e8cda0c44eec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa085c9-dd45-4781-8097-8ecf8452dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddbd003-e793-4537-ab5a-6c7caf9ba985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515c9291-28f3-4d2c-a514-355e29c705ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ff7479-e9c6-457c-a207-8c41f01a3bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8302de18-cf62-43be-b540-c9278e53045c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1d17de-71d6-4b60-a738-51957349dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ca6db4-080f-4ce8-a849-b5543400f93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fa18a6-f9df-45a2-9cac-d0c89597b18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b2c8ab-7c29-4014-b564-ca32f2541591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12be20f-f470-4214-ad31-8d2a808d3764",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10bca7e-bf90-424b-aa7e-fce1bc24f9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2f5d2e-0e5d-47c5-b51f-126b89bd6721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0df106-878a-4a2e-9780-2176fd65694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f15ab5-6ba9-4318-896b-34a3f798529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8fff02-30b2-4549-9fd6-76119e9a5ae1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78100b59-dbb3-4a25-bbf0-c2bab4213a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee170f49-d9aa-4442-a245-6f27a0f0a7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff5d153-3602-44b4-a5ed-ca5ee6a7b4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2871a3cc-0f6f-4cb4-b496-7c78d7c0a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc734af-e802-40b1-a08f-603ed1a667da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72977a4-0300-48b3-8519-7e50ff64ee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307ee640-3e54-4566-95f5-067252f2ca26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c418bc-a6a0-413a-b8cb-19d461b503f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "abfb12d7-4218-4f30-8758-3efaec1109c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0b2175-1bb5-4600-93de-870a3b9ebb84",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed15e70d-ce4a-4fdb-95ce-d0383bc06241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4366a6a9-a45e-46f6-ba1a-e791aa4447f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e42eb9-90e3-4b5b-967e-3986bb03da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c17b871-d6de-4e2d-8376-9b73f1d8b3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c433b52-1c7c-486f-8705-2a40d56bd093",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc71561c-a2a2-42ea-a5cd-7b6d22d9c087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1152d9-36ce-4091-9fd9-db6e45602f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a7b3f1-390e-4687-8ead-d417b6dcfbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc01fcdd-00dc-479e-8777-226c8c9716cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188398da-1e65-447b-9c17-76bd7fafce80",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fb7d5b-da20-4bdc-81ce-892577f8e990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f38518-5f00-4e96-8413-dc9d5247deb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f178e9a8-c2e8-4f3b-abbc-2c50c6aebafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb24527-b85d-4da4-a255-0fd53cebbd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e77283-57d6-4552-ada1-7c9b403464ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f16b8a8-a98f-48f0-97cd-bdc91ae54e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b32adc-5d8e-4582-9a2f-2ab70b279a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799c8a63-8e07-495f-811f-3fb6db1057d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b515b4-8d04-4c68-bf24-345954102539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2c78df-c644-4984-9c4c-a385b485473b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14b48e-7ef3-49f1-aea2-fad6185254db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd8cacf-6fd7-4fa3-b695-3e93a79cbf9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28056efb-2d6d-4fd1-a05b-a209dd763eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f56477-eca9-4aff-b6af-3e7ef2eaa5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8434acd-a979-4d49-a872-f84ebd7a9b13",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f098d0-e281-46bc-b72f-0763126ee01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b56c4c-0ae2-4911-9404-3cab4da029ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20b0eb9-6127-4fec-9614-6b251ac410af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b175d1-6eb4-465d-b6c6-b1ebb9467bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e75d92a-c5ee-4962-a881-1eb558ed982c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b078d7e-e35a-48e1-8b34-4c460ca59c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0273d897-4b32-4505-aa20-82e596f763c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87742081-2c0c-4ee5-924d-3307aabbb218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4e58fa-aeae-4b89-a995-612e71f690df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f775bb-6eae-4c12-86e7-b6ce1ca04667",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ebf986-f968-4ac5-b4c7-20157cf8d124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681328ff-861e-41cd-862a-1b471dd785d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c747d147-efb3-4ce0-a1fe-171b97a0d660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70121ee2-0301-4a70-9afc-44dbd87d47d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a1bfaa-758e-44f2-97e3-d0e54f0dc758",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d13824f-58e2-482e-a5ae-dc10f77f3c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979ab7db-8374-4782-b3ec-e365bd7d47b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152471b2-24e4-455d-a529-8c0011850b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "839327e7-07b8-4192-8a23-bf11167c4f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dccd172-d1cb-4b81-8b1e-e039b1bb2d80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6fc611-4d58-454d-a210-3b566b800071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fc920c-d4f6-43e4-8587-f8398f90f26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518af17f-f739-4b3a-a61f-b34a20cc0931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a778e4-034a-4cad-8e38-991d3d82ee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e385a91-3ea3-4dc4-8e9b-ec5f842650ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fd504-31c7-4683-8f6d-210a59842834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89eaabae-f690-4f7b-8da8-1ce1e0d53a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd6c828-c9d2-4df4-9086-315d5079e785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5097c3d9-b67b-4e2f-9e07-0cfdb8942043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a506f83-03c8-4bdb-8b4e-bedad3f4f8cc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea9836c-d4a9-47a7-b853-f1826d2f397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b45e6e-9bc8-406b-8ff2-14963d4d5d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b72a37-4d3c-4d05-8a15-6a0ddec04ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf18ed2a-71ee-4504-be32-71dc6236b50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723a3a44-a099-4a42-9eac-f2a090704fdc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7566f7ce-798b-4fdb-ac81-71220c798739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6eed21-674e-4e74-be74-4c1eed69d5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015a076c-d266-4ea2-8ccb-21e45936ba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a771d9-e438-4b41-a7c5-746bf7127b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be984fa-3681-4a35-95c4-7c9f2d8978cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4be12b-6ba8-4d5e-8729-874183676ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677342a2-2b57-41bc-bf64-1a36cf380768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3731c178-df55-4293-8a05-35eb7a538963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d79909-09d5-49fd-81ee-e4f412e861bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d847bba6-b320-4702-b106-c49c2f7a246d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4131e778-8835-46ca-ab6f-f03db775df2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bac0c0-7985-460a-a492-5355422bc4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e77302-ebfe-4463-9bc1-b9952124662a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7c5233-e6e8-462b-9419-50216ddf17ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6b994bf-c0ae-4876-8c04-1acf46f18580",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20576ccb-3fef-4fa3-9eb1-4ad496415cfe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2338e2fc-bc08-4390-bb6e-e229cee243e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "49297ead-12e9-4031-ae57-5aac764423af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f43c73-23a8-476f-bfdb-a843c45b3e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0b78d04-8d30-4b4c-8c85-259a1187aab4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f817e98-ca72-4621-8145-8652ebf27543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b9089fc-e874-4435-ae0f-770f68bcf78b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee2569d-bc78-4d23-a2e4-3f15a33e6cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8874cf8-8791-42a2-b77e-cfe03004bbf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47095533-4897-44d7-af80-9bc76963d74e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97714155-cd02-4691-8340-23f4ff59328c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c7dbbbf-5c73-40fd-8dbc-b9d6c492ae0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a6c6f6f-689f-4f68-a30f-239bc9460b9f"
            }
          }
        ]
      },
      {
        "id": "75673ec7-f7e0-4f2c-9c2c-49da4f115d29",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "22bd21d0-d43f-4af4-ad37-1307cf9dfef4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8d7c7b9-1c11-440d-8791-7b271b8407c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d13e83d-bb1d-4db2-b299-8864d950938f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef9dddb-487b-4d5d-a67b-f5e33eb62f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd48d140-2f9d-448a-b3a9-c6e6f75178cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17689b75-fee0-4129-83e6-90d8a2fe7c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "35db489f-a96d-49e8-b91f-3b732de0193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd593f1-585f-402a-994c-4e78d6ee8fce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3058b0c6-771f-4e74-a679-e9ba4e6ff916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c62a73-37cd-4426-bdb2-64c0782c82dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a1ced7-0cb4-4e5a-8e8c-bbe4fcc0a592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2087d7d-0dc3-4771-a89f-93b32feaba05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca4e70-ea06-44c1-9e80-e406cf23b9ac",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4825a357-ee99-4b79-8eab-d1c0708799af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8022f010-d7e1-4bb4-9fd1-c1c0524a3d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96641fd7-18f6-450d-ba4c-5d88bbc87f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da354361-9f8d-4bb5-bd12-845d33609b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ee78b7-9141-4f63-b14c-cc31edec0003",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acb06f9-b021-4803-9b82-5c881b637223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc053e9d-d29e-4c80-b453-6e62ca2899a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4708b722-0252-4e9d-a9db-3bc1d695bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28676a68-03e1-45c1-bc43-115fd3e4a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757a520b-1603-474d-b6fd-f475410a898c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33add7d8-953f-4980-94d9-b0b3b9b239fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86384afb-4f06-488e-b1de-4eeaf1eca6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268bc889-3d5c-4e8b-b878-30940b59939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89120d4-d3cd-4ee4-b381-d92c3a54ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cab1eac-fac7-43cc-8adc-826a076d116f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b238a29d-85ec-436d-905a-ac607b86e263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a2cdcd-8e67-45ff-88ec-bf0f678efbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64d76d0-dffd-41a6-a96c-5c9c25c53426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71789753-85d3-4c10-9fc8-8fd8846847dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e83ac3-cb66-4487-822e-d93c31a6f81a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e80bd8-2a02-489a-bae0-1175e3044d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fa05fd-b636-412d-a59f-c92025537731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73b06fa-a135-4ff0-a605-d3c2144e0cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b32870-5633-4038-ac50-25c94483e0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa42f06-cee8-44ff-a857-a00060622731",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38daeead-6c7c-4783-ba92-5fd43696003c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bf3fa0-b654-4080-9724-66827a6ffdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319d011d-4b2c-40ed-ba58-4dde5b611a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "396f83a2-0010-4852-bb1d-83299eb658e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1610a313-afcd-496a-9300-0532655359a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affa10a4-2eec-4367-90ae-68cdfb3a2480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80780d28-7204-49ca-aa38-a0d6b318f028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7182bcd-5364-484e-8727-bea71a4fc35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf0ee9b-4de8-4fe4-81e7-34bcfc00a766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea845b9-cd91-49e6-b54b-494de466631c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388126dc-1943-4df6-b260-b739a20146f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e8c08e-8de9-4892-92b2-7ac1b28644e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f9d114-47ae-4218-9341-50c031920db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2110337-2ee0-4cb8-8685-0b023281d3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b453f9e-8d33-4f63-aa86-68194cd0d932",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7201f73b-1cce-4cd6-89c4-84c6f8aca484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f866562-cb32-4b6d-a12f-f7518d363a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc430ba-d0dc-4c7e-881b-cc8416dfc8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "79257f2b-f88d-4179-b55c-2ef8ba668f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a571e-d827-4aa6-9589-3e232a4314e1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e623d8fd-47fa-4426-bd95-1ed77c8418bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbe4db8-f13e-4d75-814b-b7d025cce52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db96f295-e079-40df-8e38-0fffcbe17166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "545cccf5-12dc-4ac8-9744-66516123094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9a59cc-1d6c-44a5-af55-c6b2fc2472d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8561e2b-8f8c-4329-89dd-d0f45e6705ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc45e4b2-b380-448d-958c-5265276b78ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fe25e8-ca65-4e99-bb7b-0d1f1fc27ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "423b7acc-3416-4d03-a9a1-ecb92454692c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df108207-de25-4e94-87f0-096a1c5a33b6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840343e6-3b02-4284-8e50-69c25ed0894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e60412-ba32-4756-8dc7-7e3f96672926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2f27f8-4a4c-4dac-a771-bc900488a127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "67bd3d6f-c1a3-4eec-8d03-a2d8d602614e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c9b43d-fabf-4c68-a6f3-dbc39004a4bb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b441e7-a815-42b3-ac40-bbe728e1d873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fd9106-fa00-448c-bcb7-236d54924efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1c1c00-8eba-472b-ad3d-1e7e97c27d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9037f903-b16c-42a8-ab1a-432fe3d2364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bf7833-1381-44f7-8be1-bb2a11d60f75",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c80428-ba86-4602-b9de-c9a239c07b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713909f7-1b5a-4108-8b75-398e2021b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0175b4-bed2-4dd7-aa74-41a13b6c7528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efc52a8-e81d-4a21-8a18-ed75ef95d9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519caa6a-c3ee-4cd0-b23c-ff7965a6f67b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b6594c-1677-4779-9882-4661ff6ce537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7937858a-97ae-490a-8b69-098d1bbc6e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99507351-84e1-472b-8f07-8aceccff3025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4260df1a-ace3-40e9-9283-dd3325209014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a325edc5-0ead-4570-930b-fe91e483fa0d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e43dc0-ac3d-4e91-97a1-77d17f59b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e541bcec-7b78-4e85-85cf-066b73e540af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e34950c-4a42-462f-982e-7969100ce079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e21933-4af8-4489-9155-55ee340f444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df43e018-f7bc-437e-b0a4-8ebeb80bb494",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa3d055-72dd-4138-a1c5-3b0696e99928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e45b1cb-5a5f-4209-937a-f33b3c36d1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882e9e0c-2fbb-480c-be7f-5f521e4981e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be5cd03-6060-4171-9b1b-ae3a6bc1c5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fff195a-3b4a-482f-ad99-b8c41a32ce4d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dacbe77-3d2d-44a4-8d71-6da383c84cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695e2835-437b-4a65-ad50-493ab6f15b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe61d0cf-d3c3-4736-82cc-8a802d997401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a86665-261c-4607-91e8-f5cd94c98f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361fd9e0-2ad3-4132-bb42-1e733b8c6538",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c8f250-b6e1-439a-8fb6-f607685670b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99c36d0-a33a-4fc9-914e-a16104a5df47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a17ddd-c499-43fa-88b5-463df8654b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "614bb1fa-5b0e-479b-a552-e8cef2cfc695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c03a9f-d6f6-41d7-b826-88ab9a95cd08",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09517a2-5de1-4d04-ad7e-28964e0266a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b697d9-6626-40a4-a99d-528cdfd9420a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2ff3d2-3a11-4af5-931a-8a65f8883314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5790b310-995a-4e32-b20b-5dcdf0b0c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943909e8-a2ec-4623-aad2-bd0ba397e16b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d20b965-5451-4559-bdf1-9d96b310690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c390d41-cc52-4a5f-a687-ccf9b5f81fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaf0c53-c843-4dc7-840a-de09d9b47893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1a5c6e-bafc-4e64-800e-c8122632cc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243afea7-44ee-484b-bcf0-a9c7a3a9a7fe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf6cde-0f6f-4eaf-9253-1d3d1260fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed75e50-59e3-47a7-9097-3c5b21a123c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25148219-ca41-4bea-b959-900535218c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ebb142-2bf5-4718-bc91-50f40e2123dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6684b5-fc3c-4ed1-b769-cc504369283b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c9334a-2074-417f-969a-0cd62f92927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f71ee5-6acd-4d7e-9b70-0598c07a348e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e2edc0-95c5-406c-b338-8185adfd18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4d11f2-7fe9-4770-9ce9-9e0a48a2a8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365078fe-cb03-4edd-a543-0426fd882f7e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d435ebd-936e-4b21-ae64-333030e6b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e87e1c-09af-467e-ac0b-098aa2c836cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb6a46c-dfd9-44fb-85de-e518ed9e9125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a8e761-c66d-4d1b-9f83-9da4c00ef820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44887636-8aa5-4847-b6c3-37ed81f1e70f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa1bbea-9de5-44a8-8b7b-1797e902232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c2940f-b02e-4d2d-9107-75d3a1e94761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b03155-516a-4c5e-b498-eafdc3872375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "371cc4d4-0b98-4045-807e-f33967f3dc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe8474e-d56f-4292-a8e5-7c3b63a852b4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed4e46f-f438-4ca5-bf8e-1787c51f85a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb1b8d5-58c0-4fe6-8b84-d0dd516b3945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0636fec2-9998-4fe3-b115-6955b95cf26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "286d2aa6-d8ac-4f85-b082-f84775101188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8985438c-1582-4d11-aa77-9b5ebc46d595",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc650fcb-96a4-48d3-ada0-309e5f64707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffcc84f-2a22-4756-918d-12f480013ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344e665c-1f92-4cdd-9898-f5773c5bee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e80357-6f5b-4af8-8de3-f8196d5c1a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e338119d-02d2-4c49-8d97-2da6fa5cd34e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be2806e-1f01-4089-9e8b-3ca5864a6781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8bf2ee-445d-4494-832b-0877729746e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd05cca8-3338-4794-ab86-b31d6bb576dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc36b70-7369-4593-8891-3963cd7f19f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63562c6b-45d9-4a81-8b1a-51c7cae4ad1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d5ebae-a260-44b0-93db-f65ad8131e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6305801-c6af-49c1-9536-9f42a45d2053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdde5a1b-5c5e-4fd5-894e-e79d71a521f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3390c7fe-6263-4f76-99db-dbfb80421909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335c97c8-4ce2-40ef-a2b0-9d8a172a563e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba091c36-b05d-4096-803b-265cc7435b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c5ea1e-4b38-4fd9-867a-0f0fd890b404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1f42a5-2553-4c03-9730-3b3fe5f96c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1da698-aaa7-4fd6-8d13-df03f4c52b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8b0d52-80c5-4081-aa62-63afc3e02e1b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb306b98-fba3-4f63-965e-35aef55461dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d9e2ec-ec83-4115-8e97-0326ecf14704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d6dd01-f76c-4b8e-b77c-665767e25464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e016ed05-8acf-45e7-8edc-2b22a87fa259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ee7768-2204-4b9d-b818-80c5ec811764",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e23f86e-6e4b-47b4-ace7-f1c919159311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658937d0-2a24-45df-9cf7-57dd80adca2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fa082e-9d47-4452-98e9-28015f1d9157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd24ce8c-14b8-4485-a06f-59b923d17d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d640f182-c14a-4e95-86d0-585b7edcb83b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce37cae0-ec79-44cf-beda-d7a20bfd5a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6cd3dd-6562-4d80-b989-3573a3a2961e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c7528f-7d22-4fef-b52b-37ffc2a84b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66935fe-e508-4429-a861-63fa9fc94de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3fe8ba-44bc-425d-8448-3d24529f7a71",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ed52c9-ae90-414f-bd6f-0af0da792702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0294d3-70d8-4b83-8406-7aeb3f459b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1e1140-6e47-4e36-a1df-65a25547b964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da58e062-3d9c-4998-8b5d-4fb100da6c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9593c1d0-3994-4f92-8787-71de10259359",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a80ff87-527c-465a-9602-9cbaed07ae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11971206-e685-43b6-818a-837646634657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa297ec-73f4-4778-8ff3-9d0a43f715d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5c94d9-597f-4bfc-83b1-b3355506cc73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e28f27ef-1bb6-42d4-afce-eb9b990a5665",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2af4caaf-e8f1-4797-9090-6bacfee5a16a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d29dd-937e-4b48-9219-3cc4db41f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "20813067-00f9-43bb-a5c9-fd757416def3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2860522e-6536-49f8-86ce-955c738543d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72e61680-0734-4114-8d04-3e00478b692b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7dfa993-c7d0-48d1-a1a7-d45e3e690d96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd6be18c-f71f-4d11-9503-321dbfde0aa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e69e18e4-13a8-441c-9cdc-9a0b54093899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61aee932-956c-4505-aa5c-c23c712d7fa8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdf9549a-be0a-4ab8-8347-a0f7974ff7b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "629b2f73-9f12-4011-b9a8-98a167f44e30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a72c1c0-7e90-47d2-9634-25409e4d7cb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "256a82be-f7a4-44d3-b93d-eb8b8b776ec2"
            }
          }
        ]
      },
      {
        "id": "10977250-7d75-47bf-8433-bd1aa01c1724",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "473eeeae-2fac-4537-ad4f-18cd5c239170",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4388ce7-cbc1-46e7-a072-7bfaca734489",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b15521af-4f5a-430a-9508-0a60437384dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af629c7-3205-4c52-b015-a7e167bb1c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73540d3e-6808-4df5-ad9b-911d2a0a5a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dfd131-a25e-4336-b735-729be35dd51b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3fdda-8316-411e-8eba-58334fe59dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a02c80f-09a6-44a6-bcae-278204dcad98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0a92d7-7e78-4a3b-b228-1b52b62821f8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2fd297-2421-4ca7-971b-cd843ecd40fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d20f1f-703a-4b96-a9a2-c3a16bef5214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3613a7cb-4a93-458f-bb85-ee7237467dea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bb1177-9cec-4ee4-ab3d-f835f7564a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e1b8e3-6018-46c3-9396-691758509ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7187210-33af-4d90-8051-5a40a1da5b53",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4958b1c-3bb1-49e6-a2b0-f5589fa768ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64585b5d-ea0c-4046-bb2f-eec0d31eaa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa15bd25-2a0d-4cd6-97a3-55a4afb60bad",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9329843-018b-418c-bf07-6e61c5393794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e7d577-9962-4469-ba8e-116bccc019d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903dc9af-f4f1-4222-9936-4c48ff434fb2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c2d0e2-ae96-4993-925f-e65d034c5bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f12e188-a71c-435e-929e-0d336be381d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ebd074-3993-4c32-8bb5-6e9ee1fafa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ed7a3c-19f6-4cb1-8762-f490af0ebdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feef5678-28d1-456d-a435-601c906284e1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296293b9-1195-46eb-8da9-7718a4032b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fc0b17-fb20-48b1-8a73-a5614be095fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0d0d09-94f3-4661-b1e4-2fdb011b2d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61ee8bd-fcfe-41cf-b9c6-764a2c259fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2a6131-d0bd-4af7-b2e6-9a54bbefc573",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6c04fa-9adb-40ec-bcad-3846a5acf7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7749a2c1-459c-4e16-a50e-7ea1587bb8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accbccb9-0e27-4130-99e4-f6b0d6ad8577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78191e1a-4b89-4f9c-8c0f-30d497f57f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f379b-0b21-4c3a-86b5-e75f3ae782c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f633d-e196-40fd-bda1-8e94e022cad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e962c5ec-dbdc-4008-9483-27a905c65390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca0032-b86b-41c0-b5ea-eade7d297bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fe1955-59c7-44ad-8a4a-f31ed052c6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c93afa2-17fa-432f-8684-4c3374462bf8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d04e3d-b782-497b-9d7e-d450bd663b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000e6c1a-f627-45e5-a28b-9feeb2e3b210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eab7eb-4f97-4936-a34d-631379833198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29daf64-0869-4b99-a966-dbaae2942a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2de33b-2072-4a34-bd6e-adf4f087e45a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e3e88-98bb-4b93-8def-021e2b86cd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c76a26-75ac-48d4-80e8-468f7589eb32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594ade1e-127a-4fe0-9bd9-5af0cacde874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca627e37-3fdb-4b35-981d-fdc8cdb7bf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8469ad34-2cce-407d-8160-b9f69cccb119",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e67c10-61a6-46e5-b56a-b4306dac61d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c709605a-f979-41e1-9f1c-2b22357ee2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6ce69b-548f-4fda-b596-01d7107c9991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d8ba02-2b20-4c5d-a3ef-200149e586b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328c6013-3ad7-4f67-9d74-92665b94201c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fb73f7-85bd-4621-bc4c-589a6799e177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a501bd-7e2f-446e-ae4e-5687418be79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd06668-19c2-4f9e-bb4a-bc7f7bbd6715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baae249a-8ee5-46d5-8559-f44ef15abdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71409dab-1c63-42ed-bec1-2e5143b862fe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca16079-6de5-4c49-95c6-8b69671e45dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3905411-d198-445e-94c3-d60c1e43ecb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2512c6-46ac-41dd-bc6f-0c703079ae4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262c2cca-21d3-4d6f-a492-f21f063e1bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a72a4a-5b67-4f97-8e8f-e3ea15e9358d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d50b60-c62e-4acf-bf67-26265093f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fbc0aa-330a-4b5d-95e8-43ec82897eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9516e1-2dbd-40c9-a88b-718486748a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b8841f-0d20-4118-86f3-58ecc885575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaea340-9b7c-4c83-86b4-ae1c1e5ad64f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048cfb4f-1e37-4c55-90bf-7f8ea19e4143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8bf966-5430-43c4-aa69-f65de64b183b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1cc422-0e85-4671-9f1a-e3329fe64fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4f2abb-a07d-484e-9103-2b77442c77f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef48ab3-cfd3-4291-8003-edde4d7ab94d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a98ff9-8b4f-4bae-842f-24f4427a66ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55841160-8e26-471b-b67a-9ea4dea9fbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37fdffb-5766-41ee-8a37-58fa88fc176f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b515a8-f08f-4d80-a181-9ca77d751716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d0ac4b-9713-415e-a031-f6d04696007c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e4e2e9-8857-41d9-b7ac-0861100e78b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d6ab8-ecba-42fd-a204-32b24859c309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff084c8-3556-4283-9fc7-352cb181ffef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5837ec-eee9-4f02-ab46-a2f9b17c5958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba650523-8954-4b64-b372-9ef504cca236",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67671ae-d381-4bcc-9f91-385d343df2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb24623-3473-4bb3-aa7f-dbc008d7d48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999e2f38-13f9-4b67-8ff0-96b60b292230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044f2b7a-8d35-4290-bb51-b76796b5bd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6683ef0-3773-4c83-a184-8ce7405e9ed0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f0a712-1481-458a-9e67-b91de7d50a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c727d2a4-3715-4db0-a633-12e08f51cfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6afc0d-29cd-466a-9eb1-4b9a76499353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f8c529-418e-4a73-b3a8-8a0bc9a718e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8165d53a-4952-486b-915f-702ff4a548f0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16256b96-3ff6-4ee3-81bc-afe4ed366665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e03f38-76d9-4218-99b1-bbee9774cc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d981ff8-99c0-4eee-9e39-1a27437b5057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0921c7-4f3f-4cf8-a291-a4184491e4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7283ca6b-c0f5-4f95-8cbe-cdcb7fef0f2b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9217c45a-d820-4c85-8ffb-d97699da9111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dbfb4c-b90e-4ddd-8ad0-8361875cdc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c86131b-c4ca-460c-bf07-80635c8bc3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bc729d-7e9e-40dd-a808-9fd1c12da85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c477b2-31b0-4022-ac74-87dbd93a29bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21af37f4-6f67-4cf3-9db6-a78dadb5baad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec25340-5fe9-40ac-8213-ea2da6f0858e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b11a6-85e1-4312-890f-df8870193fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d166806f-3d6b-44e3-8018-e152689bde63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4257b88-2b93-45d6-a29a-5f35a7fee6a8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27270483-7a5d-42fd-88f2-6792ce24c024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a596aeaf-a5a2-4454-bbd1-b5de6a9cbce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d312a48-c32f-4524-b256-01611711a864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008cfb7c-bf8c-445f-9431-d6406cf8fa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af190aa-0e35-4614-8323-de5ce1261749",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ffbaf2-b20b-400b-bedd-e5d46190107e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9fd5e6-feef-4ad6-929e-41e6839ed509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4ac147-9d2d-4116-ba74-f355dedbb55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a88abb3-9291-442f-bae2-22d7590c1985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2307ae-1b72-4ad2-82f3-08e12d50705d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb5f0b4-7aa6-4d91-84c3-2d02d3bd8286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8abfd8-6882-488f-b76a-ebaa4d390478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eb11c0-49d0-45c6-bac8-72289e90c2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a07d62b-a5d3-4891-9fb5-88cf75fa8bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b994042-1f4d-4714-9cea-687149e41e9e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6896b7-d333-404b-9921-0e53d797fab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15690df2-48e3-4729-b785-7465093ca4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f9ad6d-46a5-43d5-9469-e27a499418e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2628a8-9dba-4417-a201-5e8a2ee56718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7d1e96-581a-4883-bbc6-0697694194b9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e022a7a1-60fb-4848-b97e-26291f2460fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076ee369-0517-42ca-a552-dd67a8c07af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ff32b6-d6cb-4596-8564-02a6e3658abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3080399-5a7c-4710-8f35-5b733a9c6a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf1302-d959-4ecc-8c88-beb033052e51",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e658441-1498-4b69-b954-d4ae0ac85753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6bdae5d-2a29-4a13-a7d4-c9b7d964ac1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3b51b-fa6f-434d-8ed7-48980155e828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c712f46c-0cd2-4e88-b292-e8a2530a5423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdcf508-28d4-4294-8028-2132b280b20f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a5fad5-91cd-406c-8657-e98cd1b5b049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7fc174-b865-429b-8b16-b8b258b12bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dd9129-7005-4149-a751-d2f76d31a744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad508b08-5f08-42d2-9216-a624d41b435c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b3d188-4daa-488d-b8ab-0ad919109924",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb092de5-2513-4034-92f1-418d66884045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7a61cc-146f-4f05-8b63-f53aa348b224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00d566a-4e4e-4fc0-8a28-25e2d9851b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2b4595-d63c-4657-a09c-dc429aedd4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dc0c0b-899c-4a14-86c0-4fd3eb783cef",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62bc464-70cb-4641-9a53-e4f963f8c726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2bc083-7c21-429b-82c2-b504f08953b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e376e7a-82ec-4069-9ced-86bab9f66406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5054ec-4db9-45c1-84e6-bff1ea4e6a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ea973-cd11-49ee-967b-f48c262f5d71",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dcf683-8aa5-4931-a41b-27802f6aafde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e86a67-e8d1-4c74-be1b-bd70b7239710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b7829-a0f3-4d69-a4fd-299403d3ba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba8a113-6c99-4afc-b97e-5ea980741ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33325b41-8dd9-483e-af85-6ea5f9c89be5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128ae7e-9a7f-4930-b380-9830df95c518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb62c66-800a-4236-9781-b1a2b5d24ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3db289-5554-40c6-bec2-c6a749231c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a9a424-fdac-46f3-9cc5-4268facde54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33da6b1-aad8-41a4-9634-7307a406a71e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26ea1aa-8ca4-4a32-90c4-8000c26596e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365a75e9-d99a-4a1e-b4d6-851df0c320ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f747059-c0a2-4484-a5d6-72ab02af5a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443e35a6-f1fa-4712-a35f-ca9941c9d3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7334899f-6e02-4e7e-ae8a-1fe672953deb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a5d5ba-6547-4d1b-bb3c-df01844fb978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac2d570-464f-4230-9d0a-18976defc220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09c2c8e-6376-4e02-929e-c8b6a19f021e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299120c2-5e31-4001-9807-98a45e53d739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3663d45-c034-402b-bfc7-368949f69c1d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af1896-e539-43fb-bcaf-26369c81b2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e417731-e933-4835-b0e8-b1d7f50d72b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64b2116-3133-4d3f-9f4c-830f0f2b272e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd30d78f-b2d4-4292-8640-adee1e2f8dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55b4448-0453-4fd2-9698-b8a1450578fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56108a12-45bc-497e-9006-447836e08bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf243099-0cf3-4a2d-8f71-69da86862493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec438314-e9cf-4d86-8021-a7a2229adb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2af7af-fc20-4fc0-876c-6cdcc8a508d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a6071a-3245-452d-9dd3-6be7ee8ecc60",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1db2609-d9af-489f-bf38-2bfc45afbdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c85b06-bb2e-49ec-9bb2-527bfda730e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e9a62a-e2a6-4fb1-9e77-0433fb33545c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0146f1-b5de-49d9-88ea-5dcfd9c3e136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb2afcf-8331-4152-b85b-cc694c6658d4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad38b3ff-3011-4071-b9f5-59cbeec1872c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88360b6-8069-4d2b-bdfb-03f4d8265c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4816cdda-7240-4a6e-a4d3-85068c28fedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cc3339-0798-49d5-8e15-a4e730ceb449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508c03a4-bdea-4da3-8148-8570b754de78",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709ae048-e252-4dd5-8ddc-883612ab15bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e6697b-986f-414b-ba1c-51f23a62852e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ea359-a9a4-4acf-a4b1-c41bc9899801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286d60e8-8fcd-4b24-ac4a-2be291ebcd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee96ea9-6e3c-4b22-98c7-a14400203c70",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02ad032-af01-4a1a-98ce-1689a59e3fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b6edad-644e-479d-aa03-4d44c84c7f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e45559-f93d-4f4f-9aa1-f08d3bdddded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee58aa1e-fa1d-434b-bfa7-0d273ba6e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426436ef-de35-4d20-b854-58dbb35ed7f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c44b9a-031e-432e-96c9-bcbc098326cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3770f67-8e4f-4018-9e12-0239a1de1792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417e404-5001-4bb9-bdaf-25962a517944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281bd84e-e212-4e46-ac6a-32e94c69750b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd0b58b-d0ae-42ce-9a34-f5af5eaa113b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a659acb-ec7a-46ea-8272-51ab83fea973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bb0ed0-d92d-412c-8424-89924738d53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdea2082-8295-4def-ab02-d97db4a6f8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba47a658-fdf8-486b-a1a4-5766089a0734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46f35fc-abe0-4c4e-b18f-7691e6ef28f4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5ac3a1-50c6-4f6f-a22c-3b51aa23c94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f703624-ee02-441f-bd71-d49d8b656066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6b3381-3b1f-4e00-b012-88f19b74f2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe37a58c-cb29-4f19-9d90-5dd570225b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572cfb8e-2083-4c95-8450-cd9c40be9fde",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd421623-1340-485f-ba4a-789f8043e5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee025d6-7a63-4849-b257-21d80d678072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9260713f-5b77-4772-bca0-b1081e469a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cf91c2-89d7-42d9-b1ca-94b54b230ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6226498a-1bbc-41d1-b604-b46509572cd8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb2e35e-a07e-4fc3-ae81-77e2e82356c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707747d7-f6bb-491f-98a7-9136a2137524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3b601d-b856-4d58-9a0c-f1be6e1f80b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ed15bd-8c42-4ca0-929e-afd0b19b87ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b300566-c4cc-4bdb-aa16-fc8dd330e817",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d137dfb2-cee2-4620-a359-85c2021687ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4219ec7-733c-4087-a669-8b83c15b4536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da46c52-ba41-474d-9112-3e3728c3b447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d37ef5c-50c1-47d9-9aa0-38c719db9420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dfef79-e95d-4b22-b80f-764867f93367",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc054562-7e6d-41ca-9042-e6cdbc361991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dce2579-c2b5-424d-9fc1-cd43a86f449d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b699769f-2419-40de-bb59-1efde79d97b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f3f3d9-250b-4396-8723-9c9b8b051382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc57e48f-10e4-4c9f-8574-080b3d8901e9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f76c9-0e40-45b0-9fd4-5d4b38e1334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1265a58-0671-448e-967e-a38d1d913580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50562b7e-f939-41b8-8a96-88055868581b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d81e67e-6323-48ba-a6c9-30f87b1f08c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3480fab3-d5f3-4018-8615-fd617b99210d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c87b9d-73c0-4e8e-98ec-f9c277b01817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57598868-a5cd-42bb-a91d-ae6ef58a12e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264ba5d0-205d-4271-94a3-377bba839528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03470277-e314-4747-833d-f72a7f223b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf94f94-5994-44aa-8e53-e3f82063c37a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977a2131-95bd-456b-8a17-38b631cafc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067efebb-7582-4097-ad57-8d6ccdfef75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da87b0b0-d45e-462e-98df-82910c58ca50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea28fa1-7d07-4192-8370-4ff3e902a6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6c84b4-79ba-44ee-841d-47d8b3268f90",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947685f8-a5b6-49cb-a842-9a9acf5e3782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf7791d-eb8a-484e-8d61-c34bb5770299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0ecebc-a3ac-4edb-902a-ce856366b589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9df79d6-5004-4ad5-af52-fe7421fab99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce9ac0-d0bc-49ab-968b-485c529bf94b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b72f4e1-af10-49b6-a7db-72c9b0978be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a15e6a-10a1-4e13-bba3-c051f80ce694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418f5229-94e5-4583-8620-0046b04ebe54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abeac0e-f7b1-451a-8107-f8ef831dcdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6b8d7d-8fe1-4f2e-bb7d-df7b46f0eba1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa638b22-c788-46c9-a98a-23fcb8bc6ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c986d15-7483-4743-bc06-49c999ff68cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bcd535-9593-4ad4-ba19-9c77b9928542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b487e702-7bc5-40bd-837d-33b5ff4f3a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584d432b-ce2a-4d10-90bb-eda7c1f01f2d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a83e5a-628e-4e86-bf16-8bb0bdd3452f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5342bcd3-c207-44d7-9717-60025b035c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48f5ab1-fe39-48e6-b9bc-7801450888ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e37a493-2918-4d4e-a0db-75d5deef0089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763fde9e-8e64-4129-9ae3-a82a224bfd1c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e5e48a-d5cc-43a4-92a6-15b23027bef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5182aaa1-c73d-45a5-a1b5-750004b6844b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5baccca-9b7b-4d82-a4c7-f2b2a9848978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afc35f0-2207-4dc3-aa2a-42d05a25c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c898a79d-1ac9-4f93-bc44-94f64bac7331",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b6ebc1-aa85-4589-b3e2-bbb6aef663fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993570fb-ce50-4559-bb4e-71635ed0e53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cf3e21-5979-48a9-82d8-20dab51f0b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1829c3a4-ffd4-4dac-8666-e4707ef33f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4b6045-6e7e-4f9a-bb87-5464e01552b8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d5c94d-33cd-4722-a4fb-7c06ca4c62c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb38e45-647c-4095-8e51-38cfab2f9ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5f9f5d-3ecc-437a-91f8-e5242673cc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a6e8be-4c3d-43a7-9f2b-fd919d685487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6db75a-baee-4657-b48b-ed3c8366f937",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69262f0-dfa6-40a3-910a-d1674cef92e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090bd5ae-7702-4296-b4d0-1c1db88ec640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0997dd-b999-44c6-946b-2595796bbffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedb353b-00db-4977-9cf5-62536216b84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071b59e9-a774-4942-ae03-9baca0c12ad5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1dc2a8-21ee-45de-ab27-75e7959a32b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5387de-1417-49b5-aa97-fc479900186b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b86c43-1780-4c8a-be57-361a16bb21ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f192a92-3182-4ec1-b44c-2269465d28aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafcd785-eec2-4282-a7b5-453a9b64fb31",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42378c05-fe58-46ee-9fb8-974b0e76c1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa48a456-cc36-4ddd-91a8-1b6261049c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76dbb17-00fa-496d-b25c-26d0393aafce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1b07ff-4eb8-4238-a41d-643af93047e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ac6ca-14a3-4de7-9842-4dec3cba055d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba4c92c-3cd0-496c-9109-7905bca316eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef462258-2956-4ed7-ba8c-5525d700d7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9015a75-f87a-40d5-85cc-1b58f316215c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be289e95-aeeb-4b3b-9a2b-b281758c4236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2726e597-a02c-418f-8754-b87b1a3746e1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b4c191-07d8-4339-8abd-761866f4b0d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed1b1ec-fc36-4e1b-9d59-2045af3aa813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25206981-149d-4aba-822e-e999281176dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a673f6ba-4347-434b-946e-fdafab47d688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3267cc-9123-4cbd-ad47-aacaa242a1e4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70c3bd9-863d-4024-a396-0abadf32d207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d410ae7-c4d9-4707-8014-4baca0e6c8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a43e31c-ec1a-4860-a7a6-7a9e0b3dd4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c96fa4-8ad9-4058-ba2e-754fa820799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e973ae7c-e1a2-4aa4-ba60-f7da37ce67aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfd0cc8-d105-4eb5-9de8-ebfe3a757ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8bdc60c-e49a-4e1e-95b2-e290a3d6ee61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504a49a1-bd6c-4257-a0cf-a1b0bc8a81e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70372644-f1bc-4b35-baaa-1fb657287a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063fcd0e-279c-4f2d-9191-ca387baa12af",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c11560-8442-4c6a-aa5c-740d3a132503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef54275-7813-4001-b23e-672380fd19ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059a6592-fead-4dfc-b437-a037438983dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd43cc6-a335-49cd-8176-9ac80dc6a9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c44502-5810-44da-854d-d0a63f5d0fc2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9316d083-fdc0-4c8f-8018-e3458fcaca56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8b0a42-a18a-4757-839f-8cedb7c2679e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd396268-9aa4-4106-ab57-56ccc4470eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9053ea4f-da37-40dc-a7c7-0645b097bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c5b61c-6bff-4b8c-8ad9-e808b69a7716",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875539b1-3290-48ec-8484-c113b6fa0628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b922067-0d32-436b-b3cf-bb6a18874338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4571f6-3c6e-4d4b-a4dd-21b5c01162cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a0b7af-c32c-4a31-9933-7680eaaab510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d88bdd2-cdce-4cfe-b242-0967977ffd61",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1befd1-97bd-458c-9769-bb3990ef3971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d885e6e-d0cd-4c41-99bf-45fb0ae44747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e3344-14a3-4874-9eef-f156e1920268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93219515-656b-44fa-9fe3-d3c2ddfbdd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8768a5e1-bd37-4506-a079-900e673c83a6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc66da6-f294-44ed-ae54-19b37f7f0567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8f1775-d45d-4719-876e-b45fbd85f617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fbdcba-1bc6-4d7b-abd5-c1e6f369ea2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3e2a6d-3058-4bed-9d30-a9aa53effffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9dd4b2-88c3-4338-a7f1-f6e93ed51baa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea8f0e-86a0-4282-b892-402275b26036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e218723-178e-4077-a440-a8362a5cfaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1525d9-13dd-4205-b80a-481901374e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f43941-a445-47c0-ab42-8ae2eed6e06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59744dc-3b78-4432-aa59-8af5d59061d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab3f6cf-cb92-4136-8ad4-76c0d7f6f25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b27836f-23ed-44de-b26b-2a661e4319d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07df3fac-7f34-4b74-b262-ea25f157ef91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3330d115-7bbe-4160-bfff-d016f926c43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a986278b-a86b-4bb1-9170-a80e397497ee",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd3e73e-7343-4763-a9ce-4071c3eae108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daed918c-c815-4f40-bcad-da84042f9f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa124ba2-90da-4c6b-b519-959c7dcb2f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56bcc673-e410-4dff-bee1-dc5a1e0d7c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fa5141-1f47-4a9d-a3a7-ea4e91f2edae",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74962c34-20d6-4660-afbe-0dafe94c94e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7d92e8-7cae-4a58-8972-7ac77a1ebd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1d8128-3d08-49b1-8d84-531882e52d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c928ab9c-4aff-43bd-8a95-b4933e4ea823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8da10f-74f1-4407-bb34-0b18c7597780",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475c9f3f-5977-4555-ae07-79f40ca541c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349d9346-8e29-4abe-b036-936ca32f5187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e56521d-1f9e-468f-8d92-35da58ee9c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8117c877-9d1e-4b4b-bb51-b85a754919d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab95d3-2819-4b5a-baaa-cf25931bd0d1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64e176c-e7fa-4609-84d9-255c11648694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c4338d-a389-45d6-bd5c-3df595a796c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db482559-a62b-4d91-8028-7175de656992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba85f8b-7067-47b9-9eee-cc25dc472d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c9fae2-27ea-417f-a50c-e2498b86e152",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736d5df7-d163-4c0a-92df-f125eefcd97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fce1a7d-e7f4-4ccc-8d42-7597ab15f3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c23021-7aca-4301-b535-58629dc2a3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910a0eac-3649-481e-a4fd-8f61cd3e8a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c60ac61-3e5f-4d7d-bc0c-a93c062664d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3cf763-2b15-46f6-bf39-57e26afe554a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5481847f-7a04-4bc4-9518-81b4ee8cf781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5fd898-b047-4f1e-9e6a-f2f69a28a4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e3c8c9-42d0-4c35-86e2-ac08a5301460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab9de90-e3e3-45cc-99a7-06cb568fc586",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb47bc-9f6c-47fe-8429-58dbd633b674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dced4bff-7afd-4712-ad9d-9ad4829a63d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee57a192-ba5b-47f7-9262-b3b50a3902f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14768a27-7cb1-41a4-9f3b-80854d332884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204d54c7-14be-4cff-b873-fb1f297b6959",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1a00a2-e56c-4349-87bd-21b8fddbefb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbef8a2-5970-4b2f-8bb5-96936b799bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b18c30-957a-47be-9304-3434e9170e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079c0100-ba7a-41ff-9778-7d0b128bac44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fed135-b486-4da2-8924-2ad2f87e421e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcdbe39-d4c9-4a2b-9da5-e3b4d09a9efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf75124-8f62-477e-b609-85b6e0913f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fb46af-524c-4aaa-8434-7fa4cd4d138d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb9c18f-edb8-4740-9485-3935c8faf883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a39492-488e-4119-a98e-1f3fb6713324",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae744af-1c45-4a6d-aa1a-49af8e98d242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4486c00a-1b9c-4ed0-b72e-b78c51a9d0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a388f99-8a77-46ab-8798-85cf9c768011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e742fe29-553c-4eaf-9b1c-4bda2802f14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52f9b25-8619-4887-9076-9fa14157bf43",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93933b36-c796-400e-b0a3-587cee0d85a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470e38e8-04de-4470-85aa-6901142d263a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01f19b3-1612-4d68-9982-48efd1b85678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15ff18d-5cbf-4294-b5c4-306317d8dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397e15e4-e8a8-4464-bba3-a07061ee899f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77514963-d85e-4e75-b633-ad5d807fce56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26191dbf-5ffa-46da-83ce-3f8abdbafc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec0e1c8-5ea2-4fd1-98cb-893d66cde578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d52196-6d0d-4d2e-9e89-147797ce1565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344c212a-746f-4863-ad66-0fb64ecc56db",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f413329e-6b2f-45cf-8360-5e81f43d22b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3c4ef1-81be-4f1b-91fd-c5bf86fbcfb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9d3c96-9d2b-4f95-8d63-0bce206a11fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b515f6-8cfa-4646-b26b-725f5ec5d71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf640a7-19de-4643-8733-447d7bbe8ebd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f105fa2-b86f-4a96-a529-f86a20d2bef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b145b362-a442-46cf-9eb5-ae6506a50122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb49de-a33c-41d6-ad41-0f41e515a474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309a669b-a1ec-4ff3-bed7-8749babe637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a326d-1efe-43d8-8dcb-00582878b732",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987dd6c8-eeac-4339-b65f-540ac2cfd272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df3b7fd4-a32f-44d7-bbd4-70ef27c5d9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76f046a-5b1b-4e46-8f26-e3fca2ad235d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10964274-1ade-4c96-8b64-4d2747a180a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19d3af1-8012-4bc1-9811-de10752db862",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7b7e83-a18b-4a08-b1af-61f6df39333d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170d7371-b167-4406-a60f-b87e17e2900a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cea6a7-2ce3-4a7a-9637-f609e672736d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97df814c-b38a-4789-b7a3-60b07818f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb888e55-413c-4073-b574-e29571587f0c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95647ba5-690d-4d14-9c37-137d4d72dc6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6403e97-8892-48d3-b8e9-26052cf1e36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe331f7-f171-4bf1-bafe-13184a17c892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da311d42-e2a2-4b78-950b-2e3e16f03b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b2f78b-dfef-4e5e-a9ab-5a5ba98fd716",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e20e87-63c1-4b9f-84d4-271832d25aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83223bce-284f-4201-94b0-0ba4d0f559dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078823cb-e5e9-4f8a-9e0b-f9ab44a433f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e806e0cb-584d-47a2-86a4-e21096f3dc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41fde6e-18cf-43ae-8882-8dadf0c4eba5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70fedde-6c45-451d-9dd0-85c1b34b9eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b171942-aea5-4114-92eb-e1fecf78d364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177e1732-8e01-4093-9fea-3a5ae4a69832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab24bd3-333c-4d7a-8960-44cd7c9c080d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a57628-f34b-4c8e-b4a4-dd536a948499",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169e5a7b-3cac-4253-bd59-539b2074b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a12aaf-733f-4328-ab91-d706383ce95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0db0c1-3376-4283-8427-710d139940b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858f36f4-f7a0-4706-b40a-507bddf968e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb5edc6-8c53-47b3-9b78-03699a70a692",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c1fcdb-38b9-47f6-94f6-fb26a44a8e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d7f1bc-62cd-4257-8623-49f3b9881b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555cfe3a-7671-46fc-bfb1-ba1ff1a4755a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd702dae-f0ad-4d0a-b63a-2e63f7db6e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630382d8-62cd-4977-80fd-df303011d74b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abab22ab-776c-4848-8093-1cb6c3dc3a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8fb2331-bdff-41c4-a517-be43cdc59b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289fae67-2008-4ade-aeff-029c7b9f25af",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de9e497-d4fd-4123-8d1a-5b1858ceb7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50958c6c-13f4-46eb-aaa4-9c664f260a4d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcefd9a-bcbc-42a9-a7d7-17be4762ed56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efa3096-f0aa-404d-aa36-94faa6a526a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad08e6ba-fe69-424b-ad70-ba199c7301c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a760f3a-3d00-47fb-adad-a48e1fffbecb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9431961-2ee2-4b67-aaef-6166e5f1885f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d9d6c5c-3568-4a7f-90ae-b3f364002571"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dabacffd-7f87-47a6-850e-aa248d190c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "220eb8e7-4123-41e6-aeed-c7a608f34298"
                    }
                  }
                ]
              },
              {
                "id": "735c70a4-7a87-4de1-b243-ad313c12db4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d20f233-eab8-4c98-bafa-ac183d0072c6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e88864-2e85-46d2-bd2a-7747d643656b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a4c5b96b-1475-4c14-a59c-f84c3bb846b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bcdc61-1029-457d-a1b2-b3275ebfe575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "375a984b-8155-4fbc-8919-390df32ed4d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4719f078-4a60-4720-b2b3-f696eb5c6a86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8352c92e-f437-48ca-81fe-50bc75a7d6ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0f63440-7e33-4e6b-b3b4-e0b02e9406ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6e88e53-0d88-4974-96aa-d5158484239f"
                    }
                  }
                ]
              },
              {
                "id": "54db32c4-5f58-4144-a289-3a5ccfe76777",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ca957049-c74d-43ed-b1b7-60ef69985518",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661c047d-8f7d-40ce-b988-72515aec5853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "44694303-b301-481b-a096-66f86962c560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277d6fd-d3fc-49ec-a99a-6c7c7fc1071f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a7434c-2afc-4747-89f4-3a378e97ba67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "323bcea7-54bb-4baf-acfc-0ec89e7bbca7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46383cbb-4a94-4597-9ef3-cc57ac7b2a0a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac08e66f-b13c-421c-8755-a5eb7696c99d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a9da2e4-580e-4bfe-a1d5-42d816af4ad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94be3a1c-17ca-441c-b96d-6cba5d61e86b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1742c507-2995-4691-b753-6c2111bda2a2"
                    }
                  }
                ]
              },
              {
                "id": "b94c404e-8cf6-4320-8503-18ee159391a7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8ea5b50-62a3-4e10-b8ae-f1f37425f57a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1b315054-0562-4048-950b-9b1a853c92d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5c9d7eb-0f03-49b6-b75f-38312098487e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e54567d4-4b33-412d-a0a9-1490b64794e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29991082-7834-4081-b90b-c0ee2e91d34d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "154d2f85-273f-4874-933a-f4f02a4b9dff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b830865-9c1a-4177-a4d4-368671fbf52d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c38f6b1-2d63-417f-b4b9-27b43c21d63c"
            }
          }
        ]
      },
      {
        "id": "71fa1dbf-4522-4abe-b33a-e68a912a14f0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aae0e628-76bd-4a2c-a1df-5761ebb58d67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaff3db8-df7a-4bed-b3f6-ee99669cb3ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e5337de-c335-464b-b940-18c3ad95674d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91ce779-53a7-4c4c-b810-ddf0d4da32dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9debbe54-1e68-439e-b936-9542ccd9b098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185d5777-df2d-40a1-856c-01c75493354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b5bb93f-ebab-49e0-958d-221a6ab97c95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbabc759-8ee7-4c1a-89c2-082853ce49a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956e748c-bf63-43cc-915b-17f6586bf512"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8531f55-1c1b-48d8-85e5-a08711f39ed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "782f1db5-60ff-41c4-b303-4164a71056de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ccaf3c3-0f1a-40ab-bf8e-ca152c1b80fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "301763a5-6d6f-4770-8973-3e9837bf4a02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b807f8e7-7770-495d-b003-cf011d2b7763",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95bf68ce-7951-49ea-8ec9-7197a4c47841"
            }
          }
        ]
      },
      {
        "id": "b9fca3b6-c203-4d79-a13d-303e4e001b11",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0e7a8834-9be3-43b5-b894-1a1dd27c1bdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f532656-37d0-4693-90fa-170732a0c9db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ff02539-1f7f-484f-b518-8bed4a4caaab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9e57d7-ea03-4236-9765-e896605924e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91e3f4dc-a173-4956-a9b5-996aa0dae7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0ef590-85b2-48b4-a791-5a0a868bfff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06dba008-0227-4fca-8e30-ccb540fcc495"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c6257e-de22-468c-904f-20fc1bf59975",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4a3ffbd-90da-472b-8548-746eab972ef0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87cb9909-f499-47d5-bd2a-02ae81698a45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8ff7609-4043-4e15-800d-70dfb3374ebb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "987bb7f0-d82f-48d3-bc15-3ec49925128e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "466965c6-190a-4386-9440-ec4e9ef87e9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00c5dcaa-4e27-4db4-97f9-9885c97fca8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80e5fdf9-ea8a-4bab-93b2-43ae1e0b696d"
            }
          }
        ]
      },
      {
        "id": "ac9ddcad-552e-457f-86c0-eb0c56f2485f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ad05aba3-8c0f-4d15-8349-7bc189fd5ab5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97be8447-f64e-48ef-8ff4-23d1396204a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "723703ca-7e0c-41bc-9f80-960eadf470fb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a60589-6d5e-4a1f-8ec2-c6af0ba23366",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c12eb99-cf1b-40cc-b1f3-68bd6c9258a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f6636-a495-4caa-a842-773839f8d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f91c279e-1ee1-4e74-9f4f-727c5e20b5ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9efac3b4-3eea-4069-a5fa-6f9543df7eef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "280ce1cb-d529-437d-bc7d-1183ea6ac481"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae90f92b-d951-4b8c-8336-1884d0f0f94a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10a61bfb-4441-426f-be45-4a1a313e3012"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c241770-8517-470d-8cfc-af4a06bdce28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2630e663-f898-4257-a18e-d75782eae86a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07835422-8f11-4901-b395-170d38be8411",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68735396-d1bd-410e-8e06-dee76257ce2e"
            }
          }
        ]
      },
      {
        "id": "f6ac55d7-389a-400f-be7c-35a8785550cc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c56c4348-15ef-40bc-9c05-4b036d69d7e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29a2a7db-2a25-45bc-a403-49fc44e9c1ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "58336a52-bb8f-4a6a-88de-768d8525f9f6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d58a81c2-edb8-4309-9585-8e6dc22a5d76",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f72ac9cb-80fc-4632-af9f-43b6b5ab8084",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.75438596491227,
      "responseMin": 20,
      "responseMax": 8528,
      "responseSd": 560.0850211368052,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703118930522,
      "completed": 1703118974714
    },
    "executions": [
      {
        "id": "8d3a2e60-2bf7-408e-bb02-9547b1e061cc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bcdbc074-d4d2-4cfb-b9a9-c40293e6d014",
          "httpRequestId": "975e9670-438e-4d89-91f0-5370df654af3"
        },
        "item": {
          "id": "8d3a2e60-2bf7-408e-bb02-9547b1e061cc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fdd06e8d-31b4-4b32-87c1-d71f266793c5",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "9f13979c-221d-4e0f-aa47-2d79c2a53980",
        "cursor": {
          "ref": "533d2fc2-6a3a-439e-a9a5-18224c235ad9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba36154c-98bc-4498-bd85-5d32be7f154c"
        },
        "item": {
          "id": "9f13979c-221d-4e0f-aa47-2d79c2a53980",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f402a3ab-1043-4014-9b1b-84d31d13acf5",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "5f609c91-6606-449f-bbe9-77b20ce740e0",
        "cursor": {
          "ref": "154ca3bf-e273-4790-942f-98cef2548e92",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4760ed9d-3388-4449-a8d6-9a7c447fda41"
        },
        "item": {
          "id": "5f609c91-6606-449f-bbe9-77b20ce740e0",
          "name": "did_json"
        },
        "response": {
          "id": "da34c492-9e53-4eec-8bc9-27a5fbda611c",
          "status": "OK",
          "code": 200,
          "responseTime": 428,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0aff1a-b319-4ae4-adfb-c6b13ce884d2",
        "cursor": {
          "ref": "49dff242-9181-4731-be3b-b193fc281b6a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e62b5638-a24c-441d-8fdf-ca858d2d7eec"
        },
        "item": {
          "id": "3a0aff1a-b319-4ae4-adfb-c6b13ce884d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "c8e838ab-5238-4679-9cb3-f8be81451d71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 559,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0aff1a-b319-4ae4-adfb-c6b13ce884d2",
        "cursor": {
          "ref": "49dff242-9181-4731-be3b-b193fc281b6a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e62b5638-a24c-441d-8fdf-ca858d2d7eec"
        },
        "item": {
          "id": "3a0aff1a-b319-4ae4-adfb-c6b13ce884d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "c8e838ab-5238-4679-9cb3-f8be81451d71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 559,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bab85e6-ea9b-4189-882f-b3cf3202fbb1",
        "cursor": {
          "ref": "f3f71721-1863-4413-8fbe-abe4ec17bc71",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b99cdf85-ee25-4b55-8d24-902a5ca7fcbb"
        },
        "item": {
          "id": "8bab85e6-ea9b-4189-882f-b3cf3202fbb1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dc1d7048-14cf-4c3e-b81f-a5019d64251a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5109b3fb-5406-4a44-adb0-f3c61eddbaad",
        "cursor": {
          "ref": "0cb5c690-7d26-4b0b-8989-9c1a949154a4",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61eaf965-9f11-4933-9960-59eeb374759c"
        },
        "item": {
          "id": "5109b3fb-5406-4a44-adb0-f3c61eddbaad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eec76874-1362-4957-b97f-a0041e2b2d00",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6333c895-0287-4075-b1d9-a9f947267053",
        "cursor": {
          "ref": "c64fd304-6eea-43ac-9caa-9db7410ac1a9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "de398419-3798-46c9-adba-64b6a474644a"
        },
        "item": {
          "id": "6333c895-0287-4075-b1d9-a9f947267053",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f9e7946b-1b84-42d0-91db-13d4e7839ee8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e10e3eb-ff1b-472c-9843-6bda2603cd54",
        "cursor": {
          "ref": "35da26b7-a451-4b65-8bd0-ca82cf154f9c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fd611c58-a300-45ff-95c7-99632af1f5be"
        },
        "item": {
          "id": "5e10e3eb-ff1b-472c-9843-6bda2603cd54",
          "name": "identifiers"
        },
        "response": {
          "id": "b33c763a-f2c8-4530-be8c-cd11520e92f3",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f580e401-2129-4093-b11a-53dcd0e88886",
        "cursor": {
          "ref": "837bb09a-99dc-40de-a1b0-b40b987707bc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "58bcd823-f5d7-4011-bd5c-db62042fd482"
        },
        "item": {
          "id": "f580e401-2129-4093-b11a-53dcd0e88886",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "593bdc57-71da-4e62-b5b9-c415499c8f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8498c9eb-0183-4991-b9d0-e93b67186048",
        "cursor": {
          "ref": "34079618-cce3-4251-beef-9dca2c4c2462",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0e911dc7-10ec-4de8-a29b-360c868223a1"
        },
        "item": {
          "id": "8498c9eb-0183-4991-b9d0-e93b67186048",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5a7952d0-c670-4640-b862-a43273f05f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2a8037-a97e-4270-a466-e275918f84bf",
        "cursor": {
          "ref": "b2d93b47-2217-4cf7-b3de-86f2dc5319e7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "711c6a19-cbe8-4711-9e59-abc88fd41d36"
        },
        "item": {
          "id": "6b2a8037-a97e-4270-a466-e275918f84bf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3c38e562-edf3-4aaf-b0f1-757cbfdf9f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaed253-df4f-4667-8fb8-365d006a4ddb",
        "cursor": {
          "ref": "5c09b5c4-bd85-4f9c-9705-18747b4ba53b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d753bcd3-e998-45f7-a022-55d52881376c"
        },
        "item": {
          "id": "abaed253-df4f-4667-8fb8-365d006a4ddb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ef57a630-c367-4525-9076-6e97c0c40e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1694db-1e27-4b5a-93d9-d32a03333f80",
        "cursor": {
          "ref": "e60c873c-b664-40cc-a59a-d4b8394edf4e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f69b0492-4425-4cd9-b58c-caa41f5cf69a"
        },
        "item": {
          "id": "1c1694db-1e27-4b5a-93d9-d32a03333f80",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "db12ecb9-4a10-40cf-931e-bd7fceed64d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d95e6d1-ad8c-41bc-b0f4-478ae29a8e7d",
        "cursor": {
          "ref": "240a3be4-658f-4a14-8063-f7d5eef47520",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fe5bd92d-e26a-4300-8f38-3ff91d35ad5f"
        },
        "item": {
          "id": "7d95e6d1-ad8c-41bc-b0f4-478ae29a8e7d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c5cbb59e-c9ea-4e2c-ba39-eb3f68bf5035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705560a7-5932-4be8-a3dc-d782176c9307",
        "cursor": {
          "ref": "b1f679d2-d124-4c61-8f8f-bbfa66386138",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "13e746b9-67dc-48fb-bef1-d7548081cc76"
        },
        "item": {
          "id": "705560a7-5932-4be8-a3dc-d782176c9307",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af8d97a8-03a9-49a2-ba8b-ebd9d911ece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b0bc8f-b9ab-4ad0-bc43-94f658917a64",
        "cursor": {
          "ref": "d218dc9c-6e0c-476d-809c-d439da1d4d3d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2c186a2b-aa5b-41cf-b43a-3dff92bb624f"
        },
        "item": {
          "id": "93b0bc8f-b9ab-4ad0-bc43-94f658917a64",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5e92cb2c-5fb7-48a9-a4ea-92888c5cda2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a646734e-986e-411e-8245-6b776801f7cd",
        "cursor": {
          "ref": "6b9aa4fb-941f-438c-a8db-b25a2fc3d213",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "00bf14e0-9fe1-435c-b911-dd13ef23341e"
        },
        "item": {
          "id": "a646734e-986e-411e-8245-6b776801f7cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a849641f-c188-420d-b51d-c8ffdb3a4adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292cb98c-f357-433e-8f24-bd4ba80176e4",
        "cursor": {
          "ref": "77bc1d06-144e-4aaa-983f-23e3b72aeec6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "15e9d5d4-72a0-4454-833d-366d4b53cc0b"
        },
        "item": {
          "id": "292cb98c-f357-433e-8f24-bd4ba80176e4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "243b928f-a0be-46ac-96fd-1e5fe2cbf29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a06c19-11c5-43cc-a272-3a43c381ec8f",
        "cursor": {
          "ref": "69c0de30-a507-4adb-a2e2-cb978a671122",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0e1cb93-cc1a-45cc-9beb-38e890a1a08a"
        },
        "item": {
          "id": "e1a06c19-11c5-43cc-a272-3a43c381ec8f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "67b39627-9a65-49cc-ac88-76424720540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd277287-0391-41f7-b7a9-34aae3342c81",
        "cursor": {
          "ref": "0e499144-2550-4e4a-8707-06350d02141f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "beae3d54-2389-479f-9170-660b2017aa21"
        },
        "item": {
          "id": "cd277287-0391-41f7-b7a9-34aae3342c81",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d89e47b3-de36-48b3-9021-ca8e71cacc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf62de68-20f7-46f6-b048-7249508b42a9",
        "cursor": {
          "ref": "8de4bec9-3d0f-42f1-b0dd-471a543c6ee3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "49c39b4b-4546-42dd-ad7e-56402eb82c0a"
        },
        "item": {
          "id": "bf62de68-20f7-46f6-b048-7249508b42a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ef269e5-e7c6-44b8-99ee-3fffb88c5d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af0921f-ea47-48b7-aaf1-a68f5abff4cf",
        "cursor": {
          "ref": "ecdc93d3-c9f0-4067-b15b-6736d4e6181d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6e1ff446-f7e0-492f-828d-7fbe1032262d"
        },
        "item": {
          "id": "7af0921f-ea47-48b7-aaf1-a68f5abff4cf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "895db621-a45e-4c12-b801-bbe94abd3d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ef4e40-f018-40ff-8637-9d119960775e",
        "cursor": {
          "ref": "508ebf00-bc90-4811-b2d1-4e76614dcbd4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "19d4d9d0-3f04-4a03-b5b3-52cd927cf91c"
        },
        "item": {
          "id": "32ef4e40-f018-40ff-8637-9d119960775e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2a7f3360-72e8-4ee8-8730-4dbe1cc50175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862019ce-c91a-4ad0-a572-f97026fa1c7c",
        "cursor": {
          "ref": "0e144ec2-a7a8-49d1-9bde-b9775e9f1425",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0edfd289-3363-4fff-be63-0157d94424af"
        },
        "item": {
          "id": "862019ce-c91a-4ad0-a572-f97026fa1c7c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "785d9145-7cf8-49b1-85c4-4abf20dd0a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afab83e-58c4-4fbb-b1a4-83abbf4f52a2",
        "cursor": {
          "ref": "bc35f5c9-a278-4492-b8b3-2aa83de1a6d7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "09086222-9aa8-4022-905f-6c2cf4e49ee4"
        },
        "item": {
          "id": "4afab83e-58c4-4fbb-b1a4-83abbf4f52a2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db28959a-3b9f-4969-b99f-f067a5cfff90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568733fc-3d66-4fe9-bcd6-0a6279f81123",
        "cursor": {
          "ref": "fc0286b4-ff5a-478d-aeec-11a06e4b0aca",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb3d3e17-d66b-4074-8803-3aaa16aff24a"
        },
        "item": {
          "id": "568733fc-3d66-4fe9-bcd6-0a6279f81123",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9a67067d-87a9-422e-af0c-31ec80e32e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ab9013-376d-4033-a382-39044fee6a1a",
        "cursor": {
          "ref": "44ea6c84-1032-40de-af1b-ce5b2abb917c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bc9ffa08-d583-49ab-9e86-b8f6cd5349bc"
        },
        "item": {
          "id": "53ab9013-376d-4033-a382-39044fee6a1a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5d621608-40b1-47a0-aeed-45002da15932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5877746f-b6ee-4b80-90b9-cc916c5b670b",
        "cursor": {
          "ref": "7c1ca33f-a11e-48aa-989a-21fc6f242a47",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "24efd182-dcc9-4080-b353-3b9658a66b52"
        },
        "item": {
          "id": "5877746f-b6ee-4b80-90b9-cc916c5b670b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ea4f94db-b37f-4303-bf13-7767ada36aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e446e44-d584-42e4-b3ed-1e28e8e18c86",
        "cursor": {
          "ref": "4bcc6a66-0fd8-4ad0-9833-2b829e6f2a8e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f0ce114-a39e-4702-8a9a-666fc7757528"
        },
        "item": {
          "id": "9e446e44-d584-42e4-b3ed-1e28e8e18c86",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "75c70ebf-0f09-44e6-8112-29bf67325a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324716ec-ae47-4d65-a283-81aad76114fd",
        "cursor": {
          "ref": "0b60135c-ba43-4443-a8c1-3ef7755e8f24",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f5e016b8-f620-4aab-92a4-4fa17c9e8d11"
        },
        "item": {
          "id": "324716ec-ae47-4d65-a283-81aad76114fd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "03d1440d-8ea3-4ed2-9602-7c5ec82d42e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaf98e7-0057-4632-9476-394f457b2806",
        "cursor": {
          "ref": "4169640e-f530-484b-ad3b-25df3017dfb4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b6d3c3fc-41dd-4bba-930b-6c7de4d62cac"
        },
        "item": {
          "id": "cdaf98e7-0057-4632-9476-394f457b2806",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dcfb0235-fd3d-4ebc-a7a2-e24c54b0d98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c19c2c-aa2e-4f12-abfa-d5a4372c9f52",
        "cursor": {
          "ref": "7f7a42ab-b608-414b-8697-9d12a35d99aa",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "caf66ce8-b216-4e27-937f-bba2c98bec1a"
        },
        "item": {
          "id": "e1c19c2c-aa2e-4f12-abfa-d5a4372c9f52",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "01b1a517-649d-40af-afe8-08117bdfe91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e99e4cc-466b-40a4-89d4-f0006de637a5",
        "cursor": {
          "ref": "c82435d6-971e-47c9-9f74-a562ad15cb7a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5d226eeb-9142-4cc9-a38c-e56f4b508f62"
        },
        "item": {
          "id": "3e99e4cc-466b-40a4-89d4-f0006de637a5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dc2b5a91-39c9-4143-bd07-8f53fe185c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d02e29b-7f80-447d-aced-d66f2c494798",
        "cursor": {
          "ref": "c5589337-b50f-4fa6-a499-3178a17e6cc6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e7d11170-c542-45da-a68a-bd2f962407a2"
        },
        "item": {
          "id": "6d02e29b-7f80-447d-aced-d66f2c494798",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a553f8d2-3ce1-498d-ae6e-d68297ad7fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eca2c8-23b7-406f-80a4-6dc5fd30b9f0",
        "cursor": {
          "ref": "271b6d22-2ce6-4c49-80f6-f48b2a1cdb52",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9bdc0d58-6b87-4cda-92d3-c76a818aa605"
        },
        "item": {
          "id": "f4eca2c8-23b7-406f-80a4-6dc5fd30b9f0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "169b3a73-9ac5-4641-8a10-b24ff7674be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbfaf15-1282-432d-8582-04bfb47f223f",
        "cursor": {
          "ref": "6e0e1d1c-0063-435f-a8a7-31be0c4bf419",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6e1e16b-6967-4e65-89fc-31f29878177a"
        },
        "item": {
          "id": "ccbfaf15-1282-432d-8582-04bfb47f223f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1d09ea8d-f688-4792-9bdf-d1faa2f58258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752587b2-416c-4eed-8606-3a41760e7dd3",
        "cursor": {
          "ref": "13044d70-aed8-42b5-8089-21e54f0cadb0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fc7fd51d-60d4-4e9c-948c-c37053359e34"
        },
        "item": {
          "id": "752587b2-416c-4eed-8606-3a41760e7dd3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "24c12c01-f885-4b5d-b011-65f2b76a18ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e3112b-1d78-404f-94f4-f48629467602",
        "cursor": {
          "ref": "4d40acde-ae5b-4f98-8c76-29ec9314a860",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34acc3b0-576a-45d7-8cd6-176f134e7a66"
        },
        "item": {
          "id": "e8e3112b-1d78-404f-94f4-f48629467602",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cde348aa-4943-403e-b308-55c10bb6049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb03a54-364d-4877-ae16-b9ebcc9ae249",
        "cursor": {
          "ref": "446b8940-82d4-469f-bfe5-cdc26f183206",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "74a4082a-ab84-4a9d-90fb-53bef1620561"
        },
        "item": {
          "id": "1bb03a54-364d-4877-ae16-b9ebcc9ae249",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "79b6ec8d-bfb0-47f5-9304-08c88450d9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412cf254-7a03-45b2-815a-1bbf58913424",
        "cursor": {
          "ref": "1f9227f4-e296-47cd-abdd-ff3ab3b5f1eb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b6c90648-449c-4635-b929-ce9b5744671c"
        },
        "item": {
          "id": "412cf254-7a03-45b2-815a-1bbf58913424",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "60900428-2f23-465d-a7eb-17f782927344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8c22ca-1810-4288-ab01-dc6fcb10f2a4",
        "cursor": {
          "ref": "fbedbccc-9218-46fc-a666-bc852f0be3b8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ccc6169-0c21-4de0-ad82-3bf3de215128"
        },
        "item": {
          "id": "7d8c22ca-1810-4288-ab01-dc6fcb10f2a4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e0ab3f4f-2765-4b3c-8b92-45afae97b48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bad058-e43a-41ef-91b6-9b565dd06e70",
        "cursor": {
          "ref": "de976091-64ca-491b-8ab3-2399fb1dc48a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cb637ff8-f72a-4db3-86f8-b278829d6398"
        },
        "item": {
          "id": "53bad058-e43a-41ef-91b6-9b565dd06e70",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7eac713d-fd92-4e12-9d00-3ecf484cba39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fc1c7f-2e86-49d0-a103-c9de98768ec5",
        "cursor": {
          "ref": "8914ba53-31c6-4b45-9760-2b6648e543f6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "df25d78c-ed00-4490-a4b7-ca1999aa9063"
        },
        "item": {
          "id": "d3fc1c7f-2e86-49d0-a103-c9de98768ec5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0c6fba53-7e0b-4167-be49-b62d1375e365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1264c0-1e6b-40eb-b0dd-170e4020ec71",
        "cursor": {
          "ref": "1a4ba37d-55fc-4b00-b8b0-a4c2ff656d9a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c84b8697-6764-40a2-965f-163e4edbfb57"
        },
        "item": {
          "id": "9b1264c0-1e6b-40eb-b0dd-170e4020ec71",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2282afc5-691d-427f-88f5-c57c2588f4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e809e79-dd6b-4464-b936-8f3d711b9ff5",
        "cursor": {
          "ref": "2c16fb14-d5f0-45c0-ae48-c1ee31c706b3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5b504a41-0401-4944-9652-3013cbfbde3a"
        },
        "item": {
          "id": "5e809e79-dd6b-4464-b936-8f3d711b9ff5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d2383d44-ed44-496c-a6d2-e34b73a2cd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e2ff6e-57b5-4467-acb9-f3a9bcd0e823",
        "cursor": {
          "ref": "0a1046ea-8e55-483e-98d8-6fca2095d5c8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0be0a181-1d7d-4805-a144-6e052b07c6f7"
        },
        "item": {
          "id": "10e2ff6e-57b5-4467-acb9-f3a9bcd0e823",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7ad10122-c077-48a7-bd7d-583236ce72aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b20ea2-cea6-4ea7-96d9-8dab43b91621",
        "cursor": {
          "ref": "93966558-34a4-46d1-a8c6-9b66d5fc0d0f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b1223a7a-885a-4a3e-99e3-58e2040268b1"
        },
        "item": {
          "id": "21b20ea2-cea6-4ea7-96d9-8dab43b91621",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "08187614-75fb-44d0-8236-cda47df15f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d507f53-5b69-4649-b1dc-53c9ab57c1da",
        "cursor": {
          "ref": "127df715-27da-47dd-b7a6-4f67490a9c72",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "750f1c08-2c0b-486a-bf38-04cf8f6cbc56"
        },
        "item": {
          "id": "5d507f53-5b69-4649-b1dc-53c9ab57c1da",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "840ccd65-4f8b-4e9b-848a-c34659c31a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572a8c82-6458-4fa9-a64b-c7467bb21081",
        "cursor": {
          "ref": "6d4c1141-c8f7-4732-b0fa-d8f0ba1c106b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ef6815f7-1a12-419e-af86-3f38cf7205ad"
        },
        "item": {
          "id": "572a8c82-6458-4fa9-a64b-c7467bb21081",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4300bc01-c608-4522-9fdd-48f7c8b6ee8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3d28c6-9619-48ae-8fa2-23d64528b871",
        "cursor": {
          "ref": "ff62d287-ab9a-4541-9e37-c1c742e33a7e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b86de5b2-b9a8-445d-b283-b76cb8fd0d64"
        },
        "item": {
          "id": "2a3d28c6-9619-48ae-8fa2-23d64528b871",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a4c9f58f-b48a-4642-a9e2-a1d0050e7a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d453ba-14b4-4df8-8887-412911026e7f",
        "cursor": {
          "ref": "758d9f33-d300-4b08-8455-9cf028f89d52",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "df5dde08-696f-424c-bb91-b5497cd9a9df"
        },
        "item": {
          "id": "a8d453ba-14b4-4df8-8887-412911026e7f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6fa557d3-357e-41aa-a406-623d44f78e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cfd381-a471-4cd2-90d9-bd87e3044bbb",
        "cursor": {
          "ref": "2f707943-017a-411f-b25c-b4de3954966c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "39d7a37a-8e4a-4dc5-8ea5-4f93143456e3"
        },
        "item": {
          "id": "c1cfd381-a471-4cd2-90d9-bd87e3044bbb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f97b6399-25d7-4ec7-aaf5-9dc7ba3a7480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6652dd-d61a-4213-81d0-6efada07bef1",
        "cursor": {
          "ref": "96f66736-0a08-4efc-bc5e-e2caf8b2b9b3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5393d622-61b3-4698-a8b2-2684ea9b0874"
        },
        "item": {
          "id": "1f6652dd-d61a-4213-81d0-6efada07bef1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d99f9b7b-e432-436a-bbd1-f53c30f61e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50973b82-5e21-44f0-a031-9eb2ca4cde30",
        "cursor": {
          "ref": "34be1b6f-d4e2-4451-ba1f-3e69254df367",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2005cf9-7c7d-49db-984f-0a9b6ba1e162"
        },
        "item": {
          "id": "50973b82-5e21-44f0-a031-9eb2ca4cde30",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c8968c2a-4a1d-4c8c-96f8-1e9c6070f097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a86ee24-a410-45c6-95f6-8d78377c76d1",
        "cursor": {
          "ref": "8b2e01ea-0d99-4fe6-aefd-88c5bb976032",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "14580c7b-70fd-4baa-8c05-68e4fb8585d8"
        },
        "item": {
          "id": "1a86ee24-a410-45c6-95f6-8d78377c76d1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9fab4ee4-6195-415a-9e5c-8a7353d8d11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2862771-b361-4ec8-a197-329158fd4b4a",
        "cursor": {
          "ref": "c068b37e-10d1-4f5e-9ec4-8f0dbb012af0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "14fe8d55-8de7-457d-b068-c1f4514fdf16"
        },
        "item": {
          "id": "a2862771-b361-4ec8-a197-329158fd4b4a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "066b9321-3784-4a48-85f4-300747d5c03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee84dc31-c042-4c35-8779-4626f0bf0b9b",
        "cursor": {
          "ref": "0dfecc9a-0f6b-4e5c-8466-25e0dab915f2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "340c73dd-5f9b-4080-b86d-194d70486757"
        },
        "item": {
          "id": "ee84dc31-c042-4c35-8779-4626f0bf0b9b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c046bacf-1a4d-4952-bea0-e32bd69ad4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190d3b55-3b27-4d4b-86ab-03e4f4d794c4",
        "cursor": {
          "ref": "2d54f70f-cb81-4268-8f91-def9ecaa66ce",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "246211ec-78db-4939-9d97-45d72fdf015f"
        },
        "item": {
          "id": "190d3b55-3b27-4d4b-86ab-03e4f4d794c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a6f5e30-1a59-4fd0-8870-4cf87f986f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa1828a-e32f-4713-bf40-7916bd9562ee",
        "cursor": {
          "ref": "8510b441-c679-4e98-9f3e-3b19f63f2457",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "294a0783-f6e9-4342-8ac9-0e23b0b74b4e"
        },
        "item": {
          "id": "0fa1828a-e32f-4713-bf40-7916bd9562ee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7672480e-3507-40d5-850e-3f4e3b54c5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2137e20e-f85f-4178-9ae0-172479d97ff7",
        "cursor": {
          "ref": "11e567c5-9d1e-447e-b178-0d8366590ac3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7126980a-56ce-4318-8d6a-6727daad407e"
        },
        "item": {
          "id": "2137e20e-f85f-4178-9ae0-172479d97ff7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2897364b-00ba-4553-b942-268287979af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c26567-e8d2-485d-875c-8cead8c07d10",
        "cursor": {
          "ref": "093734ba-5aa7-4332-a6fb-b83fa8b6bae3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6e075117-5a8a-4de4-8df9-69ef64124474"
        },
        "item": {
          "id": "b2c26567-e8d2-485d-875c-8cead8c07d10",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d5639003-6dc6-4a9c-8ef8-3fef4e97f13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08a81a8-cce3-4027-967d-48d605341b74",
        "cursor": {
          "ref": "a55f47a3-7a62-423a-aa51-f7e6e4138cf8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5d5f3190-9fb5-414b-a987-40b188a4ba6d"
        },
        "item": {
          "id": "f08a81a8-cce3-4027-967d-48d605341b74",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4d222dcb-e7a4-4563-b51e-d8a646b69219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3545d5f3-5a63-4d1b-8764-d51ba71db31c",
        "cursor": {
          "ref": "41d52332-55a6-4e65-8821-35b9ab203e7d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7dfb44eb-90ba-4d76-aeca-5a596cae05fd"
        },
        "item": {
          "id": "3545d5f3-5a63-4d1b-8764-d51ba71db31c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c1990f0b-5181-4ab3-a424-0be74eef0f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321c2e6a-b653-4a1b-9f93-6ff6cc5c2a59",
        "cursor": {
          "ref": "16021b04-9925-42a6-9c22-959ba907c537",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9959744b-7be8-4c16-8410-988f58f1bb2e"
        },
        "item": {
          "id": "321c2e6a-b653-4a1b-9f93-6ff6cc5c2a59",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6437a74a-18a9-494d-8fd0-d7b57ade10b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643e152c-7a58-4cde-88a4-fc5f244bc29f",
        "cursor": {
          "ref": "68a53e39-16e7-4ee5-a53a-c33c36e698a1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "79f43e13-f592-4ff0-a88e-524bed97ddb8"
        },
        "item": {
          "id": "643e152c-7a58-4cde-88a4-fc5f244bc29f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "70b1168d-65cb-42a8-b979-31252ad0aa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accb70fa-feae-4185-b43b-d104439e9c2b",
        "cursor": {
          "ref": "eb915656-8068-4e98-accf-1b093257db5c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "13d40631-ee0b-497a-91f1-c909962a2a67"
        },
        "item": {
          "id": "accb70fa-feae-4185-b43b-d104439e9c2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3a75b6fc-2f59-4550-b6ea-be7808385d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb4c673-245b-4a41-af83-65bbfaefa9a1",
        "cursor": {
          "ref": "c661104e-2c61-4650-95ca-465eb2fc6e82",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a2c3eda5-c5ff-401e-9f41-69c078f49407"
        },
        "item": {
          "id": "cfb4c673-245b-4a41-af83-65bbfaefa9a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9faaa938-d8a9-49b5-a104-b0ec8419dbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13feafb-984e-4316-84ef-507339413cb1",
        "cursor": {
          "ref": "d2edde72-e351-442e-87b1-db940b3f62e0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4b3200d0-cb78-49a8-ab24-beab5cf26b0f"
        },
        "item": {
          "id": "a13feafb-984e-4316-84ef-507339413cb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1e6a01e3-4c53-4c0d-bbde-bfebe20a7bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee060b0a-8c98-4fcd-a321-f0d8781751f6",
        "cursor": {
          "ref": "0775a112-92ed-4c04-b70b-97a226323b47",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a322de2a-6b37-4bef-8c06-568c2df86f82"
        },
        "item": {
          "id": "ee060b0a-8c98-4fcd-a321-f0d8781751f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7e468580-d71b-4481-a816-67a9c914aa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8343452-0cee-49f9-a285-7cfe4784b5ec",
        "cursor": {
          "ref": "180cc3d0-a4bf-4e81-afd1-e44b1e40be22",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8f15bce9-3852-49d7-9a9c-5582083cc41c"
        },
        "item": {
          "id": "a8343452-0cee-49f9-a285-7cfe4784b5ec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a55f243c-4836-4cb7-a140-a4651e2204a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f4a119-38b8-46e1-9e21-3461bed17f1d",
        "cursor": {
          "ref": "4a30cd4f-2b25-409d-a51f-6b40ff1ec2d5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "36599a3d-d14a-4147-b82e-2616d6acaa12"
        },
        "item": {
          "id": "d5f4a119-38b8-46e1-9e21-3461bed17f1d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "56ee6f06-7e59-4c7e-9791-e57f4142b01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e951553-ad29-4c34-8e0a-b1f70ca5f98f",
        "cursor": {
          "ref": "c294fa3e-ca07-4b3b-bde3-d8377e253f58",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0303f660-1ce7-440f-8d4f-a71cfa776829"
        },
        "item": {
          "id": "1e951553-ad29-4c34-8e0a-b1f70ca5f98f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "00670c92-c7f4-4f83-8e88-3a9da93f61a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c608cc12-5672-48db-83df-baa3dceace95",
        "cursor": {
          "ref": "a1c43cda-7cef-49ba-bcb6-9f8851c12200",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "852a7646-38c5-4fa9-a37e-0c3276ddea4d"
        },
        "item": {
          "id": "c608cc12-5672-48db-83df-baa3dceace95",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2260ce4e-220b-45f3-8b05-33a1a846d489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d60148f-4538-4a15-971d-8e761808569e",
        "cursor": {
          "ref": "6074e1b2-e77f-4358-80a6-8f75ef8a1db7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1a65f5f0-7569-4ca5-b665-1c42435321b5"
        },
        "item": {
          "id": "2d60148f-4538-4a15-971d-8e761808569e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a00cfe1a-44c6-476b-ba6c-cdbaa4c8d9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63891aaf-7bbd-4af6-b9fc-7090f463a951",
        "cursor": {
          "ref": "27eb167c-cdce-4f16-b4c9-df8b36e5dd36",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e9962e5f-c850-4649-a28e-80abd72764d0"
        },
        "item": {
          "id": "63891aaf-7bbd-4af6-b9fc-7090f463a951",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "87220103-d9a4-4d25-a655-aff3415b276b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9837d01-8daf-4e54-a496-ae7a6bc15cbb",
        "cursor": {
          "ref": "bb935425-0bea-441d-9f63-8ca9bcd2a597",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a4f2a528-1911-42f2-a2d2-e63602c0e6fd"
        },
        "item": {
          "id": "e9837d01-8daf-4e54-a496-ae7a6bc15cbb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "03a592a1-3682-458f-9bf3-607e94a1503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00048b4b-00f9-4189-91c9-ec3332597588",
        "cursor": {
          "ref": "8560e8d8-d576-4d7f-a257-fd6d962f076f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3fd15bc6-c20f-42f4-9527-48687f197e48"
        },
        "item": {
          "id": "00048b4b-00f9-4189-91c9-ec3332597588",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "26745f72-ae3d-4719-803b-9ff02c7c7df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca24993c-e67e-405b-87b9-6924cd7ec4c7",
        "cursor": {
          "ref": "a72304f0-f52a-4344-867a-a3192500e051",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "31e282a9-01c7-4976-9698-10e98c31515d"
        },
        "item": {
          "id": "ca24993c-e67e-405b-87b9-6924cd7ec4c7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aa85938f-b59a-4cb5-877c-4459a78d41a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c652e7-d11d-454f-ac1d-960adcd07ab3",
        "cursor": {
          "ref": "8bc07607-59d2-44bd-b2d0-79eb958541e4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e59db7c6-b326-4d54-b4f3-9a2c36b0e3a4"
        },
        "item": {
          "id": "d0c652e7-d11d-454f-ac1d-960adcd07ab3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc9db5aa-118a-46f4-9959-96e18fcee57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0cf26a-40d0-4d38-846c-f05776723b43",
        "cursor": {
          "ref": "81ff28e9-eaa4-4780-9515-51c2ab6779cd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8d4b51b2-5772-4a36-82ce-caa1211f1718"
        },
        "item": {
          "id": "1a0cf26a-40d0-4d38-846c-f05776723b43",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a76acfd8-5502-4660-a45b-73baf06ae003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741f259b-a8fc-4ece-b843-7e414efb9ff3",
        "cursor": {
          "ref": "1babf4a1-c676-4369-9a3f-8e71ace6cbd5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "779970ae-1364-487b-8d4c-2bc931177f9f"
        },
        "item": {
          "id": "741f259b-a8fc-4ece-b843-7e414efb9ff3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "26adf4ce-f70b-4377-b6d1-5d8a5c20136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d96267a-e659-4dc0-8a91-eb9277ffde94",
        "cursor": {
          "ref": "1375c97a-5e65-4be7-8348-a873c1726bae",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "31a225b1-1493-4223-acba-e77bca8fdabd"
        },
        "item": {
          "id": "4d96267a-e659-4dc0-8a91-eb9277ffde94",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "76892f79-eded-45fa-8949-d8bbbe388751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35815d4-4fcb-469f-b84e-a70c59337c69",
        "cursor": {
          "ref": "2cef4521-6a1b-44b7-b287-1f700d722d3e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5f83357b-473e-4b9a-a8f2-fd18bf538424"
        },
        "item": {
          "id": "a35815d4-4fcb-469f-b84e-a70c59337c69",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "028f4ec4-cce1-4702-a5e4-82136ad35c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78fab0d-cf4e-4726-9e9a-b2373e652146",
        "cursor": {
          "ref": "86576ec9-9a90-49aa-a02d-1a58be5e44c9",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69eab4c3-e05b-4b32-a536-150aae5677a0"
        },
        "item": {
          "id": "e78fab0d-cf4e-4726-9e9a-b2373e652146",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "33da32c6-a9e6-4bbe-b566-0f20e127627c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1111d5a2-99d4-4b5d-b345-a09937ebbb77",
        "cursor": {
          "ref": "28e78c6e-46b5-4d67-8aa2-5a73bf795d46",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9358f80b-aeaf-49b2-aeae-535934153d63"
        },
        "item": {
          "id": "1111d5a2-99d4-4b5d-b345-a09937ebbb77",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "27f33f7b-28db-4d01-96fd-5e6e3efaa058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf6cd67-bef6-4a5d-98a1-66caef171ab2",
        "cursor": {
          "ref": "9d9a7176-e90b-44ac-91f7-dde44395aef9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "063de8f9-c632-4073-8ad4-820b7063b475"
        },
        "item": {
          "id": "eaf6cd67-bef6-4a5d-98a1-66caef171ab2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6bde097a-ef3a-4dca-bfcc-da6e426dd753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c313d153-09fd-473c-953d-6d3af1c53096",
        "cursor": {
          "ref": "8c863766-4e71-4121-b3ad-63a913c8b477",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "36c65be5-a5dd-442f-8148-39641995c22a"
        },
        "item": {
          "id": "c313d153-09fd-473c-953d-6d3af1c53096",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "837ecc1d-5a74-4a4a-a108-2653efdcf5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d71d8f-d1df-4192-b905-cc78e2007c6a",
        "cursor": {
          "ref": "734b9e6a-51d7-4b60-bbdd-c23b12bcc52d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3838d041-5ab6-4167-8b84-1ccbca10c8ec"
        },
        "item": {
          "id": "f8d71d8f-d1df-4192-b905-cc78e2007c6a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "22165556-ad6c-4c90-8e19-62978f35a672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83578ba-74e0-467b-9bfb-1e2ac13f97b1",
        "cursor": {
          "ref": "fb2a9b8b-d71a-4d0d-ad7c-696d4d812067",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ce677b2c-8a7b-41b0-ab2d-616fd9dec293"
        },
        "item": {
          "id": "f83578ba-74e0-467b-9bfb-1e2ac13f97b1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3f02e58e-8b5b-469b-b2f4-77c0978acc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed23ba0-1765-4994-b001-455bd9975ff8",
        "cursor": {
          "ref": "45be15b8-47e6-42d9-9db0-ea04e3c41b06",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f94a7652-09fc-476a-9add-960789e1c8f3"
        },
        "item": {
          "id": "eed23ba0-1765-4994-b001-455bd9975ff8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "07e81b7d-b124-45bf-bb0a-0f8fed0d30d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faa6306-5270-4f96-98cb-e87e75c5c1a5",
        "cursor": {
          "ref": "76111572-122b-4d96-b342-a60a8cf1b5a4",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "242fcf54-0fc1-4396-a4e9-d4d1d34d482c"
        },
        "item": {
          "id": "0faa6306-5270-4f96-98cb-e87e75c5c1a5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1fc4354f-a78e-4656-b328-8bde8e7042e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72054525-088d-4e41-809d-a2fa0cc0e7e0",
        "cursor": {
          "ref": "68135782-e696-40dd-bb09-30dcbe15f2c7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b2d732ea-d1eb-4bd6-9098-7bf5e011d7e3"
        },
        "item": {
          "id": "72054525-088d-4e41-809d-a2fa0cc0e7e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6614867b-4a9b-4ba6-be47-b26aaac50fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e9f823-937c-4eb4-a1fb-3debbf7d1a89",
        "cursor": {
          "ref": "89f234fd-d82b-439e-a69f-40ee9f189b17",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e876d705-8fd7-48eb-ae05-23b07a92801e"
        },
        "item": {
          "id": "28e9f823-937c-4eb4-a1fb-3debbf7d1a89",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28ce2740-8afb-418d-a126-27539e572385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0df3879-a802-4a58-85c8-46aa006b0a9b",
        "cursor": {
          "ref": "9eb65755-5019-4610-9282-139706810e79",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "964f55cf-928d-47db-9fac-9f75b939e8b2"
        },
        "item": {
          "id": "e0df3879-a802-4a58-85c8-46aa006b0a9b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6f8eb748-9fa3-41f5-932b-837249bfd7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0615ed-7840-42b9-a8e3-8c9033968c45",
        "cursor": {
          "ref": "3acd76d2-3e27-4da5-aa41-1944f6642969",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2a55362c-dc61-4cc2-8e4f-74c56655f66a"
        },
        "item": {
          "id": "9e0615ed-7840-42b9-a8e3-8c9033968c45",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0a55827e-e8ac-4acc-86f1-7d9fa3c5cb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ca89c7-3355-4f81-bb93-41efeb4d57a8",
        "cursor": {
          "ref": "05ca9241-c581-4c8a-a75f-d88ff68ff176",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b485495f-794c-4aaa-84cd-e334bd94027c"
        },
        "item": {
          "id": "b8ca89c7-3355-4f81-bb93-41efeb4d57a8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "95dd07f4-2994-4a23-9203-5320a7210de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a04af10-5ce8-491c-a9f3-af3d0c667288",
        "cursor": {
          "ref": "c19b2244-ebb7-4212-8c72-576f0d752e84",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f538a257-22dc-4fe4-9bfa-2a58dc10fb8c"
        },
        "item": {
          "id": "7a04af10-5ce8-491c-a9f3-af3d0c667288",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3c5daf03-e480-432f-a3b1-beef9b7ab636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004a209e-2833-4abd-bd24-dec8ec0c62b6",
        "cursor": {
          "ref": "eede3cbd-fae4-4b05-8f2f-e78ca21d394d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6cd6631a-9142-439c-998b-c77c745d8840"
        },
        "item": {
          "id": "004a209e-2833-4abd-bd24-dec8ec0c62b6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1fe0a553-d5ce-4c1e-8b61-962bc2e47886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6538857f-3105-47ad-a574-0507a0307af2",
        "cursor": {
          "ref": "03b511a3-53ee-40e5-b72b-677b60b7567a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1f328cf7-9859-4fbc-908c-64c32e7a0f9f"
        },
        "item": {
          "id": "6538857f-3105-47ad-a574-0507a0307af2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "da776c13-7488-4944-8520-c53caead8a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8875f0d1-33b3-4854-b43e-369549531086",
        "cursor": {
          "ref": "d9e8a478-870d-442d-89bc-656a1ba6b71b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ae01e9e1-71df-478f-b84e-b03cdd3e8fc0"
        },
        "item": {
          "id": "8875f0d1-33b3-4854-b43e-369549531086",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f840ed23-b0b7-441e-b6eb-4890552c95a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1222bd93-8505-4e09-b9aa-9b1f9f7e79ba",
        "cursor": {
          "ref": "ea0fb0e9-42d2-466b-bb56-f89700e35fcf",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b7b9fa48-db5d-408c-b914-48565b505c54"
        },
        "item": {
          "id": "1222bd93-8505-4e09-b9aa-9b1f9f7e79ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d508c74d-ee12-476d-9535-a443ffa5f594",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51304dc0-9d08-47c5-9440-32e08e18f999",
        "cursor": {
          "ref": "b040700c-0d75-4714-a5e2-446ea86cf601",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "638cd5f5-ce3a-43f7-9561-50675d5dd8b2"
        },
        "item": {
          "id": "51304dc0-9d08-47c5-9440-32e08e18f999",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f6dca1d3-311d-4bd1-94d2-7f0321b1a2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "21ee10d5-799e-4ee8-a02b-c850a36b0f4f",
        "cursor": {
          "ref": "25df330e-5f0c-441e-a7ee-5a09dea283bc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e03a4e5d-7609-4085-9137-3fbc405ea4f0"
        },
        "item": {
          "id": "21ee10d5-799e-4ee8-a02b-c850a36b0f4f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "50b50b8c-f947-4fe4-9676-2808478b3684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "cdfc6c06-40d0-4cf2-8c77-bf5a9c2d03f4",
        "cursor": {
          "ref": "bff55614-9457-4b9c-94fb-0e44530d67d3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "18e15046-68fe-4462-932b-c5bd0f4e996a"
        },
        "item": {
          "id": "cdfc6c06-40d0-4cf2-8c77-bf5a9c2d03f4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "91da73d0-2d29-49ad-aabe-c23ed9fd97d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d51c90b0-cdc5-4981-b535-fa9bfbd7da92",
        "cursor": {
          "ref": "b0b8086c-7386-4f80-a629-9d4001622874",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "494b438b-4de5-4225-9beb-d5c4510adf0f"
        },
        "item": {
          "id": "d51c90b0-cdc5-4981-b535-fa9bfbd7da92",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a9802f16-5f62-4eb6-bc4e-df4bd1b9d486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cfd3ed6c-54f2-4ed8-ba30-d5c6fd3420db",
        "cursor": {
          "ref": "0578b89e-a15c-4098-a822-4e27f6da06de",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8a031adc-a570-49fb-840f-817594ce5a94"
        },
        "item": {
          "id": "cfd3ed6c-54f2-4ed8-ba30-d5c6fd3420db",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "df25f5c8-5fb0-44a0-a666-3e8557039a15",
          "status": "Created",
          "code": 201,
          "responseTime": 8528,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f0478d-5fc3-4710-b2ff-b7415ed326c0",
        "cursor": {
          "ref": "12d0a191-2c7a-4647-ae76-b3b3960df9d1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a5dade26-5c93-4c1d-be52-6db0e378e438"
        },
        "item": {
          "id": "c5f0478d-5fc3-4710-b2ff-b7415ed326c0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41108b11-0a60-4856-8a02-4dbaea2a8cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "aa7f9010-5333-4aa2-bad1-90797772bec8",
        "cursor": {
          "ref": "fc0f1a82-7674-4d0e-83ca-755a2cbc5ccb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "50ed0d96-15da-42cc-8b85-b1682c1e456b"
        },
        "item": {
          "id": "aa7f9010-5333-4aa2-bad1-90797772bec8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "076aa980-a53d-4f4d-8646-6fdb1a8bc4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "908132bc-18f1-415b-a942-103a386dbff2",
        "cursor": {
          "ref": "1935c60a-e690-4c64-ae7b-b9fcf59f9577",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "986f3b78-d945-4561-bc8c-d0bae9d59f6a"
        },
        "item": {
          "id": "908132bc-18f1-415b-a942-103a386dbff2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3b7d2db-8830-401b-a869-0572b43e39b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5470106c-f07d-451f-8e15-fdc6905ca360",
        "cursor": {
          "ref": "99cc3c63-092a-4f4b-8abd-e3851016d97e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b9416a6-e614-4175-b7e5-f59ec90bafe7"
        },
        "item": {
          "id": "5470106c-f07d-451f-8e15-fdc6905ca360",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8db52e8b-d6d8-4b35-a5d7-01a98a5047cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9616011f-2ead-4132-918f-601f1a2e9d03",
        "cursor": {
          "ref": "33249fc2-2b52-44d4-bdc0-9bd6388f9763",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5586ce05-4adc-4ef0-9ed1-499becc4a78a"
        },
        "item": {
          "id": "9616011f-2ead-4132-918f-601f1a2e9d03",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a5ba6533-9c16-4cc9-875c-87fcb5239f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd070a7d-52fd-475e-be02-c5459276eb36",
        "cursor": {
          "ref": "c8745a73-078f-4940-8a94-aad1580b8277",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c1a8c1a1-42f8-4263-82e6-bdae8707073a"
        },
        "item": {
          "id": "bd070a7d-52fd-475e-be02-c5459276eb36",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2c6d1a89-cd44-4581-9613-761237df08f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6933de-c420-4b28-bb55-8cc7d156200e",
        "cursor": {
          "ref": "03102688-2ec2-46d3-88ed-a05de375708a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6a2dd8e3-2083-43c6-b992-a1c7c9982e18"
        },
        "item": {
          "id": "0a6933de-c420-4b28-bb55-8cc7d156200e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2dab8a9f-8df0-4d96-b507-b261b2f73fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083053ff-65ac-47e8-a24e-c8380cabc8ee",
        "cursor": {
          "ref": "2104da9d-da57-4c65-b452-a066eca5703d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "59cfa84a-e622-4fdd-80e2-5f0e429744ea"
        },
        "item": {
          "id": "083053ff-65ac-47e8-a24e-c8380cabc8ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6ff39e1f-b65f-4f5f-b500-27bddcde4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11a2221-8523-473f-bba2-b436bbae32d7",
        "cursor": {
          "ref": "8156ad10-18d7-4af5-b54f-97231184a063",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "818055dd-0243-43e5-9fe0-0f57027fd97d"
        },
        "item": {
          "id": "d11a2221-8523-473f-bba2-b436bbae32d7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3a40e0e1-581a-4484-b631-ea529afdab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b522342e-e0cb-47b8-b2d2-3517f27832c8",
        "cursor": {
          "ref": "76b7f4fa-6dae-4840-86a3-c10adbe4aee5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "59802d8b-552a-4eaa-ad68-8cf327e984d4"
        },
        "item": {
          "id": "b522342e-e0cb-47b8-b2d2-3517f27832c8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7f387df-33fb-43f0-bc30-3cb56ec11dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a48767d-1c14-4832-bd0e-024c69b9bc73",
        "cursor": {
          "ref": "8c275ca7-0617-45e6-8722-08e71036c19b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "890450ab-f124-44c8-8750-a893aecba693"
        },
        "item": {
          "id": "5a48767d-1c14-4832-bd0e-024c69b9bc73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4bbd1581-36d2-49d6-b13a-0e43b10723ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586857cf-8bb9-442c-96e6-42f9b98596b2",
        "cursor": {
          "ref": "33d564f4-f450-45ab-993a-22f9e190e71a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5e8535d3-32c8-4642-817d-bf2a878607ce"
        },
        "item": {
          "id": "586857cf-8bb9-442c-96e6-42f9b98596b2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a444ffc4-c20d-482d-9264-214f4e685905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3af43-0c91-456a-893a-3da90d4f6da2",
        "cursor": {
          "ref": "cec7972c-2ee0-4ca3-9d81-bf2bd381e33a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "298cd33c-e94c-47a4-b040-b7ae1ae3eaa2"
        },
        "item": {
          "id": "7ed3af43-0c91-456a-893a-3da90d4f6da2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ee03efcd-60fe-494a-ab90-5f877ee29967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f820084-c601-4452-9bd4-49c39252c793",
        "cursor": {
          "ref": "af26376c-a071-49e7-9b09-082597335519",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "785a2129-86c7-432d-94a7-25543479bad9"
        },
        "item": {
          "id": "1f820084-c601-4452-9bd4-49c39252c793",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0dac6414-1354-42db-a1e2-11689d4a4a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb50a951-256a-4035-8698-e8cda0c44eec",
        "cursor": {
          "ref": "83bf2ec2-7b84-4453-b4df-1bbbad8e809a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6da63e62-63bb-4b35-a890-e193604d0d88"
        },
        "item": {
          "id": "bb50a951-256a-4035-8698-e8cda0c44eec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2f207ca3-f183-4a81-bef5-26a48818a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8302de18-cf62-43be-b540-c9278e53045c",
        "cursor": {
          "ref": "15122f7d-b1d3-43c9-aafc-7ba09b3a24c3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8ebdb88a-7997-44b0-9bad-6019e78f3599"
        },
        "item": {
          "id": "8302de18-cf62-43be-b540-c9278e53045c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e3cc51c9-ffc1-4107-8dd5-1d39492ea968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12be20f-f470-4214-ad31-8d2a808d3764",
        "cursor": {
          "ref": "a5cddc9b-8b6a-4b06-9327-6899a04de5d2",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9a486101-f397-44fd-b47b-4418ca7decbb"
        },
        "item": {
          "id": "f12be20f-f470-4214-ad31-8d2a808d3764",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80749eed-ea81-4159-921c-2b1e428bf527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8fff02-30b2-4549-9fd6-76119e9a5ae1",
        "cursor": {
          "ref": "2c28e60a-8b05-4495-bb8f-479b9d4a80ab",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bc97d0fe-4264-41a3-8ccb-d123496140a7"
        },
        "item": {
          "id": "9a8fff02-30b2-4549-9fd6-76119e9a5ae1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c1264e67-7d76-4ca2-abfa-f62de0ec9587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc734af-e802-40b1-a08f-603ed1a667da",
        "cursor": {
          "ref": "9a2de774-c579-4a43-90e5-cadbc25d2732",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "90113bc1-fdf3-4a51-aefd-678f93d962aa"
        },
        "item": {
          "id": "ccc734af-e802-40b1-a08f-603ed1a667da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b994dd2-ecda-4e36-af68-7251df2e0c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0b2175-1bb5-4600-93de-870a3b9ebb84",
        "cursor": {
          "ref": "49ea9e91-4e3a-437e-ac57-7ec4fe2acb84",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "34350c17-67f9-44a5-9185-781d58511cd5"
        },
        "item": {
          "id": "3a0b2175-1bb5-4600-93de-870a3b9ebb84",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ed2a5b8f-4e2e-44c2-ac19-d8b1d8d85cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c433b52-1c7c-486f-8705-2a40d56bd093",
        "cursor": {
          "ref": "c707570e-d620-4bc7-8f35-ba905536d422",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1c5fba1d-b889-4e92-afa9-5cd9ef7a6ba8"
        },
        "item": {
          "id": "8c433b52-1c7c-486f-8705-2a40d56bd093",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "742fc57b-eaaf-4ae5-b107-dc092fd93636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188398da-1e65-447b-9c17-76bd7fafce80",
        "cursor": {
          "ref": "634a283f-6e92-46a6-83ae-65f9391df72d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4ae1df26-c6a0-47b8-9a49-178a17b3c774"
        },
        "item": {
          "id": "188398da-1e65-447b-9c17-76bd7fafce80",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6137b654-c7c4-4b7d-aea1-7b7e8515ad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e77283-57d6-4552-ada1-7c9b403464ec",
        "cursor": {
          "ref": "e0eab596-43ce-42b7-a17e-81b5e5f9dc4e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "58798502-0899-4e09-869b-1a62b81c99ab"
        },
        "item": {
          "id": "a9e77283-57d6-4552-ada1-7c9b403464ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3e441e7d-5cba-418e-89e7-89011978e4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2c78df-c644-4984-9c4c-a385b485473b",
        "cursor": {
          "ref": "62723164-ad5b-481e-be36-da9e3b6db0a3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "038695ac-ba4d-4335-aa3c-89be210a5119"
        },
        "item": {
          "id": "6b2c78df-c644-4984-9c4c-a385b485473b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9d98b225-822d-499a-9d29-b52a8b3bc6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8434acd-a979-4d49-a872-f84ebd7a9b13",
        "cursor": {
          "ref": "1c96566d-d1c8-4ccf-a23a-d8d84428c2be",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a469d5ec-5f1d-4e23-8361-51f684c83293"
        },
        "item": {
          "id": "d8434acd-a979-4d49-a872-f84ebd7a9b13",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cdbef60-b135-465e-b14c-204b6490c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e75d92a-c5ee-4962-a881-1eb558ed982c",
        "cursor": {
          "ref": "2d1645b6-b9a0-4115-94c3-c273a8939660",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d3814a9-6f3d-4885-af7c-0dbc0b03dec5"
        },
        "item": {
          "id": "4e75d92a-c5ee-4962-a881-1eb558ed982c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec3fc07d-7269-475a-8651-dae8c7d90d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f775bb-6eae-4c12-86e7-b6ce1ca04667",
        "cursor": {
          "ref": "0d620513-143c-4df2-9999-0151e10ae126",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2834dc97-b2f3-4752-a5f7-e618025c0917"
        },
        "item": {
          "id": "55f775bb-6eae-4c12-86e7-b6ce1ca04667",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4c0282e3-13f0-4ce5-a321-5db53bf04269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a1bfaa-758e-44f2-97e3-d0e54f0dc758",
        "cursor": {
          "ref": "90aaeeac-a723-4542-9ea5-1291fea2bf12",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e6f387a6-1da1-416b-ae13-065a8ab46e7d"
        },
        "item": {
          "id": "f2a1bfaa-758e-44f2-97e3-d0e54f0dc758",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "21dd16cb-75f1-48dd-8be3-213e62bd9c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dccd172-d1cb-4b81-8b1e-e039b1bb2d80",
        "cursor": {
          "ref": "b2885735-3f72-4a94-80ca-a083a2578cf3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f0f0d844-d9df-4cc7-817b-42dac23e77a1"
        },
        "item": {
          "id": "2dccd172-d1cb-4b81-8b1e-e039b1bb2d80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c57df1cc-26e0-4707-8db3-8c76359797c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e385a91-3ea3-4dc4-8e9b-ec5f842650ed",
        "cursor": {
          "ref": "271926cd-80b1-486d-af63-0539e6658333",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d98d1bcd-3860-4955-bcc8-73c3ebd63bf5"
        },
        "item": {
          "id": "2e385a91-3ea3-4dc4-8e9b-ec5f842650ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f87e609d-b100-421e-a9e1-b75f061f21db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a506f83-03c8-4bdb-8b4e-bedad3f4f8cc",
        "cursor": {
          "ref": "517f692d-c46c-456b-966a-1e2477094c17",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7d8aa6c3-95ee-4e2b-b87e-a77f509720f8"
        },
        "item": {
          "id": "0a506f83-03c8-4bdb-8b4e-bedad3f4f8cc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "feaf665f-680a-4d36-826c-6c55931a8b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723a3a44-a099-4a42-9eac-f2a090704fdc",
        "cursor": {
          "ref": "8474e548-c016-4374-96f3-6cc3d72d57d3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "38064c37-55cc-495b-a495-1a55ea2fcf8e"
        },
        "item": {
          "id": "723a3a44-a099-4a42-9eac-f2a090704fdc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91c0cd28-983f-4b5b-9260-5ab9d962338f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be984fa-3681-4a35-95c4-7c9f2d8978cd",
        "cursor": {
          "ref": "59451659-291f-47da-a854-08a46122a9a3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ae94ae9c-3aa9-4968-ba6f-375f98f2ee7b"
        },
        "item": {
          "id": "3be984fa-3681-4a35-95c4-7c9f2d8978cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5d0e48f7-4717-4502-8a28-70d8d2a116fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d847bba6-b320-4702-b106-c49c2f7a246d",
        "cursor": {
          "ref": "88fdf27b-0279-4e08-99e0-24866b89ca30",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0afe3e4c-e93f-4771-ab58-6e81aa75d211"
        },
        "item": {
          "id": "d847bba6-b320-4702-b106-c49c2f7a246d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a52c4683-9854-4eb3-a027-d2174ff79f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20576ccb-3fef-4fa3-9eb1-4ad496415cfe",
        "cursor": {
          "ref": "87a8fd62-8b14-440f-92fb-fb2fa3cf5233",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "63f490df-3453-41cc-92c2-f9a2297436da"
        },
        "item": {
          "id": "20576ccb-3fef-4fa3-9eb1-4ad496415cfe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "feb7f439-ad7a-4fd3-b415-d4b6bc3a1dd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d13e83d-bb1d-4db2-b299-8864d950938f",
        "cursor": {
          "ref": "64fbeb94-0c32-4589-8b1a-7312e5466809",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "df010022-b0be-4881-b0b0-01bed3bfbbfa"
        },
        "item": {
          "id": "0d13e83d-bb1d-4db2-b299-8864d950938f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "68604d74-b2fc-4bab-86b0-5e55fdd69070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd593f1-585f-402a-994c-4e78d6ee8fce",
        "cursor": {
          "ref": "5a3f9032-3698-49b3-9e1e-8e34589d6843",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7eae0b4a-6c24-47be-aae9-b0c8f1ea8518"
        },
        "item": {
          "id": "2dd593f1-585f-402a-994c-4e78d6ee8fce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "30fb9596-0b81-4ae0-96bb-cf0d0073f02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca4e70-ea06-44c1-9e80-e406cf23b9ac",
        "cursor": {
          "ref": "3c59a5e2-14f5-448e-969f-6ecbbb808bac",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d5ebf478-f2c5-4735-b6f7-754eecd345f2"
        },
        "item": {
          "id": "9eca4e70-ea06-44c1-9e80-e406cf23b9ac",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19452532-aafe-492b-ac89-8388eb20d1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ee78b7-9141-4f63-b14c-cc31edec0003",
        "cursor": {
          "ref": "2713df57-06c6-444c-a2c8-db89411b1392",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd0f1c9c-5401-4990-a382-4213a6247ba7"
        },
        "item": {
          "id": "b8ee78b7-9141-4f63-b14c-cc31edec0003",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2d275e50-e326-4b78-b84f-518edda8c051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757a520b-1603-474d-b6fd-f475410a898c",
        "cursor": {
          "ref": "6e9e9716-e722-4a9c-9044-1cb061554d69",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "621289a3-ee5a-400d-b746-f70fb285b7c5"
        },
        "item": {
          "id": "757a520b-1603-474d-b6fd-f475410a898c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dc06623e-72c2-46a5-9d0c-883346549837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cab1eac-fac7-43cc-8adc-826a076d116f",
        "cursor": {
          "ref": "e4c7a8c0-4410-4ad1-ae97-5c70e9b035c6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9e214431-3b19-4190-889d-b14abfbfb421"
        },
        "item": {
          "id": "1cab1eac-fac7-43cc-8adc-826a076d116f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cd569596-d855-42a7-b76f-b009bac49e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e83ac3-cb66-4487-822e-d93c31a6f81a",
        "cursor": {
          "ref": "3a9107ac-ccbf-430f-ad9d-62a462c1fe8d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "492c463b-c049-419f-a460-cfd28a8a69de"
        },
        "item": {
          "id": "f9e83ac3-cb66-4487-822e-d93c31a6f81a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "631c0213-9e58-4131-b180-eefa891a6d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa42f06-cee8-44ff-a857-a00060622731",
        "cursor": {
          "ref": "c15d2667-b4db-43aa-8a28-09896d65f7f1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1b4aa9db-77f2-4379-84b4-e18dbfa08409"
        },
        "item": {
          "id": "baa42f06-cee8-44ff-a857-a00060622731",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7057df00-e657-466e-b6cf-f812a7fdd5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1610a313-afcd-496a-9300-0532655359a1",
        "cursor": {
          "ref": "d78d2da3-afe0-40a3-98d9-081a3a0d596a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "48bc31ba-bfec-4879-876b-0775aa618ab6"
        },
        "item": {
          "id": "1610a313-afcd-496a-9300-0532655359a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b833b287-24e3-42a1-8083-b0053acb71a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea845b9-cd91-49e6-b54b-494de466631c",
        "cursor": {
          "ref": "6c70850e-0228-4128-bf72-a96d8e9ba6ec",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a4a66fc3-9be6-4e1d-ac8b-d3e950e06525"
        },
        "item": {
          "id": "9ea845b9-cd91-49e6-b54b-494de466631c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b0dbf973-b2fc-4851-96fa-8e8834bfe3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b453f9e-8d33-4f63-aa86-68194cd0d932",
        "cursor": {
          "ref": "670df637-9825-4447-8075-7af74785e7ad",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "35e34154-d257-4d50-b7c3-b77d6f287544"
        },
        "item": {
          "id": "7b453f9e-8d33-4f63-aa86-68194cd0d932",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2a40df56-9e6b-4904-b6ad-01803b4a3221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a571e-d827-4aa6-9589-3e232a4314e1",
        "cursor": {
          "ref": "1e75531b-7851-4563-93d9-1892d6ba4fd6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0de0e888-054f-4bee-aa1c-7b77e48eb7c7"
        },
        "item": {
          "id": "ec6a571e-d827-4aa6-9589-3e232a4314e1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5bd74510-785a-41e2-a0d3-89f7f18d7e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9a59cc-1d6c-44a5-af55-c6b2fc2472d7",
        "cursor": {
          "ref": "71b196d9-e50b-4ce4-8732-c2aad34eb322",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "790a180d-059c-4c78-88fa-fcb16a6e5ed7"
        },
        "item": {
          "id": "9b9a59cc-1d6c-44a5-af55-c6b2fc2472d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "22e64200-da66-4bde-8525-60c1a3bc685c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df108207-de25-4e94-87f0-096a1c5a33b6",
        "cursor": {
          "ref": "9c5ea3f3-81f3-401c-ae62-1968bfdc7081",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3fdbb97c-a3b7-4692-99f9-acad67b4c301"
        },
        "item": {
          "id": "df108207-de25-4e94-87f0-096a1c5a33b6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6c70f6c-f970-4d70-b6ee-e448059ba122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c9b43d-fabf-4c68-a6f3-dbc39004a4bb",
        "cursor": {
          "ref": "a9efd26f-ed76-4479-9ebe-086d80bb5f8c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "57e11c05-e852-437b-889e-58cea304421a"
        },
        "item": {
          "id": "15c9b43d-fabf-4c68-a6f3-dbc39004a4bb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ab746b2b-e00d-4a1b-988d-0d9d40a58d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bf7833-1381-44f7-8be1-bb2a11d60f75",
        "cursor": {
          "ref": "2f344b00-605f-4d71-9df5-84c8b4534758",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "78fb1ba5-0d32-43de-b89e-cf523df42791"
        },
        "item": {
          "id": "b5bf7833-1381-44f7-8be1-bb2a11d60f75",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec5beb2b-f16c-4625-a7bd-17b7af23de49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519caa6a-c3ee-4cd0-b23c-ff7965a6f67b",
        "cursor": {
          "ref": "b261d592-cfea-4bc9-bcbf-6b0d007e91a4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ea17b7ab-fae6-47e6-a8cf-cb980038a7a4"
        },
        "item": {
          "id": "519caa6a-c3ee-4cd0-b23c-ff7965a6f67b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "73db6fed-0f1a-43ed-a270-35e9abc91132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a325edc5-0ead-4570-930b-fe91e483fa0d",
        "cursor": {
          "ref": "ab588405-0b09-44b2-8661-9089a8f7fdb6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "53bc7c6c-7fb3-4514-8555-fa73b22871d6"
        },
        "item": {
          "id": "a325edc5-0ead-4570-930b-fe91e483fa0d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98b388f8-702f-4d92-9272-2145f4cb83d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df43e018-f7bc-437e-b0a4-8ebeb80bb494",
        "cursor": {
          "ref": "12bf1346-613d-49f3-8e22-45b1ea659edf",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "487e8318-cb37-40d6-af15-fa61a2b734bd"
        },
        "item": {
          "id": "df43e018-f7bc-437e-b0a4-8ebeb80bb494",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "587eb4a7-5123-444a-b608-448e0268d765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fff195a-3b4a-482f-ad99-b8c41a32ce4d",
        "cursor": {
          "ref": "d39f4860-176e-47c8-85f3-bee88ec87d6f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "70e923b2-a12b-4f82-bb25-42b33847fec1"
        },
        "item": {
          "id": "0fff195a-3b4a-482f-ad99-b8c41a32ce4d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85e0df94-429e-45a1-8957-d1b49cea18a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361fd9e0-2ad3-4132-bb42-1e733b8c6538",
        "cursor": {
          "ref": "f6fe8769-0bb6-458c-82b8-60df7fddd0b9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0f33c5c9-5e31-4917-9a2e-e97a12b3afaf"
        },
        "item": {
          "id": "361fd9e0-2ad3-4132-bb42-1e733b8c6538",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "077cdcd4-9020-4800-8523-314f61a611a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c03a9f-d6f6-41d7-b826-88ab9a95cd08",
        "cursor": {
          "ref": "7196e2e6-c752-4132-8c99-4b16d6f64fc4",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "feb9750f-d1db-40bd-bee9-816f13d104e7"
        },
        "item": {
          "id": "18c03a9f-d6f6-41d7-b826-88ab9a95cd08",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ea1e41d-d9d0-453b-8748-fcceba9496bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943909e8-a2ec-4623-aad2-bd0ba397e16b",
        "cursor": {
          "ref": "7eddf95b-44f8-4e90-8664-fbdc05f0fc19",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "54d5c849-a15b-495e-9569-356b349763da"
        },
        "item": {
          "id": "943909e8-a2ec-4623-aad2-bd0ba397e16b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4ff34e57-4222-4546-9a67-e778ebb42a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243afea7-44ee-484b-bcf0-a9c7a3a9a7fe",
        "cursor": {
          "ref": "016fd144-bbea-434b-9130-7163cc8555ef",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6399fc0b-5e59-4610-92c8-2f66e187a58d"
        },
        "item": {
          "id": "243afea7-44ee-484b-bcf0-a9c7a3a9a7fe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "31d172f5-80f6-4e9b-8d45-fc7c18757468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6684b5-fc3c-4ed1-b769-cc504369283b",
        "cursor": {
          "ref": "62b7f69f-0517-4353-af16-c0c1fe96ddea",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "af5262b0-1ddc-43a7-b92b-38e239ece622"
        },
        "item": {
          "id": "cf6684b5-fc3c-4ed1-b769-cc504369283b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "239b5e5f-7088-41ae-9b8c-47a0528c52e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365078fe-cb03-4edd-a543-0426fd882f7e",
        "cursor": {
          "ref": "4063ed18-7048-4f48-a796-f7ceed78379e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a46925b9-c8b6-436f-ad15-4e7de7efc4d3"
        },
        "item": {
          "id": "365078fe-cb03-4edd-a543-0426fd882f7e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "248300a9-40a9-4f18-9062-fc4a0814451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44887636-8aa5-4847-b6c3-37ed81f1e70f",
        "cursor": {
          "ref": "3cdd6ba8-30ca-4daf-bb7c-8790cea4d7f9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b3051896-e7f4-4532-89ce-5b883bddc8dd"
        },
        "item": {
          "id": "44887636-8aa5-4847-b6c3-37ed81f1e70f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dcca8a0e-e1c9-447a-8e68-0fb11ce51889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe8474e-d56f-4292-a8e5-7c3b63a852b4",
        "cursor": {
          "ref": "ee76284d-2c62-425e-bba2-0aed4e1bb528",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ffd52eb1-9129-4ac0-8fac-2a7d48d29b5d"
        },
        "item": {
          "id": "dbe8474e-d56f-4292-a8e5-7c3b63a852b4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0c2e64bf-036a-41d1-b590-7344041b16dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8985438c-1582-4d11-aa77-9b5ebc46d595",
        "cursor": {
          "ref": "ffcf97b0-c889-46c6-85ce-c24b1de806d0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "154b75de-5e66-4e50-9c0b-a43f218d179c"
        },
        "item": {
          "id": "8985438c-1582-4d11-aa77-9b5ebc46d595",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b412fad7-a9aa-4902-aa6c-25ab25c2bbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e338119d-02d2-4c49-8d97-2da6fa5cd34e",
        "cursor": {
          "ref": "2d352691-bee6-4f06-a6da-be570dc8c0e1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "528fd62e-0930-4540-baa1-a38becbe5cfb"
        },
        "item": {
          "id": "e338119d-02d2-4c49-8d97-2da6fa5cd34e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d83d55d-dfef-4d9e-a086-238d40eb1768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63562c6b-45d9-4a81-8b1a-51c7cae4ad1a",
        "cursor": {
          "ref": "763cb58c-2499-401b-9359-e4ba53b9394b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a633cafb-cd10-4b7b-875b-2c95ad219a50"
        },
        "item": {
          "id": "63562c6b-45d9-4a81-8b1a-51c7cae4ad1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f035b9be-418e-40b3-9be2-86e08e44f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335c97c8-4ce2-40ef-a2b0-9d8a172a563e",
        "cursor": {
          "ref": "a8b0beed-19a3-4dad-82fc-c2c7edcb18cd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "44a2cf84-128f-484f-9f8d-90d695314aeb"
        },
        "item": {
          "id": "335c97c8-4ce2-40ef-a2b0-9d8a172a563e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0855486e-e9fc-4339-a925-1c2caae6f1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8b0d52-80c5-4081-aa62-63afc3e02e1b",
        "cursor": {
          "ref": "fd8d0d46-4883-4411-ae43-0a58ac3db487",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3c1603eb-47c2-4c42-b366-e7e23bf0da81"
        },
        "item": {
          "id": "3a8b0d52-80c5-4081-aa62-63afc3e02e1b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "16c27f3f-0a45-4b12-b154-eeb96b15ace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ee7768-2204-4b9d-b818-80c5ec811764",
        "cursor": {
          "ref": "8a4d1be3-9e7e-4bda-ad4b-5b504049b6bc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "16936580-0669-44b2-ac64-6f041683f614"
        },
        "item": {
          "id": "b5ee7768-2204-4b9d-b818-80c5ec811764",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7e0b0bda-de5c-4e35-9f41-3b05a1b85ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d640f182-c14a-4e95-86d0-585b7edcb83b",
        "cursor": {
          "ref": "cb97b282-043b-43b3-845f-415697de7793",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a68993c4-e031-42b7-a6e0-1d3e3ee9b33a"
        },
        "item": {
          "id": "d640f182-c14a-4e95-86d0-585b7edcb83b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b1c50b6a-947a-419a-a975-7ae0ba5bf082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3fe8ba-44bc-425d-8448-3d24529f7a71",
        "cursor": {
          "ref": "11eb8446-bfb0-47fb-8c9c-a6cc71b65351",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "84418c9b-32a8-48c0-b7b1-18a47699609c"
        },
        "item": {
          "id": "6d3fe8ba-44bc-425d-8448-3d24529f7a71",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3e6b68d3-bd2c-4464-95ab-7a4ed1bb7471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9593c1d0-3994-4f92-8787-71de10259359",
        "cursor": {
          "ref": "5cda2330-2bde-4f41-8231-53b4bd8ca374",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "58770bed-b4bd-44fe-87c6-1db78d6b2416"
        },
        "item": {
          "id": "9593c1d0-3994-4f92-8787-71de10259359",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e65e5771-9e20-4863-b1f7-f69092c76f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af4caaf-e8f1-4797-9090-6bacfee5a16a",
        "cursor": {
          "ref": "3ad0efed-cbde-4947-88ec-74bdbf51eac7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7fcbc7d7-a5b7-4b2b-9d5e-e031b34b601c"
        },
        "item": {
          "id": "2af4caaf-e8f1-4797-9090-6bacfee5a16a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ec50ef1-9d87-4de6-bbdd-3b48596ce69d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15521af-4f5a-430a-9508-0a60437384dd",
        "cursor": {
          "ref": "b302d388-aefd-450d-a628-0f38a2fd092a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ceef04b5-1632-409f-83f2-90256928f5af"
        },
        "item": {
          "id": "b15521af-4f5a-430a-9508-0a60437384dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "24ee84d0-87cb-4a3a-9285-b3f1ba3c1be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dfd131-a25e-4336-b735-729be35dd51b",
        "cursor": {
          "ref": "015b0d98-86eb-4660-82f8-319cae818ae5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8f643514-8492-4b36-9e39-a19ec2f0db0d"
        },
        "item": {
          "id": "36dfd131-a25e-4336-b735-729be35dd51b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ac75bc7-fbc6-45fe-b3f1-4415a8747844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0a92d7-7e78-4a3b-b228-1b52b62821f8",
        "cursor": {
          "ref": "eadc95e1-584f-4ffa-ac35-fe14a9b771ea",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2c56c2fa-7798-4c3d-8077-dadb6c830e20"
        },
        "item": {
          "id": "3c0a92d7-7e78-4a3b-b228-1b52b62821f8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "db18f8a4-cc45-4210-8e8f-93b159f09c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3613a7cb-4a93-458f-bb85-ee7237467dea",
        "cursor": {
          "ref": "0d0c9ab1-d411-4dae-9e5b-d61a693afb5b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "080b7a50-ce3d-4d2c-9b3a-048b90c6979e"
        },
        "item": {
          "id": "3613a7cb-4a93-458f-bb85-ee7237467dea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "df9bfa07-f89c-4134-9231-a1d77a2d732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7187210-33af-4d90-8051-5a40a1da5b53",
        "cursor": {
          "ref": "8e9bc5a5-6924-49ce-908f-28fbfaddf7a0",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1ed943c0-2d30-40bf-bb74-35c1d0e1692f"
        },
        "item": {
          "id": "c7187210-33af-4d90-8051-5a40a1da5b53",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d009afbe-ff9b-41ea-a880-a1ba25a617d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa15bd25-2a0d-4cd6-97a3-55a4afb60bad",
        "cursor": {
          "ref": "3e44fb5f-e947-4c5f-adc6-5037373effcb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "43ef4bb6-97d6-4483-b27a-17ba2b88d16b"
        },
        "item": {
          "id": "aa15bd25-2a0d-4cd6-97a3-55a4afb60bad",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8edde891-a4d2-41a8-9edf-83490f68f369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903dc9af-f4f1-4222-9936-4c48ff434fb2",
        "cursor": {
          "ref": "7d221acc-8ad9-4a2e-a9c6-a53f12a423cc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c00b955d-f60b-4d42-bb1b-ee0eb8ecd370"
        },
        "item": {
          "id": "903dc9af-f4f1-4222-9936-4c48ff434fb2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8299ed1e-0cc0-4320-9d13-95d0aaf6711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef5678-28d1-456d-a435-601c906284e1",
        "cursor": {
          "ref": "5c56a260-376e-4647-8757-34f9f44c81f9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "92d9f46c-0582-42b1-be26-80737d580e43"
        },
        "item": {
          "id": "feef5678-28d1-456d-a435-601c906284e1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1598f254-7db5-4332-bbc9-8e7ea7b68974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2a6131-d0bd-4af7-b2e6-9a54bbefc573",
        "cursor": {
          "ref": "206a425d-ecb5-4108-bf00-ca9d0d7631a6",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c7b845aa-5ca0-421f-b3cc-0288eb69670f"
        },
        "item": {
          "id": "4a2a6131-d0bd-4af7-b2e6-9a54bbefc573",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5e2ed162-f4b7-4bc9-bd56-032f593f9c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f379b-0b21-4c3a-86b5-e75f3ae782c0",
        "cursor": {
          "ref": "c8f61ea2-b31d-45d5-9903-34a844e2bd59",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a41be2dd-1f5d-42e7-9b56-5fd735fdf94f"
        },
        "item": {
          "id": "1b2f379b-0b21-4c3a-86b5-e75f3ae782c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7a03ee83-cb15-4cdf-9fd4-bfa54f3da509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c93afa2-17fa-432f-8684-4c3374462bf8",
        "cursor": {
          "ref": "dabe01f9-8a81-4ec5-9281-8dc6c0011c5d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "74768e84-b718-4fe9-9c2c-3948d503bdfa"
        },
        "item": {
          "id": "4c93afa2-17fa-432f-8684-4c3374462bf8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6e4d06ef-8765-4c8d-8642-1e7ea0a9d04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2de33b-2072-4a34-bd6e-adf4f087e45a",
        "cursor": {
          "ref": "b318ab88-65b7-4a97-b427-57d52f5e0deb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f336b1bd-a9f1-4ea6-9def-3b668e936fc5"
        },
        "item": {
          "id": "cb2de33b-2072-4a34-bd6e-adf4f087e45a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1f59d353-f69a-4b21-9c6c-ebf2f343f7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8469ad34-2cce-407d-8160-b9f69cccb119",
        "cursor": {
          "ref": "7fe0c010-3c2d-4946-a730-de028f450661",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7d9cf0b7-9f59-49c3-8f32-febfeae9c393"
        },
        "item": {
          "id": "8469ad34-2cce-407d-8160-b9f69cccb119",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b14d61a7-625c-4ea1-b549-6284fcd13c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328c6013-3ad7-4f67-9d74-92665b94201c",
        "cursor": {
          "ref": "83d51c85-fa0a-4b78-9cca-5fc195b0a47c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "34dbd5a8-b4b7-44c5-8b0e-21dc1a4f8a29"
        },
        "item": {
          "id": "328c6013-3ad7-4f67-9d74-92665b94201c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8213bd9e-d1e3-4030-8799-c719d5dfb4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71409dab-1c63-42ed-bec1-2e5143b862fe",
        "cursor": {
          "ref": "e8c316bc-7d90-4db6-82a2-ae9e9edc1e28",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a247b913-441f-4574-8120-708d73038fa9"
        },
        "item": {
          "id": "71409dab-1c63-42ed-bec1-2e5143b862fe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "59ede183-6426-442b-b689-ae2499fc4909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a72a4a-5b67-4f97-8e8f-e3ea15e9358d",
        "cursor": {
          "ref": "430dc8f5-5695-4346-b726-64e4b049d4af",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7dcab76b-9705-4553-a505-bf6cf289424e"
        },
        "item": {
          "id": "15a72a4a-5b67-4f97-8e8f-e3ea15e9358d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a5c8e836-a571-4247-9769-fe6609d27957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaea340-9b7c-4c83-86b4-ae1c1e5ad64f",
        "cursor": {
          "ref": "0144edeb-db03-4a58-a957-07220808422c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "426d7d79-7a5b-409e-9931-b7a95819e381"
        },
        "item": {
          "id": "9aaea340-9b7c-4c83-86b4-ae1c1e5ad64f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "55643717-c34a-4cf8-aa4c-d0fd6e315240",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2ef48ab3-cfd3-4291-8003-edde4d7ab94d",
        "cursor": {
          "ref": "3d777c0e-dcf6-4164-8b5b-daee454757ff",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ecf9e5dc-a9cf-49cf-8306-6167843b2132"
        },
        "item": {
          "id": "2ef48ab3-cfd3-4291-8003-edde4d7ab94d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8dfccb0-bd59-4dc8-b3f3-c24a5508bf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d0ac4b-9713-415e-a031-f6d04696007c",
        "cursor": {
          "ref": "faf28c5a-fc7c-4143-9cc5-3681404e8114",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "99a751f1-006d-4918-bfc1-8ea179948470"
        },
        "item": {
          "id": "01d0ac4b-9713-415e-a031-f6d04696007c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "48b33606-4e65-43f2-93ff-c36b175ee461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba650523-8954-4b64-b372-9ef504cca236",
        "cursor": {
          "ref": "484fb617-7431-44aa-8190-2644aa965611",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bd854df1-4f6a-4b60-99f7-117042ac9d5e"
        },
        "item": {
          "id": "ba650523-8954-4b64-b372-9ef504cca236",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d852790d-5d91-4d7b-a3a0-a3f5290076e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6683ef0-3773-4c83-a184-8ce7405e9ed0",
        "cursor": {
          "ref": "f217fb19-655c-49ed-8929-9570862d1855",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f98135a8-fad3-42c3-9375-6488268f5e35"
        },
        "item": {
          "id": "d6683ef0-3773-4c83-a184-8ce7405e9ed0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c002050-6d3f-4d5b-9cbb-5c86aed666e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8165d53a-4952-486b-915f-702ff4a548f0",
        "cursor": {
          "ref": "b18262d2-7c9f-4ede-9cb5-b50ec872b5f7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "67c9e7dd-1d37-4848-9d6e-40a9a2050e68"
        },
        "item": {
          "id": "8165d53a-4952-486b-915f-702ff4a548f0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "872dbe7c-8a55-4059-9d8e-d93f6366b765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7283ca6b-c0f5-4f95-8cbe-cdcb7fef0f2b",
        "cursor": {
          "ref": "0dadff5a-f5d0-4b38-a17c-0f81f9b5ffc9",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cb355a88-d577-43d5-8050-17c41049479a"
        },
        "item": {
          "id": "7283ca6b-c0f5-4f95-8cbe-cdcb7fef0f2b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc2c112b-a4ab-4198-b51a-f1c9810e84cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c477b2-31b0-4022-ac74-87dbd93a29bc",
        "cursor": {
          "ref": "42680fe3-5481-47f0-a592-497a3757baf4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f001d12b-1a7a-4052-9d50-3f4f81130462"
        },
        "item": {
          "id": "f1c477b2-31b0-4022-ac74-87dbd93a29bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "687fcb36-d469-43ee-aeae-89bd13849e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4257b88-2b93-45d6-a29a-5f35a7fee6a8",
        "cursor": {
          "ref": "b125a1ef-0c6a-4af7-afa4-9e78fdc06945",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9a89592e-dc59-45cd-aea3-ff4b4a9d8d85"
        },
        "item": {
          "id": "a4257b88-2b93-45d6-a29a-5f35a7fee6a8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "10ca0763-dcc1-46ac-b83e-b4b0eaa1466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af190aa-0e35-4614-8323-de5ce1261749",
        "cursor": {
          "ref": "d4877ba9-b286-412b-81a5-b4607ddceafe",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aa8ef386-4dca-48ba-ab8c-05069ded5a60"
        },
        "item": {
          "id": "8af190aa-0e35-4614-8323-de5ce1261749",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b0782d20-a404-4d91-8aa0-51e4a7490a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2307ae-1b72-4ad2-82f3-08e12d50705d",
        "cursor": {
          "ref": "bfeb9a5d-6c39-4e87-9777-ae2fe60ad354",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2b009ec9-75b9-4008-a0bf-9d9377c3c63a"
        },
        "item": {
          "id": "1e2307ae-1b72-4ad2-82f3-08e12d50705d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "66719fa7-13f8-4bbc-a508-89f17224687d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b994042-1f4d-4714-9cea-687149e41e9e",
        "cursor": {
          "ref": "2eed5435-1768-436d-af2b-7c2b869368d6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5a5c8636-618f-43b4-b64d-e7139cfce117"
        },
        "item": {
          "id": "4b994042-1f4d-4714-9cea-687149e41e9e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5941f8a6-df40-4707-8ae1-6590e08db02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7d1e96-581a-4883-bbc6-0697694194b9",
        "cursor": {
          "ref": "4945c5fe-38b0-443f-b73e-ff6a04ea67c7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2d1e8a18-43fc-455d-af2b-644f264a594a"
        },
        "item": {
          "id": "bf7d1e96-581a-4883-bbc6-0697694194b9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8dc5d21b-8d9c-446b-8fab-fd90d2dc6f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf1302-d959-4ecc-8c88-beb033052e51",
        "cursor": {
          "ref": "9d0132e4-79e5-4406-aff9-66000eefcb5d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b3ddb891-4477-4b30-bf78-c87920b60beb"
        },
        "item": {
          "id": "baaf1302-d959-4ecc-8c88-beb033052e51",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb796707-aa0a-46b9-99a0-a1e433ce06d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdcf508-28d4-4294-8028-2132b280b20f",
        "cursor": {
          "ref": "58c84e22-bb6c-4f29-982b-7d4dea58fffe",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4deed7bc-f0c3-433a-8990-d8b323570e44"
        },
        "item": {
          "id": "3cdcf508-28d4-4294-8028-2132b280b20f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8d272166-44eb-4b3d-a551-c65a90ace19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b3d188-4daa-488d-b8ab-0ad919109924",
        "cursor": {
          "ref": "d94c722a-04f8-4b6e-bc86-b1b2b8602c14",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1b0186e-eb01-4cc6-a89b-d6757e7f3dbb"
        },
        "item": {
          "id": "93b3d188-4daa-488d-b8ab-0ad919109924",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c3ed60e6-e9a2-4f47-b6d5-a3406bd0d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dc0c0b-899c-4a14-86c0-4fd3eb783cef",
        "cursor": {
          "ref": "e3407635-8ae0-430d-ae64-0cc5eb0f5c85",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68af22eb-77c4-4534-bfd8-0272a7dffbc7"
        },
        "item": {
          "id": "12dc0c0b-899c-4a14-86c0-4fd3eb783cef",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "60390b60-c9f0-42d1-9644-d1859e345bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ea973-cd11-49ee-967b-f48c262f5d71",
        "cursor": {
          "ref": "7804a509-f740-4fd8-9af3-d366ea3b65ae",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b798f322-c5da-4bdd-a700-5e9bc4df8e53"
        },
        "item": {
          "id": "1a5ea973-cd11-49ee-967b-f48c262f5d71",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b09d053b-84a7-4d7c-8625-a10ce12c7750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33325b41-8dd9-483e-af85-6ea5f9c89be5",
        "cursor": {
          "ref": "fd00bc1b-876f-4d2a-b7d1-17622434df68",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e8d9bd55-6f19-473f-bfe0-658f2713ed3e"
        },
        "item": {
          "id": "33325b41-8dd9-483e-af85-6ea5f9c89be5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "30743f74-f4c0-4385-b412-be3b0968307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33da6b1-aad8-41a4-9634-7307a406a71e",
        "cursor": {
          "ref": "6aa2c117-16c8-4939-b606-8a38ee27b723",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e11a4276-6e82-41e6-a1bb-fefcbcd756f1"
        },
        "item": {
          "id": "f33da6b1-aad8-41a4-9634-7307a406a71e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7f2f6367-f01f-4791-a27f-d5494858f8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7334899f-6e02-4e7e-ae8a-1fe672953deb",
        "cursor": {
          "ref": "fbbab31d-e378-483f-b3db-f9bb0d85fffa",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99a63460-03d3-45c2-99d0-031d472e3b86"
        },
        "item": {
          "id": "7334899f-6e02-4e7e-ae8a-1fe672953deb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c993a04e-8614-47da-b81f-2913f5f05298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3663d45-c034-402b-bfc7-368949f69c1d",
        "cursor": {
          "ref": "f5db85ab-430e-487f-bd5f-59ed2ea466cd",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "42322bbe-d3cd-4289-a18a-e645aa77af88"
        },
        "item": {
          "id": "c3663d45-c034-402b-bfc7-368949f69c1d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a7fd1d41-9f68-4886-ab95-a09ea451f5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55b4448-0453-4fd2-9698-b8a1450578fd",
        "cursor": {
          "ref": "fa0168e3-8b13-4a25-92b5-6ad3c1a6ea67",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8c68caf1-d26f-4fb3-881a-745627c4a6c6"
        },
        "item": {
          "id": "d55b4448-0453-4fd2-9698-b8a1450578fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7d3d4e81-6302-41fb-b620-17b317ccaf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a6071a-3245-452d-9dd3-6be7ee8ecc60",
        "cursor": {
          "ref": "a3a2a473-e97d-455c-abad-48218ba3cb88",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f80054a-aa1f-4dd9-941a-318992739991"
        },
        "item": {
          "id": "a0a6071a-3245-452d-9dd3-6be7ee8ecc60",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4fc29ce6-3975-4ec1-810e-c021b2e8112d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb2afcf-8331-4152-b85b-cc694c6658d4",
        "cursor": {
          "ref": "5b73ef51-be07-4eb7-b87a-ed3209dde236",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d19b090d-c02b-44ef-b9bb-76816ac2b4aa"
        },
        "item": {
          "id": "6eb2afcf-8331-4152-b85b-cc694c6658d4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6655cabf-aa16-4c53-8f9e-2ec051e343d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508c03a4-bdea-4da3-8148-8570b754de78",
        "cursor": {
          "ref": "957a3acd-ebdd-4655-80e8-33d9cd8540a4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8f4936c3-5849-47aa-987b-439bbb0d6374"
        },
        "item": {
          "id": "508c03a4-bdea-4da3-8148-8570b754de78",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1fe40e44-470b-45a7-b7cb-4e1225afb025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee96ea9-6e3c-4b22-98c7-a14400203c70",
        "cursor": {
          "ref": "79e5fc0c-1e91-4e6f-a35a-d795eb81aada",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e59b77d-f284-4509-9f4f-7fc3a872bc0a"
        },
        "item": {
          "id": "eee96ea9-6e3c-4b22-98c7-a14400203c70",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "364ef4d7-45b9-4285-8952-034042de4bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426436ef-de35-4d20-b854-58dbb35ed7f6",
        "cursor": {
          "ref": "dfed0ede-f5b7-4df0-9961-b782f1101b62",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a563435a-211f-400f-b0e1-be583a703529"
        },
        "item": {
          "id": "426436ef-de35-4d20-b854-58dbb35ed7f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d9b97614-e13b-4ee5-9f97-7d0bfb62eeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd0b58b-d0ae-42ce-9a34-f5af5eaa113b",
        "cursor": {
          "ref": "22efe56b-c9e9-4ad6-810f-8660862d0819",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e0026ab0-48ce-4186-ab7b-8cd3d548ac9b"
        },
        "item": {
          "id": "2cd0b58b-d0ae-42ce-9a34-f5af5eaa113b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "df0b29ec-d367-45db-8ce2-9448bc5058c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46f35fc-abe0-4c4e-b18f-7691e6ef28f4",
        "cursor": {
          "ref": "a3444488-35c0-4dfa-934f-c14ec9640051",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "02460a34-29f4-42d4-af55-eaa9734bb166"
        },
        "item": {
          "id": "f46f35fc-abe0-4c4e-b18f-7691e6ef28f4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aa55bac9-bc63-4477-92b1-a501a88871e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572cfb8e-2083-4c95-8450-cd9c40be9fde",
        "cursor": {
          "ref": "91edaa92-2600-448e-9068-53e785341172",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "56ec7c34-17ec-445a-8a6d-3ab2f11135b7"
        },
        "item": {
          "id": "572cfb8e-2083-4c95-8450-cd9c40be9fde",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a8139f61-b7ae-4ca4-9225-26e6869532b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6226498a-1bbc-41d1-b604-b46509572cd8",
        "cursor": {
          "ref": "92c6b6ed-ebb9-4caa-a645-35bd6d1f63fb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8cfaeb21-fb1e-4f37-a34d-e5616d090282"
        },
        "item": {
          "id": "6226498a-1bbc-41d1-b604-b46509572cd8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6597e713-906f-4492-9657-c30dba4918f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b300566-c4cc-4bdb-aa16-fc8dd330e817",
        "cursor": {
          "ref": "200e11f0-b454-4ef3-8feb-08cda280e30f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "294cc38c-3bd2-446f-be99-71b44031b367"
        },
        "item": {
          "id": "2b300566-c4cc-4bdb-aa16-fc8dd330e817",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05c9a3a5-cbf3-4ad7-909d-868c03542955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dfef79-e95d-4b22-b80f-764867f93367",
        "cursor": {
          "ref": "d3643b78-02ce-4f0e-8b68-afb8590888e1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fc083244-d26d-4e53-8aba-6bbb99119e87"
        },
        "item": {
          "id": "27dfef79-e95d-4b22-b80f-764867f93367",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "64e78ef2-1758-4a08-9d94-48a410a6e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc57e48f-10e4-4c9f-8574-080b3d8901e9",
        "cursor": {
          "ref": "861d5d48-5739-41ae-8882-19b9e5551e56",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "72427093-3920-4d7a-916c-d22419cf3ad3"
        },
        "item": {
          "id": "bc57e48f-10e4-4c9f-8574-080b3d8901e9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "53d20096-8d03-4052-8696-7c0f5a866ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3480fab3-d5f3-4018-8615-fd617b99210d",
        "cursor": {
          "ref": "3e0c32bb-97e7-41d0-a579-026bb2a655ca",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f657ccd7-23e3-44ba-ab6e-ca310c4c6fa1"
        },
        "item": {
          "id": "3480fab3-d5f3-4018-8615-fd617b99210d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d3d3c51f-0905-4118-9764-5d893ec3af54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf94f94-5994-44aa-8e53-e3f82063c37a",
        "cursor": {
          "ref": "573fbd14-ec6e-408a-8aa1-a7228dfc37b8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "05a2a0da-01c1-4521-9655-d8301f544b85"
        },
        "item": {
          "id": "5cf94f94-5994-44aa-8e53-e3f82063c37a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9a0ceb0d-a0c0-4731-9df8-c0850aa213f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6c84b4-79ba-44ee-841d-47d8b3268f90",
        "cursor": {
          "ref": "2d34cf60-b8ca-43d4-a824-0523bc102f50",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a5e06d77-9cd9-470d-8433-29cda6ef7e86"
        },
        "item": {
          "id": "2b6c84b4-79ba-44ee-841d-47d8b3268f90",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b0833174-d053-4cb5-8b22-0f390316ae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce9ac0-d0bc-49ab-968b-485c529bf94b",
        "cursor": {
          "ref": "9671118e-6ee8-4f2a-b268-653d30befeab",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "33b554ba-aa7f-4c29-a8c3-82e88a4ea48b"
        },
        "item": {
          "id": "90ce9ac0-d0bc-49ab-968b-485c529bf94b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8aa667fb-e0b0-4082-847e-c8c99bbcb7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6b8d7d-8fe1-4f2e-bb7d-df7b46f0eba1",
        "cursor": {
          "ref": "87dee7db-cc6c-4456-bfc1-a57794c44cf2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4844dcd-e967-4641-a275-37d3ecbf459e"
        },
        "item": {
          "id": "4a6b8d7d-8fe1-4f2e-bb7d-df7b46f0eba1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3cf385e1-79da-40d8-974b-09f891f54482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584d432b-ce2a-4d10-90bb-eda7c1f01f2d",
        "cursor": {
          "ref": "d19a7e72-9283-48d4-b60b-55dd4ec6ea1c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eed69a4c-0484-4ca8-9572-d4b4bb0f4c70"
        },
        "item": {
          "id": "584d432b-ce2a-4d10-90bb-eda7c1f01f2d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ad5798f8-9633-4fa4-9143-a2ff6ecb65e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763fde9e-8e64-4129-9ae3-a82a224bfd1c",
        "cursor": {
          "ref": "d5df18b1-4126-4d25-9d30-e5ad02893ce4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bcb095a4-c415-497a-9dd5-633f56fcf71b"
        },
        "item": {
          "id": "763fde9e-8e64-4129-9ae3-a82a224bfd1c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ecc7f40b-0b4f-4cad-88e4-a32d3e7876cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c898a79d-1ac9-4f93-bc44-94f64bac7331",
        "cursor": {
          "ref": "6a82ad5a-607c-47cc-8c1d-92c57c83c35d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bb4a4373-2337-44b6-be72-c1dd24e95128"
        },
        "item": {
          "id": "c898a79d-1ac9-4f93-bc44-94f64bac7331",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b1bdcc63-9789-4a0a-bd0a-900d75e4554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4b6045-6e7e-4f9a-bb87-5464e01552b8",
        "cursor": {
          "ref": "99d4bb96-04c4-4d6e-8293-f85117072a14",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1588cece-0f19-4cc3-8ec1-60617a2c7fa6"
        },
        "item": {
          "id": "6b4b6045-6e7e-4f9a-bb87-5464e01552b8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fb47840c-3e78-45ca-aa71-2f5016838a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6db75a-baee-4657-b48b-ed3c8366f937",
        "cursor": {
          "ref": "99efcd4d-928c-4061-b268-277fc24965f2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0be8a2c2-1ff0-438c-9a49-e3589d8437f7"
        },
        "item": {
          "id": "ef6db75a-baee-4657-b48b-ed3c8366f937",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a754bc9d-87b9-4e04-b498-77302ee0d140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071b59e9-a774-4942-ae03-9baca0c12ad5",
        "cursor": {
          "ref": "cf89f411-0ef5-4c01-a82e-ab01ed2c9cee",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1187b9ef-d0c1-498b-aaa4-a00d0d6bba57"
        },
        "item": {
          "id": "071b59e9-a774-4942-ae03-9baca0c12ad5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ab1deb27-c5d3-4ad4-869b-def9143fe04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafcd785-eec2-4282-a7b5-453a9b64fb31",
        "cursor": {
          "ref": "bf24647d-5b1b-41bf-8d57-a515766a4f4a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "acdb62f4-4163-4d59-b330-fbf5af1ac160"
        },
        "item": {
          "id": "bafcd785-eec2-4282-a7b5-453a9b64fb31",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a2d07e86-b3bc-453f-81fe-862b06a401c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ac6ca-14a3-4de7-9842-4dec3cba055d",
        "cursor": {
          "ref": "e579b72e-f54e-4ab0-a8db-9e92a0dd819d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f25491cc-5119-43f1-8180-95ed9706e988"
        },
        "item": {
          "id": "372ac6ca-14a3-4de7-9842-4dec3cba055d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "63b840a0-611a-4a5d-a176-b83c4fbbdb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2726e597-a02c-418f-8754-b87b1a3746e1",
        "cursor": {
          "ref": "e37e0dd1-3709-4ce9-af07-bb68dd83885e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8cbf46fa-9fe2-44a6-86f4-9f7a09839385"
        },
        "item": {
          "id": "2726e597-a02c-418f-8754-b87b1a3746e1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "abb9556b-b0c0-454b-bd7a-046dbaf6781c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3267cc-9123-4cbd-ad47-aacaa242a1e4",
        "cursor": {
          "ref": "6324eb91-30da-4d1f-96f0-b344fdba0f38",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb3e4313-927f-4ad0-91bf-65a849b959fc"
        },
        "item": {
          "id": "6a3267cc-9123-4cbd-ad47-aacaa242a1e4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6c09cbe2-10b4-4e99-8b61-8813ca8d2e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e973ae7c-e1a2-4aa4-ba60-f7da37ce67aa",
        "cursor": {
          "ref": "375fe3c2-c124-47e0-be4a-28383d6ce351",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ab460953-d174-4f46-b778-ae66d230ff9f"
        },
        "item": {
          "id": "e973ae7c-e1a2-4aa4-ba60-f7da37ce67aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b6116a57-cb71-4b5a-bce4-fdabfc97f9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063fcd0e-279c-4f2d-9191-ca387baa12af",
        "cursor": {
          "ref": "64c4fb58-5107-496e-92dd-f63fdaa06800",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f6c710a1-ae0c-4c31-be25-96b9c3f7fe0d"
        },
        "item": {
          "id": "063fcd0e-279c-4f2d-9191-ca387baa12af",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9919c1b9-9188-4994-a8b6-af46c2c85911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c44502-5810-44da-854d-d0a63f5d0fc2",
        "cursor": {
          "ref": "e263e5c9-3a7a-43ab-bac1-5332033eebde",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9997e1fa-c8d1-4fc7-9fd9-f8861cd46d10"
        },
        "item": {
          "id": "e9c44502-5810-44da-854d-d0a63f5d0fc2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c67ce472-9d11-4f45-8562-4c105b14f5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c5b61c-6bff-4b8c-8ad9-e808b69a7716",
        "cursor": {
          "ref": "a56b4751-aa89-4325-bfe8-8a33b942895a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6b73bdb5-d688-4f5f-b073-000756fe3656"
        },
        "item": {
          "id": "f1c5b61c-6bff-4b8c-8ad9-e808b69a7716",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "648f103a-c50e-4faa-8b98-4a7e00dc56b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d88bdd2-cdce-4cfe-b242-0967977ffd61",
        "cursor": {
          "ref": "8a3386b9-5291-48a7-95f3-a728bd621ea0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3d556ee9-43f4-4cc9-8d93-72b8794a981a"
        },
        "item": {
          "id": "4d88bdd2-cdce-4cfe-b242-0967977ffd61",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "33c7fb14-51c6-4e33-bd40-9b0685b9b7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8768a5e1-bd37-4506-a079-900e673c83a6",
        "cursor": {
          "ref": "81f6802d-5d9c-4c86-9d81-45f36eed3491",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1006bbd3-f1ec-486c-bb33-4a3da062595f"
        },
        "item": {
          "id": "8768a5e1-bd37-4506-a079-900e673c83a6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e51ab3e2-acbb-4c56-aad9-189b4925a09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9dd4b2-88c3-4338-a7f1-f6e93ed51baa",
        "cursor": {
          "ref": "b394410b-06ee-4f75-89f7-a8cc98b54013",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "582cb291-7037-4689-9a2c-b1c2aee709b4"
        },
        "item": {
          "id": "dd9dd4b2-88c3-4338-a7f1-f6e93ed51baa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0da00a98-54d7-430f-b7be-988c5a643028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59744dc-3b78-4432-aa59-8af5d59061d9",
        "cursor": {
          "ref": "44f30ff9-01b0-4286-b5ba-9960f5716c0b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b34693ef-82b0-4e6a-b92b-cfa0533cea13"
        },
        "item": {
          "id": "c59744dc-3b78-4432-aa59-8af5d59061d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e62eb213-195a-4035-b407-2405ca22372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a986278b-a86b-4bb1-9170-a80e397497ee",
        "cursor": {
          "ref": "ca7c7463-d602-4135-8422-12a0217b3ec7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "22667e16-4f8f-41a6-b442-c7c284d954b9"
        },
        "item": {
          "id": "a986278b-a86b-4bb1-9170-a80e397497ee",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "19029855-17a3-4182-8a14-9c51c2296ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fa5141-1f47-4a9d-a3a7-ea4e91f2edae",
        "cursor": {
          "ref": "f5c659b8-3d7c-4a7e-b7c4-3a622dd5c885",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4f68571f-400e-436c-8812-6bd9d0072540"
        },
        "item": {
          "id": "51fa5141-1f47-4a9d-a3a7-ea4e91f2edae",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b5e4bad-8edc-4ab4-8510-b6bd4fbfa005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8da10f-74f1-4407-bb34-0b18c7597780",
        "cursor": {
          "ref": "78bf2a13-0121-4656-99c7-483774b932dc",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "368d179b-5c93-42a1-bb1e-7fd6397b44b7"
        },
        "item": {
          "id": "1c8da10f-74f1-4407-bb34-0b18c7597780",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f45b5a92-165c-4e8e-a98b-045b4f960b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab95d3-2819-4b5a-baaa-cf25931bd0d1",
        "cursor": {
          "ref": "e0b7e66f-6013-4822-ac78-5421ed074ea8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "54a53333-b587-4838-b051-3d741ccce62e"
        },
        "item": {
          "id": "90ab95d3-2819-4b5a-baaa-cf25931bd0d1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "edd4f4a8-6ba9-4f91-a0b1-7486c31da4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c9fae2-27ea-417f-a50c-e2498b86e152",
        "cursor": {
          "ref": "a34e16c6-a6f4-4e74-8044-1103de438bc5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "14c1e7fc-2a79-4020-9964-163f4e9c3733"
        },
        "item": {
          "id": "e2c9fae2-27ea-417f-a50c-e2498b86e152",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "298e48de-a289-40d6-90f0-22a95ba78592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c60ac61-3e5f-4d7d-bc0c-a93c062664d4",
        "cursor": {
          "ref": "1ca40af8-e68e-4267-939f-ecc9fa61aee3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "edc4edf9-79cc-42df-8bd4-8893895e8f90"
        },
        "item": {
          "id": "9c60ac61-3e5f-4d7d-bc0c-a93c062664d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4c026073-6a71-4923-94ba-ed507e9e61d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab9de90-e3e3-45cc-99a7-06cb568fc586",
        "cursor": {
          "ref": "a4900709-b740-4f40-9d38-03c49983983d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7ed94e17-ce20-4715-96cf-02386c9616bd"
        },
        "item": {
          "id": "cab9de90-e3e3-45cc-99a7-06cb568fc586",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "31ff1b9e-019d-4f76-8670-157eb4d98801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204d54c7-14be-4cff-b873-fb1f297b6959",
        "cursor": {
          "ref": "c5a0cdf7-5195-40e3-ad4e-b0a41148787f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d5daac7b-f91a-4401-8224-3ecbd2bdb859"
        },
        "item": {
          "id": "204d54c7-14be-4cff-b873-fb1f297b6959",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aecfa287-0566-43b4-9146-03550f0f5e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fed135-b486-4da2-8924-2ad2f87e421e",
        "cursor": {
          "ref": "573c53a2-d3c9-4402-a725-da2b5f29cd4d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "33bfc2fa-4a0a-489d-8c06-0cc6f20aa670"
        },
        "item": {
          "id": "a4fed135-b486-4da2-8924-2ad2f87e421e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6f4efac2-b1bc-449e-990e-a3a7ca5325a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a39492-488e-4119-a98e-1f3fb6713324",
        "cursor": {
          "ref": "efc9e1fe-002d-4f14-b0af-3174faf15c6c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c8c252a9-dc39-42c2-a926-9e1b19869aec"
        },
        "item": {
          "id": "b5a39492-488e-4119-a98e-1f3fb6713324",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f931f798-d1ba-4cac-9de2-769c97f3818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52f9b25-8619-4887-9076-9fa14157bf43",
        "cursor": {
          "ref": "1750344e-d956-45b5-8bcf-e856a99bde15",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "56390c96-da2b-45b9-80da-3a29635db61b"
        },
        "item": {
          "id": "a52f9b25-8619-4887-9076-9fa14157bf43",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7e9dacbc-b86a-471e-b114-2da8c3fb95dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397e15e4-e8a8-4464-bba3-a07061ee899f",
        "cursor": {
          "ref": "bef0f2c0-a583-42f5-b063-774a5f334241",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "32dfdf7f-4e0b-4d8f-9eb6-69ebf8688398"
        },
        "item": {
          "id": "397e15e4-e8a8-4464-bba3-a07061ee899f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7aa7c42-439b-4d4d-94c3-1e79875863fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344c212a-746f-4863-ad66-0fb64ecc56db",
        "cursor": {
          "ref": "e0ddc019-6cca-44dc-8735-f08c40703c6f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a16402a8-ac4f-463b-96dc-b3d4b8f44341"
        },
        "item": {
          "id": "344c212a-746f-4863-ad66-0fb64ecc56db",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c99e11f3-35b0-4684-85ce-947041ebeebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf640a7-19de-4643-8733-447d7bbe8ebd",
        "cursor": {
          "ref": "388bba47-714f-4984-ac2d-df51cd7450cb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9386c0bd-be2a-46e0-bfb8-43113140f507"
        },
        "item": {
          "id": "8bf640a7-19de-4643-8733-447d7bbe8ebd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c3178775-df9b-42bf-8b11-f6e7ab5b635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a326d-1efe-43d8-8dcb-00582878b732",
        "cursor": {
          "ref": "a310d7c0-878b-4ea7-97b6-2effad465300",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "19dedcfe-384b-4b5b-a958-350f860ce502"
        },
        "item": {
          "id": "724a326d-1efe-43d8-8dcb-00582878b732",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "782d98eb-cfcb-4e4f-b232-4bc0b1e56323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19d3af1-8012-4bc1-9811-de10752db862",
        "cursor": {
          "ref": "8299df31-64c9-404e-81a9-38fa62eb4c97",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "20dba3b1-e901-40ec-b93b-bb9788bd6122"
        },
        "item": {
          "id": "a19d3af1-8012-4bc1-9811-de10752db862",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ad425a7a-07f3-48a4-911b-596bc445349c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb888e55-413c-4073-b574-e29571587f0c",
        "cursor": {
          "ref": "4f605a41-0164-4e2b-bde2-8f28fe74a907",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b969707a-5c11-4748-9a5f-85ae7b511093"
        },
        "item": {
          "id": "fb888e55-413c-4073-b574-e29571587f0c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ec89fc5-d874-4b61-95bd-31dfc7a1382c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b2f78b-dfef-4e5e-a9ab-5a5ba98fd716",
        "cursor": {
          "ref": "93569e76-f717-4c8a-a5b7-8356cf4ee88c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "22256738-de66-4935-8519-5453129a07df"
        },
        "item": {
          "id": "f2b2f78b-dfef-4e5e-a9ab-5a5ba98fd716",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f9c361f-2679-444a-a86a-505e13980381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41fde6e-18cf-43ae-8882-8dadf0c4eba5",
        "cursor": {
          "ref": "0a7ddbaf-a4c4-4b2a-b654-0a04182a3bcd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "77622f95-d8fb-4c08-af90-79b64b5aa484"
        },
        "item": {
          "id": "a41fde6e-18cf-43ae-8882-8dadf0c4eba5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e754e821-3089-4c37-9212-24fccefe739e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a57628-f34b-4c8e-b4a4-dd536a948499",
        "cursor": {
          "ref": "3dd7adf9-b50c-42fa-89e5-8f8d0db5bfc2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "55c6ddd1-4699-4380-9df0-bd0910256da3"
        },
        "item": {
          "id": "41a57628-f34b-4c8e-b4a4-dd536a948499",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ebb69eb8-dbb6-4242-91ba-843c674b4e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb5edc6-8c53-47b3-9b78-03699a70a692",
        "cursor": {
          "ref": "6153e1fb-b67e-4add-aea9-ed54ef6c52f3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4662f74c-eea4-4893-b1a2-41f6bd2569d2"
        },
        "item": {
          "id": "ffb5edc6-8c53-47b3-9b78-03699a70a692",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "840fb843-e8d6-49fc-b403-930d60cfef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630382d8-62cd-4977-80fd-df303011d74b",
        "cursor": {
          "ref": "424d6f39-97fb-4f44-af0f-cc238a4fb4e6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1afadc78-6ccf-401d-867f-f15d908150fb"
        },
        "item": {
          "id": "630382d8-62cd-4977-80fd-df303011d74b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d4844e55-a79b-4205-8cdc-e21909952e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50958c6c-13f4-46eb-aaa4-9c664f260a4d",
        "cursor": {
          "ref": "8219563d-cca9-4f6e-8d90-3408a2ea7079",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "366a5fb0-5132-4552-bee0-3110e264cdda"
        },
        "item": {
          "id": "50958c6c-13f4-46eb-aaa4-9c664f260a4d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6dc4ce50-8ef2-4361-9f3b-699cf1da22d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20f233-eab8-4c98-bafa-ac183d0072c6",
        "cursor": {
          "ref": "818c448e-0041-4d0c-9657-2e93e7a12bf5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ff755b94-d46e-4050-aa13-ad936fd4a4a3"
        },
        "item": {
          "id": "8d20f233-eab8-4c98-bafa-ac183d0072c6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d7cab21-e37c-4a99-bfd4-a13df5fa0682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca957049-c74d-43ed-b1b7-60ef69985518",
        "cursor": {
          "ref": "c5ddf70e-591d-40b5-9f2c-3156933f7126",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6edb11b4-2488-44e4-a892-24caa166fe9b"
        },
        "item": {
          "id": "ca957049-c74d-43ed-b1b7-60ef69985518",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5220b655-d1bb-48b3-834a-886d6c3cbec5",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "46383cbb-4a94-4597-9ef3-cc57ac7b2a0a",
        "cursor": {
          "ref": "8a7a9eeb-25be-4272-9398-da632bedc955",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ea6dd67-3a99-4dab-9f85-bfb3ad1d1724"
        },
        "item": {
          "id": "46383cbb-4a94-4597-9ef3-cc57ac7b2a0a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cf6771ac-de23-4a55-82f9-2a5644df6fe4",
          "status": "OK",
          "code": 200,
          "responseTime": 3479,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94c404e-8cf6-4320-8503-18ee159391a7",
        "cursor": {
          "ref": "a1b117c8-e823-495a-b510-3f73476f1720",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "44c1d4a6-87c3-41c9-a25b-e411d1edf12e"
        },
        "item": {
          "id": "b94c404e-8cf6-4320-8503-18ee159391a7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "730d4b33-d6b6-44ef-b44f-f57eebe79a54",
          "status": "OK",
          "code": 200,
          "responseTime": 2522,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5337de-c335-464b-b940-18c3ad95674d",
        "cursor": {
          "ref": "50bf2b9a-32c4-47d2-9832-4878536ae132",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d37e7983-6f2d-46bb-9727-9cb2f2d64e29"
        },
        "item": {
          "id": "2e5337de-c335-464b-b940-18c3ad95674d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef348fe6-9996-489d-b9a5-6f538fb5eb06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5337de-c335-464b-b940-18c3ad95674d",
        "cursor": {
          "ref": "50bf2b9a-32c4-47d2-9832-4878536ae132",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d37e7983-6f2d-46bb-9727-9cb2f2d64e29"
        },
        "item": {
          "id": "2e5337de-c335-464b-b940-18c3ad95674d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef348fe6-9996-489d-b9a5-6f538fb5eb06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff02539-1f7f-484f-b518-8bed4a4caaab",
        "cursor": {
          "ref": "8f51b190-bdae-4b23-91a0-82678f7d56f3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0866c67b-6c83-44e0-a478-66d255563792"
        },
        "item": {
          "id": "6ff02539-1f7f-484f-b518-8bed4a4caaab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b563093b-3559-4f94-bb8e-6fce3d28b013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723703ca-7e0c-41bc-9f80-960eadf470fb",
        "cursor": {
          "ref": "bc23a886-5cf6-4573-a2ec-034393ab42e7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "662c0744-ee37-494f-94cd-28b5e1445162"
        },
        "item": {
          "id": "723703ca-7e0c-41bc-9f80-960eadf470fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a51b0024-fc61-47a9-9fea-9e26c8c1702d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}